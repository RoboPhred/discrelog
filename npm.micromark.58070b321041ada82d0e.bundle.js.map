{"version":3,"sources":["webpack://discrelog/./node_modules/micromark/dist/character/ascii-alpha.js","webpack://discrelog/./node_modules/micromark/dist/character/ascii-alphanumeric.js","webpack://discrelog/./node_modules/micromark/dist/character/ascii-atext.js","webpack://discrelog/./node_modules/micromark/dist/character/ascii-control.js","webpack://discrelog/./node_modules/micromark/dist/character/ascii-digit.js","webpack://discrelog/./node_modules/micromark/dist/character/ascii-hex-digit.js","webpack://discrelog/./node_modules/micromark/dist/character/ascii-punctuation.js","webpack://discrelog/./node_modules/micromark/dist/character/markdown-line-ending-or-space.js","webpack://discrelog/./node_modules/micromark/dist/character/markdown-line-ending.js","webpack://discrelog/./node_modules/micromark/dist/character/markdown-space.js","webpack://discrelog/./node_modules/micromark/dist/character/unicode-punctuation.js","webpack://discrelog/./node_modules/micromark/dist/character/unicode-whitespace.js","webpack://discrelog/./node_modules/micromark/dist/constant/assign.js","webpack://discrelog/./node_modules/micromark/dist/constant/from-char-code.js","webpack://discrelog/./node_modules/micromark/dist/constant/has-own-property.js","webpack://discrelog/./node_modules/micromark/dist/constant/html-block-names.js","webpack://discrelog/./node_modules/micromark/dist/constant/html-raw-names.js","webpack://discrelog/./node_modules/micromark/dist/constant/unicode-punctuation-regex.js","webpack://discrelog/./node_modules/micromark/dist/constructs.js","webpack://discrelog/./node_modules/micromark/dist/initialize/content.js","webpack://discrelog/./node_modules/micromark/dist/initialize/document.js","webpack://discrelog/./node_modules/micromark/dist/initialize/flow.js","webpack://discrelog/./node_modules/micromark/dist/initialize/text.js","webpack://discrelog/./node_modules/micromark/dist/parse.js","webpack://discrelog/./node_modules/micromark/dist/postprocess.js","webpack://discrelog/./node_modules/micromark/dist/preprocess.js","webpack://discrelog/./node_modules/micromark/dist/tokenize/attention.js","webpack://discrelog/./node_modules/micromark/dist/tokenize/autolink.js","webpack://discrelog/./node_modules/micromark/dist/tokenize/block-quote.js","webpack://discrelog/./node_modules/micromark/dist/tokenize/character-escape.js","webpack://discrelog/./node_modules/micromark/dist/tokenize/character-reference.js","webpack://discrelog/./node_modules/micromark/dist/tokenize/code-fenced.js","webpack://discrelog/./node_modules/micromark/dist/tokenize/code-indented.js","webpack://discrelog/./node_modules/micromark/dist/tokenize/code-text.js","webpack://discrelog/./node_modules/micromark/dist/tokenize/content.js","webpack://discrelog/./node_modules/micromark/dist/tokenize/definition.js","webpack://discrelog/./node_modules/micromark/dist/tokenize/factory-destination.js","webpack://discrelog/./node_modules/micromark/dist/tokenize/factory-label.js","webpack://discrelog/./node_modules/micromark/dist/tokenize/factory-space.js","webpack://discrelog/./node_modules/micromark/dist/tokenize/factory-title.js","webpack://discrelog/./node_modules/micromark/dist/tokenize/factory-whitespace.js","webpack://discrelog/./node_modules/micromark/dist/tokenize/hard-break-escape.js","webpack://discrelog/./node_modules/micromark/dist/tokenize/heading-atx.js","webpack://discrelog/./node_modules/micromark/dist/tokenize/html-flow.js","webpack://discrelog/./node_modules/micromark/dist/tokenize/html-text.js","webpack://discrelog/./node_modules/micromark/dist/tokenize/label-end.js","webpack://discrelog/./node_modules/micromark/dist/tokenize/label-start-image.js","webpack://discrelog/./node_modules/micromark/dist/tokenize/label-start-link.js","webpack://discrelog/./node_modules/micromark/dist/tokenize/line-ending.js","webpack://discrelog/./node_modules/micromark/dist/tokenize/list.js","webpack://discrelog/./node_modules/micromark/dist/tokenize/partial-blank-line.js","webpack://discrelog/./node_modules/micromark/dist/tokenize/setext-underline.js","webpack://discrelog/./node_modules/micromark/dist/tokenize/thematic-break.js","webpack://discrelog/./node_modules/micromark/dist/util/chunked-splice.js","webpack://discrelog/./node_modules/micromark/dist/util/classify-character.js","webpack://discrelog/./node_modules/micromark/dist/util/combine-extensions.js","webpack://discrelog/./node_modules/micromark/dist/util/create-tokenizer.js","webpack://discrelog/./node_modules/micromark/dist/util/miniflat.js","webpack://discrelog/./node_modules/micromark/dist/util/move-point.js","webpack://discrelog/./node_modules/micromark/dist/util/normalize-identifier.js","webpack://discrelog/./node_modules/micromark/dist/util/prefix-size.js","webpack://discrelog/./node_modules/micromark/dist/util/regex-check.js","webpack://discrelog/./node_modules/micromark/dist/util/resolve-all.js","webpack://discrelog/./node_modules/micromark/dist/util/safe-from-int.js","webpack://discrelog/./node_modules/micromark/dist/util/serialize-chunks.js","webpack://discrelog/./node_modules/micromark/dist/util/shallow.js","webpack://discrelog/./node_modules/micromark/dist/util/size-chunks.js","webpack://discrelog/./node_modules/micromark/dist/util/slice-chunks.js","webpack://discrelog/./node_modules/micromark/dist/util/subtokenize.js"],"names":["check","module","exports","code","unicodePunctuation","Object","assign","String","fromCharCode","hasOwnProperty","attention","headingAtx","autolink","list","blockQuote","characterEscape","characterReference","codeFenced","codeIndented","codeText","definition","hardBreakEscape","htmlFlow","htmlText","labelEnd","labelImage","labelLink","setextUnderline","thematicBreak","lineEnding","resolveText","document","42","43","45","48","49","50","51","52","53","54","55","56","57","62","contentInitial","91","flowInitial","32","flow","35","60","61","95","96","126","string","38","92","text","33","93","insideSpan","null","tokenize","effects","previous","contentStart","attempt","this","parser","constructs","enter","consume","exit","createSpace","lineStart","token","contentType","next","data","markdownLineEnding","inspectResult","childFlow","childToken","self","stack","continued","start","length","containerState","continuation","documentContinue","documentContinued","flowContinue","flowStart","interrupt","currentConstruct","interruptible","container","containerContinue","push","undefined","exitContainers","now","_tokenizer","continueFlow","tokenizeInspect","partial","documentAfterPeek","flowEnd","lazy","defineSkip","write","sliceStream","size","end","index","call","ok","subcontinued","inspectStart","inspectContinue","inspectLess","concrete","inspectDone","inspectFlowEnd","_closeFlow","lazyFlow","blank","inspectLazy","nok","initial","afterConstruct","content","initializeFactory","resolver","resolveAll","shallow","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","events","context","type","splice","chunks","chunk","bufferIndex","tabs","eventIndex","charCodeAt","line","column","offset","_index","_bufferIndex","options","defined","combineExtensions","concat","miniflat","extensions","create","initializeContent","initializeDocument","initializeFlow","initializeText","initializer","from","createTokenizer","subtokenize","atCarriageReturn","buffer","value","encoding","match","startPosition","endPosition","toString","search","lastIndex","exec","slice","Math","ceil","marker","before","classifyCharacter","sequence","after","open","close","_open","_close","group","openingSequence","closingSequence","use","nextEvents","sliceSerialize","movePoint","chunkedSplice","asciiAlpha","schemeOrEmailAtext","asciiAtext","emailAtext","asciiAlphanumeric","schemeInsideOrEmailAtext","urlInside","asciiControl","emailAtSignOrDot","emailLabel","emailValue","_container","markdownSpace","asciiPunctuation","max","test","numeric","asciiHexDigit","asciiDigit","decode","initialPrefix","prefixSize","sizeOpen","sequenceOpen","infoOpen","openAfter","info","markdownLineEndingOrSpace","infoAfter","meta","tokenizeClosingFence","contentContinue","closingSequenceEnd","afterPrefix","continuedIndent","resolve","gap","tailExitIndex","headEnterIndex","contentEnd","lookaheadConstruct","prefixed","identifier","destinationAfter","tokenizeTitle","createLabel","labelAfter","normalizeIdentifier","createWhitespace","createDestination","indexOf","createTitle","literalType","literalMarkerType","rawType","stringType","limit","Infinity","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","markerType","label","labelEscape","prefix","atFirstTitleBreak","atTitleBreak","title","titleEscape","seen","fenceOpenInside","headingBreak","kind","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","raws","toLowerCase","basics","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlank","htmlContinueStart","done","continuationRawEndTag","resolveTo","returnState","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","declaration","commentStart","commentStartDash","comment","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resource","fullReference","collapsedReference","media","_used","between","afterLabel","valueSize","initialSize","afterValue","inside","ordered","unordered","atMarker","onBlank","tokenizeListItemPrefixWhitespace","endOfPrefix","otherPrefix","initialBlankLine","sizeChunks","furtherBlankLines","notInCurrentItem","tokenizeIndent","paragraph","heading","remove","items","result","parameters","chunkStart","v8MaxSafeChunkSize","Array","unshift","apply","unicodeWhitespace","all","extension","own","hook","left","right","existing","add","initialize","point","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","pop","constructFactory","construct","addResult","onsuccessfulcheck","serializeChunks","chunkIndex","go","main","state","sliceChunks","restore","onreturn","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","replace","toUpperCase","tail","regex","called","base","parseInt","atTab","join","object","view","startIndex","startBufferIndex","endIndex","endBufferIndex","event","lineIndex","otherIndex","otherEvent","subevents","more","jumps","isInFirstContentOfListItem","subcontent","_movePreviousLineEndings","stream","entered","adjust","startPositions","tokenizer","childEvents","gaps","_gfmTasklistFirstContentOfListItem"],"mappings":"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","file":"npm.micromark.58070b321041ada82d0e.bundle.js","sourcesContent":["var check = require('../util/regex-check')\n\nmodule.exports = check(/[A-Za-z]/)\n","var check = require('../util/regex-check')\n\nmodule.exports = check(/[\\dA-Za-z]/)\n","var check = require('../util/regex-check')\n\nmodule.exports = check(/[#-'*+\\--9=?A-Z^-~]/)\n","module.exports = asciiControl\n\n// Note: EOF is seen as ASCII control here, because `null < 32 == true`.\nfunction asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code < 32 || code === 127\n  )\n}\n","var check = require('../util/regex-check')\n\nmodule.exports = check(/\\d/)\n","var check = require('../util/regex-check')\n\nmodule.exports = check(/[\\dA-Fa-f]/)\n","var check = require('../util/regex-check')\n\nmodule.exports = check(/[!-/:-@[-`{-~]/)\n","module.exports = markdownLineEndingOrSpace\n\nfunction markdownLineEndingOrSpace(code) {\n  return code < 0 || code === 32\n}\n","module.exports = markdownLineEnding\n\nfunction markdownLineEnding(code) {\n  return code < -2\n}\n","module.exports = markdownSpace\n\nfunction markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n","var unicodePunctuation = require('../constant/unicode-punctuation-regex')\nvar check = require('../util/regex-check')\n\n// Size note: removing ASCII from the regex and using `ascii-punctuation` here\n// In fact adds to the bundle size.\nmodule.exports = check(unicodePunctuation)\n","var check = require('../util/regex-check')\n\nmodule.exports = check(/\\s/)\n","module.exports = Object.assign\n","module.exports = String.fromCharCode\n","module.exports = {}.hasOwnProperty\n","// This module is copied from <https://spec.commonmark.org/0.29/#html-blocks>.\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n","// This module is copied from <https://spec.commonmark.org/0.29/#html-blocks>.\nmodule.exports = ['pre', 'script', 'style']\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nmodule.exports = /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","var attention = require('./tokenize/attention')\nvar headingAtx = require('./tokenize/heading-atx')\nvar autolink = require('./tokenize/autolink')\nvar list = require('./tokenize/list')\nvar blockQuote = require('./tokenize/block-quote')\nvar characterEscape = require('./tokenize/character-escape')\nvar characterReference = require('./tokenize/character-reference')\nvar codeFenced = require('./tokenize/code-fenced')\nvar codeIndented = require('./tokenize/code-indented')\nvar codeText = require('./tokenize/code-text')\nvar definition = require('./tokenize/definition')\nvar hardBreakEscape = require('./tokenize/hard-break-escape')\nvar htmlFlow = require('./tokenize/html-flow')\nvar htmlText = require('./tokenize/html-text')\nvar labelEnd = require('./tokenize/label-end')\nvar labelImage = require('./tokenize/label-start-image')\nvar labelLink = require('./tokenize/label-start-link')\nvar setextUnderline = require('./tokenize/setext-underline')\nvar thematicBreak = require('./tokenize/thematic-break')\nvar lineEnding = require('./tokenize/line-ending')\nvar resolveText = require('./initialize/text').resolver\n\nexports.document = {\n  42: list, // Asterisk\n  43: list, // Plus sign\n  45: list, // Dash\n  48: list, // 0\n  49: list, // 1\n  50: list, // 2\n  51: list, // 3\n  52: list, // 4\n  53: list, // 5\n  54: list, // 6\n  55: list, // 7\n  56: list, // 8\n  57: list, // 9\n  62: blockQuote // Greater than\n}\n\nexports.contentInitial = {\n  91: definition // Left square bracket\n}\n\nexports.flowInitial = {\n  '-2': codeIndented, // Horizontal tab\n  '-1': codeIndented, // Virtual space\n  32: codeIndented // Space\n}\n\nexports.flow = {\n  35: headingAtx, // Number sign\n  42: thematicBreak, // Asterisk\n  45: [setextUnderline, thematicBreak], // Dash\n  60: htmlFlow, // Less than\n  61: setextUnderline, // Equals to\n  95: thematicBreak, // Underscore\n  96: codeFenced, // Grave accent\n  126: codeFenced // Tilde\n}\n\nexports.string = {\n  38: characterReference, // Ampersand\n  92: characterEscape // Backslash\n}\n\nexports.text = {\n  '-5': lineEnding, // Carriage return\n  '-4': lineEnding, // Line feed\n  '-3': lineEnding, // Carriage return + line feed\n  33: labelImage, // Exclamation mark\n  38: characterReference, // Ampersand\n  42: attention, // Asterisk\n  60: [autolink, htmlText], // Less than\n  91: labelLink, // Left square bracket\n  92: [hardBreakEscape, characterEscape], // Backslash\n  93: labelEnd, // Right square bracket\n  95: attention, // Underscore\n  96: codeText // Grave accent\n}\n\nexports.insideSpan = {\n  null: [attention, resolveText]\n}\n","exports.tokenize = initializeContent\n\nvar markdownLineEnding = require('../character/markdown-line-ending')\n\nvar createSpace = require('../tokenize/factory-space')\n\nfunction initializeContent(effects) {\n  var contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n\n  var previous\n\n  return contentStart\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return createSpace(effects, contentStart, 'linePrefix')\n  }\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  function lineStart(code) {\n    var token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous: previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n\n    return data(code)\n  }\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n","exports.tokenize = initializeDocument\n\nvar markdownLineEnding = require('../character/markdown-line-ending')\n\nvar createSpace = require('../tokenize/factory-space')\nvar blank = require('../tokenize/partial-blank-line')\n\nvar container = {tokenize: tokenizeContainer}\nvar lazyFlow = {tokenize: tokenizeLazyFlow}\n\nfunction initializeDocument(effects) {\n  var self = this\n  var stack = []\n  var continued = 0\n  var inspectResult\n  var childFlow\n  var childToken\n\n  return start\n\n  function start(code) {\n    if (continued < stack.length) {\n      self.containerState = stack[continued][1]\n      return effects.attempt(\n        stack[continued][0].continuation,\n        documentContinue,\n        documentContinued\n      )(code)\n    }\n\n    return documentContinued(code)\n  }\n\n  function documentContinue(code) {\n    continued++\n    return start(code)\n  }\n\n  function documentContinued(code) {\n    // If we’re in a concrete construct (such as when expecting another line of\n    // HTML, or we resulted in lazy content), we can immediately start flow.\n    if (inspectResult && inspectResult.flowContinue) {\n      return flowStart(code)\n    }\n\n    self.interrupt =\n      childFlow &&\n      childFlow.currentConstruct &&\n      childFlow.currentConstruct.interruptible\n    self.containerState = {}\n    return effects.attempt(container, containerContinue, flowStart)(code)\n  }\n\n  function containerContinue(code) {\n    stack.push([self.currentConstruct, self.containerState])\n    self.containerState = undefined\n    return documentContinued(code)\n  }\n\n  function flowStart(code) {\n    if (code === null) {\n      exitContainers(0, true)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n\n    return flowContinue(code)\n  }\n\n  function flowContinue(code) {\n    if (code === null) {\n      continueFlow(effects.exit('chunkFlow'))\n      return flowStart(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      continueFlow(effects.exit('chunkFlow'))\n      return effects.check(\n        {tokenize: tokenizeInspect, partial: true},\n        documentAfterPeek\n      )\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n\n  function documentAfterPeek(code) {\n    exitContainers(\n      inspectResult.continued,\n      inspectResult && inspectResult.flowEnd\n    )\n\n    continued = 0\n    return start(code)\n  }\n\n  function continueFlow(token) {\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.lazy = inspectResult && inspectResult.lazy\n    childFlow.defineSkip(token.start)\n    childFlow.write(self.sliceStream(token))\n  }\n\n  function exitContainers(size, end) {\n    var index = stack.length\n\n    // Close the flow.\n    if (childFlow && end) {\n      childFlow.write([null])\n      childToken = childFlow = undefined\n    }\n\n    // Exit open containers.\n    while (index-- > size) {\n      self.containerState = stack[index][1]\n      stack[index][0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function tokenizeInspect(effects, ok) {\n    var subcontinued = 0\n\n    inspectResult = {}\n\n    return inspectStart\n\n    function inspectStart(code) {\n      if (subcontinued < stack.length) {\n        self.containerState = stack[subcontinued][1]\n        return effects.attempt(\n          stack[subcontinued][0].continuation,\n          inspectContinue,\n          inspectLess\n        )(code)\n      }\n\n      // If we’re continued but in a concrete flow, we can’t have more\n      // containers.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        inspectResult.flowContinue = true\n        return inspectDone(code)\n      }\n\n      self.interrupt =\n        childFlow.currentConstruct && childFlow.currentConstruct.interruptible\n      self.containerState = {}\n      return effects.attempt(container, inspectFlowEnd, inspectDone)(code)\n    }\n\n    function inspectContinue(code) {\n      subcontinued++\n      return self.containerState._closeFlow\n        ? inspectFlowEnd(code)\n        : inspectStart(code)\n    }\n\n    function inspectLess(code) {\n      if (childFlow.currentConstruct && childFlow.currentConstruct.lazy) {\n        // Maybe another container?\n        self.containerState = {}\n        return effects.attempt(\n          container,\n          inspectFlowEnd,\n          // Maybe flow, or a blank line?\n          effects.attempt(\n            lazyFlow,\n            inspectFlowEnd,\n            effects.check(blank, inspectFlowEnd, inspectLazy)\n          )\n        )(code)\n      }\n\n      // Otherwise we’re interrupting.\n      return inspectFlowEnd(code)\n    }\n\n    function inspectLazy(code) {\n      // Act as if all containers are continued.\n      subcontinued = stack.length\n      inspectResult.lazy = true\n      inspectResult.flowContinue = true\n      return inspectDone(code)\n    }\n\n    // We’re done with flow if we have more containers, or an interruption.\n    function inspectFlowEnd(code) {\n      inspectResult.flowEnd = true\n      return inspectDone(code)\n    }\n\n    function inspectDone(code) {\n      inspectResult.continued = subcontinued\n      self.interrupt = self.containerState = undefined\n      return ok(code)\n    }\n  }\n}\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return createSpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    4\n  )\n}\n\nfunction tokenizeLazyFlow(effects, ok, nok) {\n  return createSpace(\n    effects,\n    effects.lazy(this.parser.constructs.flow, ok, nok),\n    'linePrefix',\n    4\n  )\n}\n","exports.tokenize = initializeFlow\n\nvar markdownLineEnding = require('../character/markdown-line-ending')\n\nvar createSpace = require('../tokenize/factory-space')\nvar blank = require('../tokenize/partial-blank-line')\nvar content = require('../tokenize/content')\n\nfunction initializeFlow(effects) {\n  var self = this\n  var initial = effects.attempt(\n    // Try to parse a blank line.\n    blank,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      createSpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n\n  return initial\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","exports.text = initializeFactory('text')\nexports.string = initializeFactory('string')\nexports.resolver = {resolveAll: resolver()}\n\nvar assign = require('../constant/assign')\n\nvar shallow = require('../util/shallow')\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: resolver(field === 'text' ? resolveAllLineSuffixes : undefined)\n  }\n\n  function initializeText(effects) {\n    var self = this\n    var constructs = this.parser.constructs[field]\n    var text = effects.attempt(constructs, start, notText)\n\n    return start\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    function atBreak(code) {\n      var list = constructs[code]\n      var index = -1\n\n      if (code === null) {\n        return true\n      }\n\n      if (list) {\n        while (++index < list.length) {\n          if (\n            !list[index].previous ||\n            list[index].previous.call(self, self.previous)\n          ) {\n            return true\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction resolver(extraResolver) {\n  return resolveAllText\n\n  function resolveAllText(events, context) {\n    var index = -1\n    var enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n// A rather ugly set of instructions which again looks at chunks in the input\n// stream.\n// The reason to do this here is that it is *much* faster to parse in reverse.\n// And that we can’t hook into `null` to split the line suffix before an EOF.\n// To do: figure out if we can make this into a clean utility, or even in core.\n// As it will be useful for GFMs literal autolink extension (and maybe even\n// tables?)\nfunction resolveAllLineSuffixes(events, context) {\n  var eventIndex = -1\n  var chunks\n  var data\n  var chunk\n  var index\n  var bufferIndex\n  var size\n  var tabs\n  var token\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      data = events[eventIndex - 1][1]\n      chunks = context.sliceStream(data)\n      index = chunks.length\n      bufferIndex = -1\n      size = 0\n      tabs = undefined\n\n      while (index--) {\n        chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n\n          end: shallow(data.end)\n        }\n\n        data.end = shallow(token.start)\n\n        if (data.start.offset === data.end.offset) {\n          assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","module.exports = createParser\n\nvar initializeContent = require('./initialize/content')\nvar initializeDocument = require('./initialize/document')\nvar initializeFlow = require('./initialize/flow')\nvar initializeText = require('./initialize/text')\nvar constructs = require('./constructs')\nvar createTokenizer = require('./util/create-tokenizer')\nvar combineExtensions = require('./util/combine-extensions')\nvar miniflat = require('./util/miniflat')\n\nfunction createParser(options) {\n  var settings = options || {}\n  var parser = {\n    defined: [],\n    constructs: combineExtensions(\n      [constructs].concat(miniflat(settings.extensions))\n    ),\n\n    content: create(initializeContent),\n    document: create(initializeDocument),\n    flow: create(initializeFlow),\n    string: create(initializeText.string),\n    text: create(initializeText.text)\n  }\n\n  return parser\n\n  function create(initializer) {\n    return creator\n    function creator(from) {\n      return createTokenizer(parser, initializer, from)\n    }\n  }\n}\n","module.exports = postprocess\n\nvar subtokenize = require('./util/subtokenize')\n\nfunction postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","module.exports = preprocessor\n\nvar search = /[\\0\\t\\n\\r]/g\n\nfunction preprocessor() {\n  var start = true\n  var column = 1\n  var buffer = ''\n  var atCarriageReturn\n\n  return preprocess\n\n  function preprocess(value, encoding, end) {\n    var chunks = []\n    var match\n    var next\n    var startPosition\n    var endPosition\n    var code\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition = match ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        if (code === 0) {\n          chunks.push(65533)\n          column++\n        } else if (code === 9) {\n          next = Math.ceil(column / 4) * 4\n          chunks.push(-2)\n          while (column++ < next) chunks.push(-1)\n        } else if (code === 10) {\n          chunks.push(-4)\n          column = 1\n        }\n        // Must be carriage return.\n        else {\n          atCarriageReturn = true\n          column = 1\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","exports.tokenize = tokenizeAttention\nexports.resolveAll = resolveAllAttention\n\nvar shallow = require('../util/shallow')\nvar chunkedSplice = require('../util/chunked-splice')\nvar classifyCharacter = require('../util/classify-character')\nvar movePoint = require('../util/move-point')\nvar resolveAll = require('../util/resolve-all')\n\n// Take all events and resolve attention to emphasis or strong.\nfunction resolveAllAttention(events, context) {\n  var index = -1\n  var open\n  var group\n  var text\n  var openingSequence\n  var closingSequence\n  var use\n  var nextEvents\n  var offset\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open &&\n          // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          }\n\n          // Number of markers to use from the sequence.\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: movePoint(shallow(events[open][1].end), -use),\n            end: shallow(events[open][1].end)\n          }\n\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: shallow(events[index][1].start),\n            end: movePoint(shallow(events[index][1].start), use)\n          }\n\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: shallow(events[open][1].end),\n            end: shallow(events[index][1].start)\n          }\n\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: shallow(openingSequence.start),\n            end: shallow(closingSequence.end)\n          }\n\n          events[open][1].end = shallow(openingSequence.start)\n          events[index][1].start = shallow(closingSequence.end)\n\n          nextEvents = []\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            chunkedSplice(nextEvents, nextEvents.length, 0, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          }\n\n          // Opening.\n          chunkedSplice(nextEvents, nextEvents.length, 0, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ])\n\n          // Between.\n          chunkedSplice(\n            nextEvents,\n            nextEvents.length,\n            0,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          )\n\n          // Closing.\n          chunkedSplice(nextEvents, nextEvents.length, 0, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ])\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            chunkedSplice(nextEvents, nextEvents.length, 0, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          chunkedSplice(events, open - 1, index - open + 3, nextEvents)\n\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n\nfunction tokenizeAttention(effects, ok) {\n  var before = classifyCharacter(this.previous)\n  var marker\n\n  return start\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n\n  function sequence(code) {\n    var token\n    var after\n    var open\n    var close\n\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    token = effects.exit('attentionSequence')\n    after = classifyCharacter(code)\n    open = !after || (after === 2 && before)\n    close = !before || (before === 2 && after)\n    token._open = marker === 42 ? open : open && (before || !close)\n    token._close = marker === 42 ? close : close && (after || !open)\n    return ok(code)\n  }\n}\n","exports.tokenize = tokenizeAutolink\n\nvar asciiAlpha = require('../character/ascii-alpha')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric')\nvar asciiAtext = require('../character/ascii-atext')\nvar asciiControl = require('../character/ascii-control')\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  var size\n\n  return start\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      size = 1\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","exports.tokenize = tokenizeBlockQuoteStart\nexports.continuation = {tokenize: tokenizeBlockQuoteContinuation}\nexports.exit = exit\n\nvar markdownSpace = require('../character/markdown-space')\n\nvar createSpace = require('./factory-space')\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  var self = this\n\n  return start\n\n  function start(code) {\n    if (code === 62) {\n      if (!self.containerState.open) {\n        effects.enter('blockQuote', {_container: true})\n        self.containerState.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return createSpace(\n    effects,\n    effects.attempt(exports, ok, nok),\n    'linePrefix',\n    4\n  )\n}\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","exports.tokenize = tokenizeCharacterEscape\n\nvar asciiPunctuation = require('../character/ascii-punctuation')\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","exports.tokenize = tokenizeCharacterReference\n\nvar decode = require('parse-entities/decode-entity')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric')\nvar asciiDigit = require('../character/ascii-digit')\nvar asciiHexDigit = require('../character/ascii-hex-digit')\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  var self = this\n  var size = 0\n  var max\n  var test\n\n  return start\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  function value(code) {\n    var token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (test === asciiAlphanumeric && !decode(self.sliceSerialize(token))) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","exports.tokenize = tokenizeCodeFenced\nexports.concrete = true\n\nvar markdownLineEnding = require('../character/markdown-line-ending')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space')\n\nvar prefixSize = require('../util/prefix-size')\nvar createSpace = require('./factory-space')\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  var self = this\n  var initialPrefix = prefixSize(this.events, 'linePrefix')\n  var sizeOpen = 0\n  var marker\n\n  return start\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : createSpace(effects, infoOpen, 'whitespace')(code)\n  }\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {contentType: 'string'})\n    return info(code)\n  }\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return createSpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {contentType: 'string'})\n    return meta(code)\n  }\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : content(code)\n  }\n\n  function content(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return effects.attempt(\n        {tokenize: tokenizeClosingFence, partial: true},\n        after,\n        initialPrefix\n          ? createSpace(effects, content, 'linePrefix', initialPrefix + 1)\n          : content\n      )\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return content(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    var size = 0\n\n    return createSpace(effects, closingPrefixAfter, 'linePrefix', 4)\n\n    function closingPrefixAfter(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return createSpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","exports.tokenize = tokenizeCodeIndented\nexports.resolve = resolveCodeIndented\n\nvar markdownLineEnding = require('../character/markdown-line-ending')\n\nvar chunkedSplice = require('../util/chunked-splice')\nvar prefixSize = require('../util/prefix-size')\nvar createSpace = require('./factory-space')\n\nvar continuedIndent = {tokenize: tokenizeContinuedIndent, partial: true}\n\nfunction resolveCodeIndented(events, context) {\n  var code = {\n    type: 'codeIndented',\n    start: events[0][1].start,\n    end: events[events.length - 1][1].end\n  }\n\n  chunkedSplice(events, 0, 0, [['enter', code, context]])\n  chunkedSplice(events, events.length, 0, [['exit', code, context]])\n\n  return events\n}\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  var self = this\n\n  return createSpace(\n    effects,\n    afterInitial,\n    'linePrefix',\n\n    4 + 1\n  )\n\n  function afterInitial(code) {\n    // Flow checks blank lines first, so we don’t have EOL/EOF.\n\n    if (prefixSize(self.events, 'linePrefix') < 4) {\n      return nok(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return ok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(continuedIndent, afterPrefix, ok)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n}\n\nfunction tokenizeContinuedIndent(effects, ok, nok) {\n  var self = this\n\n  return createSpace(\n    effects,\n    afterPrefix,\n    'linePrefix',\n\n    4 + 1\n  )\n\n  function afterPrefix(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n\n      return createSpace(\n        effects,\n        afterPrefix,\n        'linePrefix',\n\n        4 + 1\n      )\n    }\n\n    return prefixSize(self.events, 'linePrefix') < 4 ? nok(code) : ok(code)\n  }\n}\n","exports.tokenize = tokenizeCodeText\nexports.resolve = resolveCodeText\nexports.previous = previous\n\nvar markdownLineEnding = require('../character/markdown-line-ending')\n\nfunction resolveCodeText(events) {\n  var tailExitIndex = events.length - 4\n  var headEnterIndex = 3\n  var index\n  var enter\n\n  // If we start and end with an EOL or a space.\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[tailExitIndex][1].type = events[headEnterIndex][1].type =\n          'codeTextPadding'\n\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  var self = this\n  var sizeOpen = 0\n  var size\n  var token\n\n  return start\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Closing fence?\n    // Could also be data.\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    }\n\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    }\n\n    // Data.\n    effects.enter('codeTextData')\n    return data(code)\n  }\n\n  // In code.\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n\n  // Closing fence.\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    }\n\n    // More or less accents: mark as data.\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","exports.tokenize = tokenizeContent\nexports.resolve = resolveContent\nexports.interruptible = true\nexports.lazy = true\n\nvar markdownLineEnding = require('../character/markdown-line-ending')\n\nvar subtokenize = require('../util/subtokenize')\nvar prefixSize = require('../util/prefix-size')\nvar createSpace = require('./factory-space')\n\nvar lookaheadConstruct = {tokenize: tokenizeLookaheadConstruct, partial: true}\n\n// Content is transparent: it’s parsed right now. That way, definitions are also\n// parsed right now: before text in paragraphs (specifically, media) are parsed.\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\nfunction tokenizeContent(effects, ok) {\n  var previous\n\n  return start\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n\n    return data(code)\n  }\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        lookaheadConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous = previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous: previous\n    })\n\n    return data\n  }\n}\n\nfunction tokenizeLookaheadConstruct(effects, ok, nok) {\n  var self = this\n\n  return startLookahead\n\n  function startLookahead(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return createSpace(effects, prefixed, 'linePrefix')\n  }\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (prefixSize(self.events, 'linePrefix') < 4) {\n      return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n    }\n\n    return ok(code)\n  }\n}\n","exports.tokenize = tokenizeDefinition\n\nvar markdownLineEnding = require('../character/markdown-line-ending')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space')\nvar normalizeIdentifier = require('../util/normalize-identifier')\n\nvar createDestination = require('./factory-destination')\nvar createLabel = require('./factory-label')\nvar createSpace = require('./factory-space')\nvar createWhitespace = require('./factory-whitespace')\nvar createTitle = require('./factory-title')\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  var self = this\n  var destinationAfter = effects.attempt(\n    {tokenize: tokenizeTitle, partial: true},\n    createSpace(effects, after, 'whitespace'),\n    createSpace(effects, after, 'whitespace')\n  )\n\n  var identifier\n\n  return start\n\n  function start(code) {\n    effects.enter('definition')\n    return createLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n\n      // Note: blank lines can’t exist in content.\n      return createWhitespace(\n        effects,\n        createDestination(\n          effects,\n          destinationAfter,\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (self.parser.defined.indexOf(identifier) < 0) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? createWhitespace(effects, before)(code)\n      : nok(code)\n  }\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return createTitle(\n        effects,\n        createSpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","module.exports = createDestination\n\nvar asciiControl = require('../character/ascii-control')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space')\nvar markdownLineEnding = require('../character/markdown-line-ending')\n\n// eslint-disable-next-line max-params\nfunction createDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  var limit = max || Infinity\n  var balance = 0\n\n  return start\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {contentType: 'string'})\n    return destinationRaw(code)\n  }\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {contentType: 'string'})\n    return destinationEnclosed(code)\n  }\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","module.exports = createLabel\n\nvar markdownLineEnding = require('../character/markdown-line-ending')\nvar markdownSpace = require('../character/markdown-space')\n\n// eslint-disable-next-line max-params\nfunction createLabel(effects, ok, nok, type, markerType, stringType) {\n  var self = this\n  var size = 0\n  var data\n\n  return start\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* istanbul ignore next - footnotes. */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {contentType: 'string'})\n    return label(code)\n  }\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","module.exports = createSpace\n\nvar markdownSpace = require('../character/markdown-space')\n\nfunction createSpace(effects, ok, type, max) {\n  var limit = max ? max - 1 : Infinity\n  var size\n\n  return start\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      size = 0\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","module.exports = createTitle\n\nvar markdownLineEnding = require('../character/markdown-line-ending')\n\nvar createSpace = require('./factory-space')\n\n// eslint-disable-next-line max-params\nfunction createTitle(effects, ok, nok, type, markerType, stringType) {\n  var marker\n\n  return start\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return createSpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {contentType: 'string'})\n    return title(code)\n  }\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","module.exports = createWhitespace\n\nvar markdownLineEnding = require('../character/markdown-line-ending')\nvar markdownSpace = require('../character/markdown-space')\n\nvar createSpace = require('./factory-space')\n\nfunction createWhitespace(effects, ok) {\n  var seen\n  return start\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return createSpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","exports.tokenize = tokenizeHardBreakEscape\n\nvar markdownLineEnding = require('../character/markdown-line-ending')\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","exports.tokenize = tokenizeAtxHeading\nexports.resolve = resolveAtxHeading\n\nvar markdownLineEnding = require('../character/markdown-line-ending')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space')\nvar markdownSpace = require('../character/markdown-space')\n\nvar chunkedSplice = require('../util/chunked-splice')\nvar createSpace = require('./factory-space')\n\nfunction resolveAtxHeading(events, context) {\n  var contentEnd = events.length - 2\n  var contentStart = 3\n  var content\n  var text\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n\n    chunkedSplice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n\nfunction tokenizeAtxHeading(effects, ok, nok) {\n  var self = this\n  var size = 0\n\n  return start\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return createSpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","exports.tokenize = tokenizeHtml\nexports.resolveTo = resolveToHtml\nexports.concrete = true\n\nvar asciiAlpha = require('../character/ascii-alpha')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric')\n\nvar markdownLineEnding = require('../character/markdown-line-ending')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space')\nvar markdownSpace = require('../character/markdown-space')\n\nvar fromCharCode = require('../constant/from-char-code')\nvar basics = require('../constant/html-block-names')\nvar raws = require('../constant/html-raw-names')\n\nvar blank = require('./partial-blank-line')\n\nvar nextBlank = {tokenize: tokenizeNextBlank, partial: true}\n\nfunction resolveToHtml(events) {\n  var index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start\n    // Remove the line prefix.\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n\nfunction tokenizeHtml(effects, ok, nok) {\n  var self = this\n  var kind\n  var startTag\n  var buffer\n  var index\n  var marker\n\n  return start\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (code !== 47 && startTag && raws.indexOf(buffer.toLowerCase()) > -1) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (basics.indexOf(buffer.toLowerCase()) > -1) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7\n      // Do not support complete HTML when interrupting.\n      return self.interrupt\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = undefined\n    return completeAttributeValueUnquoted(code)\n  }\n\n  function completeAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlank,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return htmlContinueStart\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && raws.indexOf(buffer.toLowerCase()) > -1) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 6) {\n      effects.consume(code)\n      buffer += fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    return continuation(code)\n  }\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blank, ok, nok)\n  }\n}\n","exports.tokenize = tokenizeHtml\n\nvar markdownLineEnding = require('../character/markdown-line-ending')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space')\nvar markdownSpace = require('../character/markdown-space')\nvar asciiAlpha = require('../character/ascii-alpha')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric')\n\nvar createSpace = require('./factory-space')\n\nfunction tokenizeHtml(effects, ok, nok) {\n  var marker\n  var buffer\n  var index\n  var returnState\n\n  return start\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return createSpace(effects, afterPrefix, 'linePrefix', 4)\n  }\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","exports.tokenize = tokenizeLabelEnd\nexports.resolveTo = resolveToLabelEnd\nexports.resolveAll = resolveAllLabelEnd\n\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space')\n\nvar normalizeIdentifier = require('../util/normalize-identifier')\nvar chunkedSplice = require('../util/chunked-splice')\nvar resolveAll = require('../util/resolve-all')\nvar shallow = require('../util/shallow')\nvar createDestination = require('./factory-destination')\nvar createLabel = require('./factory-label')\nvar createWhitespace = require('./factory-whitespace')\nvar createTitle = require('./factory-title')\n\nvar resource = {tokenize: tokenizeResource}\nvar fullReference = {tokenize: tokenizeFullReference}\nvar collapsedReference = {tokenize: tokenizeCollapsedReference}\n\nfunction resolveAllLabelEnd(events) {\n  var index = -1\n  var token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      !token._used &&\n      (token.type === 'labelImage' ||\n        token.type === 'labelLink' ||\n        token.type === 'labelEnd')\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n\nfunction resolveToLabelEnd(events, context) {\n  var index = events.length\n  var offset = 0\n  var group\n  var label\n  var text\n  var token\n  var open\n  var close\n  var media\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: shallow(events[open][1].start),\n    end: shallow(events[events.length - 1][1].end)\n  }\n\n  label = {\n    type: 'label',\n    start: shallow(events[open][1].start),\n    end: shallow(events[close][1].end)\n  }\n\n  text = {\n    type: 'labelText',\n    start: shallow(events[open + offset + 2][1].end),\n    end: shallow(events[close - 2][1].start)\n  }\n\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ]\n\n  // Opening marker.\n  chunkedSplice(\n    media,\n    media.length,\n    0,\n    events.slice(open + 1, open + offset + 3)\n  )\n\n  // Text open.\n  chunkedSplice(media, media.length, 0, [['enter', text, context]])\n\n  // Between.\n  chunkedSplice(\n    media,\n    media.length,\n    0,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  )\n\n  // Text close, marker close, label close.\n  chunkedSplice(media, media.length, 0, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ])\n\n  // Reference, resource, or so.\n  chunkedSplice(media, media.length, 0, events.slice(close + 1))\n\n  // Media close.\n  chunkedSplice(media, media.length, 0, [['exit', group, context]])\n\n  chunkedSplice(events, open, events.length, media)\n\n  return events\n}\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  var self = this\n  var index = self.events.length\n  var labelStart\n  var defined\n\n  // Find an opening.\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    }\n\n    // It’s a balanced bracket, but contains a link.\n    if (labelStart._inactive) return balanced(code)\n    defined =\n      self.parser.defined.indexOf(\n        normalizeIdentifier(\n          self.sliceSerialize({start: labelStart.end, end: self.now()})\n        )\n      ) > -1\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(resource, ok, defined ? ok : balanced)(code)\n    }\n\n    // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n    if (code === 91) {\n      return effects.attempt(\n        fullReference,\n        ok,\n        defined ? effects.attempt(collapsedReference, ok, balanced) : balanced\n      )(code)\n    }\n\n    // Shortcut reference: `[asd]`?\n    return defined ? ok(code) : balanced(code)\n  }\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return createWhitespace(effects, open)\n  }\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return createDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      3\n    )(code)\n  }\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? createWhitespace(effects, between)(code)\n      : end(code)\n  }\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return createTitle(\n        effects,\n        createWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  var self = this\n\n  return start\n\n  function start(code) {\n    return createLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  function afterLabel(code) {\n    return self.parser.defined.indexOf(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    ) < 0\n      ? nok(code)\n      : ok(code)\n  }\n}\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","exports.tokenize = tokenizelabelImage\nexports.resolveAll = require('./label-end').resolveAll\n\nfunction tokenizelabelImage(effects, ok, nok) {\n  var self = this\n\n  return start\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    /* istanbul ignore next - footnotes. */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","exports.tokenize = tokenizelabelLink\nexports.resolveAll = require('./label-end').resolveAll\n\nfunction tokenizelabelLink(effects, ok, nok) {\n  var self = this\n\n  return start\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  function after(code) {\n    /* istanbul ignore next - footnotes. */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","exports.tokenize = tokenizeWhitespace\n\nvar markdownLineEnding = require('../character/markdown-line-ending')\n\nvar createSpace = require('./factory-space')\n\nfunction tokenizeWhitespace(effects, ok) {\n  return start\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return createSpace(effects, ok, 'linePrefix')\n  }\n}\n","exports.tokenize = tokenizeListStart\nexports.continuation = {tokenize: tokenizeListContinuation}\nexports.exit = tokenizeListEnd\n\nvar markdownSpace = require('../character/markdown-space')\nvar asciiDigit = require('../character/ascii-digit')\n\nvar prefixSize = require('../util/prefix-size')\nvar sizeChunks = require('../util/size-chunks')\nvar thematicBreak = require('./thematic-break')\nvar createSpace = require('./factory-space')\nvar blank = require('./partial-blank-line')\n\nfunction tokenizeListStart(effects, ok, nok) {\n  var self = this\n  var initialSize = prefixSize(self.events, 'linePrefix')\n  var valueSize\n\n  return start\n\n  function start(code) {\n    if (\n      (code === 42 || code === 43 || code === 45) &&\n      (!self.containerState.marker || code === self.containerState.marker)\n    ) {\n      return code === 42 || code === 45\n        ? effects.check(thematicBreak, nok, unordered)(code)\n        : unordered(code)\n    }\n\n    if (\n      asciiDigit(code) &&\n      (!self.containerState.type || self.containerState.type === 'listOrdered')\n    ) {\n      return ordered(code)\n    }\n\n    return nok(code)\n  }\n\n  function unordered(code) {\n    if (!self.containerState.type) {\n      self.containerState.type = 'listUnordered'\n      effects.enter(self.containerState.type, {_container: true})\n    }\n\n    effects.enter('listItemPrefix')\n    return atMarker(code)\n  }\n\n  function ordered(code) {\n    if (self.containerState.type || !self.interrupt || code === 49) {\n      if (!self.containerState.type) {\n        self.containerState.type = 'listOrdered'\n        effects.enter(self.containerState.type, {_container: true})\n      }\n\n      effects.enter('listItemPrefix')\n      effects.enter('listItemValue')\n      effects.consume(code)\n      valueSize = 1\n      return self.interrupt ? afterValue : inside\n    }\n\n    return nok(code)\n  }\n\n  function inside(code) {\n    if (asciiDigit(code) && ++valueSize < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    return afterValue(code)\n  }\n\n  function afterValue(code) {\n    effects.exit('listItemValue')\n\n    return code === 41 || code === 46 ? atMarker(code) : nok(code)\n  }\n\n  function atMarker(code) {\n    self.containerState.marker = self.containerState.marker || code\n\n    if (code === self.containerState.marker) {\n      effects.enter('listItemMarker')\n      effects.consume(code)\n      effects.exit('listItemMarker')\n      return effects.check(\n        blank,\n        // Can’t be empty when interrupting.\n        self.interrupt ? nok : onBlank,\n        effects.attempt(\n          {tokenize: tokenizeListItemPrefixWhitespace, partial: true},\n          endOfPrefix,\n          otherPrefix\n        )\n      )\n    }\n\n    return nok(code)\n  }\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize + sizeChunks(self.sliceStream(effects.exit('listItemPrefix')))\n    return ok(code)\n  }\n}\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  var self = this\n\n  self.containerState._closeFlow = undefined\n\n  return effects.check(blank, onBlank, notBlank)\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine\n    return ok(code)\n  }\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = self.containerState.initialBlankLine = undefined\n    return effects.attempt(\n      {tokenize: tokenizeIndent, partial: true},\n      ok,\n      notInCurrentItem\n    )(code)\n  }\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true\n    // As we’re closing flow, we’re no longer interrupting\n    self.interrupt = undefined\n    return createSpace(\n      effects,\n      effects.attempt(exports, ok, nok),\n      'linePrefix',\n      4\n    )(code)\n  }\n}\n\nfunction tokenizeIndent(effects, ok, nok) {\n  var self = this\n\n  return createSpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n\n    self.containerState.size + 1\n  )\n\n  function afterPrefix(code) {\n    return prefixSize(self.events, 'listItemIndent') ===\n      self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  var self = this\n\n  return createSpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n\n    4 + 1\n  )\n\n  function afterPrefix(code) {\n    return markdownSpace(code) ||\n      !prefixSize(self.events, 'listItemPrefixWhitespace')\n      ? nok(code)\n      : ok(code)\n  }\n}\n","exports.tokenize = tokenizeBlankLine\nexports.partial = true\n\nvar markdownLineEnding = require('../character/markdown-line-ending')\n\nvar createSpace = require('./factory-space')\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return createSpace(effects, afterWhitespace, 'linePrefix')\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","exports.tokenize = tokenizeSetextUnderline\nexports.resolveTo = resolveToSetextUnderline\n\nvar markdownLineEnding = require('../character/markdown-line-ending')\n\nvar shallow = require('../util/shallow')\nvar createSpace = require('./factory-space')\n\nfunction resolveToSetextUnderline(events, context) {\n  var index = events.length\n  var content\n  var text\n  var definition\n  var heading\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  heading = {\n    type: 'setextHeading',\n    start: shallow(events[text][1].start),\n    end: shallow(events[events.length - 1][1].end)\n  }\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = 'setextHeadingText'\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = shallow(events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context])\n\n  return events\n}\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  var self = this\n  var index = self.events.length\n  var marker\n  var paragraph\n\n  // Find an opening.\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n\n  function start(code) {\n    if (!self.lazy && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return createSpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","exports.tokenize = tokenizeThematicBreak\n\nvar markdownLineEnding = require('../character/markdown-line-ending')\nvar markdownSpace = require('../character/markdown-space')\n\nvar createSpace = require('./factory-space')\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  var size = 0\n  var marker\n\n  return start\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return createSpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","module.exports = chunkedSplice\n\nvar v8MaxSafeChunkSize = 10000\n\n// `Array#splice` takes all items to be inserted as individual argument which\n// causes a stack overflow in V8 when trying to insert 100k items for instance.\nfunction chunkedSplice(list, start, remove, items) {\n  var end = list.length\n  var chunkStart = 0\n  var result\n  var parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < v8MaxSafeChunkSize) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    return [].splice.apply(list, parameters)\n  }\n\n  // Delete `remove` items starting from `start`\n  result = [].splice.apply(list, [start, remove])\n\n  // Insert the items in chunks to not cause stack overflows.\n  while (chunkStart < items.length) {\n    parameters = items.slice(chunkStart, chunkStart + v8MaxSafeChunkSize)\n    parameters.unshift(start, 0)\n    ;[].splice.apply(list, parameters)\n\n    chunkStart += v8MaxSafeChunkSize\n    start += v8MaxSafeChunkSize\n  }\n\n  return result\n}\n","module.exports = classifyCharacter\n\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space')\nvar unicodePunctuation = require('../character/unicode-punctuation')\nvar unicodeWhitespace = require('../character/unicode-whitespace')\n\n// Classify whether a character is unicode whitespace, unicode punctuation, or\n// anything else.\n// Used for attention (emphasis, strong), whose sequences can open or close\n// based on the class of surrounding characters.\nfunction classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","module.exports = combineExtensions\n\nvar own = require('../constant/has-own-property')\nvar miniflat = require('./miniflat')\nvar chunkedSplice = require('./chunked-splice')\n\n// Combine several syntax extensions into one.\nfunction combineExtensions(extensions) {\n  var all = {}\n  var index = -1\n\n  while (++index < extensions.length) {\n    extension(all, extensions[index])\n  }\n\n  return all\n}\n\nfunction extension(all, extension) {\n  var hook\n  var left\n  var right\n  var code\n\n  for (hook in extension) {\n    left = own.call(all, hook) ? all[hook] : (all[hook] = {})\n    right = extension[hook]\n\n    for (code in right) {\n      left[code] = constructs(\n        miniflat(right[code]),\n        own.call(left, code) ? left[code] : []\n      )\n    }\n  }\n}\n\nfunction constructs(list, existing) {\n  var index = -1\n  var before = []\n\n  while (++index < list.length) {\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  chunkedSplice(existing, 0, 0, before)\n  return existing\n}\n","module.exports = createTokenizer\n\nvar assign = require('../constant/assign')\n\nvar markdownLineEnding = require('../character/markdown-line-ending')\nvar chunkedSplice = require('./chunked-splice')\nvar shallow = require('./shallow')\nvar serializeChunks = require('./serialize-chunks')\nvar sliceChunks = require('./slice-chunks')\nvar resolveAll = require('./resolve-all')\nvar miniflat = require('./miniflat')\n\n// Create a tokenizer.\n// Tokenizers deal with one type of data (e.g., containers, flow, text).\n// The parser is the object dealing with it all.\n// `initialize` works like other constructs, except that only its `tokenize`\n// function is used, in which case it doesn’t receive an `ok` or `nok`.\n// `from` can be given to set the point before the first character, although\n// when further lines are indented, they must be set with `defineSkip`.\nfunction createTokenizer(parser, initialize, from) {\n  var point = from ? shallow(from) : {line: 1, column: 1, offset: 0}\n  var columnStart = {}\n  var resolveAllConstructs = []\n  var chunks = []\n  var stack = []\n  var consumed = true\n\n  // Tools used for tokenizing.\n  var effects = {\n    consume: consume,\n    enter: enter,\n    exit: exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {interrupt: true}),\n    lazy: constructFactory(onsuccessfulcheck, {lazy: true})\n  }\n\n  // State and tools for resolving and serializing.\n  var context = {\n    previous: null,\n    events: [],\n    parser: parser,\n    sliceStream: sliceStream,\n    sliceSerialize: sliceSerialize,\n    now: now,\n    defineSkip: skip,\n    write: write\n  }\n\n  // The state function.\n  var state = initialize.tokenize.call(context, effects)\n\n  // Track which character we expect to be consumed, to catch bugs.\n  var expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  // Store where we are in the input stream.\n  point._index = 0\n  point._bufferIndex = -1\n\n  return context\n\n  function write(slice) {\n    chunkedSplice(chunks, chunks.length, 0, slice)\n\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  function sliceSerialize(token) {\n    return serializeChunks(sliceStream(token))\n  }\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  function now() {\n    return shallow(point)\n  }\n\n  function skip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  }\n\n  //\n  // State management.\n  //\n\n  // Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n  // `consume`).\n  // Here is where we walk through the chunks, which either include strings of\n  // several characters, or numerical character codes.\n  // The reason to do this in a loop instead of a call is so the stack can\n  // drain.\n  function main() {\n    var chunkIndex\n    var chunk\n\n    while (point._index < chunks.length) {\n      chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  // Deal with one code.\n  function go(code) {\n    consumed = undefined\n\n    expectedCode = code\n    state = state(code)\n  }\n\n  // Move a character forward.\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  // Start a token.\n  function enter(type, fields) {\n    var token = fields || {}\n    token.type = type\n    token.start = now()\n\n    context.events.push(['enter', token, context])\n\n    stack.push(token)\n\n    return token\n  }\n\n  // Stop a token.\n  function exit(type) {\n    var token = stack.pop()\n    token.end = now()\n\n    context.events.push(['exit', token, context])\n\n    return token\n  }\n\n  // Use results.\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  // Discard results.\n  function onsuccessfulcheck(construct, info) {\n    info.restore()\n  }\n\n  // Factory to attempt/check/interrupt.\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    // Handle either an object mapping codes to constructs, a list of\n    // constructs, or a single construct.\n    function hook(constructs, returnState, bogusState) {\n      var listOfConstructs\n      var constructIndex\n      var currentConstruct\n      var info\n\n      return constructs.tokenize || 'length' in constructs\n        ? handleListOfConstructs(miniflat(constructs))\n        : handleMapOfConstructs\n\n      function handleMapOfConstructs(code) {\n        if (code in constructs || null in constructs) {\n          return handleListOfConstructs(\n            /* istanbul ignore next - `null` is used by some extensions */\n            constructs.null\n              ? miniflat(constructs[code]).concat(miniflat(constructs.null))\n              : constructs[code]\n          )(code)\n        }\n\n        return bogusState(code)\n      }\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        return handleConstruct(list[constructIndex])\n      }\n\n      function handleConstruct(construct) {\n        return start\n\n        function start(code) {\n          // To do: not nede to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          return construct.tokenize.call(\n            fields ? assign({}, context, fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && resolveAllConstructs.indexOf(construct) < 0) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      chunkedSplice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  function store() {\n    var startPoint = now()\n    var startPrevious = context.previous\n    var startCurrentConstruct = context.currentConstruct\n    var startEventsIndex = context.events.length\n    var startStack = Array.from(stack)\n\n    return {restore: restore, from: startEventsIndex}\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n","module.exports = miniflat\n\nfunction miniflat(value) {\n  return value === null || value === undefined\n    ? []\n    : 'length' in value\n    ? value\n    : [value]\n}\n","module.exports = movePoint\n\n// Note! `move` only works inside lines! It’s not possible to move past other\n// chunks (replacement characters, tabs, or line endings).\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n  return point\n}\n","module.exports = normalizeIdentifier\n\nfunction normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no object method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","module.exports = prefixSize\n\nvar sizeChunks = require('./size-chunks')\n\nfunction prefixSize(events, type) {\n  var tail = events[events.length - 1]\n  if (!tail || tail[1].type !== type) return 0\n  return sizeChunks(tail[2].sliceStream(tail[1]))\n}\n","module.exports = regexCheck\n\nvar fromCharCode = require('../constant/from-char-code')\n\nfunction regexCheck(regex) {\n  return check\n  function check(code) {\n    return regex.test(fromCharCode(code))\n  }\n}\n","module.exports = resolveAll\n\nfunction resolveAll(constructs, events, context) {\n  var called = []\n  var index = -1\n  var resolve\n\n  while (++index < constructs.length) {\n    resolve = constructs[index].resolveAll\n\n    if (resolve && called.indexOf(resolve) < 0) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","module.exports = safeFromInt\n\nvar fromCharCode = require('../constant/from-char-code')\n\nfunction safeFromInt(value, base) {\n  var code = parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) ||\n    // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) ||\n    // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) ||\n    // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 ||\n    // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return fromCharCode(code)\n}\n","module.exports = serializeChunks\n\nvar fromCharCode = require('../constant/from-char-code')\n\nfunction serializeChunks(chunks) {\n  var index = -1\n  var result = []\n  var chunk\n  var value\n  var atTab\n\n  while (++index < chunks.length) {\n    chunk = chunks[index]\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else if (chunk === -5) {\n      value = '\\r'\n    } else if (chunk === -4) {\n      value = '\\n'\n    } else if (chunk === -3) {\n      value = '\\r' + '\\n'\n    } else if (chunk === -2) {\n      value = '\\t'\n    } else if (chunk === -1) {\n      if (atTab) continue\n      value = ' '\n    } else {\n      // Currently only replacement character.\n      value = fromCharCode(chunk)\n    }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","module.exports = shallow\n\nvar assign = require('../constant/assign')\n\nfunction shallow(object) {\n  return assign({}, object)\n}\n","module.exports = sizeChunks\n\n// Measure the number of character codes in chunks.\n// Counts tabs based on their expanded size, and CR+LF as one character.\nfunction sizeChunks(chunks) {\n  var index = -1\n  var size = 0\n\n  while (++index < chunks.length) {\n    size += typeof chunks[index] === 'string' ? chunks[index].length : 1\n  }\n\n  return size\n}\n","module.exports = sliceChunks\n\nfunction sliceChunks(chunks, token) {\n  var startIndex = token.start._index\n  var startBufferIndex = token.start._bufferIndex\n  var endIndex = token.end._index\n  var endBufferIndex = token.end._bufferIndex\n  var view\n\n  if (startIndex === endIndex) {\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n","module.exports = subtokenize\n\nvar assign = require('../constant/assign')\n\nvar chunkedSplice = require('./chunked-splice')\nvar shallow = require('./shallow')\n\nfunction subtokenize(events) {\n  var jumps = {}\n  var index = -1\n  var event\n  var lineIndex\n  var otherIndex\n  var otherEvent\n  var parameters\n  var subevents\n  var more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index]\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1].isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    }\n    // Exit.\n    else if (event[1]._container || event[1]._movePreviousLineEndings) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = shallow(events[lineIndex][1].start)\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        chunkedSplice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n\nfunction subcontent(events, eventIndex) {\n  var token = events[eventIndex][1]\n  var context = events[eventIndex][2]\n  var startPosition = eventIndex - 1\n  var startPositions = []\n  var tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  var childEvents = tokenizer.events\n  var jumps = []\n  var gaps = {}\n  var stream\n  var previous\n  var index\n  var entered\n  var end\n  var adjust\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (token) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== token) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!token._tokenizer) {\n      stream = context.sliceStream(token)\n\n      if (!token.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(token.start)\n      }\n\n      if (token.isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (token.isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    }\n\n    // Unravel the next token.\n    previous = token\n    token = token.next\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  token = previous\n  index = childEvents.length\n\n  while (index--) {\n    // Make sure we’ve at least seen something (final eol is part of the last\n    // token).\n    if (childEvents[index][0] === 'enter') {\n      entered = true\n    } else if (\n      // Find a void token that includes a break.\n      entered &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      add(childEvents.slice(index + 1, end))\n\n      // Help GC.\n      token._tokenizer = token.next = undefined\n      token = token.previous\n      end = index + 1\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = token._tokenizer = token.next = undefined\n\n  // Do head:\n  add(childEvents.slice(0, end))\n\n  index = -1\n  adjust = 0\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n\n  function add(slice) {\n    var start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    chunkedSplice(events, start, 2, slice)\n  }\n}\n"],"sourceRoot":""}