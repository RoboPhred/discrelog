{"version":3,"sources":["webpack://discrelog/./src/components/Button/Button.module.css?a282","webpack://discrelog/./src/components/Checkbox/Checkbox.module.css?4fe9","webpack://discrelog/./src/components/CircuitEditor/CircuitEditor.module.css?a428","webpack://discrelog/./src/components/CircuitEditor/components/CircuitFieldSurface/CircuitFieldSurface.module.css?4f8f","webpack://discrelog/./src/components/CircuitEditor/components/CircuitFieldSurface/components/ElementPin/ElementPin.module.css?534f","webpack://discrelog/./src/components/CircuitEditor/components/CircuitFieldSurface/components/WireJoint/WireJoint.module.css?156d","webpack://discrelog/./src/components/CircuitEditor/components/CircuitFieldSurface/components/WireSegment/WireSegment.module.css?531b","webpack://discrelog/./src/components/CircuitNodeBreadcrumb/CircuitNodeBreadcrumb.module.css?4319","webpack://discrelog/./src/components/Dialog/Dialog.module.css?a332","webpack://discrelog/./src/components/Icons/Icons.module.css?682c","webpack://discrelog/./src/components/Menus/Menus.module.css?27a7","webpack://discrelog/./src/components/Modal/Modal.module.css?d409","webpack://discrelog/./src/components/SelectionList/SelectionList.module.css?89a4","webpack://discrelog/./src/components/Tessel/Tessel.module.css?d43a","webpack://discrelog/./src/components/TitleBar/TitleBar.module.css?c6e3","webpack://discrelog/./src/components/Tooltip/Tooltip.module.css?a017","webpack://discrelog/./src/components/Tutorial/Tutorial.module.css?c91d","webpack://discrelog/./src/dialogs/dialog-types/export-project-link/ExportProjectLinkDialog.module.css?13e0","webpack://discrelog/./src/dialogs/dialog-types/import-project-circuits/ImportProjectCircuitsDialog.module.css?16e9","webpack://discrelog/./src/elements/visuals/element-visuals.module.css?2bb3","webpack://discrelog/./src/pages/HomePage/HomePage.module.css?ee05","webpack://discrelog/./src/pages/ProjectEditorPage/components/ProjectEditorTitleBar/ProjectEditorTitleBar.module.css?4065","webpack://discrelog/./src/pages/ProjectEditorPage/components/SimControls/SimControls.module.css?e05b","webpack://discrelog/./src/pages/ProjectEditorPage/windows/CircuitsTreeWindow/CircuitsTreeWindow.module.css?916b","webpack://discrelog/./src/pages/ProjectEditorPage/windows/ElementTrayWindow/ElementTrayWindow.module.css?56cd","webpack://discrelog/./src/styles/flex.module.css?f6f1","webpack://discrelog/./src/styles/interaction.module.css?621c","webpack://discrelog/./src/styles/sizing.module.css?9a43","webpack://discrelog/./src/actions/circuit-add.ts","webpack://discrelog/./src/actions/circuit-delete.ts","webpack://discrelog/./src/actions/circuit-editor-drag-abort.ts","webpack://discrelog/./src/actions/circuit-editor-drag-continue.ts","webpack://discrelog/./src/actions/circuit-editor-drag-end.ts","webpack://discrelog/./src/actions/circuit-editor-drag-start-element.ts","webpack://discrelog/./src/actions/circuit-editor-drag-start-select.ts","webpack://discrelog/./src/actions/circuit-editor-drag-start-wire-joint.ts","webpack://discrelog/./src/actions/circuit-editor-drag-start-wire-segment.ts","webpack://discrelog/./src/actions/circuit-editor-drag-start-wire.ts","webpack://discrelog/./src/actions/circuit-editor-mouse-leave.ts","webpack://discrelog/./src/actions/circuit-editor-receive-focus.ts","webpack://discrelog/./src/actions/circuit-import.ts","webpack://discrelog/./src/actions/circuit-rename.ts","webpack://discrelog/./src/actions/clipboard-copy-elements.ts","webpack://discrelog/./src/actions/clipboard-paste.ts","webpack://discrelog/./src/actions/dialog-response-accept.ts","webpack://discrelog/./src/actions/dialog-response-cancel.ts","webpack://discrelog/./src/actions/dialog-show.ts","webpack://discrelog/./src/actions/element-add.ts","webpack://discrelog/./src/actions/element-delete.ts","webpack://discrelog/./src/actions/element-interact.ts","webpack://discrelog/./src/actions/element-move.ts","webpack://discrelog/./src/actions/element-rename.ts","webpack://discrelog/./src/actions/example-load.ts","webpack://discrelog/./src/actions/init.ts","webpack://discrelog/./src/actions/layout-rearrange.ts","webpack://discrelog/./src/actions/page-navigate.ts","webpack://discrelog/./src/actions/project-export-link.ts","webpack://discrelog/./src/actions/project-import-circuits.ts","webpack://discrelog/./src/actions/project-import-link.ts","webpack://discrelog/./src/actions/project-load.ts","webpack://discrelog/./src/actions/project-new.ts","webpack://discrelog/./src/actions/project-receive.ts","webpack://discrelog/./src/actions/project-rename.ts","webpack://discrelog/./src/actions/project-restore-previous.ts","webpack://discrelog/./src/actions/project-save.ts","webpack://discrelog/./src/actions/redo.ts","webpack://discrelog/./src/actions/select-all.ts","webpack://discrelog/./src/actions/select-clear.ts","webpack://discrelog/./src/actions/select-elements.ts","webpack://discrelog/./src/actions/select-region.ts","webpack://discrelog/./src/actions/select-wire-joints.ts","webpack://discrelog/./src/actions/select-wire-segments.ts","webpack://discrelog/./src/actions/selection-align-to-grid.ts","webpack://discrelog/./src/actions/selection-copy.ts","webpack://discrelog/./src/actions/selection-delete.ts","webpack://discrelog/./src/actions/selection-move.ts","webpack://discrelog/./src/actions/sim-pause.ts","webpack://discrelog/./src/actions/sim-start.ts","webpack://discrelog/./src/actions/sim-step.ts","webpack://discrelog/./src/actions/sim-stop.ts","webpack://discrelog/./src/actions/sim-tick.ts","webpack://discrelog/./src/actions/tutorial-annotate.ts","webpack://discrelog/./src/actions/tutorial-dismiss.ts","webpack://discrelog/./src/actions/tutorial-next.ts","webpack://discrelog/./src/actions/tutorial-start.ts","webpack://discrelog/./src/actions/undo.ts","webpack://discrelog/./src/actions/view-circuit.ts","webpack://discrelog/./src/actions/view-element-names.ts","webpack://discrelog/./src/actions/view-reset.ts","webpack://discrelog/./src/actions/wire-connect.ts","webpack://discrelog/./src/actions/wire-hydrate.ts","webpack://discrelog/./src/actions/wire-joint-delete.ts","webpack://discrelog/./src/actions/wire-joint-move.ts","webpack://discrelog/./src/actions/wire-segment-delete.ts","webpack://discrelog/./src/actions/wire-segment-insert-joint.ts","webpack://discrelog/./src/actions/wire-segment-set-line.ts","webpack://discrelog/./src/arrays.ts","webpack://discrelog/./src/components/App/App.tsx","webpack://discrelog/./src/components/App/index.ts","webpack://discrelog/./src/components/AtomicTextInput.tsx","webpack://discrelog/./src/components/AutoPopover.tsx","webpack://discrelog/./src/components/Button/Button.tsx","webpack://discrelog/./src/components/Button/index.ts","webpack://discrelog/./src/components/Checkbox/Checkbox.tsx","webpack://discrelog/./src/components/Checkbox/index.ts","webpack://discrelog/./src/components/CircuitEditor/CircuitEditor.tsx","webpack://discrelog/./src/components/CircuitEditor/components/CircuitFieldSurface/CircuitFieldSurface.tsx","webpack://discrelog/./src/components/CircuitEditor/components/CircuitFieldSurface/components/ContextMenuItems.tsx","webpack://discrelog/./src/components/CircuitEditor/components/CircuitFieldSurface/components/DragMovePreviewLayer.tsx","webpack://discrelog/./src/components/CircuitEditor/components/CircuitFieldSurface/components/DragNewElementLayer.tsx","webpack://discrelog/./src/components/CircuitEditor/components/CircuitFieldSurface/components/DragWirePreviewLayer.tsx","webpack://discrelog/./src/components/CircuitEditor/components/CircuitFieldSurface/components/EditorDragReceiver.tsx","webpack://discrelog/./src/components/CircuitEditor/components/CircuitFieldSurface/components/Element/Element.tsx","webpack://discrelog/./src/components/CircuitEditor/components/CircuitFieldSurface/components/Element/index.ts","webpack://discrelog/./src/components/CircuitEditor/components/CircuitFieldSurface/components/ElementContextMenu.tsx","webpack://discrelog/./src/components/CircuitEditor/components/CircuitFieldSurface/components/ElementPin/ElementPin.tsx","webpack://discrelog/./src/components/CircuitEditor/components/CircuitFieldSurface/components/ElementPin/index.ts","webpack://discrelog/./src/components/CircuitEditor/components/CircuitFieldSurface/components/ElementPins.tsx","webpack://discrelog/./src/components/CircuitEditor/components/CircuitFieldSurface/components/ElementPinsLayer.tsx","webpack://discrelog/./src/components/CircuitEditor/components/CircuitFieldSurface/components/ElementVisual.tsx","webpack://discrelog/./src/components/CircuitEditor/components/CircuitFieldSurface/components/ElementsLayer.tsx","webpack://discrelog/./src/components/CircuitEditor/components/CircuitFieldSurface/components/FieldContextMenu.tsx","webpack://discrelog/./src/components/CircuitEditor/components/CircuitFieldSurface/components/FieldMouseLayer.tsx","webpack://discrelog/./src/components/CircuitEditor/components/CircuitFieldSurface/components/GridBackground.tsx","webpack://discrelog/./src/components/CircuitEditor/components/CircuitFieldSurface/components/PinContextMenu.tsx","webpack://discrelog/./src/components/CircuitEditor/components/CircuitFieldSurface/components/Wire.tsx","webpack://discrelog/./src/components/CircuitEditor/components/CircuitFieldSurface/components/WireJoint/WireJoint.tsx","webpack://discrelog/./src/components/CircuitEditor/components/CircuitFieldSurface/components/WireJoint/index.ts","webpack://discrelog/./src/components/CircuitEditor/components/CircuitFieldSurface/components/WireSegment/WireSegment.tsx","webpack://discrelog/./src/components/CircuitEditor/components/CircuitFieldSurface/components/WireSegment/index.ts","webpack://discrelog/./src/components/CircuitEditor/components/CircuitFieldSurface/components/WiresLayer.tsx","webpack://discrelog/./src/components/CircuitEditor/components/CircuitFieldSurface/contexts/fieldSvgElement.tsx","webpack://discrelog/./src/components/CircuitEditor/components/CircuitFieldSurface/hooks/useMouseCoords.ts","webpack://discrelog/./src/components/CircuitEditor/components/CircuitFieldSurface/index.ts","webpack://discrelog/./src/components/CircuitEditor/contexts/circuit-editor-context.tsx","webpack://discrelog/./src/components/CircuitEditor/contexts/viewport-context.tsx","webpack://discrelog/./src/components/CircuitEditor/drag-items/new-element.ts","webpack://discrelog/./src/components/CircuitEditor/ids.ts","webpack://discrelog/./src/components/CircuitEditor/index.ts","webpack://discrelog/./src/components/CircuitEditor/utils.ts","webpack://discrelog/./src/components/CircuitNodeBreadcrumb/CircuitNodeBreadcrumb.tsx","webpack://discrelog/./src/components/CircuitNodeBreadcrumb/index.ts","webpack://discrelog/./src/components/ContextMenu.tsx","webpack://discrelog/./src/components/Dialog/Dialog.tsx","webpack://discrelog/./src/components/Dialog/index.ts","webpack://discrelog/./src/components/DialogManager/DialogManager.tsx","webpack://discrelog/./src/components/DialogManager/index.ts","webpack://discrelog/./src/components/EditableText.tsx","webpack://discrelog/./src/components/Icons/Close.tsx","webpack://discrelog/./src/components/Icons/Pause.tsx","webpack://discrelog/./src/components/Icons/Play.tsx","webpack://discrelog/./src/components/Icons/Step.tsx","webpack://discrelog/./src/components/Icons/Stop.tsx","webpack://discrelog/./src/components/Menus/CheckboxMenuItem.tsx","webpack://discrelog/./src/components/Menus/DividerMenuItem.tsx","webpack://discrelog/./src/components/Menus/EditableTextMenuItem.tsx","webpack://discrelog/./src/components/Menus/Menu.tsx","webpack://discrelog/./src/components/Menus/MenuCloseContext.ts","webpack://discrelog/./src/components/Menus/MenuItem.tsx","webpack://discrelog/./src/components/Menus/SubMenuItem.tsx","webpack://discrelog/./src/components/Modal/Modal.tsx","webpack://discrelog/./src/components/Modal/index.ts","webpack://discrelog/./src/components/Popover/Popover.tsx","webpack://discrelog/./src/components/Popover/PopoverChildContext.tsx","webpack://discrelog/./src/components/Popover/index.ts","webpack://discrelog/./src/components/SelectionList/SelectionList.tsx","webpack://discrelog/./src/components/SelectionList/index.ts","webpack://discrelog/./src/components/Tessel/Tessel.tsx","webpack://discrelog/./src/components/Tessel/TesselContext.tsx","webpack://discrelog/./src/components/Tessel/TesselDropCapture.tsx","webpack://discrelog/./src/components/Tessel/TesselFrame.tsx","webpack://discrelog/./src/components/Tessel/TesselSplit.tsx","webpack://discrelog/./src/components/Tessel/TesselSplitFrame.tsx","webpack://discrelog/./src/components/Tessel/TesselWindow.tsx","webpack://discrelog/./src/components/Tessel/drag-items/tessel-window.tsx","webpack://discrelog/./src/components/Tessel/index.ts","webpack://discrelog/./src/components/Tessel/types.ts","webpack://discrelog/./src/components/Tessel/utils.ts","webpack://discrelog/./src/components/TitleBar/TitleBar.tsx","webpack://discrelog/./src/components/TitleBar/index.ts","webpack://discrelog/./src/components/Tooltip/Tooltip.tsx","webpack://discrelog/./src/components/Tooltip/index.ts","webpack://discrelog/./src/components/Tutorial/Tutorial.tsx","webpack://discrelog/./src/components/Tutorial/index.ts","webpack://discrelog/./src/dialogs/dialog-types/export-project-link/ExportProjectLinkDialog.tsx","webpack://discrelog/./src/dialogs/dialog-types/export-project-link/index.ts","webpack://discrelog/./src/dialogs/dialog-types/import-project-circuits/ImportProjectCircuitsDialog.tsx","webpack://discrelog/./src/dialogs/dialog-types/import-project-circuits/index.ts","webpack://discrelog/./src/dialogs/renderer.tsx","webpack://discrelog/./src/elements/definitions/index.ts","webpack://discrelog/./src/elements/definitions/integrated-circuits/index.tsx","webpack://discrelog/./src/elements/definitions/integrated-circuits/utils.ts","webpack://discrelog/./src/elements/definitions/interaction/index.ts","webpack://discrelog/./src/elements/definitions/interaction/momentary.tsx","webpack://discrelog/./src/elements/definitions/interaction/toggle.tsx","webpack://discrelog/./src/elements/definitions/logic/and.tsx","webpack://discrelog/./src/elements/definitions/logic/buffer.tsx","webpack://discrelog/./src/elements/definitions/logic/index.ts","webpack://discrelog/./src/elements/definitions/logic/nand.tsx","webpack://discrelog/./src/elements/definitions/logic/nor.tsx","webpack://discrelog/./src/elements/definitions/logic/not.tsx","webpack://discrelog/./src/elements/definitions/logic/or.tsx","webpack://discrelog/./src/elements/definitions/logic/xor.tsx","webpack://discrelog/./src/elements/definitions/output/index.ts","webpack://discrelog/./src/elements/definitions/output/led.ts","webpack://discrelog/./src/elements/definitions/output/seg7.ts","webpack://discrelog/./src/elements/definitions/pins/high.tsx","webpack://discrelog/./src/elements/definitions/pins/index.ts","webpack://discrelog/./src/elements/definitions/pins/input.tsx","webpack://discrelog/./src/elements/definitions/pins/output.tsx","webpack://discrelog/./src/elements/types/element-production.ts","webpack://discrelog/./src/elements/visuals/IntegratedCircuitElementVisual.tsx","webpack://discrelog/./src/elements/visuals/MomentaryInteractionElementVisual.tsx","webpack://discrelog/./src/elements/visuals/ShapePathElementVisual.tsx","webpack://discrelog/./src/elements/visuals/ToggleInteractionElementVisual.tsx","webpack://discrelog/./src/elements/visuals/index.tsx","webpack://discrelog/./src/elements/visuals/static-element-visual.tsx","webpack://discrelog/./src/env.ts","webpack://discrelog/./src/evolvers/constants.ts","webpack://discrelog/./src/evolvers/definitions/index.ts","webpack://discrelog/./src/evolvers/definitions/input-momentary.ts","webpack://discrelog/./src/evolvers/definitions/input-toggle.ts","webpack://discrelog/./src/evolvers/definitions/logic-and.ts","webpack://discrelog/./src/evolvers/definitions/logic-buffer.ts","webpack://discrelog/./src/evolvers/definitions/logic-nand.ts","webpack://discrelog/./src/evolvers/definitions/logic-nor.ts","webpack://discrelog/./src/evolvers/definitions/logic-not.ts","webpack://discrelog/./src/evolvers/definitions/logic-or.ts","webpack://discrelog/./src/evolvers/definitions/logic-xor.ts","webpack://discrelog/./src/evolvers/definitions/output-led.ts","webpack://discrelog/./src/evolvers/definitions/output-seg7.ts","webpack://discrelog/./src/evolvers/definitions/pin-high.ts","webpack://discrelog/./src/evolvers/index.ts","webpack://discrelog/./src/examples/4_bit_alu/index.ts","webpack://discrelog/./src/examples/latches_adders/index.ts","webpack://discrelog/./src/geometry.ts","webpack://discrelog/./src/history.ts","webpack://discrelog/./src/hooks/useAction.ts","webpack://discrelog/./src/hooks/useArrayState.ts","webpack://discrelog/./src/hooks/useComponentBounds.ts","webpack://discrelog/./src/hooks/useMouseDragDetector.ts","webpack://discrelog/./src/hooks/useNativeEvent.ts","webpack://discrelog/./src/hooks/useOutsideMouseEvent.ts","webpack://discrelog/./src/hooks/useQuerySelector.ts","webpack://discrelog/./src/hooks/useRefValue.ts","webpack://discrelog/./src/hooks/useSelector.ts","webpack://discrelog/./src/index.tsx","webpack://discrelog/./src/modifier-keys.ts","webpack://discrelog/./src/pages/HomePage/HomePage.tsx","webpack://discrelog/./src/pages/HomePage/index.ts","webpack://discrelog/./src/pages/ProjectEditorPage/ProjectEditorPage.tsx","webpack://discrelog/./src/pages/ProjectEditorPage/components/EditMenu.tsx","webpack://discrelog/./src/pages/ProjectEditorPage/components/FileMenu.tsx","webpack://discrelog/./src/pages/ProjectEditorPage/components/HelpMenu.tsx","webpack://discrelog/./src/pages/ProjectEditorPage/components/ProjectEditorTitleBar/ProjectEditorTitleBar.tsx","webpack://discrelog/./src/pages/ProjectEditorPage/components/ProjectEditorTitleBar/index.ts","webpack://discrelog/./src/pages/ProjectEditorPage/components/SimControls/SimControls.tsx","webpack://discrelog/./src/pages/ProjectEditorPage/components/SimControls/index.ts","webpack://discrelog/./src/pages/ProjectEditorPage/components/ViewMenu.tsx","webpack://discrelog/./src/pages/ProjectEditorPage/index.ts","webpack://discrelog/./src/pages/ProjectEditorPage/windows/CircuitEditorWindow/CircuitEditorWindow.tsx","webpack://discrelog/./src/pages/ProjectEditorPage/windows/CircuitEditorWindow/index.ts","webpack://discrelog/./src/pages/ProjectEditorPage/windows/CircuitEditorWindow/keymap.ts","webpack://discrelog/./src/pages/ProjectEditorPage/windows/CircuitEditorWindow/tessel-window.ts","webpack://discrelog/./src/pages/ProjectEditorPage/windows/CircuitsTreeWindow/CircuitsTreeWindow.tsx","webpack://discrelog/./src/pages/ProjectEditorPage/windows/CircuitsTreeWindow/ids.ts","webpack://discrelog/./src/pages/ProjectEditorPage/windows/CircuitsTreeWindow/index.ts","webpack://discrelog/./src/pages/ProjectEditorPage/windows/ElementTrayWindow/ElementTrayWindow.tsx","webpack://discrelog/./src/pages/ProjectEditorPage/windows/ElementTrayWindow/index.ts","webpack://discrelog/./src/pages/ProjectImporterPage/ProjectImporterPage.tsx","webpack://discrelog/./src/pages/ProjectImporterPage/index.ts","webpack://discrelog/./src/project-mutation-actions.ts","webpack://discrelog/./src/router.tsx","webpack://discrelog/./src/runtime-env.ts","webpack://discrelog/./src/selection-mode.ts","webpack://discrelog/./src/services/autosave/api.ts","webpack://discrelog/./src/services/autosave/saga/index.ts","webpack://discrelog/./src/services/autosave/saga/project-mutate.ts","webpack://discrelog/./src/services/autosave/saga/project-reset.ts","webpack://discrelog/./src/services/circuit-editor-drag/reducer/drag-abort.ts","webpack://discrelog/./src/services/circuit-editor-drag/reducer/drag-continue.ts","webpack://discrelog/./src/services/circuit-editor-drag/reducer/drag-end.ts","webpack://discrelog/./src/services/circuit-editor-drag/reducer/drag-start-element.ts","webpack://discrelog/./src/services/circuit-editor-drag/reducer/drag-start-select.ts","webpack://discrelog/./src/services/circuit-editor-drag/reducer/drag-start-wire-joint.ts","webpack://discrelog/./src/services/circuit-editor-drag/reducer/drag-start-wire-segment.ts","webpack://discrelog/./src/services/circuit-editor-drag/reducer/drag-start-wire.ts","webpack://discrelog/./src/services/circuit-editor-drag/reducer/index.ts","webpack://discrelog/./src/services/circuit-editor-drag/reducer/mouse-leave.ts","webpack://discrelog/./src/services/circuit-editor-drag/selectors/drag-move.ts","webpack://discrelog/./src/services/circuit-editor-drag/selectors/drag-select.ts","webpack://discrelog/./src/services/circuit-editor-drag/selectors/drag-wire.ts","webpack://discrelog/./src/services/circuit-editor-drag/selectors/drag.ts","webpack://discrelog/./src/services/circuit-editor-drag/selectors/snap.ts","webpack://discrelog/./src/services/circuit-editor-drag/state.ts","webpack://discrelog/./src/services/circuit-editor-drag/utils.ts","webpack://discrelog/./src/services/circuit-editors/constants.ts","webpack://discrelog/./src/services/circuit-editors/reducer/circuit-delete.ts","webpack://discrelog/./src/services/circuit-editors/reducer/editor-focus.ts","webpack://discrelog/./src/services/circuit-editors/reducer/index.ts","webpack://discrelog/./src/services/circuit-editors/reducer/project-new.ts","webpack://discrelog/./src/services/circuit-editors/reducer/view-circuit.ts","webpack://discrelog/./src/services/circuit-editors/selectors/editor.ts","webpack://discrelog/./src/services/circuit-editors/state.ts","webpack://discrelog/./src/services/circuit-editors/utils.ts","webpack://discrelog/./src/services/circuit-graph/reducer/circuit-add.ts","webpack://discrelog/./src/services/circuit-graph/reducer/circuit-delete.ts","webpack://discrelog/./src/services/circuit-graph/reducer/element-add.ts","webpack://discrelog/./src/services/circuit-graph/reducer/element-delete.ts","webpack://discrelog/./src/services/circuit-graph/reducer/element-rename.ts","webpack://discrelog/./src/services/circuit-graph/reducer/errors/WireOperationError.ts","webpack://discrelog/./src/services/circuit-graph/reducer/index.ts","webpack://discrelog/./src/services/circuit-graph/reducer/operations/element-delete.ts","webpack://discrelog/./src/services/circuit-graph/reducer/operations/wire-joint-merge-or-delete.ts","webpack://discrelog/./src/services/circuit-graph/reducer/operations/wire-segment-delete.ts","webpack://discrelog/./src/services/circuit-graph/reducer/primitives/wire-create.ts","webpack://discrelog/./src/services/circuit-graph/reducer/primitives/wire-joint-insert.ts","webpack://discrelog/./src/services/circuit-graph/reducer/primitives/wire-joint-remove.ts","webpack://discrelog/./src/services/circuit-graph/reducer/primitives/wire-merge.ts","webpack://discrelog/./src/services/circuit-graph/reducer/primitives/wire-remove.ts","webpack://discrelog/./src/services/circuit-graph/reducer/primitives/wire-segment-add-joint.ts","webpack://discrelog/./src/services/circuit-graph/reducer/primitives/wire-segment-insert.ts","webpack://discrelog/./src/services/circuit-graph/reducer/primitives/wire-segment-merge.ts","webpack://discrelog/./src/services/circuit-graph/reducer/primitives/wire-segment-remove.ts","webpack://discrelog/./src/services/circuit-graph/reducer/primitives/wire-split.ts","webpack://discrelog/./src/services/circuit-graph/reducer/project-new.ts","webpack://discrelog/./src/services/circuit-graph/reducer/wire-connect.ts","webpack://discrelog/./src/services/circuit-graph/reducer/wire-hydrate.ts","webpack://discrelog/./src/services/circuit-graph/reducer/wire-insert-joint.ts","webpack://discrelog/./src/services/circuit-graph/reducer/wire-joint-delete.ts","webpack://discrelog/./src/services/circuit-graph/reducer/wire-joint-move.ts","webpack://discrelog/./src/services/circuit-graph/reducer/wire-segment-delete.ts","webpack://discrelog/./src/services/circuit-graph/reducer/wire-segment-set-line.ts","webpack://discrelog/./src/services/circuit-graph/selectors/circuits.ts","webpack://discrelog/./src/services/circuit-graph/selectors/connections.ts","webpack://discrelog/./src/services/circuit-graph/selectors/element-def.ts","webpack://discrelog/./src/services/circuit-graph/selectors/elements.ts","webpack://discrelog/./src/services/circuit-graph/selectors/lines.ts","webpack://discrelog/./src/services/circuit-graph/selectors/pins.ts","webpack://discrelog/./src/services/circuit-graph/selectors/wire-positions.ts","webpack://discrelog/./src/services/circuit-graph/selectors/wires.ts","webpack://discrelog/./src/services/circuit-graph/state.ts","webpack://discrelog/./src/services/circuit-graph/types.ts","webpack://discrelog/./src/services/circuit-graph/utils.ts","webpack://discrelog/./src/services/circuit-layout/reducer/element-add.ts","webpack://discrelog/./src/services/circuit-layout/reducer/element-delete.ts","webpack://discrelog/./src/services/circuit-layout/reducer/element-move.ts","webpack://discrelog/./src/services/circuit-layout/reducer/index.ts","webpack://discrelog/./src/services/circuit-layout/reducer/project-new.ts","webpack://discrelog/./src/services/circuit-layout/selectors/element-bounds.ts","webpack://discrelog/./src/services/circuit-layout/selectors/element-pin-positions.ts","webpack://discrelog/./src/services/circuit-layout/selectors/element-positions.ts","webpack://discrelog/./src/services/circuit-layout/selectors/field.ts","webpack://discrelog/./src/services/circuit-layout/state.ts","webpack://discrelog/./src/services/circuit-layout/utils.ts","webpack://discrelog/./src/services/circuit-properties/reducer/circuit-add.ts","webpack://discrelog/./src/services/circuit-properties/reducer/circuit-delete.ts","webpack://discrelog/./src/services/circuit-properties/reducer/circuit-rename.ts","webpack://discrelog/./src/services/circuit-properties/reducer/index.ts","webpack://discrelog/./src/services/circuit-properties/reducer/project-new.ts","webpack://discrelog/./src/services/circuit-properties/selectors/circuits.ts","webpack://discrelog/./src/services/circuit-properties/state.ts","webpack://discrelog/./src/services/circuit-properties/utils.ts","webpack://discrelog/./src/services/circuits/constants.ts","webpack://discrelog/./src/services/circuits/reducer/circuit-import.ts","webpack://discrelog/./src/services/circuits/reducer/index.ts","webpack://discrelog/./src/services/clipboard/reducer/clipboard-copy.ts","webpack://discrelog/./src/services/clipboard/reducer/clipboard-paste.ts","webpack://discrelog/./src/services/clipboard/reducer/index.ts","webpack://discrelog/./src/services/clipboard/selectors/clipboard.ts","webpack://discrelog/./src/services/clipboard/state.ts","webpack://discrelog/./src/services/clipboard/utils.ts","webpack://discrelog/./src/services/dialog/api.ts","webpack://discrelog/./src/services/dialog/reducer/dialog-response-accept.ts","webpack://discrelog/./src/services/dialog/reducer/dialog-response-cancel.ts","webpack://discrelog/./src/services/dialog/reducer/dialog-show.ts","webpack://discrelog/./src/services/dialog/reducer/index.ts","webpack://discrelog/./src/services/dialog/selectors/dialog.ts","webpack://discrelog/./src/services/dialog/state.ts","webpack://discrelog/./src/services/dialog/utils.ts","webpack://discrelog/./src/services/element-types/selectors/element-types.ts","webpack://discrelog/./src/services/examples/examples.ts","webpack://discrelog/./src/services/examples/saga/example-load.ts","webpack://discrelog/./src/services/examples/saga/index.ts","webpack://discrelog/./src/services/project/reducer/index.ts","webpack://discrelog/./src/services/project/reducer/project-modified.ts","webpack://discrelog/./src/services/project/reducer/project-new.ts","webpack://discrelog/./src/services/project/reducer/project-receive.ts","webpack://discrelog/./src/services/project/reducer/project-rename.ts","webpack://discrelog/./src/services/project/reducer/project-save-success.ts","webpack://discrelog/./src/services/project/saga/index.ts","webpack://discrelog/./src/services/project/saga/page-navigate-editor.ts","webpack://discrelog/./src/services/project/saga/project-export-link.ts","webpack://discrelog/./src/services/project/saga/project-import-circuits.ts","webpack://discrelog/./src/services/project/saga/project-import-link.ts","webpack://discrelog/./src/services/project/saga/project-load.ts","webpack://discrelog/./src/services/project/saga/project-new.ts","webpack://discrelog/./src/services/project/saga/project-restore-previous.ts","webpack://discrelog/./src/services/project/saga/project-save.ts","webpack://discrelog/./src/services/project/selectors/project.ts","webpack://discrelog/./src/services/project/state.ts","webpack://discrelog/./src/services/project/utils.ts","webpack://discrelog/./src/services/reducer.ts","webpack://discrelog/./src/services/saga.ts","webpack://discrelog/./src/services/savedata/api.ts","webpack://discrelog/./src/services/savedata/errors.ts","webpack://discrelog/./src/services/savedata/types.ts","webpack://discrelog/./src/services/selection/reducer/element-delete.ts","webpack://discrelog/./src/services/selection/reducer/index.ts","webpack://discrelog/./src/services/selection/reducer/project-new.ts","webpack://discrelog/./src/services/selection/reducer/select-all.ts","webpack://discrelog/./src/services/selection/reducer/select-clear.ts","webpack://discrelog/./src/services/selection/reducer/select-elements.ts","webpack://discrelog/./src/services/selection/reducer/select-region.ts","webpack://discrelog/./src/services/selection/reducer/select-wire-joints.ts","webpack://discrelog/./src/services/selection/reducer/select-wire-segments.ts","webpack://discrelog/./src/services/selection/reducer/selection-align-to-grid.ts","webpack://discrelog/./src/services/selection/reducer/selection-copy.ts","webpack://discrelog/./src/services/selection/reducer/selection-delete.ts","webpack://discrelog/./src/services/selection/reducer/selection-move.ts","webpack://discrelog/./src/services/selection/reducer/wire-joint-delete.ts","webpack://discrelog/./src/services/selection/selectors/selection.ts","webpack://discrelog/./src/services/selection/state.ts","webpack://discrelog/./src/services/selection/utils.ts","webpack://discrelog/./src/services/service-state-utils.ts","webpack://discrelog/./src/services/simulator-control/reducers/circuit-graph-invalidated.ts","webpack://discrelog/./src/services/simulator-control/reducers/index.ts","webpack://discrelog/./src/services/simulator-control/reducers/sim-pause.ts","webpack://discrelog/./src/services/simulator-control/reducers/sim-start.ts","webpack://discrelog/./src/services/simulator-control/reducers/sim-step.ts","webpack://discrelog/./src/services/simulator-control/reducers/sim-stop.ts","webpack://discrelog/./src/services/simulator-control/saga/index.ts","webpack://discrelog/./src/services/simulator-control/saga/mode-run.ts","webpack://discrelog/./src/services/simulator-control/selectors/run.ts","webpack://discrelog/./src/services/simulator-control/state.ts","webpack://discrelog/./src/services/simulator-control/utils.ts","webpack://discrelog/./src/services/simulator-graph/graph-production.ts","webpack://discrelog/./src/services/simulator-graph/selectors/connections.ts","webpack://discrelog/./src/services/simulator-graph/selectors/elements.ts","webpack://discrelog/./src/services/simulator-graph/selectors/graph.ts","webpack://discrelog/./src/services/simulator-graph/types.ts","webpack://discrelog/./src/services/simulator-graph/utils.ts","webpack://discrelog/./src/services/simulator/reducer/circuit-graph-invalidated.ts","webpack://discrelog/./src/services/simulator/reducer/element-interact.ts","webpack://discrelog/./src/services/simulator/reducer/index.ts","webpack://discrelog/./src/services/simulator/reducer/sim-start.ts","webpack://discrelog/./src/services/simulator/reducer/sim-step.ts","webpack://discrelog/./src/services/simulator/reducer/sim-stop.ts","webpack://discrelog/./src/services/simulator/reducer/sim-tick.ts","webpack://discrelog/./src/services/simulator/reducer/utils.ts","webpack://discrelog/./src/services/simulator/selectors/elements.ts","webpack://discrelog/./src/services/simulator/selectors/performance.ts","webpack://discrelog/./src/services/simulator/state.ts","webpack://discrelog/./src/services/simulator/utils.ts","webpack://discrelog/./src/services/state.ts","webpack://discrelog/./src/services/tutorial/reducer/index.ts","webpack://discrelog/./src/services/tutorial/reducer/tutorial-annotate.ts","webpack://discrelog/./src/services/tutorial/reducer/tutorial-dismiss.ts","webpack://discrelog/./src/services/tutorial/reducer/tutorial-start.ts","webpack://discrelog/./src/services/tutorial/saga/index.ts","webpack://discrelog/./src/services/tutorial/saga/tutorials.ts","webpack://discrelog/./src/services/tutorial/saga/tutorials/basic.ts","webpack://discrelog/./src/services/tutorial/saga/tutorials/circuits.ts","webpack://discrelog/./src/services/tutorial/saga/tutorials/utils.ts","webpack://discrelog/./src/services/tutorial/selectors/tutorial.ts","webpack://discrelog/./src/services/tutorial/state.ts","webpack://discrelog/./src/services/tutorial/utils.ts","webpack://discrelog/./src/services/ui-layout/reducer/circuit-delete.ts","webpack://discrelog/./src/services/ui-layout/reducer/index.ts","webpack://discrelog/./src/services/ui-layout/reducer/layout-rearrange.ts","webpack://discrelog/./src/services/ui-layout/reducer/project-new.ts","webpack://discrelog/./src/services/ui-layout/reducer/view-circuit.ts","webpack://discrelog/./src/services/ui-layout/reducer/view-reset.ts","webpack://discrelog/./src/services/ui-layout/selectors/layout.ts","webpack://discrelog/./src/services/ui-layout/state.ts","webpack://discrelog/./src/services/ui-layout/utils.ts","webpack://discrelog/./src/services/ui-settings/reducer/index.ts","webpack://discrelog/./src/services/ui-settings/reducer/view-element-names.ts","webpack://discrelog/./src/services/ui-settings/selectors/element-name.ts","webpack://discrelog/./src/services/ui-settings/state.ts","webpack://discrelog/./src/services/ui-settings/utils.ts","webpack://discrelog/./src/store/devtool-sanitizer.ts","webpack://discrelog/./src/store/index.ts","webpack://discrelog/./src/store/priorities.ts","webpack://discrelog/./src/store/reducer.ts","webpack://discrelog/./src/store/saga.ts","webpack://discrelog/./src/store/state.ts","webpack://discrelog/./src/store/store.ts","webpack://discrelog/./src/store/utils.ts","webpack://discrelog/./src/styles/index.ts","webpack://discrelog/./src/svg.ts","webpack://discrelog/./src/undo/reducer/capture-undo-state.ts","webpack://discrelog/./src/undo/reducer/index.ts","webpack://discrelog/./src/undo/reducer/redo.ts","webpack://discrelog/./src/undo/reducer/undo.ts","webpack://discrelog/./src/undo/selectors.ts","webpack://discrelog/./src/undo/state.ts","webpack://discrelog/./src/undo/utils.ts","webpack://discrelog/./src/utils.ts","webpack://discrelog//home/runner/work/discrelog/discrelog/src/examples|sync|/index\\.ts$/"],"names":["ACTION_CIRCUIT_ADD","addCircuit","circuitName","circuitId","edit","type","payload","action","ACTION_CIRCUIT_DELETE","deleteCircuit","ACTION_CIRCUIT_EDITOR_DRAG_ABORT","circuitEditorDragAbort","ACTION_CIRCUIT_EDITOR_DRAG_CONTINUE","circuitEditorDragContinue","p","modifierKeys","editorId","dragPos","ACTION_CIRCUIT_EDITOR_DRAG_END","circuitEditorDragEnd","point","ACTION_CIRCUIT_EDITOR_DRAG_START_ELEMENT","circuitEditorDragStartElement","elementId","ACTION_CIRCUIT_EDITOR_DRAG_START_SELECT","circuitEditorDragStartSelect","ACTION_CIRCUIT_EDITOR_DRAG_START_WIRE_JOINT","circuitEditorDragStartWireJoint","wireId","jointId","CIRCUIT_EDITOR_DRAG_START_WIRE_SEGMENT_ACTION","circuitEditorDragStartWireSegment","wireSegmentId","CIRCUIT_EDITOR_DRAG_START_WIRE_ACTION","circuitEditorDragStartWire","target","ACTION_CIRCUIT_EDITOR_MOUSE_LEAVE","circuitEditorMouseLeave","ACTION_CIRCUIT_EDITOR_RECEIVE_FOCUS","circuitEditorReceiveFocus","ACTION_CIRCUIT_IMPORT","importCircuits","saveData","circuitIds","asArray","ACTION_CIRCUIT_RENAME","renameCircuit","ACTION_COPY_ELEMENTS","copyElements","elementIds","Array","isArray","ACTION_PASTE","paste","opts","ACTION_DIALOG_RESPONSE_ACCEPT","acceptDialog","result","ACTION_DIALOG_RESPONSE_CANCEL","cancelDialog","ACTION_DIALOG_SHOW","showDialog","dialogType","data","ACTION_ELEMENT_ADD","addElement","elementType","position","ACTION_ELEMENT_DELETE","deleteElement","ACTION_ELEMENT_INTERACT","interactElement","elementIdPath","ACTION_ELEMENT_MOVE","moveElement","relative","snapMode","ACTION_ELEMENT_RENAME","renameElement","elementName","ACTION_EXAMPLE_LOAD","loadExample","exampleKey","ACTION_INIT","doInit","ACTION_LAYOUT_REARRANGE","rearrangeLayout","layout","ACTION_PAGE_NAVIGATE","navigatePage","page","ACTION_PROJECT_EXPORT_LINK","exportProjectLink","ACTION_PROJECT_IMPORT_CIRCUITS","importCircuitFromProject","ACTION_PROJECT_IMPORT_LINK","importProjectLink","ACTION_PROJECT_LOAD","loadProject","ACTION_PROJECT_NEW","newProject","ACTION_PROJECT_RECEIVE","receiveProject","fileName","ACTION_PROJECT_RENAME","renameProject","projectName","ACTION_PROJECT_RESTORE_PREVIOUS","restorePreviousProject","ACTION_PROJECT_SAVE","saveProject","ACTION_PROJECT_SAVE_SUCCESS","saveProjectSuccess","ACTION_REDO","redo","ACTION_SELECT_CLEAR","selectAll","clearSelection","ACTION_SELECT_ELEMENTS","selectElements","mode","ACTION_SELECT_REGION","selectRegion","region","ACTION_SELECT_WIRE_JOINTS","selectWireJoints","jointIds","ACTION_SELECT_WIRE_SEGMENTS","selectWireSegments","segmentId","segmentIds","ACTION_SELECTION_ALIGN_TO_GRID","selectionAlignToGrid","ACTION_SELECTION_COPY","copySelection","ACTION_SELECTION_DELETE","deleteSelection","ACTION_SELECTION_MOVE","moveSelection","offsetX","offsetY","ACTION_SIM_PAUSE","pauseSim","ACTION_SIM_START","startSim","ACTION_SIM_STEP","stepSim","ACTION_SIM_STOP","stopSim","ACTION_SIM_TICK","tickSim","tickCount","ACTION_TUTORIAL_ANNOTATE","tutorialAnnotate","annotations","ACTION_TUTORIAL_DISMISS","tutorialDismiss","ACTION_TUTORIAL_NEXT","tutorialNext","ACTION_TUTORIAL_START","tutorialStart","tutorial","ACTION_UNDO","undo","ACTION_VIEW_CIRCUIT","viewCircuit","newWindowId","newWindow","VIEW_ELEMENT_NAMES","viewElementNames","VIEW_RESET","resetView","ACTION_WIRE_CONNECT","wireConnect","from","to","ACTION_WIRE_HYDRATE","hydrateWire","settings","ACTION_WIRE_JOINT_DELETE","deleteWireJoint","ACTION_WIRE_JOINT_MOVE","moveWireJoint","ACTION_WIRE_SEGMENT_DELETE","deleteWireSegment","ACTION_WIRE_SEGMENT_INSERT_JOINT","wireSegmentInsertJoint","jointPos","ACTION_WIRE_SEGMENT_SET_LINE","wireSegmentSetLine","lineId","value","a","b","length","every","v","i","EmptyArray","Object","freeze","array","index","newArray","slice","push","AtomicTextInput","React","forwardRef","className","autoFocus","defaultValue","onChange","onBeginEdit","onCommit","onCancel","onBlur","onKeyUp","ref","editValue","setEditValue","useState","onInputChange","useCallback","e","onInputKeyUp","defaultPrevented","key","preventDefault","onInputBlur","content","placement","children","anchorEl","useRef","open","setOpen","onClick","onClose","MenuCloseContextProvider","current","isOpen","onRequestClose","variant","size","disabled","props","cls","checked","isSimActive","isSimActiveSelector","CircuitEditorProvider","id","getCircuitEditorHtmlId","ViewportContextProvider","ZoomingCircuitFieldSurface","sizeRef","width","componentWidth","height","componentHeight","useComponentBounds","zoomFactor","zoom","useViewportContext","fieldRect","fieldRectSelector","fieldWidth","fieldHeight","calcSize","Math","max","onWheel","ctrlKey","deltaY","stopPropagation","useNativeEvent","passive","style","dispatch","useDispatch","svgRef","scalerRef","onMouseDown","focus","onMouseLeave","isDraggingNewElement","dragRef","useDrop","accept","NEW_ELEMENT_DRAG_OBJECT","collect","monitor","isOver","tabIndex","transform","FieldSvgElementProvider","fieldPosition","onAlignToGrid","useAction","canCopy","selectedElementIdsSelector","onCopy","canPaste","canPasteSelector","onPaste","pastePosition","onDelete","secondary","keyboardCommandModifier","DragMovePreviewLayer","memo","useCircuitEditor","isDragging","state","isEditorDraggingSelector","dragMoveElementPositionsByElementId","dragMoveElementPositionsByIdSelector","elementTypesByElementId","elementTypesByElementIdSelector","dragMoveJointPositionsByJointId","dragMoveJointPositionsByIdSelector","ghostLines","dragMoveGhostLinesSelector","movingElements","x","y","movingJoints","cx","cy","r","stroke","fill","ghostLineElements","map","start","end","x1","y1","x2","y2","strokeWidth","opacity","DragNewElementLayer","snap","gridElementSnapSelector","getMouseCoords","useMouseCoords","counterScale","dragType","setDragType","setDragPos","dropTargetWouldRecurse","circuitWouldRecurseSelector","elementTypeToCircuitId","dropRef","hover","item","isNewElementDragObject","pos","getClientOffset","coords","drop","snapPoint","snapDragPos","counterScaledSize","dragWireJointPositionSelector","dragStart","dragWireSegmentStartPositionSelector","dragEnd","dragWireSegmentEndPositionSelector","dragJointGhostLinesSelector","isDraggingSelector","getCoords","useEventMouseCoords","onMouseMove","buttons","getModifiers","onMouseUp","Element","openContextMenu","renderContextMenu","useContextMenu","def","elementDefinitionFromElementIdSelector","s","elementPositionFromElementIdSelector","evolverState","evolverStateFromCircuitElementIdSelector","isSelected","isElementSelectedFromElementIdSelector","button","modifiers","selectionMode","getSelectMode","onContextMenu","onDragStart","originalPoint","startTracking","useMouseDragDetector","body","rect","hitRect","visual","getNodeVisualElement","p1","ZeroPoint","p2","undefined","getElementHtmlId","NodeName","elementFieldDisplayNameFromElementId","textScale","textYOffset","fontSize","textAnchor","elementNameOrDefaultFromElementIdSelector","elementTypeFromElementIdSelector","elementCircuitId","isRenaming","setIsRenaming","onRename","onRenameCancel","onRenameCommit","onOpenCircuitInNewWindow","label","fontWeight","isEditing","onRequestEdit","ElementPin","pinId","highlight","setHighlight","elementPinPositionFromElementPinSelector","direction","pinDirectionFromElementPinSelector","isDragTargetPin","isPinDragWireTarget","pin","onMouseEnter","pinVisual","d","describeArc","getElementPinHtmlId","ElementPins","pins","elements","keys","ElementPinsLayer","elementIdsFromCircuitIdSelector","EmptyState","ElementVisual","elementDefinitionFromTypeSelector","ElementsLayer","DragSelectLayer","selectionRect","selectionRectSelector","ctrlMetaKey","shiftKey","strokeDasharray","GridBackground","gridId","gridSize","xmlns","patternUnits","wireSegmentIdFromElementPinSelector","SetLineIdMenu","candidates","wireLineCandidatesForSegmentId","name","selected","wireSegmentIds","wireSegmentIdsFromWireIdSelector","wireJointIds","wireJointIdsFromWireIdSelector","segmentElements","jointElements","getWireHtmlId","wireJointPositionFromJointIdSelector","isJointSelectedFromJointIdSelector","isDragTargetJoint","isJointDragWireTarget","mouseOver","setMouseOver","pageX","pageY","newSegmentArc","getWireJointHtmlId","onMouseOver","shapeRendering","fillRule","isMouseGesturePending","insertJointPos","setInsertJointPos","isSegmentSelectedFromSegmentIdSelector","isPowered","wireSegmentPoweredSelector","isWired","segmentIsWiredSelector","dragTargetWireLength","segmentDragWireTargetOffset","gridJointSnapSelector","segmentType","wireSegmentTypeFromSegmentIdSelector","startPos","startPositionForWireSegmentId","endPos","endPositionForWireSegmentId","lineVector","normalize","pointSubtract","dragConnectPos","pointAdd","scale","dotProduct","dotPos","abs","snapValue","WiresLayer","wireIdsFromCircuitIdSelector","nullRef","fieldSvgElementContext","createContext","ContextProvider","Provider","context","useMemo","useContext","getFieldCoord","circuitEditorContext","editorState","circuitEditorStateFromIdSelector","viewportContext","setZoomFactor","delta","newElementDragObject","field","scaler","ctm","getScreenCTM","pt","createSVGPoint","translated","matrixTransform","inverse","elementPath","Fragment","CircuitNodeBreadcrumbItem","CircuitNodeBreadcrumbRootItem","rootCircuitName","circuitNameFromIdSelector","ROOT_CIRCUIT_ID","ContextMenu","getBoundingClientRect","left","top","right","bottom","ctxPos","setCtxPos","onCloseContextMenu","title","acceptText","cancelText","onAccept","footer","dialogTypeSelector","DialogComponent","getDialogComponent","textClassname","inputClassname","inputRef","onSpanDoubleClick","useEffect","select","onDoubleClick","icon","requestMenuClose","useMenuCloseContext","onEditableCommit","MenuCloseContext","onItemClick","createPortal","FocusOn","onClickOutside","onEscapeKey","AutoFocusInside","document","noop","popoverRef","setPopoverRef","attributes","styles","usePopper","usePopoverChild","popoverChildren","registerPopoverChild","unregisterPopoverChild","useArrayState","insideRefs","useOutsideMouseEvent","PopoverChildContextProvider","popper","zIndex","noopPopoverChildContext","PopoverChildContext","usePopoverChildContext","contextRegister","contextUnregister","parent","parentRegister","parentUnregister","element","providedContext","popoverContext","ctxRef","items","onItemSelected","SelectionListItem","rootItem","renderWindow","onLayoutChange","moveWindow","newRoot","movingElement","fpSetByArray","newItem","division","first","second","Error","pruneEmptyTesselValues","closeWindow","path","TesselInteractionProvider","tesselPathContext","useTesselPath","TesselPathProvider","pathKey","newPath","tesselInteractionContext","TesselDropCapture","tesselPath","useTesselInteraction","dropPos","setDropPos","onHover","shallow","isTesselWindowDragObject","xPercent","yPercent","onDrop","draggingPath","arrayEquals","draggingSelf","TESSEL_WINDOW_DRAG_OBJECT","getItem","dropMarkerClassname","divRef","normalizeTesselItem","isTesselWindow","isTesselSplit","ZeroRect","toJSON","onChangePercentage","pointerCaptureRef","directionRef","useRefValue","onChangePercentageRef","onHandlePointerMove","parentRect","parentElement","percentage","isNaN","leading","onPointerMove","persist","onPointerDown","setPointerCapture","pointerId","onPointerUp","releasePointerCapture","applyDivisionChange","percent","absolute","isTesselPercentDivision","firstPercent","isTesselFixedDivision","secondSize","firstSize","divisionValue","sizeDirection","normalizeTesselDivision","onFirstLayoutChange","onSecondLayoutChange","firstFix","secondFix","firstSizeDiv","secondSizeDiv","onCloseWindow","dragSourceRef","useDrag","tesselWindowDragObject","Tessel","windowId","walk","doWork","normalized","filterTesselValues","filter","replace","newValue","titlebar","arrowRef","setArrowRef","popperStyles","options","offset","role","arrow","isTutorialActive","isTutorialActiveSelector","tutorialAnnotations","tutorialAnnotationsSelector","annotation","Annotation","selector","css","join","message","useQuerySelector","scrollIntoView","actions","actionElements","onCloseDialog","dialogData","dialogDataSelector","projectLink","navigator","clipboard","writeText","catch","dialogFooter","ExportProjectLinkDialog","ExportProjectLinkDialogType","ImportCircuitCheckbox","selectedIds","onSetSelectedIds","indexOf","setSelectedIds","onAcceptDialog","circuits","ImportProjectCircuitsDialog","ImportProjectCircuitsDialogType","unknownDialog","elementDefinitionSources","IntegratedCircuitDefinitionSource","createSelector","elementIdsByCircuitIdSelector","local","circuitGraph","elementPositionsByElementIdSelector","circuitLayout","circuitNamesByIdSelector","circuitProperties","elementIdsByCircuitId","elementPositionsByElementId","circuitNamesById","substr","pinElementIds","startsWith","inputPinIds","outputPinIds","pinElementId","circuitPinPosition","componentProps","circuitIdToElementType","category","displayName","elementProduction","boundsToRect","getICBorderPath","trayComponent","component","pinIndex","inputPinCount","outputPinCount","InteractionDefinitionSources","OUT","hitPath","andElementDefinition","createStaticElementVisual","A","B","bufferElementDefinition","IN","LogicElementDefinitionSources","nandElementDefinition","norElementDefinition","notElementDefinition","orElementDefinition","xorElementDefinition","OutputElementDefinitionSources","ledElementDefinition","createShapePathVisual","OFFSET","createSeg","points","seg7ElementDefinition","C","D","E","F","G","pinHighElementDefinition","PinElementDefinitionSources","pinInputElementDefinition","pinOutputElementDefinition","simProduction","evolverType","IntegratedCircuitElementVisual","elementNamesById","elementNamesByElementIdSelector","borderPath","onViewCircuit","inputPins","dominantBaseline","outputPins","MomentaryInteractionElementVisual","circuitIdPath","outputs","elementOutputsFromCircuitElementIdSelector","onPress","onRelease","onColor","onTextColor","ShapePathElementVisual","shapePath","normalizeVisuals","ShapePathElementTrayItem","viewBox","TrayShapePadding","ToggleInteractionElementVisual","offColor","toggleState","NamedElementComponents","ErrorComponent","componentName","elementProps","Component","TrayComponentPadding","isDev","rootUrlBuilder","URL","window","location","origin","pathname","rootUrl","toString","appVersion","EVOLVER_RESPONSE_TIME","asEvolverDef","module","default","EvolverDefinitionsByType","inputMomentaryEvolverDefinition","interact","transitions","tickOffset","valuesByPin","round","defaultToggleState","inputToggleEvolverDefinition","nextState","assign","evolve","logicAndEvolverDefinition","_","inputs","logicBufferEvolverDefinition","logicNandEvolverDefinition","logicNorEvolverDefinition","logicNotEvolverDefinition","logicOrEvolverDefinition","logicXorEvolverDefinition","outputSeg7EvolverDefinition","fourBitAlu","getSave","latchesAndAdders","magnitude","sqrt","m","normalizeRectangle","args","min","bounds","r1","r2","lineStart","lineEnd","threshhold","axialGridSnap","lineSub","lineLength","Number","interceptDistance","interceptPoint","lineToDotDist","interceptLineLengthDistance","interceptLinePointDistance","history","createHashHistory","actionCreator","preBind","setItems","addItem","removeItem","setSize","useLayoutEffect","observer","el","observe","disconnect","dragThreshold","isTracking","setTracking","mouseDownRef","addEventListener","removeEventListener","listener","listenTarget","onOutsideEvent","when","onEvent","isTruthy","contains","setElement","MutationObserver","querySelector","childList","subtree","useSelector","rootEl","getElementById","ReactDOM","render","DndProvider","backend","HTML5Backend","Router","store","MODIFIER_KEYS_NONE","altKey","metaKey","keyboardIsMac","onNavigateHome","onNewProject","onLoadProject","onLoadPreviousProject","hasPreviousSave","hasAutosave","root","panel","href","WindowsById","windowProps","layoutSelector","classList","canUndo","canUndoSelector","onUndo","canRedo","canRedoSelector","onRedo","onSaveProject","onImportProjectCircuits","onExportLink","TutorialsMenu","onBasicsTutorial","onCircuitsTutorial","projectNameSelector","projectModifiedSelector","isActive","isPaused","isSimPausedSelector","avgMsecsPerTick","averageMsecsPerTickSelector","onPlayClick","useClickAction","onStopClick","onPauseClick","onStepClick","onMuteMouseDown","toFixed","ElementNamesMenu","elementNameModeSelector","onAlwaysVisible","onNamedOnly","onHidden","onResetView","FillParent","keyHandlers","createEventDispatcher","KEYMAP_SIM_STEP","KEYMAP_SELECT_ALL","KEYMAP_COPY","KEYMAP_PASTE","KEYMAP_DELETE","KEYMAP_UNDO","KEYMAP_REDO","onViewActivated","HotKeys","keyMap","handlers","onFocus","keymap","CIRCUIT_FIELD_WINDOW_ID","circuitEditorTesselWindow","circuitEditorId","onCircuitSelected","listItems","getCircuitListItemHtmlId","CircuitTreeNodeCircuitLabel","circuitstree","CircuitTreeContextMenu","onRequestRename","onCancelRename","newName","onOpenNewWindow","onNewCircuit","CategoryNames","logic","elementDefinitions","elementDefinitionsSelector","categories","search","setSearch","onSearchChanged","toLowerCase","placeholder","TrayCategory","TrayElement","liRef","setLiRef","showTooltip","setShowTooltip","onShowTooltip","onHideTooltip","elementTrayVisual","TrayComponent","NodeTrayErrorComponent","onMouseOut","importError","setImportError","searchParams","URLSearchParams","get","PROJECT_MUTATION_ACTIONS","PROJECT_RESET_ACTIONS","Switch","Route","exact","test","os","defaultMode","chosenIds","chosen","concat","save","localStorage","setItem","JSON","stringify","str","Boolean","parse","fork","handleProjectMutateAction","createSave","storeAutosave","console","error","takeEvery","handleProjectNewAction","deleteAutosave","createCircuitEditorDragReducer","isCircuitEditorDragAbortAction","defaultCircuitEditorDragServiceState","isCircuitEditorDragContinueAction","dragEndEditorId","dragModifierKeys","defaultAppState","isCircuitEditorDragEndAction","dragMode","services","circuitEditorDrag","dragState","dragStartEditorId","circuitIdForEditorIdSelector","executeSelectDrag","moveBy","hasElements","selection","selectedElementIds","applyGridElementSnapSelector","applyGridJointSnapSelector","executeMoveDrag","dragStartTarget","dragEndTarget","dragWireEndTargetByPointSelector","executeWireDrag","dragWireId","dragWireSegmentId","executeWireNewJointDrag","executeDragMode","fpSet","isCircuitEditorDragStartElementAction","isCircuitEditorDragStartSelectAction","isCircuitEditorDragStartWireJointAction","rootState","isCircuitEditorDragStartWireSegmentAction","segmentInsertLength","isCircuitEditorDragStartWireAction","concatReducers","isCircuitEditorMouseLeaveAction","cachedDragMoveOffset","dragMoveOffsetSelector","gridSnap","pointEquals","elementPositionsById","dragMoveElementPositionsById","selectedJointIds","selectedJointIdsSelector","JointPositionsById","wireJointPositionByJointIdSelector","dragMoveJointPositionsById","immutableEmptyArray","getPinPosition","getJointPosition","getSegmentGhostLine","segment","outputPin","inputPin","jointAId","jointBId","visitedSegments","Set","segmentIdsForJointIdSelector","has","add","ghostLine","wireSegmentsById","createCircuitEditorDragSelector","dragModeSelector","dragStartSelector","dragEndSelector","getDragTargetPoint","dragService","snapToGrid","targetPin","pinPositionsByPinIdByElementId","elementPinPositionsByPinIdByElementIdSelector","pinPositionsByPinId","pinIds","pinPosition","elementPinFromPoint","jointTarget","wireIds","wireJointFromPoint","segmentTarget","intercept","linePointIntercept","wireSegmentFromPoint","dragWireEndTargetSelector","dragWireSegmentStartPositionCache","dragWireSegmentEndPositionCache","endTarget","jointPosition","createServiceReducerCreator","createServiceSelectorCreator","DEFAULT_CIRCUIT_EDITOR_ID","createCircuitEditorsReducer","isDeleteCircuitAction","keepIds","circucitEditorsById","activeEditorId","isCircuitEditorReceiveFocusAction","isNewProjectAction","defaultCircuitEditorServiceState","appState","isViewCircuitAction","circuitIdsSelector","targetWindowId","findActiveEditorId","createCircuitEditorsSelector","activeCircuitEditorIdSelector","activeCircuitEditorStateSelector","activeCircuitIdSelector","editorIdsFromCircuitIdSelector","_defaultState","createCircuitGraphReducer","isAddCircuitAction","wireIdsByCircuitId","remainingCircuitIds","elementIdsForCircuit","circuitElementType","removedElementIds","elementsById","reducerPriority","PRIORITY_PRE","isAddElementAction","isDeleteElementAction","isRenameElementAction","trim","WireOperationError","super","this","setPrototypeOf","prototype","graphReducer","remainingElementIds","circuitElementIds","removedIcPins","elementPinsFromPinElementSelector","removedSegmentIds","isSegmentForRemovedElement","removedPin","elementPinEquals","isSegmentForRemovedPin","reduce","wireIdFromWireJointIdSelector","jointedSegmentIds","getSegmentIdsFromJoint","wireSegmentMerge","wireIdFromWireSegmentIdSelector","wire","wiresByWireId","removedSegment","wireRemove","wireSegmentRemove","removeOrphanJoints","wireSplit","wireJointPositionsByJointId","setWireLineIds","segId","seg","targetWireId","subjectWireId","targetCircuitId","circuitIdForWireIdSelector","subjectCircuitId","targetWire","subjectWire","targetInputs","targetOutputs","collectWireLineIds","subjectInputs","subjectOutputs","sourceLineId","remainingWireIds","wiresInCircuit","segmentSplitLength","splitJointId","targetSegment","segmentJointPos","wireJointInsert","firstSegmentId","secondSegmentId","firstSegment","secondSegment","deleteWireIfLastSegment","wireSegmentInsert","segmentId1","segmentId2","wireId1","wireId2","seg1","seg2","inputSegment","outputSegment","wireJointRemove","bridge","alt","bridgeRemainderJoint","getJointIdsFromSegment","pop","altRemainderJoint","remainingSegmentIds","joints","remainingSegmentId","oldWireId","collectSegment","forEach","collectJoint","collectWireNetwork","oldWire","remainingWireSegmentIds","remainingWireJointIds","lineIdMap","isOutputWireSegment","isInputWireSegment","newWireId","wireCreate","defaultCircuitGraphServiceState","targetToParts","circuitIdFromElementIdSelector","circuitIdFromWireJointIdSelector","isWireConnectAction","unchangedState","fromState","fromJointId","fromPin","fromCircuitId","toState","toJointId","toPin","toCircuitId","newState","fromDirection","toDirection","inputPinIsWiredSelector","wirePins","fromWireId","toWireId","mergedState","wireMerge","wireJoints","inputLineIds","outputLineIds","defaultLineIdFromWiredPin","wireJointToPin","isHydrateWireAction","wireSegments","newSegments","wireSegment","newJoints","joint","isWireSegmentInsertJointAction","newJointId","isWireJointDeleteAction","wireJointMergeOrDelete","isWireJointMoveAction","movedJointPositions","movedP","isWireSegmentDeleteAction","isWireSegmentSetLineAction","circuitIdForElementIdSelector","createCircuitGraphSelector","targetCircuitNodeType","some","targetContainingCircuitId","connectionsSelector","wiresById","segmentsById","connections","segments","isInputOutputWireSegment","input","elementsByElementIdSelector","elementIdsSelector","elementFromElementIdSelector","elementIdsFromTypeSelector","desiredType","EmptyElementIds","elementNameFromElementIdSelector","elementPin","outputElementPinFromLineId","pinNameFromElementPinSelector","excludeSegment","lineHasOutput","inputElementPinsFromLineId","orderBy","pinDef","elementOutputSourcesByPinIdFromElementIdSelector","outputConnections","connection","icElementType","icElementId","wireSegmentByWireSegmentIdSelector","wiresByWireIdSelector","wireIdsSelector","wireSegmentsByWireSegmentIdSelector","wireSegmentsSelector","segmentsBySegmentId","wireJointIdsByWireIdSelector","wireSegmentHasInput","wireJointIdsFromCircuitIdSelector","wireSegmentIdsFromCircuitIdSelector","wireSegmentSourcesBySegmentIdSelector","sources","collectSegmentSources","segmentSources","addSegmentSource","traceSegmentToInput","entryJointId","connectedSegmentIds","hasAtLeastOneInput","connectedSegmentId","source","resolveOutputPin","icId","icPath","getOutputPinForInputPin","sourcePin","resolved","elementOutputFromCircuitElementPinSelector","getPoweredStateFromOutputPin","createCircuitLayoutReducer","priorityBefore","isMoveElementAction","movedElementPositions","fieldReducer","defaultCircuitLayoutServiceState","elementRectsByIdSelector","elementDefinitionsByTypeSelector","positionsById","elementDefsByType","elementTypesById","offsetRectangle","elementPinPositionsByPinIdByElementId","elementPinPositionsByPinId","elementPosition","relPinPosition","elementPinPositions","createCircuitLayoutSelector","MinFieldRect","elementRectsById","jointsById","union","createCircuitPropertiesReducer","circuitNamesByCircuitId","isRenameCircuitAction","trimmedName","createCircuitPropertiesSelector","defaultCircuitPropertiesServiceState","isImportCircuitAction","importCircuitsFromSave","createClipboardReducer","isCopyElementsAction","copyIds","rootPosition","elementIsSelected","clipboardElements","clipboardPasteOrigin","isPasteAction","pasteIds","sourceId","output","targetCopyId","targetId","clipboardReducer","createClipboardSelector","defaultClipboardServiceState","put","response","take","createDialogReducer","isAcceptDialogAction","defaultDialogServiceState","isCancelDialogAction","isShowDialogAction","createDialogSelector","elementDefinitionsDerivedStateSelector","derivedState","resolveSources","defs","defsByType","definitions","requireExample","examples","log","exampleLoad","example","createProjectReducer","isProjectMutationAction","projectModified","isReceiveProjectAction","loadSave","projectLoadState","isRenameProjectAction","isSaveProjectSuccessAction","onPageNavigate","projectLoadStateSelector","saveText","encoded","deflate","encodedText","Buffer","urlData","encodeURIComponent","createHref","call","displayDialogSaga","handleProjectImportCircuits","file","contents","text","bind","scanCircuitIds","targetCircuitIds","elementIcCircuitId","onImportLink","dewrapped","decodeURIComponent","deflated","inflate","lastIndexOf","warn","handleNewProject","handleProjectRestorePrevious","previous","loadAutosave","showSaveFilePicker","saveNativeFileApi","saveLegacy","fileHandle","suggestedName","types","description","getFile","writable","createWritable","write","close","blob","Blob","saveAs","createProjectSelector","defaultProjectServiceState","reducer","jointPositionsByJointId","wires","validateSaveData","SaveFormatError","existingCircuits","c","importElements","code","createSelectionReducer","selectedConnectionIds","selectionReducer","defaultSelectionServiceState","isSelectAllAction","selectedWireJointIds","selectedWireSegmentIds","isClearSelectionAction","isSelectElementsAction","combineSelection","combineExtraniousSelection","isSelectRegionAction","rects","chosenElementIds","rectIntersectsRect","jointPositions","chosenJointIds","pointIntersectsRect","isSelectWireJointsAction","isSelectWireSegmentsAction","isSelectionAlignToGridAction","elementPositions","elementPos","snappedPos","isCopySelectionAction","selectedElements","isDeleteSelectionAction","isMoveSelectionAction","elementSnapMode","jointSnapMode","PRIORITY_POST","createSelectionSelector","selectedElementsByIdSelector","service","appSelector","createSimulatorControlReducer","simulatorReducer","isPauseSimAction","runMode","isStartSimAction","isStepSimAction","isStopSimAction","defaultSimulatorControlServiceState","ticksPerSecond","handleRunSim","isSimRunningSelector","waitNextTick","tps","ticksPerSecondSelector","timeToWait","ceil","endWait","performance","now","timestamp","animationFrameChannel","takeLeading","eventChannel","active","awaitAnimationFrame","requestAnimationFrame","buffers","sliding","createSimulatorControlSelector","EMPTY_PRODUCTION","evolversById","evolverIdsByElementId","inputElementPinsByCircuitPinId","outputElementPinsByCircuitPinId","produceCircuitGraph","dependencies","inputElementIds","outputElementIds","elementInputPinsByPinIdByElementId","elementOutputPinsByPinIdByElementId","productionResult","produceEvolver","outputSimPin","inputSimPins","outputEvolver","evolverId","outputsByOutputPin","outputsByPin","inputSimPin","inputsByPin","elementDefsByElementType","production","normalizeSimProduction","subElementIds","produceElementNode","circuitProuction","produceCircuitNode","EmptyIdArray","EmptyPinInputs","outputEvolverIdsFromEvolverIdSelector","rootCircuitGraphSelector","evolver","inputPinsByPinIdFromEvolverIdSelector","evolverIdsByElementIdSelector","evolverIdFromElementIdSelector","getEvolverIdFromElementIdPath","evolverIdsSelector","evolverTypeFromEvolverId","evolverDefFromEvolverId","EmptySimulatorGraph","walkSimulatorElementIdToCircuitElementIdMap","visit","subCircuitIds","currentPath","evolverIdPath","evolverIdItem","createSimulatorReducer","defaultSimulatorServiceState","isInteractElementAction","evolverStatesByEvolverId","evolutionResult","applyEvolutionResult","simInit","initialized","simulator","simState","tick","transitionWindows","windowTick","isTickSimAction","simTick","updateTime","lastTickProcessingTimeMs","tickWindow","readonlyState","transitionIds","evolverOutputValuesByEvolverId","updatedEvolverIds","tid","valuesByOutputPin","transitionsById","updates","collectNodeTransitions","inputSourcesByPin","inputConn","sourcePinId","collectNodeInputs","transition","defaultMerger","transitionMerger","transitionTick","isElementTransition","transitionId","removeTransitionById","removeTransitionsByEvolverId","newTransition","splice","addTransition","applyOutputTransition","transitionWindowIndex","transitionWindow","tickWindowTransitionIndex","dropIndexFp","outputValues","initNode","endTick","saftyCount","shift","elementOutputsBySimulatorElementId","createSimulatorSelector","_defaultServiceState","circuitEditors","dialog","project","simulatorControl","defaultTutorialServiceState","uiLayout","defaultUiLayoutServiceState","uiSettings","defaultUiSettingsState","defaultServicesState","createTutorialReducer","isTutorialAnnotateAction","annotatedElements","isTutorialDismissAction","preTutorialState","isTutorialStartAction","activeTutorial","handleStartTutorial","tutorialNextMessage","gateId","addElementTutorialStep","switchId","ledId","waitElementConnected","waitFilterAction","addCircuitAction","inputPinId","additionalSelectors","outputPinId1","outputPinId2","trayMessage","fieldMessage","bufferId","notId","icType","led1Id","led2Id","isConnected","connInputPin","connOutputPin","actionType","addedElementType","createTutorialSelector","createUiLayoutReducer","removedWindowIds","isCircuitEditorTesselWindow","isRearrangeLayoutAction","inserted","findAndReplaceTesselValue","isResetViewAction","createUiLayoutSelector","createUiSettingsReducer","isViewElementNamesAction","elementNameMode","createUiSettingsSelector","actionsBlacklist","PRIORITY_SAVE","priority","weight","finalizeReducerList","_defaultAppState","defaultUndoState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","actionSanitizer","stateSanitizer","compose","sagaMiddleware","middleware","createStore","applyMiddleware","run","reducers","finalizedList","polarToCartesian","centerX","centerY","radius","angleInDegrees","angleInRadians","PI","cos","sin","startAngle","endAngle","largeArcFlag","isUndoAction","isRedoAction","undoState","capturedUndoState","captureUndoState","undoStack","redoStack","stackItem","serviceStates","viewCircuitId","UndoServicesStateKeys","activeEditor","firstPaths","String","lastPath","newData","clone","rollingTarget","obj","values","webpackContext","req","webpackContextResolve","__webpack_require__","o","resolve","exports"],"mappings":"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","file":"client.4eafe183a2947ec94093.bundle.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"button--Ui3Hp\",\"disabled\":\"disabled--bnSiC\",\"button--size-small\":\"button--size-small--289kb\",\"button--variant-primary\":\"button--variant-primary--2qpAa\",\"button--variant-text\":\"button--variant-text--2oReW\",\"button--variant-menu\":\"button--variant-menu--3lEZ1\"};","// extracted by mini-css-extract-plugin\nexport default {\"checkbox-span\":\"checkbox-span--1EWGs\"};","// extracted by mini-css-extract-plugin\nexport default {\"circuit-editor\":\"circuit-editor--2jFUa\",\"circuit-editor-scrollarea\":\"circuit-editor-scrollarea--12k0x\"};","// extracted by mini-css-extract-plugin\nexport default {\"circuit-field-svg\":\"circuit-field-svg--o7YIn\"};","// extracted by mini-css-extract-plugin\nexport default {\"element-pin-output\":\"element-pin-output--1jFy-\",\"highlight\":\"highlight--Q2iLD\",\"is-drag-target\":\"is-drag-target--1NYuw\",\"element-pin-input\":\"element-pin-input--1urBY\"};","// extracted by mini-css-extract-plugin\nexport default {\"wire-joint--interactor\":\"wire-joint--interactor--3h5o4\",\"selected\":\"selected--2L-Hh\",\"mouse-detector\":\"mouse-detector--23NpN\",\"is-drag-target\":\"is-drag-target--1nP1l\"};","// extracted by mini-css-extract-plugin\nexport default {\"wire-segment\":\"wire-segment--3ENBk\",\"unwired\":\"unwired--2GWhN\",\"powered\":\"powered--I4EaN\",\"drag-wire-target\":\"drag-wire-target--20uzz\",\"selected\":\"selected--1ceWg\"};","// extracted by mini-css-extract-plugin\nexport default {\"circuit-element-breadcrumb\":\"circuit-element-breadcrumb--1CYNC\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"dialog--1eQi6\",\"dialog-title\":\"dialog-title--1DWsL\",\"dialog-footer\":\"dialog-footer--2hYdr\"};","// extracted by mini-css-extract-plugin\nexport default {\"icon\":\"icon--3Vly6\"};","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"menu--3E86w\",\"menu-item\":\"menu-item--2dcyN\",\"menu-item--disabled\":\"menu-item--disabled--RJJTK\",\"menu-item-content\":\"menu-item-content--3s1DG\",\"menu-item-text\":\"menu-item-text--1F41V\",\"menu-item-secondary\":\"menu-item-secondary--2PJLF\",\"menu-item-icon\":\"menu-item-icon--JTlha\",\"menu-divider\":\"menu-divider--1QPGp\"};","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"modal--25LBN\",\"modal-content\":\"modal-content--1H0T_\"};","// extracted by mini-css-extract-plugin\nexport default {\"selection-list\":\"selection-list--3yujH\",\"selection-list-item\":\"selection-list-item--errDr\",\"selection-list-item--selected\":\"selection-list-item--selected--3MkqB\",\"selection-list-item-content\":\"selection-list-item-content--321YU\"};","// extracted by mini-css-extract-plugin\nexport default {\"tessel\":\"tessel--2Q3Xd\",\"tessel-content\":\"tessel-content--3-kEA\",\"tessel-drop-capture\":\"tessel-drop-capture--3TbuI\",\"tessel-drop-capture--dragging\":\"tessel-drop-capture--dragging--Ihwyz\",\"tessel-drop-marker\":\"tessel-drop-marker--1cqr2\",\"drop-left\":\"drop-left--wqP1V\",\"drop-right\":\"drop-right--2MyGz\",\"drop-top\":\"drop-top--1S0co\",\"drop-bottom\":\"drop-bottom--2f330\",\"tessel-split\":\"tessel-split--2gDs5\",\"tessel-split--row\":\"tessel-split--row--2fC6o\",\"tessel-split--column\":\"tessel-split--column--1Hl4C\",\"tessel-window\":\"tessel-window--1qDgp\",\"tessel-window-titlebar\":\"tessel-window-titlebar--uHBdn\",\"tessel-window-title\":\"tessel-window-title--2v0hT\",\"tessel-window-controls\":\"tessel-window-controls--3i3ou\",\"tessel-window-controls-close\":\"tessel-window-controls-close--2O8Zs\",\"tessel-window-content\":\"tessel-window-content--sOnG-\"};","// extracted by mini-css-extract-plugin\nexport default {\"titlebar\":\"titlebar--3-TCE\",\"titlebar-heading\":\"titlebar-heading--3RAl1\",\"titlebar-divider\":\"titlebar-divider--Wl_27\",\"titlebar-title\":\"titlebar-title--HXGig\"};","// extracted by mini-css-extract-plugin\nexport default {\"tooltip\":\"tooltip--2yxRI\",\"tooltip-arrow\":\"tooltip-arrow--2mJMo\"};","// extracted by mini-css-extract-plugin\nexport default {\"tutorial\":\"tutorial--jscuw\",\"tutorial-tooltip\":\"tutorial-tooltip--3gwli\",\"tutorial-tooltip-actions\":\"tutorial-tooltip-actions--ENkg1\",\"tutorial-backdrop\":\"tutorial-backdrop--3I0WR\"};","// extracted by mini-css-extract-plugin\nexport default {\"export-link-dialog-link-container\":\"export-link-dialog-link-container--phwUA\",\"export-link-dialog-link\":\"export-link-dialog-link--1dOdK\"};","// extracted by mini-css-extract-plugin\nexport default {\"import-project-circuits-list\":\"import-project-circuits-list--2ODCz\"};","// extracted by mini-css-extract-plugin\nexport default {\"element-interaction-toggle\":\"element-interaction-toggle--1eeE2\",\"element-interaction-momentary\":\"element-interaction-momentary--12_iQ\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"root--2DezE\",\"content\":\"content--2cUqW\",\"footer\":\"footer--lY1Go\",\"panel\":\"panel--uw2LA\",\"button-container\":\"button-container--3zi4e\"};","// extracted by mini-css-extract-plugin\nexport default {\"project-titlebar-controls\":\"project-titlebar-controls--1c1Qn\"};","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"button--2N_ol\",\"button-play\":\"button-play--1vWfq\",\"button-stop\":\"button-stop--1dD4-\",\"button-pause\":\"button-pause--1UoHJ\",\"selected\":\"selected--Ev2q8\",\"button-step\":\"button-step--3Fat5\",\"button--disabled\":\"button--disabled--3caLv\",\"simrate\":\"simrate--NKBi_\"};","// extracted by mini-css-extract-plugin\nexport default {\"circuitstree\":\"circuitstree--QeaI9\",\"circuitstree-item\":\"circuitstree-item--22dzG\"};","// extracted by mini-css-extract-plugin\nexport default {\"element-tray\":\"element-tray--2OmR6\",\"element-tray-search\":\"element-tray-search--2PYcp\",\"element-tray-element-container\":\"element-tray-element-container--1jqen\",\"element-tray-element-list\":\"element-tray-element-list--3RXLA\",\"element-tray-category\":\"element-tray-category--3K8sv\",\"element-tray-item\":\"element-tray-item--32gev\",\"element-tray-item-preview\":\"element-tray-item-preview--12k1m\"};","// extracted by mini-css-extract-plugin\nexport default {\"flex-row\":\"flex-row--sHjOY\",\"flex-column\":\"flex-column--2LT64\",\"flex-space-around\":\"flex-space-around--1tYx1\",\"flex-reverse\":\"flex-reverse--2Vn7L\",\"flexitem-grow\":\"flexitem-grow--7seUA\",\"flexitem-shrink\":\"flexitem-shrink--2U9EV\",\"flexitem-fix\":\"flexitem-fix--1ARxk\"};","// extracted by mini-css-extract-plugin\nexport default {\"text-unselectable\":\"text-unselectable--2tvXe\"};","// extracted by mini-css-extract-plugin\nexport default {\"fill-parent\":\"fill-parent--3pw6U\"};","import { AnyAction } from \"redux\";\nimport { v4 as uuidV4 } from \"uuid\";\n\nexport const ACTION_CIRCUIT_ADD = \"@circuit/add\" as const;\nexport interface NewCircuitOpts {\n  circuitName?: string;\n  circuitId?: string;\n  edit?: boolean;\n}\nexport const addCircuit = ({\n  circuitName,\n  circuitId,\n  edit,\n}: NewCircuitOpts = {}) => ({\n  type: ACTION_CIRCUIT_ADD,\n  payload: { circuitId: circuitId ?? uuidV4(), circuitName, edit },\n});\nexport type AddCircuitAction = ReturnType<typeof addCircuit>;\nexport function isAddCircuitAction(\n  action: AnyAction\n): action is AddCircuitAction {\n  return action.type === ACTION_CIRCUIT_ADD;\n}\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_CIRCUIT_DELETE = \"@circuit/delete\" as const;\nexport const deleteCircuit = (circuitId: string) => ({\n  type: ACTION_CIRCUIT_DELETE,\n  payload: { circuitId },\n});\nexport type DeleteCircuitAction = ReturnType<typeof deleteCircuit>;\nexport function isDeleteCircuitAction(\n  action: AnyAction\n): action is DeleteCircuitAction {\n  return action.type === ACTION_CIRCUIT_DELETE;\n}\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_CIRCUIT_EDITOR_DRAG_ABORT = \"@circuit-editor/drag/abort\" as const;\nexport const circuitEditorDragAbort = () => ({\n  type: ACTION_CIRCUIT_EDITOR_DRAG_ABORT,\n});\nexport type CircuitEditorDragAbortAction = ReturnType<\n  typeof circuitEditorDragAbort\n>;\nexport function isCircuitEditorDragAbortAction(\n  action: AnyAction\n): action is CircuitEditorDragAbortAction {\n  return action.type === ACTION_CIRCUIT_EDITOR_DRAG_ABORT;\n}\n","import { AnyAction } from \"redux\";\nimport { Point } from \"@/geometry\";\nimport { ModifierKeys } from \"@/modifier-keys\";\n\nexport const ACTION_CIRCUIT_EDITOR_DRAG_CONTINUE = \"@circuit-editor/drag/continue\" as const;\nexport const circuitEditorDragContinue = (\n  p: Point,\n  modifierKeys: ModifierKeys,\n  editorId: string\n) => ({\n  type: ACTION_CIRCUIT_EDITOR_DRAG_CONTINUE,\n  payload: { dragPos: p, modifierKeys, editorId },\n});\nexport type CircuitEditorDragContinueAction = ReturnType<\n  typeof circuitEditorDragContinue\n>;\nexport function isCircuitEditorDragContinueAction(\n  action: AnyAction\n): action is CircuitEditorDragContinueAction {\n  return action.type === ACTION_CIRCUIT_EDITOR_DRAG_CONTINUE;\n}\n","import { AnyAction } from \"redux\";\n\nimport { Point } from \"@/geometry\";\nimport { ModifierKeys } from \"@/modifier-keys\";\n\nexport const ACTION_CIRCUIT_EDITOR_DRAG_END = \"@circuit-editor/drag/end\" as const;\nexport const circuitEditorDragEnd = (\n  point: Point,\n  modifierKeys: ModifierKeys,\n  editorId: string\n) => ({\n  type: ACTION_CIRCUIT_EDITOR_DRAG_END,\n  payload: { ...point, modifierKeys, editorId },\n});\nexport type CircuitEditorDragEndAction = ReturnType<\n  typeof circuitEditorDragEnd\n>;\nexport function isCircuitEditorDragEndAction(\n  action: AnyAction\n): action is CircuitEditorDragEndAction {\n  return action.type === ACTION_CIRCUIT_EDITOR_DRAG_END;\n}\n","import { AnyAction } from \"redux\";\n\nimport { Point } from \"@/geometry\";\nimport { ModifierKeys } from \"@/modifier-keys\";\n\nexport const ACTION_CIRCUIT_EDITOR_DRAG_START_ELEMENT = \"@field/drag/start/element\" as const;\nexport const circuitEditorDragStartElement = (\n  elementId: string,\n  p: Point,\n  modifierKeys: ModifierKeys,\n  editorId: string\n) => ({\n  type: ACTION_CIRCUIT_EDITOR_DRAG_START_ELEMENT,\n  payload: {\n    ...p,\n    elementId,\n    modifierKeys,\n    editorId,\n  },\n});\nexport type CircuitEditorDragStartElementAction = ReturnType<\n  typeof circuitEditorDragStartElement\n>;\nexport function isCircuitEditorDragStartElementAction(\n  action: AnyAction\n): action is CircuitEditorDragStartElementAction {\n  return action.type === ACTION_CIRCUIT_EDITOR_DRAG_START_ELEMENT;\n}\n","import { AnyAction } from \"redux\";\n\nimport { Point } from \"@/geometry\";\nimport { ModifierKeys } from \"@/modifier-keys\";\n\nexport const ACTION_CIRCUIT_EDITOR_DRAG_START_SELECT = \"@circuit-editor/drag/start/select\" as const;\nexport const circuitEditorDragStartSelect = (\n  p: Point,\n  modifierKeys: ModifierKeys,\n  editorId: string\n) => ({\n  type: ACTION_CIRCUIT_EDITOR_DRAG_START_SELECT,\n  payload: {\n    ...p,\n    modifierKeys,\n    editorId,\n  },\n});\nexport type CircuitEditorDragStartSelectAction = ReturnType<\n  typeof circuitEditorDragStartSelect\n>;\nexport function isCircuitEditorDragStartSelectAction(\n  action: AnyAction\n): action is CircuitEditorDragStartSelectAction {\n  return action.type === ACTION_CIRCUIT_EDITOR_DRAG_START_SELECT;\n}\n","import { AnyAction } from \"redux\";\n\nimport { Point } from \"@/geometry\";\nimport { ModifierKeys } from \"@/modifier-keys\";\n\nexport const ACTION_CIRCUIT_EDITOR_DRAG_START_WIRE_JOINT = \"@circuit-editor/drag/start/wire-joint\" as const;\nexport const circuitEditorDragStartWireJoint = (\n  p: Point,\n  wireId: string,\n  jointId: string,\n  modifierKeys: ModifierKeys,\n  editorId: string\n) => ({\n  type: ACTION_CIRCUIT_EDITOR_DRAG_START_WIRE_JOINT,\n  payload: {\n    ...p,\n    wireId,\n    jointId,\n    modifierKeys,\n    editorId,\n  },\n});\nexport type CircuitEditorDragStartWireJointAction = ReturnType<\n  typeof circuitEditorDragStartWireJoint\n>;\nexport function isCircuitEditorDragStartWireJointAction(\n  action: AnyAction\n): action is CircuitEditorDragStartWireJointAction {\n  return action.type === ACTION_CIRCUIT_EDITOR_DRAG_START_WIRE_JOINT;\n}\n","import { AnyAction } from \"redux\";\n\nimport { Point } from \"@/geometry\";\nimport { ModifierKeys } from \"@/modifier-keys\";\n\nexport const CIRCUIT_EDITOR_DRAG_START_WIRE_SEGMENT_ACTION = \"@circuit-editor/drag/start/wire-segment\" as const;\nexport const circuitEditorDragStartWireSegment = (\n  p: Point,\n  wireId: string,\n  wireSegmentId: string,\n  modifierKeys: ModifierKeys,\n  editorId: string\n) => ({\n  type: CIRCUIT_EDITOR_DRAG_START_WIRE_SEGMENT_ACTION,\n  payload: {\n    ...p,\n    wireId,\n    wireSegmentId,\n    modifierKeys,\n    editorId,\n  },\n});\nexport type CircuitEditorDragStartWireSegmentAction = ReturnType<\n  typeof circuitEditorDragStartWireSegment\n>;\nexport function isCircuitEditorDragStartWireSegmentAction(\n  action: AnyAction\n): action is CircuitEditorDragStartWireSegmentAction {\n  return action.type === CIRCUIT_EDITOR_DRAG_START_WIRE_SEGMENT_ACTION;\n}\n","import { AnyAction } from \"redux\";\n\nimport { Point } from \"@/geometry\";\nimport { ModifierKeys } from \"@/modifier-keys\";\nimport { WireConnectTarget } from \"@/services/circuit-graph/types\";\n\nexport const CIRCUIT_EDITOR_DRAG_START_WIRE_ACTION = \"@circuit-editor/drag/start/wire\" as const;\nexport const circuitEditorDragStartWire = (\n  p: Point,\n  target: WireConnectTarget,\n  modifierKeys: ModifierKeys,\n  editorId: string\n) => ({\n  type: CIRCUIT_EDITOR_DRAG_START_WIRE_ACTION,\n  payload: {\n    ...p,\n    target,\n    modifierKeys,\n    editorId,\n  },\n});\nexport type CircuitEditorDragStartWireAction = ReturnType<\n  typeof circuitEditorDragStartWire\n>;\nexport function isCircuitEditorDragStartWireAction(\n  action: AnyAction\n): action is CircuitEditorDragStartWireAction {\n  return action.type === CIRCUIT_EDITOR_DRAG_START_WIRE_ACTION;\n}\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_CIRCUIT_EDITOR_MOUSE_LEAVE = \"@circuit-editor/mouse/leave\" as const;\nexport const circuitEditorMouseLeave = () => ({\n  type: ACTION_CIRCUIT_EDITOR_MOUSE_LEAVE,\n});\nexport type CircuitEditorMouseLeaveAction = ReturnType<\n  typeof circuitEditorMouseLeave\n>;\nexport function isCircuitEditorMouseLeaveAction(\n  action: AnyAction\n): action is CircuitEditorMouseLeaveAction {\n  return action.type === ACTION_CIRCUIT_EDITOR_MOUSE_LEAVE;\n}\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_CIRCUIT_EDITOR_RECEIVE_FOCUS = \"@circuit-editor/receive-focus\" as const;\nexport const circuitEditorReceiveFocus = (editorId: string) => ({\n  type: ACTION_CIRCUIT_EDITOR_RECEIVE_FOCUS,\n  payload: { editorId },\n});\nexport type CircuitEditorFocusAction = ReturnType<\n  typeof circuitEditorReceiveFocus\n>;\nexport function isCircuitEditorReceiveFocusAction(\n  action: AnyAction\n): action is CircuitEditorFocusAction {\n  return action.type === ACTION_CIRCUIT_EDITOR_RECEIVE_FOCUS;\n}\n","import { AnyAction } from \"redux\";\n\nimport { asArray, MaybeArray } from \"@/arrays\";\n\nimport { SaveData } from \"@/services/savedata/types\";\n\nexport const ACTION_CIRCUIT_IMPORT = \"@circuit/import\" as const;\nexport const importCircuits = (\n  circuitId: MaybeArray<string>,\n  saveData: SaveData\n) => ({\n  type: ACTION_CIRCUIT_IMPORT,\n  payload: { circuitIds: asArray(circuitId), saveData },\n});\nexport type ImportCircuitAction = ReturnType<typeof importCircuits>;\nexport function isImportCircuitAction(\n  action: AnyAction\n): action is ImportCircuitAction {\n  return action.type === ACTION_CIRCUIT_IMPORT;\n}\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_CIRCUIT_RENAME = \"@circuit/rename\" as const;\nexport const renameCircuit = (circuitId: string, circuitName: string) => ({\n  type: ACTION_CIRCUIT_RENAME,\n  payload: { circuitId, circuitName },\n});\nexport type RenameCircuitAction = ReturnType<typeof renameCircuit>;\nexport function isRenameCircuitAction(\n  action: AnyAction\n): action is RenameCircuitAction {\n  return action.type === ACTION_CIRCUIT_RENAME;\n}\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_COPY_ELEMENTS = \"@clipboard/copy-elements\" as const;\nexport const copyElements = (elementId: string | string[]) => ({\n  type: ACTION_COPY_ELEMENTS,\n  payload: {\n    elementIds: Array.isArray(elementId) ? elementId : [elementId],\n  },\n});\nexport type CopyElementsAction = ReturnType<typeof copyElements>;\nexport function isCopyElementsAction(\n  action: AnyAction\n): action is CopyElementsAction {\n  return action.type === ACTION_COPY_ELEMENTS;\n}\n","import { Point } from \"@/geometry\";\nimport { AnyAction } from \"redux\";\n\nexport interface PasteOpts {\n  pastePosition?: Point;\n}\nexport const ACTION_PASTE = \"@clipboard/paste\" as const;\nexport const paste = (opts: PasteOpts = {}) => ({\n  type: ACTION_PASTE,\n  payload: { ...opts },\n});\nexport type PasteAction = ReturnType<typeof paste>;\nexport function isPasteAction(action: AnyAction): action is PasteAction {\n  return action.type === ACTION_PASTE;\n}\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_DIALOG_RESPONSE_ACCEPT = \"@dialog/response/accept\" as const;\nexport const acceptDialog = (result: any) => ({\n  type: ACTION_DIALOG_RESPONSE_ACCEPT,\n  payload: { result },\n});\nexport type AcceptDialogAction = ReturnType<typeof acceptDialog>;\nexport function isAcceptDialogAction(\n  action: AnyAction\n): action is AcceptDialogAction {\n  return action.type === ACTION_DIALOG_RESPONSE_ACCEPT;\n}\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_DIALOG_RESPONSE_CANCEL = \"@dialog/response/cancel\" as const;\nexport const cancelDialog = () => ({\n  type: ACTION_DIALOG_RESPONSE_CANCEL,\n});\nexport type CancelDialogAction = ReturnType<typeof cancelDialog>;\nexport function isCancelDialogAction(\n  action: AnyAction\n): action is CancelDialogAction {\n  return action.type === ACTION_DIALOG_RESPONSE_CANCEL;\n}\n","import { AnyAction } from \"redux\";\n\nimport { DialogType } from \"@/dialogs/types\";\n\nexport const ACTION_DIALOG_SHOW = \"@dialog/show\" as const;\nexport const showDialog = (dialogType: DialogType, data: any) => ({\n  type: ACTION_DIALOG_SHOW,\n  payload: { dialogType, data },\n});\nexport type ShowDialogAction = ReturnType<typeof showDialog>;\nexport function isShowDialogAction(\n  action: AnyAction\n): action is ShowDialogAction {\n  return action.type === ACTION_DIALOG_SHOW;\n}\n","import { v4 as uuidV4 } from \"uuid\";\nimport { AnyAction } from \"redux\";\n\nimport { Point } from \"@/geometry\";\n\nexport interface AddElementOptions {\n  elementId?: string;\n  elementName?: string;\n}\nexport const ACTION_ELEMENT_ADD = \"@element/add\" as const;\nexport const addElement = (\n  elementType: string,\n  circuitId: string,\n  position: Point,\n  opts?: AddElementOptions\n) => ({\n  type: ACTION_ELEMENT_ADD,\n  payload: {\n    elementId: uuidV4(),\n    elementType,\n    circuitId,\n    position,\n    ...(opts || {}),\n  },\n});\nexport type AddElementAction = ReturnType<typeof addElement>;\nexport function isAddElementAction(\n  action: AnyAction\n): action is AddElementAction {\n  return action.type === ACTION_ELEMENT_ADD;\n}\n","import { AnyAction } from \"redux\";\n\nimport { asArray, MaybeArray } from \"@/arrays\";\n\nexport const ACTION_ELEMENT_DELETE = \"@element/delete\" as const;\nexport const deleteElement = (elementId: MaybeArray<string>) => ({\n  type: ACTION_ELEMENT_DELETE,\n  payload: { elementIds: asArray(elementId) },\n});\nexport type DeleteElementAction = ReturnType<typeof deleteElement>;\nexport function isDeleteElementAction(\n  action: AnyAction\n): action is DeleteElementAction {\n  return action.type === ACTION_ELEMENT_DELETE;\n}\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_ELEMENT_INTERACT = \"@element/interact\" as const;\nexport const interactElement = (elementIdPath: string[], data?: any) => ({\n  type: ACTION_ELEMENT_INTERACT,\n  payload: { elementIdPath, data },\n});\nexport type InteractElementAction = ReturnType<typeof interactElement>;\nexport function isInteractElementAction(\n  action: AnyAction\n): action is InteractElementAction {\n  return action.type === ACTION_ELEMENT_INTERACT;\n}\n","import { AnyAction } from \"redux\";\n\nimport { asArray, MaybeArray } from \"@/arrays\";\nimport { Point } from \"@/geometry\";\n\nexport interface ElementMoveOpts {\n  relative?: boolean;\n  snapMode?: \"none\" | \"element\";\n}\nexport const ACTION_ELEMENT_MOVE = \"@element/move\" as const;\nexport const moveElement = (\n  elementId: MaybeArray<string>,\n  position: Point,\n  opts: ElementMoveOpts = {}\n) => ({\n  type: ACTION_ELEMENT_MOVE,\n  payload: {\n    elementIds: asArray(elementId),\n    position,\n    relative: opts.relative ?? false,\n    snapMode: opts.snapMode ?? \"none\",\n  },\n});\nexport type MoveElementAction = ReturnType<typeof moveElement>;\nexport function isMoveElementAction(\n  action: AnyAction\n): action is MoveElementAction {\n  return action.type === ACTION_ELEMENT_MOVE;\n}\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_ELEMENT_RENAME = \"@element/rename\" as const;\nexport const renameElement = (elementId: string, elementName: string) => ({\n  type: ACTION_ELEMENT_RENAME,\n  payload: { elementId, elementName },\n});\nexport type RenameElementAction = ReturnType<typeof renameElement>;\nexport function isRenameElementAction(\n  action: AnyAction\n): action is RenameElementAction {\n  return action.type === ACTION_ELEMENT_RENAME;\n}\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_EXAMPLE_LOAD = \"@example/load\" as const;\nexport const loadExample = (exampleKey: string) => ({\n  type: ACTION_EXAMPLE_LOAD,\n  payload: { exampleKey },\n});\nexport type LoadExampleAction = ReturnType<typeof loadExample>;\nexport function isLoadExampleAction(\n  action: AnyAction\n): action is LoadExampleAction {\n  return action.type === ACTION_EXAMPLE_LOAD;\n}\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_INIT = \"@init\";\nexport const doInit = () => ({ type: ACTION_INIT });\nexport type InitAction = ReturnType<typeof doInit>;\nexport function isInitAction(action: AnyAction): action is InitAction {\n  return action.type === ACTION_INIT;\n}\n","import { AnyAction } from \"redux\";\n\nimport { TesselValue } from \"@/components/Tessel\";\n\nexport const ACTION_LAYOUT_REARRANGE = \"@layout/rearrange\" as const;\nexport const rearrangeLayout = (layout: TesselValue) => ({\n  type: ACTION_LAYOUT_REARRANGE,\n  payload: { layout },\n});\nexport type RearrangeLayoutActionType = ReturnType<typeof rearrangeLayout>;\nexport function isRearrangeLayoutAction(\n  action: AnyAction\n): action is RearrangeLayoutActionType {\n  return action.type === ACTION_LAYOUT_REARRANGE;\n}\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_PAGE_NAVIGATE = \"@page/navigate\" as const;\nexport const navigatePage = (page: string) => ({\n  type: ACTION_PAGE_NAVIGATE,\n  payload: { page },\n});\nexport type PageNavigateAction = ReturnType<typeof navigatePage>;\nexport function isPageNavigateAction(\n  action: AnyAction\n): action is PageNavigateAction {\n  return action.type === ACTION_PAGE_NAVIGATE;\n}\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_PROJECT_EXPORT_LINK = \"@project/export-link\" as const;\nexport const exportProjectLink = () => ({\n  type: ACTION_PROJECT_EXPORT_LINK,\n});\nexport type ExportProjectLinkAction = ReturnType<typeof exportProjectLink>;\nexport function isExportProjectLinkAction(\n  action: AnyAction\n): action is ExportProjectLinkAction {\n  return action.type === ACTION_PROJECT_EXPORT_LINK;\n}\n","export const ACTION_PROJECT_IMPORT_CIRCUITS = \"@project/import-circuits\" as const;\nexport const importCircuitFromProject = () => ({\n  type: ACTION_PROJECT_IMPORT_CIRCUITS,\n});\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_PROJECT_IMPORT_LINK = \"@project/import-link\" as const;\nexport const importProjectLink = (data: string) => ({\n  type: ACTION_PROJECT_IMPORT_LINK,\n  payload: { data },\n});\nexport type ImportProjectLinkAction = ReturnType<typeof importProjectLink>;\nexport function isImportProjectLinkAction(\n  action: AnyAction\n): action is ImportProjectLinkAction {\n  return action.type === ACTION_PROJECT_IMPORT_LINK;\n}\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_PROJECT_LOAD = \"@project/load\" as const;\nexport const loadProject = () => ({\n  type: ACTION_PROJECT_LOAD,\n});\nexport type LoadProjectAction = ReturnType<typeof loadProject>;\nexport function isLoadProjectAction(\n  action: AnyAction\n): action is LoadProjectAction {\n  return action.type === ACTION_PROJECT_LOAD;\n}\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_PROJECT_NEW = \"@project/new\" as const;\nexport const newProject = () => ({\n  type: ACTION_PROJECT_NEW,\n});\nexport type NewProjectAction = ReturnType<typeof newProject>;\nexport function isNewProjectAction(\n  action: AnyAction\n): action is NewProjectAction {\n  return action.type === ACTION_PROJECT_NEW;\n}\n","import { AnyAction } from \"redux\";\n\nimport { SaveData } from \"@/services/savedata/types\";\n\nexport const ACTION_PROJECT_RECEIVE = \"@project/receive\" as const;\nexport const receiveProject = (fileName: string, saveData: SaveData) => ({\n  type: ACTION_PROJECT_RECEIVE,\n  payload: { fileName, saveData },\n});\nexport type ReceiveProjectAction = ReturnType<typeof receiveProject>;\nexport function isReceiveProjectAction(\n  action: AnyAction\n): action is ReceiveProjectAction {\n  return action.type === ACTION_PROJECT_RECEIVE;\n}\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_PROJECT_RENAME = \"@project/rename\" as const;\nexport const renameProject = (projectName: string) => ({\n  type: ACTION_PROJECT_RENAME,\n  payload: { projectName },\n});\nexport type RenameProjectAction = ReturnType<typeof renameProject>;\nexport function isRenameProjectAction(\n  action: AnyAction\n): action is RenameProjectAction {\n  return action.type === ACTION_PROJECT_RENAME;\n}\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_PROJECT_RESTORE_PREVIOUS = \"@project/restore-previous\" as const;\nexport const restorePreviousProject = () => ({\n  type: ACTION_PROJECT_RESTORE_PREVIOUS,\n});\nexport type RestorePreviousProjectAction = ReturnType<\n  typeof restorePreviousProject\n>;\nexport function isRestorePreviousProjectAction(\n  action: AnyAction\n): action is RestorePreviousProjectAction {\n  return action.type === ACTION_PROJECT_RESTORE_PREVIOUS;\n}\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_PROJECT_SAVE = \"@project/save\" as const;\nexport const saveProject = () => ({\n  type: ACTION_PROJECT_SAVE,\n});\nexport type SaveProjectAction = ReturnType<typeof saveProject>;\nexport function isSaveProjectAction(\n  action: AnyAction\n): action is SaveProjectAction {\n  return action.type === ACTION_PROJECT_SAVE;\n}\n\nexport const ACTION_PROJECT_SAVE_SUCCESS = \"@project/save:success\" as const;\nexport const saveProjectSuccess = () => ({\n  type: ACTION_PROJECT_SAVE_SUCCESS,\n});\nexport type SaveProjectSuccessAction = ReturnType<typeof saveProjectSuccess>;\nexport function isSaveProjectSuccessAction(\n  action: AnyAction\n): action is SaveProjectSuccessAction {\n  return action.type === ACTION_PROJECT_SAVE_SUCCESS;\n}\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_REDO = \"@undo/redo\" as const;\nexport const redo = () => ({\n  type: ACTION_REDO,\n});\nexport function isRedoAction(action: AnyAction) {\n  return action.type === ACTION_REDO;\n}\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_SELECT_CLEAR = \"@select/all\" as const;\nexport const selectAll = () => ({\n  type: ACTION_SELECT_CLEAR,\n});\nexport type SelectAllAction = ReturnType<typeof selectAll>;\nexport function isSelectAllAction(\n  action: AnyAction\n): action is SelectAllAction {\n  return action.type === ACTION_SELECT_CLEAR;\n}\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_SELECT_CLEAR = \"@select/clear\" as const;\nexport const clearSelection = () => ({\n  type: ACTION_SELECT_CLEAR,\n});\nexport type ClearSelectionAction = ReturnType<typeof clearSelection>;\nexport function isClearSelectionAction(\n  action: AnyAction\n): action is ClearSelectionAction {\n  return action.type === ACTION_SELECT_CLEAR;\n}\n","import { AnyAction } from \"redux\";\n\nimport { SelectionMode } from \"@/selection-mode\";\n\nexport const ACTION_SELECT_ELEMENTS = \"@select/elements\" as const;\nexport const selectElements = (\n  elementId: string | string[],\n  mode: SelectionMode = \"set\"\n) => ({\n  type: ACTION_SELECT_ELEMENTS,\n  payload: {\n    elementIds: Array.isArray(elementId) ? elementId : [elementId],\n    mode,\n  },\n});\nexport type SelectElementsAction = ReturnType<typeof selectElements>;\nexport function isSelectElementsAction(\n  action: AnyAction\n): action is SelectElementsAction {\n  return action.type === ACTION_SELECT_ELEMENTS;\n}\n","import { AnyAction } from \"redux\";\n\nimport { Rectangle } from \"@/geometry\";\nimport { SelectionMode } from \"@/selection-mode\";\n\nexport const ACTION_SELECT_REGION = \"@select/region\" as const;\nexport const selectRegion = (\n  region: Rectangle,\n  circuitId: string,\n  mode: SelectionMode = \"set\"\n) => ({\n  type: ACTION_SELECT_REGION,\n  payload: {\n    region,\n    circuitId,\n    mode,\n  },\n});\nexport type SelectRegionAction = ReturnType<typeof selectRegion>;\nexport function isSelectRegionAction(\n  action: AnyAction\n): action is SelectRegionAction {\n  return action.type === ACTION_SELECT_REGION;\n}\n","import { AnyAction } from \"redux\";\n\nimport { SelectionMode } from \"@/selection-mode\";\n\nexport const ACTION_SELECT_WIRE_JOINTS = \"@select/wire-joints\" as const;\nexport const selectWireJoints = (\n  jointId: string | string[],\n  mode: SelectionMode = \"set\"\n) => ({\n  type: ACTION_SELECT_WIRE_JOINTS,\n  payload: {\n    jointIds: Array.isArray(jointId) ? jointId : [jointId],\n    mode,\n  },\n});\nexport type SelectWireJointsAction = ReturnType<typeof selectWireJoints>;\nexport function isSelectWireJointsAction(\n  action: AnyAction\n): action is SelectWireJointsAction {\n  return action.type === ACTION_SELECT_WIRE_JOINTS;\n}\n","import { AnyAction } from \"redux\";\n\nimport { SelectionMode } from \"@/selection-mode\";\n\nexport const ACTION_SELECT_WIRE_SEGMENTS = \"@select/wire-segments\" as const;\nexport const selectWireSegments = (\n  segmentId: string | string[],\n  mode: SelectionMode = \"set\"\n) => ({\n  type: ACTION_SELECT_WIRE_SEGMENTS,\n  payload: {\n    segmentIds: Array.isArray(segmentId) ? segmentId : [segmentId],\n    mode,\n  },\n});\nexport type SelectWireSegmentsAction = ReturnType<typeof selectWireSegments>;\nexport function isSelectWireSegmentsAction(\n  action: AnyAction\n): action is SelectWireSegmentsAction {\n  return action.type === ACTION_SELECT_WIRE_SEGMENTS;\n}\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_SELECTION_ALIGN_TO_GRID = \"@selection/align-to-grid\" as const;\nexport const selectionAlignToGrid = () => ({\n  type: ACTION_SELECTION_ALIGN_TO_GRID,\n});\nexport function isSelectionAlignToGridAction(action: AnyAction): boolean {\n  return action.type === ACTION_SELECTION_ALIGN_TO_GRID;\n}\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_SELECTION_COPY = \"@selection/copy\" as const;\nexport const copySelection = () => ({\n  type: ACTION_SELECTION_COPY,\n});\nexport type CopySelectionAction = ReturnType<typeof copySelection>;\nexport function isCopySelectionAction(\n  action: AnyAction\n): action is CopySelectionAction {\n  return action.type === ACTION_SELECTION_COPY;\n}\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_SELECTION_DELETE = \"@selection/delete\" as const;\nexport const deleteSelection = () => ({\n  type: ACTION_SELECTION_DELETE,\n});\nexport type DeleteSelectionAction = ReturnType<typeof deleteSelection>;\nexport function isDeleteSelectionAction(\n  action: AnyAction\n): action is DeleteSelectionAction {\n  return action.type === ACTION_SELECTION_DELETE;\n}\n","import { AnyAction } from \"redux\";\n\nexport interface MoveSelectionOpts {\n  snapMode?: \"none\" | \"element\" | \"by-type\";\n}\nexport const ACTION_SELECTION_MOVE = \"@selection/move\" as const;\nexport const moveSelection = (\n  offsetX: number,\n  offsetY: number,\n  opts: MoveSelectionOpts = {}\n) => ({\n  type: ACTION_SELECTION_MOVE,\n  payload: { offsetX, offsetY, snapMode: opts.snapMode ?? \"none\" },\n});\nexport type MoveSelectionAction = ReturnType<typeof moveSelection>;\nexport function isMoveSelectionAction(\n  action: AnyAction\n): action is MoveSelectionAction {\n  return action.type === ACTION_SELECTION_MOVE;\n}\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_SIM_PAUSE = \"@sim/pause\" as const;\nexport const pauseSim = (mode: boolean | \"toggle\") => ({\n  type: ACTION_SIM_PAUSE,\n  payload: { mode },\n});\nexport type PauseSimAction = ReturnType<typeof pauseSim>;\nexport function isPauseSimAction(action: AnyAction): action is PauseSimAction {\n  return action.type === ACTION_SIM_PAUSE;\n}\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_SIM_START = \"@sim/start\" as const;\nexport const startSim = () => ({\n  type: ACTION_SIM_START,\n});\nexport type StartSimAction = ReturnType<typeof startSim>;\nexport function isStartSimAction(action: AnyAction): action is StartSimAction {\n  return action.type === ACTION_SIM_START;\n}\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_SIM_STEP = \"@sim/step\" as const;\nexport const stepSim = () => ({\n  type: ACTION_SIM_STEP,\n});\nexport type StepSimAction = ReturnType<typeof stepSim>;\nexport function isStepSimAction(action: AnyAction): action is StepSimAction {\n  return action.type === ACTION_SIM_STEP;\n}\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_SIM_STOP = \"@sim/stop\" as const;\nexport const stopSim = () => ({\n  type: ACTION_SIM_STOP,\n});\nexport type StartSimAction = ReturnType<typeof stopSim>;\nexport function isStopSimAction(action: AnyAction): action is StartSimAction {\n  return action.type === ACTION_SIM_STOP;\n}\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_SIM_TICK = \"@sim/tick\" as const;\nexport const tickSim = (tickCount: number) => ({\n  type: ACTION_SIM_TICK,\n  payload: { tickCount },\n});\nexport type TickSimAction = ReturnType<typeof tickSim>;\nexport function isTickSimAction(action: AnyAction): action is TickSimAction {\n  return action.type === ACTION_SIM_TICK;\n}\n","import { AnyAction } from \"redux\";\n\nimport { MaybeArray } from \"@/arrays\";\nimport { AnnotatedElement } from \"@/services/tutorial/state\";\n\nexport const ACTION_TUTORIAL_ANNOTATE = \"@tutorial/annotate\" as const;\nexport const tutorialAnnotate = (\n  annotations: MaybeArray<AnnotatedElement>\n) => ({\n  type: ACTION_TUTORIAL_ANNOTATE,\n  payload: { annotations },\n});\nexport type TutorialAnnotateAction = ReturnType<typeof tutorialAnnotate>;\nexport function isTutorialAnnotateAction(\n  action: AnyAction\n): action is TutorialAnnotateAction {\n  return action.type === ACTION_TUTORIAL_ANNOTATE;\n}\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_TUTORIAL_DISMISS = \"@tutorial/dismiss\" as const;\nexport const tutorialDismiss = () => ({\n  type: ACTION_TUTORIAL_DISMISS,\n});\nexport type TutorialDismissAction = ReturnType<typeof tutorialDismiss>;\nexport function isTutorialDismissAction(\n  action: AnyAction\n): action is TutorialDismissAction {\n  return action.type === ACTION_TUTORIAL_DISMISS;\n}\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_TUTORIAL_NEXT = \"@tutorial/next\" as const;\nexport const tutorialNext = () => ({\n  type: ACTION_TUTORIAL_NEXT,\n});\nexport type TutorialNextAction = ReturnType<typeof tutorialNext>;\nexport function isTutorialNextAction(\n  action: AnyAction\n): action is TutorialNextAction {\n  return action.type === ACTION_TUTORIAL_NEXT;\n}\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_TUTORIAL_START = \"@tutorial/start\" as const;\nexport const tutorialStart = (tutorial: string) => ({\n  type: ACTION_TUTORIAL_START,\n  payload: { tutorial },\n});\nexport type TutorialStartAction = ReturnType<typeof tutorialStart>;\nexport function isTutorialStartAction(\n  action: AnyAction\n): action is TutorialStartAction {\n  return action.type === ACTION_TUTORIAL_START;\n}\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_UNDO = \"@undo/undo\" as const;\nexport const undo = () => ({\n  type: ACTION_UNDO,\n});\nexport function isUndoAction(action: AnyAction) {\n  return action.type === ACTION_UNDO;\n}\n","import { AnyAction } from \"redux\";\nimport { v4 as uuidV4 } from \"uuid\";\n\ninterface ViewCircuitOpts {\n  newWindow?: boolean;\n}\nexport const ACTION_VIEW_CIRCUIT = \"@view/circuit\" as const;\nexport const viewCircuit = (\n  circuitId: string,\n  elementIdPath: string[] | null = null,\n  opts: ViewCircuitOpts = {}\n) => ({\n  type: ACTION_VIEW_CIRCUIT,\n  payload: {\n    circuitId,\n    elementIdPath,\n    newWindowId: opts.newWindow ? uuidV4() : null,\n  },\n});\nexport type ViewCircuitAction = ReturnType<typeof viewCircuit>;\nexport function isViewCircuitAction(\n  action: AnyAction\n): action is ViewCircuitAction {\n  return action.type === ACTION_VIEW_CIRCUIT;\n}\n","import { AnyAction } from \"redux\";\n\nexport const VIEW_ELEMENT_NAMES = \"@view/element-names\" as const;\nexport const viewElementNames = (mode: \"all\" | \"named-only\" | \"none\") => ({\n  type: VIEW_ELEMENT_NAMES,\n  payload: { mode },\n});\nexport type ViewElementNamesAction = ReturnType<typeof viewElementNames>;\nexport function isViewElementNamesAction(\n  action: AnyAction\n): action is ViewElementNamesAction {\n  return action.type === VIEW_ELEMENT_NAMES;\n}\n","import { AnyAction } from \"redux\";\n\nexport const VIEW_RESET = \"@view/reset\" as const;\nexport const resetView = () => ({\n  type: VIEW_RESET,\n});\nexport type ResetViewAction = ReturnType<typeof resetView>;\nexport function isResetViewAction(\n  action: AnyAction\n): action is ResetViewAction {\n  return action.type === VIEW_RESET;\n}\n","import { AnyAction } from \"redux\";\n\nimport { WireConnectTarget } from \"@/services/circuit-graph/types\";\n\nexport const ACTION_WIRE_CONNECT = \"@wire/connect\" as const;\nexport const wireConnect = (\n  circuitId: string,\n  from: WireConnectTarget,\n  to: WireConnectTarget\n) => ({\n  type: ACTION_WIRE_CONNECT,\n  payload: { circuitId, from, to },\n});\nexport type WireConnectAction = ReturnType<typeof wireConnect>;\nexport function isWireConnectAction(\n  action: AnyAction\n): action is WireConnectAction {\n  return action.type === ACTION_WIRE_CONNECT;\n}\n","import { AnyAction } from \"redux\";\n\nimport { Point } from \"@/geometry\";\n\nimport { WireSegment } from \"@/services/circuit-graph/types\";\n\nexport const ACTION_WIRE_HYDRATE = \"@wire/hydrate\" as const;\nexport interface HydrateWireSettings {\n  wireId: string;\n  circuitId: string;\n  wireSegments: (WireSegment & { wireSegmentId: string })[];\n  wireJoints: (Point & { jointId: string })[];\n}\nexport const hydrateWire = (settings: HydrateWireSettings) => ({\n  type: ACTION_WIRE_HYDRATE,\n  payload: settings,\n});\nexport type HydrateWireAction = ReturnType<typeof hydrateWire>;\nexport function isHydrateWireAction(\n  action: AnyAction\n): action is HydrateWireAction {\n  return action.type === ACTION_WIRE_HYDRATE;\n}\n","import { AnyAction } from \"redux\";\n\nimport { asArray, MaybeArray } from \"@/arrays\";\n\nexport const ACTION_WIRE_JOINT_DELETE = \"@wire/joint/delete\" as const;\nexport const deleteWireJoint = (jointId: MaybeArray<string>) => ({\n  type: ACTION_WIRE_JOINT_DELETE,\n  payload: { jointIds: asArray(jointId) },\n});\nexport type WireJointDeleteAction = ReturnType<typeof deleteWireJoint>;\nexport function isWireJointDeleteAction(\n  action: AnyAction\n): action is WireJointDeleteAction {\n  return action.type === ACTION_WIRE_JOINT_DELETE;\n}\n","import { AnyAction } from \"redux\";\n\nimport { Point } from \"@/geometry\";\nimport { asArray, MaybeArray } from \"@/arrays\";\n\nexport const ACTION_WIRE_JOINT_MOVE = \"@wire/joint/move\" as const;\nexport interface JointMoveOpts {\n  relative?: boolean;\n  snapMode?: \"none\" | \"element\" | \"joint\";\n}\nexport const moveWireJoint = (\n  jointId: MaybeArray<string>,\n  p: Point,\n  { relative = false, snapMode = \"none\" }: JointMoveOpts = {}\n) => ({\n  type: ACTION_WIRE_JOINT_MOVE,\n  payload: { jointIds: asArray(jointId), position: p, relative, snapMode },\n});\nexport type WireJointMoveAction = ReturnType<typeof moveWireJoint>;\nexport function isWireJointMoveAction(\n  action: AnyAction\n): action is WireJointMoveAction {\n  return action.type === ACTION_WIRE_JOINT_MOVE;\n}\n","import { AnyAction } from \"redux\";\n\nimport { asArray, MaybeArray } from \"@/arrays\";\n\nexport const ACTION_WIRE_SEGMENT_DELETE = \"@wire/segment/delete\" as const;\nexport const deleteWireSegment = (segmentId: MaybeArray<string>) => ({\n  type: ACTION_WIRE_SEGMENT_DELETE,\n  payload: { segmentIds: asArray(segmentId) },\n});\nexport type WireSegmentDeleteAction = ReturnType<typeof deleteWireSegment>;\nexport function isWireSegmentDeleteAction(\n  action: AnyAction\n): action is WireSegmentDeleteAction {\n  return action.type === ACTION_WIRE_SEGMENT_DELETE;\n}\n","import { AnyAction } from \"redux\";\n\nimport { Point } from \"@/geometry\";\n\nexport const ACTION_WIRE_SEGMENT_INSERT_JOINT = \"@wire/segment/insert-joint\" as const;\nexport const wireSegmentInsertJoint = (\n  wireId: string,\n  wireSegmentId: string,\n  jointPos: Point\n) => ({\n  type: ACTION_WIRE_SEGMENT_INSERT_JOINT,\n  payload: { wireId, wireSegmentId, jointPos },\n});\nexport type WireSegmentInsertJointAction = ReturnType<\n  typeof wireSegmentInsertJoint\n>;\nexport function isWireSegmentInsertJointAction(\n  action: AnyAction\n): action is WireSegmentInsertJointAction {\n  return action.type === ACTION_WIRE_SEGMENT_INSERT_JOINT;\n}\n","import { AnyAction } from \"redux\";\n\nexport const ACTION_WIRE_SEGMENT_SET_LINE = \"@wire/segment/set-line\" as const;\nexport const wireSegmentSetLine = (wireSegmentId: string, lineId: string) => ({\n  type: ACTION_WIRE_SEGMENT_SET_LINE,\n  payload: { wireSegmentId, lineId },\n});\nexport type WireSegmentSetLineAction = ReturnType<typeof wireSegmentSetLine>;\nexport function isWireSegmentSetLineAction(\n  action: AnyAction\n): action is WireSegmentSetLineAction {\n  return action.type === ACTION_WIRE_SEGMENT_SET_LINE;\n}\n","export type MaybeArray<T> = T | T[];\nexport function asArray<T>(value: MaybeArray<T>): T[] {\n  return Array.isArray(value) ? value : [value];\n}\n\nexport function arrayEquals<T extends any[]>(a: T, b: T) {\n  if (a === b) {\n    return true;\n  }\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  return a.every((v, i) => b[i] === v);\n}\n\nconst EmptyArray: ReadonlyArray<unknown> = Object.freeze([]);\n// Would be simpler to just use EmptyArray, but we cannot type that to what the usage wants.\n// Shame the type `[]` is invalid.\nexport function immutableEmptyArray<T>(): T[] {\n  return EmptyArray as any;\n}\n\nexport function dropIndexFp<T>(array: T[], index: number) {\n  const newArray = array.slice(0, index);\n  for (let i = index + 1; i < array.length; i++) {\n    newArray.push(array[i]);\n  }\n  return newArray;\n}\n","import * as React from \"react\";\n\nimport Routes from \"@/router\";\n\nimport DialogManager from \"../DialogManager\";\nimport Tutorial from \"../Tutorial\";\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <Routes />\n      <DialogManager />\n      <Tutorial />\n    </>\n  );\n};\n\nexport default App;\n","import App from \"./App\";\nexport default App;\n","import * as React from \"react\";\n\nexport interface AtomicTextInputProps {\n  className?: string;\n  autoFocus?: boolean;\n  defaultValue?: string;\n  value?: string;\n  onChange?(e: React.ChangeEvent<HTMLInputElement>): void;\n  onBeginEdit?(): void;\n  onCommit?(value: string): void;\n  onCancel?(): void;\n  onKeyUp?(e: React.KeyboardEvent<HTMLInputElement>): void;\n  onBlur?(e: React.FocusEvent<HTMLInputElement>): void;\n}\n\nconst AtomicTextInput = React.forwardRef<\n  HTMLInputElement,\n  AtomicTextInputProps\n>(\n  (\n    {\n      className,\n      autoFocus,\n      defaultValue,\n      value,\n      onChange,\n      onBeginEdit,\n      onCommit,\n      onCancel,\n      onBlur,\n      onKeyUp,\n    },\n    ref\n  ) => {\n    const [editValue, setEditValue] = React.useState<string | null>(null);\n\n    const onInputChange = React.useCallback(\n      (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (editValue == null && onBeginEdit) {\n          onBeginEdit();\n        }\n\n        setEditValue(e.target.value);\n\n        if (onChange) {\n          onChange(e);\n        }\n      },\n      [editValue, onBeginEdit, onChange]\n    );\n\n    const onInputKeyUp = React.useCallback(\n      (e: React.KeyboardEvent<HTMLInputElement>) => {\n        if (onKeyUp) {\n          onKeyUp(e);\n        }\n        if (e.defaultPrevented) {\n          return;\n        }\n\n        if (editValue == null) {\n          return;\n        }\n\n        if (e.key === \"Escape\") {\n          e.preventDefault();\n          if (onCancel) {\n            onCancel();\n          }\n        } else if (e.key === \"Enter\") {\n          e.preventDefault();\n          if (onCommit) {\n            onCommit(editValue);\n          }\n        }\n      },\n      [onKeyUp, editValue, onCancel, onCommit]\n    );\n\n    const onInputBlur = React.useCallback(\n      (e: React.FocusEvent<HTMLInputElement>) => {\n        if (onBlur) {\n          onBlur(e);\n        }\n\n        if (editValue != null && onCommit) {\n          onCommit(editValue);\n        }\n      },\n      [onBlur, editValue, onCommit]\n    );\n\n    return (\n      <input\n        ref={ref}\n        className={className}\n        autoFocus={autoFocus}\n        defaultValue={defaultValue}\n        value={value}\n        type=\"text\"\n        onChange={onInputChange}\n        onKeyUp={onInputKeyUp}\n        onBlur={onInputBlur}\n      />\n    );\n  }\n);\n\nexport default AtomicTextInput;\n","import * as React from \"react\";\nimport { Options } from \"@popperjs/core\";\n\nimport Popover from \"./Popover\";\nimport { MenuCloseContextProvider } from \"./Menus/MenuCloseContext\";\n\nexport interface AutoPopoverProps {\n  content: JSX.Element;\n  placement?: Options[\"placement\"];\n}\n\nconst AutoPopover: React.FC<AutoPopoverProps> = ({\n  content,\n  placement,\n  children,\n}) => {\n  const anchorEl = React.useRef<HTMLDivElement | null>(null);\n\n  const [open, setOpen] = React.useState(false);\n  const onClick = React.useCallback(() => {\n    setOpen(true);\n  }, []);\n  const onClose = React.useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  return (\n    <MenuCloseContextProvider value={onClose}>\n      <div ref={anchorEl} onClick={onClick}>\n        {children}\n      </div>\n      <Popover\n        anchorEl={anchorEl.current}\n        isOpen={open}\n        placement={placement}\n        onRequestClose={onClose}\n      >\n        {open && content}\n      </Popover>\n    </MenuCloseContextProvider>\n  );\n};\n\nexport default AutoPopover;\n","import * as React from \"react\";\n\nimport { cls } from \"@/utils\";\n\nexport interface ButtonProps extends React.HTMLAttributes<HTMLButtonElement> {\n  variant?: \"default\" | \"primary\" | \"text\" | \"menu\";\n  size?: \"default\" | \"small\";\n  disabled?: boolean;\n}\n\nimport styles from \"./Button.module.css\";\n\nconst Button: React.FC<ButtonProps> = ({\n  variant = \"default\",\n  size = \"default\",\n  disabled,\n  ...props\n}) => {\n  return (\n    <button\n      className={cls(\n        styles[\"button\"],\n        (styles as any)[`button--variant-${variant}`],\n        (styles as any)[`button--size-${size}`],\n        disabled && styles[\"disabled\"]\n      )}\n      type=\"button\"\n      {...props}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import Button from \"./Button\";\nexport default Button;\n","import * as React from \"react\";\n\nimport styles from \"./Checkbox.module.css\";\n\nexport interface CheckboxProps {\n  className?: string;\n  value: boolean;\n  onChange(e: React.ChangeEvent<HTMLInputElement>): void;\n}\n\nconst Checkbox: React.FC<CheckboxProps> = ({\n  className,\n  value,\n  onChange,\n  children,\n}) => {\n  return (\n    <label className={className}>\n      <span className={styles[\"checkbox-span\"]}>\n        <input type=\"checkbox\" checked={value} onChange={onChange} />\n      </span>\n      {children}\n    </label>\n  );\n};\n\nexport default Checkbox;\n","export * from \"./Checkbox\";\nimport Checkbox from \"./Checkbox\";\nexport default Checkbox;\n","import * as React from \"react\";\n\nimport { cls } from \"@/utils\";\nimport { calcSize } from \"@/geometry\";\n\nimport useSelector from \"@/hooks/useSelector\";\nimport { useNativeEvent } from \"@/hooks/useNativeEvent\";\nimport { useComponentBounds } from \"@/hooks/useComponentBounds\";\n\nimport { fieldRectSelector } from \"@/services/circuit-layout/selectors/field\";\nimport { isSimActiveSelector } from \"@/services/simulator-control/selectors/run\";\n\nimport CircuitFieldSurface from \"./components/CircuitFieldSurface\";\n\nimport { CircuitEditorProvider } from \"./contexts/circuit-editor-context\";\nimport {\n  useViewportContext,\n  ViewportContextProvider,\n} from \"./contexts/viewport-context\";\n\nimport styles from \"./CircuitEditor.module.css\";\n\nimport { getCircuitEditorHtmlId } from \"./ids\";\n\nexport interface CircuitEditorProps {\n  className?: string;\n  editorId: string;\n}\n\nconst CircuitEditor: React.FC<CircuitEditorProps> = ({\n  className,\n  editorId,\n}) => {\n  const isSimActive = useSelector(isSimActiveSelector);\n\n  // svg seems to have an implicit bottom margin against its parent div\n  // Wrapping it in a div of the same size fixes it.\n  return (\n    <CircuitEditorProvider editorId={editorId}>\n      <div\n        id={getCircuitEditorHtmlId(editorId)}\n        className={cls(\n          \"circuit-editor\",\n          styles[\"circuit-editor\"],\n          isSimActive && \"simulator-active\",\n          className\n        )}\n      >\n        <div className={styles[\"circuit-editor-scrollarea\"]}>\n          <ViewportContextProvider>\n            <ZoomingCircuitFieldSurface />\n          </ViewportContextProvider>\n        </div>\n      </div>\n    </CircuitEditorProvider>\n  );\n};\n\nexport default CircuitEditor;\n\nconst ZoomingCircuitFieldSurface: React.FC = ({}) => {\n  const sizeRef = React.useRef<HTMLDivElement | null>(null);\n  const { width: componentWidth, height: componentHeight } = useComponentBounds(\n    sizeRef\n  );\n\n  const { zoomFactor, zoom } = useViewportContext();\n\n  const fieldRect = useSelector(fieldRectSelector);\n  const { width: fieldWidth, height: fieldHeight } = calcSize(fieldRect);\n\n  const width = Math.max(componentWidth, fieldWidth * zoomFactor);\n  const height = Math.max(componentHeight, fieldHeight * zoomFactor);\n\n  const onWheel = React.useCallback(\n    (e: WheelEvent) => {\n      if (e.defaultPrevented) {\n        return;\n      }\n\n      if (e.ctrlKey) {\n        zoom(e.deltaY > 0 ? -1 : 1);\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    },\n    [zoom]\n  );\n\n  // React listens to the root listener for all events,\n  //  and chrome assumes the root event listener for mouse events\n  //  never wants to preventDefault.\n  // We need to take a local event listener and mark it as not passive.\n  // https://github.com/facebook/react/issues/14856\n  useNativeEvent(sizeRef, \"wheel\", onWheel, { passive: false });\n\n  return (\n    <div ref={sizeRef} style={{ width: \"100%\", height: \"100%\" }}>\n      <CircuitFieldSurface width={width} height={height} />\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useDrop } from \"react-dnd\";\n\nimport { circuitEditorMouseLeave } from \"@/actions/circuit-editor-mouse-leave\";\n\nimport { NEW_ELEMENT_DRAG_OBJECT } from \"../../drag-items/new-element\";\nimport { useViewportContext } from \"../../contexts/viewport-context\";\n\nimport { FieldSvgElementProvider } from \"./contexts/fieldSvgElement\";\n\nimport DragNewElementLayer from \"./components/DragNewElementLayer\";\nimport DragMovePreviewLayer from \"./components/DragMovePreviewLayer\";\nimport FieldMouseLayer from \"./components/FieldMouseLayer\";\nimport GridBackground from \"./components/GridBackground\";\nimport ElementsLayer from \"./components/ElementsLayer\";\nimport ElementPinsLayer from \"./components/ElementPinsLayer\";\nimport EditorDragReceiver from \"./components/EditorDragReceiver\";\nimport WiresLayer from \"./components/WiresLayer\";\nimport DragWirePreviewLayer from \"./components/DragWirePreviewLayer\";\n\nimport styles from \"./CircuitFieldSurface.module.css\";\n\nexport interface CircuitFieldSurfaceProps {\n  width: number;\n  height: number;\n}\nconst CircuitFieldSurface: React.FC<CircuitFieldSurfaceProps> = ({\n  width,\n  height,\n}) => {\n  const dispatch = useDispatch();\n  const { zoomFactor } = useViewportContext();\n\n  const svgRef = React.useRef<SVGSVGElement | null>(null);\n  const scalerRef = React.useRef<SVGGElement | null>(null);\n\n  const onMouseDown = React.useCallback(() => {\n    svgRef.current?.focus();\n  }, []);\n\n  const onMouseLeave = React.useCallback(() => {\n    dispatch(circuitEditorMouseLeave());\n  }, [dispatch]);\n\n  // We need to capture the drag event at a deeper parent,\n  // because mouse events cannot pass through DragNewElementLayer's\n  // drag capture rect to the underlying DragSelectLayer and other elements.\n  // In contrast, we cannot handle the drag here as\n  // we do not know the coordinate system from our scaler.\n  // Instead, just capture whether or not we are being dragged into,\n  // and enable the new element drag layer only when we are dragging.\n  const [{ isDraggingNewElement }, dragRef] = useDrop({\n    accept: NEW_ELEMENT_DRAG_OBJECT,\n    collect: (monitor) => {\n      return {\n        isDraggingNewElement: monitor.isOver(),\n      };\n    },\n  });\n\n  return (\n    <svg\n      tabIndex={-1}\n      ref={(ref) => {\n        svgRef.current = ref;\n        dragRef(ref);\n      }}\n      width={width}\n      height={height}\n      onMouseDown={onMouseDown}\n      onMouseLeave={onMouseLeave}\n      className={styles[\"circuit-field-svg\"]}\n    >\n      <GridBackground />\n      <g\n        ref={scalerRef}\n        transform-origin=\"0 0\"\n        transform={`scale(${zoomFactor})`}\n      >\n        <FieldSvgElementProvider svgRef={svgRef} scalerRef={scalerRef}>\n          <FieldMouseLayer />\n          <ElementsLayer />\n          <WiresLayer />\n          <ElementPinsLayer />\n          <DragMovePreviewLayer />\n          <DragWirePreviewLayer />\n          {isDraggingNewElement && <DragNewElementLayer />}\n          <EditorDragReceiver />\n        </FieldSvgElementProvider>\n      </g>\n    </svg>\n  );\n};\n\nexport default CircuitFieldSurface;\n","import * as React from \"react\";\n\nimport { keyboardCommandModifier } from \"@/runtime-env\";\nimport { Point } from \"@/geometry\";\n\nimport { useAction } from \"@/hooks/useAction\";\nimport useSelector from \"@/hooks/useSelector\";\n\nimport { selectedElementIdsSelector } from \"@/services/selection/selectors/selection\";\nimport { canPasteSelector } from \"@/services/clipboard/selectors/clipboard\";\n\nimport { paste } from \"@/actions/clipboard-paste\";\nimport { selectionAlignToGrid } from \"@/actions/selection-align-to-grid\";\nimport { deleteSelection } from \"@/actions/selection-delete\";\nimport { copySelection } from \"@/actions/selection-copy\";\n\nimport MenuItem from \"@/components/Menus/MenuItem\";\nimport DividerMenuItem from \"@/components/Menus/DividerMenuItem\";\n\nexport interface ContextMenuItemsProps {\n  fieldPosition: Point;\n}\nconst ContextMenuItems: React.FC<ContextMenuItemsProps> = ({\n  fieldPosition,\n}) => {\n  const onAlignToGrid = useAction(selectionAlignToGrid);\n\n  const canCopy = useSelector(selectedElementIdsSelector).length > 0;\n  const onCopy = useAction(copySelection);\n  const canPaste = useSelector(canPasteSelector);\n  const onPaste = useAction(paste, { pastePosition: fieldPosition });\n\n  const onDelete = useAction(deleteSelection);\n\n  return (\n    <>\n      <MenuItem onClick={onAlignToGrid}>Align Selection To Grid</MenuItem>\n      <DividerMenuItem />\n      <MenuItem\n        disabled={!canCopy}\n        secondary={`${keyboardCommandModifier}+c`}\n        onClick={onCopy}\n      >\n        Copy\n      </MenuItem>\n      <MenuItem\n        disabled={!canPaste}\n        secondary={`${keyboardCommandModifier}+v`}\n        onClick={onPaste}\n      >\n        Paste\n      </MenuItem>\n      <DividerMenuItem />\n      <MenuItem onClick={onDelete}>Delete Selected</MenuItem>\n    </>\n  );\n};\n\nexport default ContextMenuItems;\n","import * as React from \"react\";\n\nimport mapValues from \"lodash/mapValues\";\nimport values from \"lodash/values\";\n\nimport { elementTypesByElementIdSelector } from \"@/services/circuit-graph/selectors/elements\";\nimport { isEditorDraggingSelector } from \"@/services/circuit-editor-drag/selectors/drag\";\nimport {\n  dragMoveElementPositionsByIdSelector,\n  dragMoveGhostLinesSelector,\n  dragMoveJointPositionsByIdSelector,\n} from \"@/services/circuit-editor-drag/selectors/drag-move\";\n\nimport useSelector from \"@/hooks/useSelector\";\n\nimport { useCircuitEditor } from \"../../../contexts/circuit-editor-context\";\n\nimport ElementVisual from \"./ElementVisual\";\n\nconst DragMovePreviewLayer: React.FC = React.memo(\n  function DragElementPreviewLayer() {\n    const { editorId } = useCircuitEditor();\n\n    const isDragging = useSelector((state) =>\n      isEditorDraggingSelector(state, editorId)\n    );\n\n    const dragMoveElementPositionsByElementId = useSelector(\n      dragMoveElementPositionsByIdSelector\n    );\n    const elementTypesByElementId = useSelector(\n      elementTypesByElementIdSelector\n    );\n\n    const dragMoveJointPositionsByJointId = useSelector(\n      dragMoveJointPositionsByIdSelector\n    );\n\n    const ghostLines = useSelector(dragMoveGhostLinesSelector);\n\n    if (!isDragging) {\n      return null;\n    }\n\n    const movingElements = values(\n      mapValues(dragMoveElementPositionsByElementId, (p, elementId) => (\n        <ElementVisual\n          key={elementId}\n          elementType={elementTypesByElementId[elementId]}\n          x={p.x}\n          y={p.y}\n        />\n      ))\n    );\n\n    const movingJoints = values(\n      mapValues(dragMoveJointPositionsByJointId, (p, jointId) => (\n        <circle\n          key={jointId}\n          cx={p.x}\n          cy={p.y}\n          r={2}\n          stroke=\"none\"\n          fill=\"black\"\n        />\n      ))\n    );\n\n    // FIXME: Get wire style and opacity from css\n    const ghostLineElements = ghostLines.map(([start, end], i) => (\n      <line\n        key={i}\n        x1={start.x}\n        y1={start.y}\n        x2={end.x}\n        y2={end.y}\n        stroke=\"black\"\n        strokeWidth={2}\n      />\n    ));\n\n    return (\n      // FIXME: Get opacity from css\n      <g id=\"drag-element-move-preview-layer\" opacity={0.4}>\n        {movingElements}\n        {movingJoints}\n        {ghostLineElements}\n      </g>\n    );\n  }\n);\n\nexport default DragMovePreviewLayer;\n","import * as React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useDrop } from \"react-dnd\";\n\nimport { Point, snapPoint } from \"@/geometry\";\n\nimport useSelector from \"@/hooks/useSelector\";\n\nimport { addElement } from \"@/actions/element-add\";\n\nimport { elementTypeToCircuitId } from \"@/elements/definitions/integrated-circuits/utils\";\n\nimport { gridElementSnapSelector } from \"@/services/circuit-editor-drag/selectors/snap\";\nimport { circuitWouldRecurseSelector } from \"@/services/circuit-graph/selectors/circuits\";\n\nimport {\n  isNewElementDragObject,\n  NEW_ELEMENT_DRAG_OBJECT,\n} from \"../../../drag-items/new-element\";\n\nimport { useCircuitEditor } from \"../../../contexts/circuit-editor-context\";\nimport { useViewportContext } from \"../../../contexts/viewport-context\";\n\nimport { useMouseCoords } from \"../hooks/useMouseCoords\";\n\nimport ElementVisual from \"./ElementVisual\";\n\nconst DragNewElementLayer: React.FC = React.memo(\n  function DragNewElementLayer() {\n    const dispatch = useDispatch();\n    const { circuitId } = useCircuitEditor();\n    const snap = useSelector(gridElementSnapSelector);\n    const getMouseCoords = useMouseCoords();\n    const { zoomFactor } = useViewportContext();\n\n    function counterScale(value: number) {\n      return value * (1 / zoomFactor);\n    }\n\n    const [dragType, setDragType] = React.useState<string | null>(null);\n    const [dragPos, setDragPos] = React.useState<Point | null>(null);\n\n    const dropTargetWouldRecurse = useSelector((state) =>\n      circuitWouldRecurseSelector(\n        state,\n        elementTypeToCircuitId(dragType),\n        circuitId\n      )\n    );\n\n    const [, dropRef] = useDrop(\n      {\n        accept: NEW_ELEMENT_DRAG_OBJECT,\n        collect: (monitor) => {\n          // We need to clear this out on mouse out\n          if (!monitor.isOver()) {\n            setDragPos(null);\n            setDragType(null);\n          }\n        },\n        hover: (item, monitor) => {\n          if (!isNewElementDragObject(item)) {\n            setDragPos(null);\n            setDragType(null);\n            return;\n          }\n\n          const pos = monitor.getClientOffset();\n          if (!pos) {\n            return;\n          }\n          const coords = getMouseCoords({ x: pos.x, y: pos.y });\n          setDragType(item.payload.elementType);\n          setDragPos(coords);\n        },\n        drop: (item, monitor) => {\n          if (!isNewElementDragObject(item)) {\n            return;\n          }\n\n          if (dropTargetWouldRecurse) {\n            return;\n          }\n\n          const pos = monitor.getClientOffset();\n          if (!pos) {\n            return;\n          }\n          const coords = getMouseCoords({ x: pos.x, y: pos.y });\n          dispatch(\n            addElement(\n              item.payload.elementType,\n              circuitId,\n              snapPoint(coords, snap)\n            )\n          );\n        },\n      },\n      [circuitId, getMouseCoords, snap, dropTargetWouldRecurse]\n    );\n\n    const snapDragPos = dragPos && snapPoint(dragPos, snap);\n\n    const counterScaledSize = `${counterScale(1) * 100}%`;\n\n    return (\n      <g id=\"drag-new-element-layer\">\n        {!dropTargetWouldRecurse && snapDragPos && dragType && (\n          <g opacity={0.5}>\n            <ElementVisual\n              x={snapDragPos.x}\n              y={snapDragPos.y}\n              elementType={dragType}\n            />\n          </g>\n        )}\n        {dropTargetWouldRecurse && (\n          <g transform={`scale(${counterScale(1)})`}>\n            <rect width=\"100%\" height=\"100%\" opacity={0.7} fill=\"black\" />\n            {/* FIXME: Should center this text in the screen viewport. */}\n            <text x=\"100\" y=\"25%\" fill=\"white\">\n              The current circuit is already inside the dragged IC.\n            </text>\n          </g>\n        )}\n        <rect\n          ref={dropRef}\n          width={counterScaledSize}\n          height={counterScaledSize}\n          fill=\"transparent\"\n        />\n      </g>\n    );\n  }\n);\n\nexport default DragNewElementLayer;\n","import * as React from \"react\";\n\nimport useSelector from \"@/hooks/useSelector\";\n\nimport {\n  dragJointGhostLinesSelector,\n  dragWireJointPositionSelector,\n  dragWireSegmentEndPositionSelector,\n  dragWireSegmentStartPositionSelector,\n} from \"@/services/circuit-editor-drag/selectors/drag-wire\";\n\nconst DragWirePreviewLayer: React.FC = () => {\n  const jointPos = useSelector(dragWireJointPositionSelector);\n  const dragStart = useSelector(dragWireSegmentStartPositionSelector);\n  const dragEnd = useSelector(dragWireSegmentEndPositionSelector);\n\n  const ghostLines = useSelector(dragJointGhostLinesSelector);\n\n  const ghostLineElements = ghostLines.map(([start, end], i) => (\n    <line\n      key={i}\n      x1={start.x}\n      y1={start.y}\n      x2={end.x}\n      y2={end.y}\n      stroke=\"black\"\n      strokeWidth={2}\n      opacity={0.4}\n    />\n  ));\n\n  if (!dragStart && !dragEnd && !jointPos && ghostLineElements.length === 0) {\n    return null;\n  }\n\n  // FIXME: Use css for opacity on all dragging elements.\n  return (\n    <g className=\"circuit-editor-drag-wire-preview\">\n      {ghostLineElements}\n      {jointPos && (\n        <circle\n          cx={jointPos.x}\n          cy={jointPos.y}\n          r={2}\n          opacity={0.4}\n          stroke=\"none\"\n          fill=\"black\"\n        />\n      )}\n      {dragStart && dragEnd && (\n        <line\n          x1={dragStart.x}\n          y1={dragStart.y}\n          x2={dragEnd.x}\n          y2={dragEnd.y}\n          stroke=\"black\"\n          strokeWidth={2}\n          opacity={0.4}\n        />\n      )}\n    </g>\n  );\n};\n\nexport default DragWirePreviewLayer;\n","import * as React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { getModifiers } from \"@/modifier-keys\";\n\nimport useSelector from \"@/hooks/useSelector\";\n\nimport { isDraggingSelector } from \"@/services/circuit-editor-drag/selectors/drag\";\n\nimport { circuitEditorDragContinue } from \"@/actions/circuit-editor-drag-continue\";\nimport { circuitEditorDragEnd } from \"@/actions/circuit-editor-drag-end\";\nimport { circuitEditorDragAbort } from \"@/actions/circuit-editor-drag-abort\";\n\nimport { useCircuitEditor } from \"../../../contexts/circuit-editor-context\";\nimport { useViewportContext } from \"../../../contexts/viewport-context\";\n\nimport { useEventMouseCoords } from \"../hooks/useMouseCoords\";\n\nconst EditorDragReceiver: React.FC = () => {\n  const dispatch = useDispatch();\n  const { editorId } = useCircuitEditor();\n  const { zoomFactor } = useViewportContext();\n\n  const isDragging = useSelector(isDraggingSelector);\n\n  function counterScale(value: number) {\n    return value * (1 / zoomFactor);\n  }\n\n  const getCoords = useEventMouseCoords();\n\n  const onMouseMove = React.useCallback(\n    (e: React.MouseEvent) => {\n      if (e.buttons === 0) {\n        // It would be nice if we could take a mouse capture and get notified\n        // of the mouse up elsewhere, but we need to allow other circuit editors\n        // to receive the mouse events so the drag can transfer.\n        // As a second best, detect mouse up when it comes back into us and cancel.\n        dispatch(circuitEditorDragAbort());\n        return;\n      }\n\n      const coords = getCoords(e);\n      const modifierKeys = getModifiers(e);\n      dispatch(circuitEditorDragContinue(coords, modifierKeys, editorId));\n    },\n    [dispatch, editorId, getCoords]\n  );\n\n  const onMouseUp = React.useCallback(\n    (e: React.MouseEvent) => {\n      const coords = getCoords(e);\n      const modifierKeys = getModifiers(e);\n      dispatch(circuitEditorDragEnd(coords, modifierKeys, editorId));\n    },\n    [dispatch, editorId, getCoords]\n  );\n\n  if (!isDragging) {\n    return null;\n  }\n\n  return (\n    <rect\n      width={`${counterScale(1) * 100}%`}\n      height={`${counterScale(1) * 100}%`}\n      fill=\"transparent\"\n      onMouseMove={onMouseMove}\n      onMouseUp={onMouseUp}\n    />\n  );\n};\n\nexport default EditorDragReceiver;\n","import * as React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { cls } from \"@/utils\";\nimport { Point, Rectangle, ZeroPoint } from \"@/geometry\";\nimport { getModifiers } from \"@/modifier-keys\";\nimport { getSelectMode } from \"@/selection-mode\";\n\nimport { getNodeVisualElement } from \"@/elements/visuals\";\n\nimport interaction from \"@/styles/interaction.module.css\";\n\nimport useSelector from \"@/hooks/useSelector\";\nimport { useMouseDragDetector } from \"@/hooks/useMouseDragDetector\";\n\nimport { evolverStateFromCircuitElementIdSelector } from \"@/services/simulator/selectors/elements\";\nimport { isElementSelectedFromElementIdSelector } from \"@/services/selection/selectors/selection\";\nimport { elementPositionFromElementIdSelector } from \"@/services/circuit-layout/selectors/element-positions\";\nimport { isSimActiveSelector } from \"@/services/simulator-control/selectors/run\";\nimport { elementDefinitionFromElementIdSelector } from \"@/services/circuit-graph/selectors/element-def\";\nimport { elementFieldDisplayNameFromElementId } from \"@/services/ui-settings/selectors/element-name\";\n\nimport { circuitEditorDragStartElement } from \"@/actions/circuit-editor-drag-start-element\";\nimport { selectElements } from \"@/actions/select-elements\";\n\nimport { useContextMenu } from \"@/components/ContextMenu\";\n\nimport { useCircuitEditor } from \"../../../../contexts/circuit-editor-context\";\nimport { useViewportContext } from \"../../../../contexts/viewport-context\";\nimport { getElementHtmlId } from \"../../../../ids\";\n\nimport { useMouseCoords } from \"../../hooks/useMouseCoords\";\n\nimport ElementContextMenu from \"../ElementContextMenu\";\n\nimport \"./Element.module.css\";\n\nexport interface NodeProps {\n  elementId: string;\n}\n\nconst Element: React.FC<NodeProps> = React.memo(function Node({ elementId }) {\n  const dispatch = useDispatch();\n  const { editorId, elementIdPath } = useCircuitEditor();\n  const isSimActive = useSelector(isSimActiveSelector);\n\n  const { openContextMenu, renderContextMenu } = useContextMenu();\n\n  const def = useSelector((state) =>\n    elementDefinitionFromElementIdSelector(state, elementId)\n  );\n  const { x, y } = useSelector((s) =>\n    elementPositionFromElementIdSelector(s, elementId)\n  );\n  const evolverState = useSelector((s) =>\n    evolverStateFromCircuitElementIdSelector(s, [...elementIdPath, elementId])\n  );\n  const isSelected = useSelector((s) =>\n    isElementSelectedFromElementIdSelector(s, elementId)\n  );\n\n  const getCoords = useMouseCoords();\n\n  const onClick = React.useCallback(\n    (e: MouseEvent) => {\n      if (isSimActive) {\n        return;\n      }\n\n      if (e.defaultPrevented) {\n        return;\n      }\n\n      if (e.button !== 0) {\n        return;\n      }\n\n      e.preventDefault();\n\n      const modifiers = getModifiers(e);\n      const selectionMode = getSelectMode(modifiers);\n      dispatch(selectElements(elementId, selectionMode));\n    },\n    [dispatch, isSimActive, elementId]\n  );\n\n  const onContextMenu = React.useCallback(\n    (e: React.MouseEvent) => {\n      if (e.defaultPrevented) {\n        return;\n      }\n      e.preventDefault();\n\n      const modifiers = getModifiers(e);\n      const selectionMode = getSelectMode(modifiers, \"set-if-unselected\");\n      dispatch(selectElements(elementId, selectionMode));\n      openContextMenu(e);\n    },\n    [dispatch, elementId, openContextMenu]\n  );\n\n  const onDragStart = React.useCallback(\n    (e: MouseEvent, originalPoint: Point) => {\n      const p = getCoords(originalPoint);\n      const modifiers = getModifiers(e);\n      dispatch(\n        circuitEditorDragStartElement(elementId, p, modifiers, editorId)\n      );\n    },\n    [getCoords, dispatch, elementId, editorId]\n  );\n\n  const { startTracking } = useMouseDragDetector({\n    onClick,\n    onDragStart,\n  });\n\n  const onMouseDown = React.useCallback(\n    (e: React.MouseEvent) => {\n      if (e.defaultPrevented) {\n        return;\n      }\n      // Handle this regardless, to stop mosue clicks\n      // selecting nearby text.\n      e.preventDefault();\n\n      if (isSimActive) {\n        return;\n      }\n\n      if (e.button !== 0) {\n        return;\n      }\n\n      startTracking(e);\n    },\n    [isSimActive, startTracking]\n  );\n\n  let body: React.ReactNode;\n  let rect: Rectangle;\n  if (!def) {\n    body = (\n      <rect\n        x={x}\n        y={y}\n        width={50}\n        height={50}\n        fill={isSelected ? \"goldenrod\" : \"red\"}\n      />\n    );\n    rect = { p1: ZeroPoint, p2: { x: 50, y: 50 } };\n  } else {\n    const { hitRect } = def.visual;\n    body = getNodeVisualElement(\n      elementId,\n      elementIdPath,\n      evolverState,\n      def.visual\n    );\n    rect = hitRect;\n  }\n\n  const transform = x != 0 || y != 0 ? `translate(${x}, ${y})` : undefined;\n  return (\n    <g transform={transform}>\n      <g\n        id={getElementHtmlId(editorId, elementId)}\n        className={cls(\n          \"circuit-field-element\",\n          isSelected && \"element-selected\"\n        )}\n        onMouseDown={onMouseDown}\n        onContextMenu={onContextMenu}\n      >\n        {body}\n      </g>\n      <NodeName elementId={elementId} hitRect={rect} />\n      {renderContextMenu(({ point }) => (\n        <ElementContextMenu\n          elementId={elementId}\n          fieldPosition={getCoords(point)}\n        />\n      ))}\n    </g>\n  );\n});\n\ninterface NodeNameProps extends NodeProps {\n  hitRect: Rectangle;\n}\nconst NodeName: React.FC<NodeNameProps> = React.memo(function NodeName({\n  elementId,\n  hitRect,\n}) {\n  const { zoomFactor } = useViewportContext();\n  const elementName = useSelector((s) =>\n    elementFieldDisplayNameFromElementId(s, elementId)\n  );\n\n  // FIXME: This is really rough, especially the y offset.\n  // There is a noticable jump in position between >1 and >1 scale.\n  const textScale = Math.max(0.7, zoomFactor);\n  let textYOffset = 15;\n  if (textScale > 1) {\n    textYOffset -= textScale * 2;\n  } else {\n    textYOffset += (1 / textScale) * 7;\n  }\n\n  if (!elementName) {\n    return null;\n  }\n\n  return (\n    <text\n      fontSize={`${1.2 / textScale}em`}\n      className={interaction[\"text-unselectable\"]}\n      textAnchor=\"middle\"\n      x={hitRect.p1.x + (hitRect.p2.x - hitRect.p1.x) / 2}\n      y={hitRect.p2.y + textYOffset}\n    >\n      {elementName}\n    </text>\n  );\n});\n\nexport default Element;\n","import Element from \"./Element\";\nexport * from \"./Element\";\nexport default Element;\n","import * as React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { Point } from \"@/geometry\";\n\nimport useSelector from \"@/hooks/useSelector\";\n\nimport { elementTypeToCircuitId } from \"@/elements/definitions/integrated-circuits/utils\";\n\nimport { renameElement } from \"@/actions/element-rename\";\nimport { viewCircuit } from \"@/actions/view-circuit\";\n\nimport {\n  elementNameOrDefaultFromElementIdSelector,\n  elementTypeFromElementIdSelector,\n} from \"@/services/circuit-graph/selectors/elements\";\nimport { isSimActiveSelector } from \"@/services/simulator-control/selectors/run\";\n\nimport Menu from \"@/components/Menus/Menu\";\nimport DividerMenuItem from \"@/components/Menus/DividerMenuItem\";\nimport EditableTextMenuItem from \"@/components/Menus/EditableTextMenuItem\";\nimport MenuItem from \"@/components/Menus/MenuItem\";\n\nimport { useCircuitEditor } from \"../../../contexts/circuit-editor-context\";\n\nimport ContextMenuItems from \"./ContextMenuItems\";\n\nexport interface NodeContextMenuProps {\n  fieldPosition: Point;\n  elementId: string;\n}\n\nconst ElementContextMenu: React.FC<NodeContextMenuProps> = ({\n  elementId,\n  fieldPosition,\n}) => {\n  const dispatch = useDispatch();\n\n  const { elementIdPath } = useCircuitEditor();\n\n  const isSimActive = useSelector(isSimActiveSelector);\n\n  const elementName = useSelector((state) =>\n    elementNameOrDefaultFromElementIdSelector(state, elementId)\n  );\n  const elementType = useSelector((state) =>\n    elementTypeFromElementIdSelector(state, elementId)\n  );\n  const elementCircuitId = elementType\n    ? elementTypeToCircuitId(elementType)\n    : null;\n\n  const [isRenaming, setIsRenaming] = React.useState(false);\n  const onRename = React.useCallback(() => {\n    setIsRenaming(true);\n  }, []);\n  const onRenameCancel = React.useCallback(() => {\n    setIsRenaming(false);\n  }, []);\n  const onRenameCommit = React.useCallback(\n    (value: string) => {\n      setIsRenaming(false);\n      dispatch(renameElement(elementId, value));\n    },\n    [dispatch, elementId]\n  );\n\n  const onOpenCircuitInNewWindow = React.useCallback(() => {\n    if (!elementCircuitId) {\n      return;\n    }\n    dispatch(\n      viewCircuit(elementCircuitId, [...elementIdPath, elementId], {\n        newWindow: true,\n      })\n    );\n  }, [elementIdPath, dispatch, elementCircuitId, elementId]);\n\n  if (isSimActive) {\n    return null;\n  }\n\n  return (\n    <Menu>\n      <EditableTextMenuItem\n        defaultValue={elementName ?? \"<unknown>\"}\n        label={<span style={{ fontWeight: 600 }}>{elementName}</span>}\n        isEditing={isRenaming}\n        onRequestEdit={onRename}\n        onCommit={onRenameCommit}\n        onCancel={onRenameCancel}\n      />\n      <DividerMenuItem />\n      {elementCircuitId && (\n        <>\n          <MenuItem onClick={onOpenCircuitInNewWindow}>\n            Open in New Window\n          </MenuItem>\n          <DividerMenuItem />\n        </>\n      )}\n      <ContextMenuItems fieldPosition={fieldPosition} />\n    </Menu>\n  );\n};\n\nexport default ElementContextMenu;\n","import * as React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { cls } from \"@/utils\";\nimport { describeArc } from \"@/svg\";\nimport { getModifiers } from \"@/modifier-keys\";\n\nimport useSelector from \"@/hooks/useSelector\";\nimport { useMouseDragDetector } from \"@/hooks/useMouseDragDetector\";\n\nimport { useContextMenu } from \"@/components/ContextMenu\";\n\nimport { circuitEditorDragStartWire } from \"@/actions/circuit-editor-drag-start-wire\";\n\nimport { elementPinPositionFromElementPinSelector } from \"@/services/circuit-layout/selectors/element-pin-positions\";\nimport { pinDirectionFromElementPinSelector } from \"@/services/circuit-graph/selectors/pins\";\nimport { isPinDragWireTarget } from \"@/services/circuit-editor-drag/selectors/drag-wire\";\n\nimport { useCircuitEditor } from \"../../../../contexts/circuit-editor-context\";\nimport { getElementPinHtmlId } from \"../../../../ids\";\n\nimport { useMouseCoords } from \"../../hooks/useMouseCoords\";\n\nimport PinContextMenu from \"../PinContextMenu\";\n\nimport styles from \"./ElementPin.module.css\";\n\nexport interface ElementPinProps {\n  elementId: string;\n  pinId: string;\n}\n\nconst ElementPin: React.FC<ElementPinProps> = React.memo(function ElementPin({\n  elementId,\n  pinId,\n}) {\n  const dispatch = useDispatch();\n\n  const { editorId } = useCircuitEditor();\n  const getMouseCoords = useMouseCoords();\n\n  const { openContextMenu, renderContextMenu } = useContextMenu();\n\n  const [highlight, setHighlight] = React.useState(false);\n\n  const position = useSelector((s) =>\n    elementPinPositionFromElementPinSelector(s, elementId, pinId)\n  );\n  const direction = useSelector((s) =>\n    pinDirectionFromElementPinSelector(s, elementId, pinId)\n  );\n\n  const isDragTargetPin = useSelector((state) =>\n    isPinDragWireTarget(state, elementId, pinId)\n  );\n\n  const onDragStart = React.useCallback(\n    (e, originalPoint) => {\n      const p = getMouseCoords(originalPoint);\n      const modifierKeys = getModifiers(e);\n      dispatch(\n        circuitEditorDragStartWire(\n          p,\n          { type: \"pin\", pin: { elementId, pinId } },\n          modifierKeys,\n          editorId\n        )\n      );\n    },\n    [dispatch, editorId, getMouseCoords, elementId, pinId]\n  );\n\n  const { startTracking } = useMouseDragDetector({\n    onDragStart,\n  });\n\n  const onMouseDown = React.useCallback(\n    (e: React.MouseEvent) => {\n      if (e.button !== 0) {\n        return;\n      }\n\n      if (e.defaultPrevented) {\n        return;\n      }\n      e.preventDefault();\n\n      e.stopPropagation();\n\n      startTracking(e);\n    },\n    [startTracking]\n  );\n\n  const onMouseEnter = React.useCallback(() => {\n    setHighlight(true);\n  }, []);\n  const onMouseLeave = React.useCallback(() => {\n    setHighlight(false);\n  }, []);\n\n  const onContextMenu = React.useCallback(\n    (e: React.MouseEvent) => {\n      if (e.defaultPrevented) {\n        return;\n      }\n      e.preventDefault();\n\n      openContextMenu(e);\n    },\n    [openContextMenu]\n  );\n\n  if (!position) {\n    return null;\n  }\n\n  const { x, y } = position;\n\n  let pinVisual: JSX.Element;\n\n  if (direction === \"input\") {\n    pinVisual = (\n      <path\n        d={describeArc(x, y, 4, -45, 225)}\n        strokeWidth={2}\n        className={cls(\n          styles[\"element-pin-input\"],\n          isDragTargetPin && styles[\"is-drag-target\"],\n          highlight && styles.highlight\n        )}\n      />\n    );\n  } else {\n    pinVisual = (\n      <circle\n        className={cls(\n          styles[\"element-pin-output\"],\n          isDragTargetPin && styles[\"is-drag-target\"],\n          highlight && styles.highlight\n        )}\n        cx={x}\n        cy={y}\n        r={3}\n      />\n    );\n  }\n\n  return (\n    <g\n      id={getElementPinHtmlId(editorId, elementId, pinId)}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      onContextMenu={onContextMenu}\n    >\n      {pinVisual}\n      <circle\n        stroke=\"none\"\n        fill=\"transparent\"\n        cx={x}\n        cy={y}\n        r={5}\n        onMouseDown={onMouseDown}\n      />\n      {renderContextMenu(\n        <PinContextMenu elementId={elementId} pinId={pinId} />\n      )}\n    </g>\n  );\n});\n\nexport default ElementPin;\n","import ElementPin from \"./ElementPin\";\nexport default ElementPin;\n","import * as React from \"react\";\n\nimport useSelector from \"@/hooks/useSelector\";\n\nimport { elementDefinitionFromElementIdSelector } from \"@/services/circuit-graph/selectors/element-def\";\n\nimport ElementPin from \"./ElementPin\";\n\nexport interface NodePinsProps {\n  elementId: string;\n}\n\nconst ElementPins: React.FC<NodePinsProps> = React.memo(function ElementPins({\n  elementId,\n}) {\n  const def = useSelector((state) =>\n    elementDefinitionFromElementIdSelector(state, elementId)\n  );\n\n  const pins = def?.pins ?? {};\n\n  const elements = Object.keys(pins).map((pinId) => (\n    <ElementPin key={pinId} elementId={elementId} pinId={pinId} />\n  ));\n\n  return <>{elements}</>;\n});\n\nexport default ElementPins;\n","import * as React from \"react\";\n\nimport useSelector from \"@/hooks/useSelector\";\n\nimport { elementIdsFromCircuitIdSelector } from \"@/services/circuit-graph/selectors/elements\";\n\nimport { useCircuitEditor } from \"../../../contexts/circuit-editor-context\";\n\nimport ElementPins from \"./ElementPins\";\n\nconst ElementPinsLayer: React.FC = React.memo(function ElementPinsLayer() {\n  const { circuitId } = useCircuitEditor();\n  const elementIds = useSelector((state) =>\n    elementIdsFromCircuitIdSelector(state, circuitId)\n  );\n\n  const elements = elementIds.map((elementId) => (\n    <ElementPins key={elementId} elementId={elementId} />\n  ));\n\n  return <g>{elements}</g>;\n});\n\nexport default ElementPinsLayer;\n","import * as React from \"react\";\n\nimport { cls } from \"@/utils\";\n\nimport useSelector from \"@/hooks/useSelector\";\n\nimport { elementDefinitionFromTypeSelector } from \"@/services/element-types/selectors/element-types\";\nimport { getNodeVisualElement } from \"@/elements/visuals\";\n\nexport interface ElementVisualProps {\n  className?: string;\n  elementId?: string;\n  x?: number;\n  y?: number;\n  elementType: string;\n}\n\nconst EmptyState = Object.freeze({});\n\nconst ElementVisual: React.FC<ElementVisualProps> = React.memo(\n  function ElementVisual({ className, elementId, x = 0, y = 0, elementType }) {\n    const def = useSelector((state) =>\n      elementDefinitionFromTypeSelector(state, elementType)\n    );\n\n    let body: React.ReactNode;\n    if (!def) {\n      body = <rect x={x} y={y} width={50} height={50} fill=\"red\" />;\n    } else {\n      body = getNodeVisualElement(elementId, [], EmptyState, def.visual);\n    }\n\n    const transform = x != 0 || y != 0 ? `translate(${x}, ${y})` : undefined;\n    return (\n      <g className={cls(className, \"element-visual\")} transform={transform}>\n        {body}\n      </g>\n    );\n  }\n);\n\nexport default ElementVisual;\n","import * as React from \"react\";\n\nimport useSelector from \"@/hooks/useSelector\";\n\nimport { elementIdsFromCircuitIdSelector } from \"@/services/circuit-graph/selectors/elements\";\n\nimport { useCircuitEditor } from \"../../../contexts/circuit-editor-context\";\n\nimport Element from \"./Element\";\n\nconst ElementsLayer: React.FC = React.memo(function ElementsLayer() {\n  const { circuitId } = useCircuitEditor();\n  const elementIds = useSelector((state) =>\n    elementIdsFromCircuitIdSelector(state, circuitId)\n  );\n\n  const elements = elementIds.map((elementId) => {\n    return <Element key={elementId} elementId={elementId} />;\n  });\n\n  return <g>{elements}</g>;\n});\nexport default ElementsLayer;\n","import * as React from \"react\";\n\nimport { Point } from \"@/geometry\";\n\nimport Menu from \"@/components/Menus/Menu\";\n\nimport ContextMenuItems from \"./ContextMenuItems\";\n\nexport interface FieldContextMenuProps {\n  fieldPosition: Point;\n}\nconst FieldContextMenu: React.FC<FieldContextMenuProps> = ({\n  fieldPosition,\n}) => {\n  return (\n    <Menu>\n      <ContextMenuItems fieldPosition={fieldPosition} />\n    </Menu>\n  );\n};\n\nexport default FieldContextMenu;\n","import * as React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { Point } from \"@/geometry\";\n\nimport useSelector from \"@/hooks/useSelector\";\nimport { useMouseDragDetector } from \"@/hooks/useMouseDragDetector\";\n\nimport { getModifiers } from \"@/modifier-keys\";\n\nimport { isEditorDraggingSelector } from \"@/services/circuit-editor-drag/selectors/drag\";\nimport { selectionRectSelector } from \"@/services/circuit-editor-drag/selectors/drag-select\";\n\nimport { useContextMenu } from \"@/components/ContextMenu\";\n\nimport { clearSelection } from \"@/actions/select-clear\";\nimport { circuitEditorDragStartSelect } from \"@/actions/circuit-editor-drag-start-select\";\n\nimport { useViewportContext } from \"../../../contexts/viewport-context\";\nimport { useCircuitEditor } from \"../../../contexts/circuit-editor-context\";\n\nimport { useMouseCoords } from \"../hooks/useMouseCoords\";\n\nimport FieldContextMenu from \"./FieldContextMenu\";\n\nconst DragSelectLayer: React.FC = React.memo(function DragSelectLayer() {\n  const dispatch = useDispatch();\n  const { editorId } = useCircuitEditor();\n  const { zoomFactor } = useViewportContext();\n\n  const isDragging = useSelector((state) =>\n    isEditorDraggingSelector(state, editorId)\n  );\n\n  const selectionRect = useSelector(selectionRectSelector);\n\n  function counterScale(value: number) {\n    return value * (1 / zoomFactor);\n  }\n\n  const getCoords = useMouseCoords();\n\n  const { openContextMenu, renderContextMenu } = useContextMenu();\n\n  const onContextMenu = React.useCallback(\n    (e: React.MouseEvent) => {\n      if (e.defaultPrevented) {\n        return;\n      }\n      e.preventDefault();\n      openContextMenu(e);\n    },\n    [openContextMenu]\n  );\n\n  const onClick = React.useCallback(\n    (e: MouseEvent) => {\n      if (e.button !== 0) {\n        return;\n      }\n      const modifiers = getModifiers(e);\n      if (!modifiers.ctrlMetaKey && !modifiers.shiftKey) {\n        dispatch(clearSelection());\n      }\n    },\n    [dispatch]\n  );\n\n  const onDragStart = React.useCallback(\n    (e: MouseEvent, originalPoint: Point) => {\n      const p = getCoords(originalPoint);\n      const modifierKeys = getModifiers(e);\n      dispatch(circuitEditorDragStartSelect(p, modifierKeys, editorId));\n    },\n    [dispatch, editorId, getCoords]\n  );\n\n  const { startTracking: onMouseDown } = useMouseDragDetector({\n    onClick,\n    onDragStart,\n  });\n\n  return (\n    <g className=\"circuit-editor-mouse-layer\">\n      <rect\n        /*\n         Our width and height get scaled by the parent scaler.\n         We have to be inside the parent scaler to make our mouse coordinate values match up.\n         Scale us back out so we continue to cover the whole screen.\n         */\n        width={`${counterScale(1) * 100}%`}\n        height={`${counterScale(1) * 100}%`}\n        fill=\"transparent\"\n        onMouseDown={onMouseDown}\n        onContextMenu={onContextMenu}\n      />\n      {isDragging && selectionRect && (\n        <g\n          transform={`translate(${selectionRect.p1.x}, ${selectionRect.p1.y})`}\n        >\n          <rect\n            width={selectionRect.p2.x - selectionRect.p1.x}\n            height={selectionRect.p2.y - selectionRect.p1.y}\n            strokeWidth={counterScale(2)}\n            strokeDasharray={`${counterScale(5)} ${counterScale(3)}`}\n            stroke=\"skyblue\"\n            fill=\"transparent\"\n          />\n        </g>\n      )}\n      {renderContextMenu(({ point }) => (\n        <FieldContextMenu fieldPosition={getCoords(point)} />\n      ))}\n    </g>\n  );\n});\n\nexport default DragSelectLayer;\n","import * as React from \"react\";\nimport { v4 as uuidV4 } from \"uuid\";\n\nimport { useViewportContext } from \"../../../contexts/viewport-context\";\n\nconst GridBackground: React.FC = React.memo(function GridBackground() {\n  const [gridId] = React.useState(`grid-${uuidV4()}`);\n  const { zoomFactor } = useViewportContext();\n\n  const gridSize = 50 * zoomFactor;\n\n  return (\n    <svg width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\">\n      <defs>\n        <pattern\n          id={gridId}\n          width={gridSize}\n          height={gridSize}\n          patternUnits=\"userSpaceOnUse\"\n        >\n          <path\n            d={`M ${gridSize} 0 L 0 0 0 ${gridSize}`}\n            fill=\"none\"\n            stroke=\"gray\"\n            strokeWidth={0.5}\n          />\n        </pattern>\n      </defs>\n\n      <rect width=\"100%\" height=\"100%\" fill={`url(#${gridId})`} />\n    </svg>\n  );\n});\n\nexport default GridBackground;\n","import * as React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { v4 as uuidV4 } from \"uuid\";\n\nimport useSelector from \"@/hooks/useSelector\";\n\nimport { wireSegmentSetLine } from \"@/actions/wire-segment-set-line\";\n\nimport { pinDirectionFromElementPinSelector } from \"@/services/circuit-graph/selectors/pins\";\nimport { wireSegmentIdFromElementPinSelector } from \"@/services/circuit-graph/selectors/wires\";\nimport { wireLineCandidatesForSegmentId } from \"@/services/circuit-graph/selectors/lines\";\nimport { isSimActiveSelector } from \"@/services/simulator-control/selectors/run\";\n\nimport Menu from \"@/components/Menus/Menu\";\nimport CheckboxMenuItem from \"@/components/Menus/CheckboxMenuItem\";\nimport SubMenuItem from \"@/components/Menus/SubMenuItem\";\n\nexport interface PinContextMenuProps {\n  elementId: string;\n  pinId: string;\n}\n\nconst PinContextMenu: React.FC<PinContextMenuProps> = ({\n  elementId,\n  pinId,\n}) => {\n  const isSimActive = useSelector(isSimActiveSelector);\n\n  const direction = useSelector((state) =>\n    pinDirectionFromElementPinSelector(state, elementId, pinId)\n  );\n\n  const segmentId = useSelector((state) =>\n    wireSegmentIdFromElementPinSelector(state, elementId, pinId)\n  );\n\n  if (isSimActive || !direction || !segmentId) {\n    return null;\n  }\n\n  return (\n    <Menu>\n      <SubMenuItem\n        content={<SetLineIdMenu segmentId={segmentId} direction={direction} />}\n      >\n        Set {direction === \"input\" ? \"Input\" : \"Output\"}\n      </SubMenuItem>\n    </Menu>\n  );\n};\n\nexport default PinContextMenu;\n\ninterface SetLineIdMenuProps {\n  direction: \"input\" | \"output\";\n  segmentId: string;\n}\nconst SetLineIdMenu: React.FC<SetLineIdMenuProps> = ({\n  segmentId,\n  direction,\n}) => {\n  const dispatch = useDispatch();\n\n  const candidates = useSelector((state) =>\n    wireLineCandidatesForSegmentId(state, segmentId)\n  );\n  return (\n    <Menu>\n      <CheckboxMenuItem\n        value={false}\n        onChange={() => dispatch(wireSegmentSetLine(segmentId, uuidV4()))}\n      >\n        New {direction === \"input\" ? \"Input\" : \"Output\"}\n      </CheckboxMenuItem>\n      {candidates.map(({ lineId, name, selected }) => (\n        <CheckboxMenuItem\n          key={lineId}\n          value={selected}\n          onChange={() => dispatch(wireSegmentSetLine(segmentId, lineId))}\n        >\n          {name}\n        </CheckboxMenuItem>\n      ))}\n    </Menu>\n  );\n};\n","import * as React from \"react\";\n\nimport useSelector from \"@/hooks/useSelector\";\n\nimport {\n  wireJointIdsFromWireIdSelector,\n  wireSegmentIdsFromWireIdSelector,\n} from \"@/services/circuit-graph/selectors/wires\";\n\nimport { useCircuitEditor } from \"../../../contexts/circuit-editor-context\";\nimport { getWireHtmlId } from \"../../../ids\";\n\nimport WireSegment from \"./WireSegment\";\nimport WireJoint from \"./WireJoint\";\n\nexport interface WireProps {\n  wireId: string;\n}\n\nconst Wire: React.FC<WireProps> = ({ wireId }) => {\n  const { editorId } = useCircuitEditor();\n  const wireSegmentIds = useSelector((state) =>\n    wireSegmentIdsFromWireIdSelector(state, wireId)\n  );\n  const wireJointIds = useSelector((state) =>\n    wireJointIdsFromWireIdSelector(state, wireId)\n  );\n\n  const segmentElements = wireSegmentIds.map((id) => (\n    <WireSegment key={id} wireId={wireId} wireSegmentId={id} />\n  ));\n\n  // TODO: Might want to render joints on a new layer so they are always rendered above other wire segments\n  const jointElements = wireJointIds.map((id) => (\n    <WireJoint key={id} wireId={wireId} jointId={id} />\n  ));\n\n  return (\n    <g id={getWireHtmlId(editorId, wireId)}>\n      {segmentElements}\n      {jointElements}\n    </g>\n  );\n};\n\nexport default Wire;\n","import * as React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { cls } from \"@/utils\";\nimport { getModifiers } from \"@/modifier-keys\";\nimport { describeArc } from \"@/svg\";\n\nimport { useMouseDragDetector } from \"@/hooks/useMouseDragDetector\";\nimport useSelector from \"@/hooks/useSelector\";\nimport { getSelectMode } from \"@/selection-mode\";\n\nimport { circuitEditorDragStartWireJoint } from \"@/actions/circuit-editor-drag-start-wire-joint\";\nimport { selectWireJoints } from \"@/actions/select-wire-joints\";\nimport { circuitEditorDragStartWire } from \"@/actions/circuit-editor-drag-start-wire\";\n\nimport { wireJointPositionFromJointIdSelector } from \"@/services/circuit-graph/selectors/wire-positions\";\nimport { isJointSelectedFromJointIdSelector } from \"@/services/selection/selectors/selection\";\nimport { isSimActiveSelector } from \"@/services/simulator-control/selectors/run\";\nimport { isJointDragWireTarget } from \"@/services/circuit-editor-drag/selectors/drag-wire\";\n\nimport { useCircuitEditor } from \"../../../../contexts/circuit-editor-context\";\nimport { getWireJointHtmlId } from \"../../../../ids\";\n\nimport { useMouseCoords } from \"../../hooks/useMouseCoords\";\n\nimport styles from \"./WireJoint.module.css\";\n\nexport interface WireJointProps {\n  wireId: string;\n  jointId: string;\n}\n\nconst WireJoint: React.FC<WireJointProps> = ({ wireId, jointId }) => {\n  const dispatch = useDispatch();\n  const { editorId } = useCircuitEditor();\n  const getCoords = useMouseCoords();\n  const isSimActive = useSelector(isSimActiveSelector);\n\n  const position = useSelector((state) =>\n    wireJointPositionFromJointIdSelector(state, jointId)\n  );\n  const isSelected = useSelector((state) =>\n    isJointSelectedFromJointIdSelector(state, jointId)\n  );\n  const isDragTargetJoint = useSelector((state) =>\n    isJointDragWireTarget(state, jointId)\n  );\n\n  const [mouseOver, setMouseOver] = React.useState(false);\n\n  const onMouseOver = () => {\n    setMouseOver(true);\n  };\n\n  const onMouseLeave = () => {\n    setMouseOver(false);\n  };\n\n  const onDragStart = React.useCallback(\n    (e: MouseEvent) => {\n      const p = getCoords({ x: e.pageX, y: e.pageY });\n      const modifierKeys = getModifiers(e);\n      dispatch(\n        circuitEditorDragStartWireJoint(\n          p,\n          wireId,\n          jointId,\n          modifierKeys,\n          editorId\n        )\n      );\n    },\n    [dispatch, editorId, getCoords, jointId, wireId]\n  );\n\n  const onNewSegmentMouseDown = (e: React.MouseEvent) => {\n    const p = getCoords({ x: e.pageX, y: e.pageY });\n    const modifierKeys = getModifiers(e);\n    dispatch(\n      circuitEditorDragStartWire(\n        p,\n        {\n          type: \"joint\",\n          jointId,\n        },\n        modifierKeys,\n        editorId\n      )\n    );\n  };\n\n  const onClick = React.useCallback(\n    (e: MouseEvent) => {\n      if (e.defaultPrevented) {\n        return;\n      }\n\n      e.preventDefault();\n\n      const modifierKeys = getModifiers(e);\n      const selectionMode = getSelectMode(modifierKeys);\n      dispatch(selectWireJoints(jointId, selectionMode));\n    },\n    [dispatch, jointId]\n  );\n\n  const { startTracking } = useMouseDragDetector({\n    onDragStart,\n    onClick,\n  });\n\n  const newSegmentArc = `${describeArc(\n    position.x,\n    position.y,\n    8.5,\n    0,\n    180\n  )} ${describeArc(position.x, position.y, 8.5, 180, 0)} z ${describeArc(\n    position.x,\n    position.y,\n    5,\n    0,\n    180\n  )} ${describeArc(position.x, position.y, 5, 180, 0)}`;\n\n  if (!position) {\n    return null;\n  }\n\n  return (\n    <g\n      id={getWireJointHtmlId(editorId, jointId)}\n      onMouseOver={onMouseOver}\n      onMouseLeave={onMouseLeave}\n    >\n      <circle\n        cx={position.x}\n        cy={position.y}\n        r={6}\n        fill=\"transparent\"\n        stroke=\"none\"\n      />\n      <circle\n        className={cls(isDragTargetJoint && styles[\"is-drag-target\"])}\n        cx={position.x}\n        cy={position.y}\n        r={3}\n        fill=\"black\"\n        stroke=\"none\"\n      />\n      {!isSimActive && !isDragTargetJoint && (mouseOver || isSelected) && (\n        <g\n          className={cls(\n            styles[\"wire-joint--interactor\"],\n            isSelected && styles[\"selected\"]\n          )}\n        >\n          {mouseOver && (\n            <g onMouseDown={onNewSegmentMouseDown}>\n              <circle\n                cx={position.x}\n                cy={position.y}\n                r={8.5}\n                stroke=\"none\"\n                fill=\"transparent\"\n                className={styles[\"mouse-detector\"]}\n              />\n              <path\n                shapeRendering=\"geometricPrecision\"\n                stroke=\"none\"\n                fill=\"black\"\n                fillRule=\"evenodd\"\n                d={newSegmentArc}\n              />\n            </g>\n          )}\n          <circle\n            cx={position.x}\n            cy={position.y}\n            r={3}\n            fill=\"black\"\n            stroke=\"none\"\n            onMouseDown={startTracking}\n          />\n        </g>\n      )}\n    </g>\n  );\n};\n\nexport default WireJoint;\n","import WireJoint from \"./WireJoint\";\nexport default WireJoint;\n","import * as React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { cls } from \"@/utils\";\n\nimport {\n  dotProduct,\n  normalize,\n  Point,\n  pointAdd,\n  pointSubtract,\n  scale,\n  snapValue,\n} from \"@/geometry\";\nimport { getModifiers } from \"@/modifier-keys\";\nimport { getSelectMode } from \"@/selection-mode\";\n\nimport useSelector from \"@/hooks/useSelector\";\nimport { useMouseDragDetector } from \"@/hooks/useMouseDragDetector\";\n\nimport {\n  endPositionForWireSegmentId,\n  startPositionForWireSegmentId,\n} from \"@/services/circuit-graph/selectors/wire-positions\";\nimport { isSimActiveSelector } from \"@/services/simulator-control/selectors/run\";\nimport { isDraggingSelector } from \"@/services/circuit-editor-drag/selectors/drag\";\nimport {\n  segmentIsWiredSelector,\n  wireSegmentPoweredSelector,\n  wireSegmentTypeFromSegmentIdSelector,\n} from \"@/services/circuit-graph/selectors/wires\";\nimport { gridJointSnapSelector } from \"@/services/circuit-editor-drag/selectors/snap\";\nimport { isSegmentSelectedFromSegmentIdSelector } from \"@/services/selection/selectors/selection\";\nimport { segmentDragWireTargetOffset } from \"@/services/circuit-editor-drag/selectors/drag-wire\";\n\nimport { circuitEditorDragStartWireSegment } from \"@/actions/circuit-editor-drag-start-wire-segment\";\nimport { selectWireSegments } from \"@/actions/select-wire-segments\";\n\nimport { useCircuitEditor } from \"../../../../contexts/circuit-editor-context\";\n\nimport { useMouseCoords } from \"../../hooks/useMouseCoords\";\n\nimport styles from \"./WireSegment.module.css\";\n\nexport interface WireSegmentProps {\n  wireId: string;\n  wireSegmentId: string;\n}\n\nconst WireSegment: React.FC<WireSegmentProps> = ({ wireId, wireSegmentId }) => {\n  const dispatch = useDispatch();\n  const { editorId, elementIdPath } = useCircuitEditor();\n  const getCoords = useMouseCoords();\n\n  const isMouseGesturePending = React.useRef<boolean>(false);\n  const [insertJointPos, setInsertJointPos] = React.useState<Point | null>(\n    null\n  );\n\n  const isSimActive = useSelector(isSimActiveSelector);\n\n  const isSelected = useSelector((state) =>\n    isSegmentSelectedFromSegmentIdSelector(state, wireSegmentId)\n  );\n  const isPowered = useSelector((state) =>\n    wireSegmentPoweredSelector(state, elementIdPath, wireSegmentId)\n  );\n  const isWired = useSelector((state) =>\n    segmentIsWiredSelector(state, wireSegmentId)\n  );\n  const dragTargetWireLength = useSelector((state) =>\n    segmentDragWireTargetOffset(state, wireSegmentId)\n  );\n\n  const isDragging = useSelector(isDraggingSelector);\n\n  const snap = useSelector(gridJointSnapSelector);\n\n  const segmentType = useSelector((state) =>\n    wireSegmentTypeFromSegmentIdSelector(state, wireSegmentId)\n  );\n\n  const startPos = useSelector((state) =>\n    startPositionForWireSegmentId(state, wireSegmentId)\n  );\n  const endPos = useSelector((state) =>\n    endPositionForWireSegmentId(state, wireSegmentId)\n  );\n\n  const lineVector = normalize(pointSubtract(endPos, startPos));\n\n  const dragConnectPos = dragTargetWireLength\n    ? pointAdd(startPos, scale(lineVector, dragTargetWireLength))\n    : null;\n\n  const onMouseMove = (e: React.MouseEvent<SVGLineElement>) => {\n    if (isDragging || isSimActive || isMouseGesturePending.current) {\n      return;\n    }\n\n    const modifierKeys = getModifiers(e);\n    const p = getCoords({ x: e.pageX, y: e.pageY });\n    const v = pointSubtract(p, startPos);\n    const d = dotProduct(v, lineVector);\n    const dotPos = pointAdd(startPos, scale(lineVector, d));\n\n    if (!modifierKeys.ctrlMetaKey) {\n      // If snapping is enabled, snap to the axis the line follows.\n      if (Math.abs(lineVector.x) === 1) {\n        dotPos.x = snapValue(dotPos.x, snap);\n      }\n      if (Math.abs(lineVector.y) === 1) {\n        dotPos.y = snapValue(dotPos.y, snap);\n      }\n    }\n\n    setInsertJointPos(dotPos);\n  };\n\n  const onMouseLeave = () => {\n    if (!isMouseGesturePending.current) {\n      setInsertJointPos(null);\n    }\n  };\n\n  const onDragStart = React.useCallback(\n    (e: MouseEvent) => {\n      isMouseGesturePending.current = false;\n      if (!insertJointPos) {\n        return;\n      }\n\n      const modifierKeys = getModifiers(e);\n      dispatch(\n        circuitEditorDragStartWireSegment(\n          insertJointPos,\n          wireId,\n          wireSegmentId,\n          modifierKeys,\n          editorId\n        )\n      );\n\n      setInsertJointPos(null);\n    },\n    [dispatch, editorId, insertJointPos, wireId, wireSegmentId]\n  );\n\n  const onClick = React.useCallback(\n    (e: MouseEvent) => {\n      if (e.defaultPrevented) {\n        return;\n      }\n\n      e.preventDefault();\n\n      isMouseGesturePending.current = false;\n      setInsertJointPos(null);\n\n      const modifierKeys = getModifiers(e);\n      const selectionMode = getSelectMode(modifierKeys);\n      dispatch(selectWireSegments(wireSegmentId, selectionMode));\n    },\n    [dispatch, wireSegmentId]\n  );\n\n  const { startTracking } = useMouseDragDetector({\n    onDragStart,\n    onClick,\n  });\n\n  const onMouseDown = (e: React.MouseEvent) => {\n    if (e.defaultPrevented) {\n      return;\n    }\n\n    if (isDragging || isSimActive) {\n      return;\n    }\n\n    isMouseGesturePending.current = true;\n    startTracking(e);\n  };\n\n  return (\n    <g\n      className={cls(\n        styles[\"wire-segment\"],\n        !isWired && styles[\"unwired\"],\n        isSelected && styles[\"selected\"],\n        isPowered && styles[\"powered\"]\n      )}\n      onMouseMove={onMouseMove}\n      onMouseLeave={onMouseLeave}\n      onMouseDown={onMouseDown}\n    >\n      <line\n        x1={startPos.x}\n        x2={endPos.x}\n        y1={startPos.y}\n        y2={endPos.y}\n        stroke=\"inherit\"\n        strokeWidth={2}\n      />\n      <line\n        x1={startPos.x}\n        x2={endPos.x}\n        y1={startPos.y}\n        y2={endPos.y}\n        stroke=\"transparent\"\n        strokeWidth={4}\n      />\n      {(segmentType === \"input\" || segmentType === \"input-output\") && (\n        <circle\n          cx={endPos.x}\n          cy={endPos.y}\n          r={2}\n          stroke=\"none\"\n          fill=\"inherit\"\n        />\n      )}\n      {!dragConnectPos && insertJointPos && (\n        <circle\n          cx={insertJointPos.x}\n          cy={insertJointPos.y}\n          r={3}\n          fill=\"orange\"\n          stroke=\"none\"\n        />\n      )}\n      {dragConnectPos && (\n        <circle\n          className={styles[\"drag-wire-target\"]}\n          cx={dragConnectPos.x}\n          cy={dragConnectPos.y}\n          r={3}\n          stroke=\"none\"\n        />\n      )}\n    </g>\n  );\n};\n\nexport default WireSegment;\n","import WireSegment from \"./WireSegment\";\nexport default WireSegment;\n","import * as React from \"react\";\n\nimport useSelector from \"@/hooks/useSelector\";\n\nimport { wireIdsFromCircuitIdSelector } from \"@/services/circuit-graph/selectors/wires\";\n\nimport { useCircuitEditor } from \"../../../contexts/circuit-editor-context\";\n\nimport Wire from \"./Wire\";\n\nconst WiresLayer = React.memo(function WiresLayer() {\n  const { circuitId } = useCircuitEditor();\n  const wireIds = useSelector((state) =>\n    wireIdsFromCircuitIdSelector(state, circuitId)\n  );\n\n  const elements = wireIds.map((wireId) => (\n    <Wire key={wireId} wireId={wireId} />\n  ));\n\n  return <g className=\"circuit-editor-wires-layer\">{elements}</g>;\n});\n\nexport default WiresLayer;\n","import * as React from \"react\";\n\nexport interface FieldSvgElementContext {\n  svgRef: React.RefObject<SVGSVGElement | null>;\n  scalerRef: React.RefObject<SVGGraphicsElement | null>;\n}\nconst nullRef = { current: null };\nexport const fieldSvgElementContext = React.createContext<\n  FieldSvgElementContext\n>({ svgRef: nullRef, scalerRef: nullRef });\n\nconst ContextProvider = fieldSvgElementContext.Provider;\n\nexport const FieldSvgElementProvider: React.FC<{\n  svgRef: React.RefObject<SVGSVGElement | null>;\n  scalerRef: React.RefObject<SVGGraphicsElement | null>;\n}> = ({ svgRef, scalerRef, children }) => {\n  const context = React.useMemo(\n    () => ({\n      svgRef,\n      scalerRef,\n    }),\n    [svgRef, scalerRef]\n  );\n  return <ContextProvider value={context}>{children}</ContextProvider>;\n};\n","import * as React from \"react\";\n\nimport { Point, ZeroPoint } from \"@/geometry\";\n\nimport { fieldSvgElementContext } from \"../contexts/fieldSvgElement\";\nimport { getFieldCoord } from \"../../../utils\";\n\nexport function useMouseCoords(): (p: Point) => Point {\n  const { svgRef, scalerRef } = React.useContext(fieldSvgElementContext);\n  return React.useCallback(\n    (p: Point) => {\n      if (!svgRef.current || !scalerRef.current) {\n        return p;\n      }\n      return getFieldCoord(svgRef.current, scalerRef.current, p);\n    },\n    [svgRef, scalerRef]\n  );\n}\n\nexport function useEventMouseCoords(): (\n  e: MouseEvent | React.MouseEvent\n) => Point {\n  const { svgRef, scalerRef } = React.useContext(fieldSvgElementContext);\n  return React.useCallback(\n    (e: MouseEvent | React.MouseEvent) => {\n      if (!svgRef.current || !scalerRef.current) {\n        return ZeroPoint;\n      }\n      const p: Point = {\n        x: e.pageX,\n        y: e.pageY,\n      };\n      return getFieldCoord(svgRef.current, scalerRef.current, p);\n    },\n    [svgRef, scalerRef]\n  );\n}\n","import CircuitFieldSurface from \"./CircuitFieldSurface\";\nexport default CircuitFieldSurface;\n","import * as React from \"react\";\n\nimport useSelector from \"@/hooks/useSelector\";\n\nimport { circuitEditorStateFromIdSelector } from \"@/services/circuit-editors/selectors/editor\";\n\nexport interface CircuitEditorContext {\n  editorId: string;\n  circuitId: string;\n  elementIdPath: string[];\n}\n\nconst circuitEditorContext = React.createContext<CircuitEditorContext>({\n  editorId: \"~none\",\n  circuitId: \"~none\",\n  elementIdPath: [],\n});\n\nexport function useCircuitEditor(): CircuitEditorContext {\n  return React.useContext(circuitEditorContext);\n}\n\nexport interface CircuitEditorProviderProps {\n  editorId: string;\n}\nexport const CircuitEditorProvider: React.FC<CircuitEditorProviderProps> = ({\n  editorId,\n  children,\n}) => {\n  const editorState = useSelector((state) =>\n    circuitEditorStateFromIdSelector(state, editorId)\n  );\n  const { circuitId, elementIdPath } = editorState ?? {\n    circuitId: \"~none\",\n    elementIdPath: [],\n  };\n\n  const context = React.useMemo<CircuitEditorContext>(\n    () => ({\n      editorId,\n      circuitId,\n      elementIdPath: elementIdPath,\n    }),\n    [circuitId, elementIdPath, editorId]\n  );\n\n  if (!editorState) {\n    return null;\n  }\n\n  return (\n    <circuitEditorContext.Provider value={context}>\n      {children}\n    </circuitEditorContext.Provider>\n  );\n};\n","import * as React from \"react\";\n\nexport interface ViewportContext {\n  zoomFactor: number;\n  zoom(factor: number): void;\n}\n\nconst viewportContext = React.createContext<ViewportContext>({\n  zoomFactor: 1,\n  zoom: () => {\n    /* no op */\n  },\n});\n\nexport function useViewportContext(): ViewportContext {\n  return React.useContext(viewportContext);\n}\n\nconst SCALE_FACTOR = 1.03;\n\nexport const ViewportContextProvider: React.FC = ({ children }) => {\n  const [zoomFactor, setZoomFactor] = React.useState(1);\n  const zoom = React.useCallback((delta: number) => {\n    setZoomFactor((zoomFactor) =>\n      delta > 0\n        ? zoomFactor * delta * SCALE_FACTOR\n        : zoomFactor / (-delta * SCALE_FACTOR)\n    );\n  }, []);\n\n  const context = React.useMemo<ViewportContext>(\n    () => ({\n      zoomFactor,\n      zoom,\n    }),\n    [zoom, zoomFactor]\n  );\n  return (\n    <viewportContext.Provider value={context}>\n      {children}\n    </viewportContext.Provider>\n  );\n};\n","import { DragObjectWithType } from \"react-dnd\";\n\nexport const NEW_ELEMENT_DRAG_OBJECT = \"@element/new\" as const;\nexport const newElementDragObject = (elementType: string) => ({\n  type: NEW_ELEMENT_DRAG_OBJECT,\n  payload: { elementType },\n});\nexport type NewElementDragObject = ReturnType<typeof newElementDragObject>;\nexport function isNewElementDragObject(\n  item: DragObjectWithType\n): item is NewElementDragObject {\n  return item.type === NEW_ELEMENT_DRAG_OBJECT;\n}\n","export function getCircuitEditorHtmlId(editorId: string) {\n  return `circuit-editor-${editorId}`;\n}\n\nexport function getElementHtmlId(editorId: string, elementId: string) {\n  return `editor-${editorId}--element-${elementId}`;\n}\n\nexport function getElementPinHtmlId(\n  editorId: string,\n  elementId: string,\n  pinId: string\n): string {\n  return `editor-${editorId}--element-${elementId}--pin-${pinId}`;\n}\n\nexport function getWireHtmlId(editorId: string, wireId: string) {\n  return `editor-${editorId}--wire-${wireId}`;\n}\n\nexport function getWireJointHtmlId(editorId: string, jointId: string) {\n  return `editor-${editorId}--wire-joint-${jointId}`;\n}\n","import CircuitEditor from \"./CircuitEditor\";\nexport default CircuitEditor;\n","import { Point } from \"@/geometry\";\n\nexport function getFieldCoord(\n  field: SVGSVGElement,\n  scaler: SVGGraphicsElement,\n  p: Point\n) {\n  const ctm = scaler.getScreenCTM();\n  if (!ctm) {\n    return p;\n  }\n\n  const pt = field.createSVGPoint();\n  pt.x = p.x;\n  pt.y = p.y;\n  const translated = pt.matrixTransform(ctm.inverse());\n  return { x: translated.x, y: translated.y };\n}\n","import * as React from \"react\";\nimport last from \"lodash/last\";\nimport { useDispatch } from \"react-redux\";\n\nimport { cls } from \"@/utils\";\nimport useSelector from \"@/hooks/useSelector\";\n\nimport { elementTypeToCircuitId } from \"@/elements/definitions/integrated-circuits/utils\";\n\nimport { viewCircuit } from \"@/actions/view-circuit\";\n\nimport {\n  elementNameOrDefaultFromElementIdSelector,\n  elementTypeFromElementIdSelector,\n} from \"@/services/circuit-graph/selectors/elements\";\nimport { circuitNameFromIdSelector } from \"@/services/circuit-properties/selectors/circuits\";\nimport { ROOT_CIRCUIT_ID } from \"@/services/circuits/constants\";\n\nimport Button from \"../Button\";\n\nimport styles from \"./CircuitNodeBreadcrumb.module.css\";\n\nexport interface CircuitNodeBreadcrumbProps {\n  circuitId: string;\n  elementIdPath: string[];\n}\nconst CircuitNodeBreadcrumb: React.FC<CircuitNodeBreadcrumbProps> = ({\n  circuitId,\n  elementIdPath,\n}) => {\n  const elements: JSX.Element[] = elementIdPath.map((elementId, index) => {\n    const elementPath = elementIdPath.slice(0, index + 1);\n    return (\n      <React.Fragment key={elementId}>\n        <span>&gt;</span>\n        <CircuitNodeBreadcrumbItem elementIdPath={elementPath} />\n      </React.Fragment>\n    );\n  });\n\n  return (\n    <div\n      className={cls(\n        \"circuit-element-breadcrumb\",\n        styles[\"circuit-element-breadcrumb\"]\n      )}\n    >\n      <CircuitNodeBreadcrumbRootItem\n        circuitId={circuitId}\n        elementIdPath={elementIdPath}\n      />\n      {elements}\n    </div>\n  );\n};\n\nexport default CircuitNodeBreadcrumb;\n\ninterface CircuitNodeBreadcrumbRootItemProps {\n  circuitId: string;\n  elementIdPath: string[];\n}\nconst CircuitNodeBreadcrumbRootItem: React.FC<CircuitNodeBreadcrumbRootItemProps> = ({\n  circuitId,\n  elementIdPath,\n}) => {\n  const dispatch = useDispatch();\n  const rootCircuitName = useSelector((state) =>\n    circuitNameFromIdSelector(state, ROOT_CIRCUIT_ID)\n  );\n  const circuitName = useSelector((state) =>\n    circuitNameFromIdSelector(state, circuitId)\n  );\n\n  const onClick = React.useCallback(\n    (e: React.MouseEvent) => {\n      e.preventDefault();\n      dispatch(viewCircuit(ROOT_CIRCUIT_ID, []));\n    },\n    [dispatch]\n  );\n\n  return (\n    <Button variant=\"text\" size=\"small\" onClick={onClick}>\n      {elementIdPath.length === 0 ? circuitName : rootCircuitName}\n    </Button>\n  );\n};\n\ninterface CircuitNodeBreadcrumbItemProps {\n  elementIdPath: string[];\n}\n\nconst CircuitNodeBreadcrumbItem: React.FC<CircuitNodeBreadcrumbItemProps> = ({\n  elementIdPath: elementIdPath,\n}) => {\n  const dispatch = useDispatch();\n  const elementId = last(elementIdPath)!;\n\n  const elementType = useSelector((state) =>\n    elementTypeFromElementIdSelector(state, elementId)\n  );\n  const elementName = useSelector((state) =>\n    elementNameOrDefaultFromElementIdSelector(state, elementId)\n  );\n\n  const circuitId = elementType ? elementTypeToCircuitId(elementType) : null;\n  const circuitName = useSelector((state) =>\n    circuitId ? circuitNameFromIdSelector(state, circuitId) : null\n  );\n\n  const onClick = React.useCallback(\n    (e: React.MouseEvent) => {\n      e.preventDefault();\n      if (!circuitId) {\n        return;\n      }\n      dispatch(viewCircuit(circuitId, elementIdPath));\n    },\n    [circuitId, elementIdPath, dispatch]\n  );\n\n  return (\n    <Button variant=\"text\" size=\"small\" onClick={onClick}>\n      {elementName} [{circuitName}]\n    </Button>\n  );\n};\n","import CircuitNodeBreadcrumb from \"./CircuitNodeBreadcrumb\";\nexport default CircuitNodeBreadcrumb;\n","import * as React from \"react\";\nimport { VirtualElement } from \"@popperjs/core\";\n\nimport { Point } from \"@/geometry\";\n\nimport { MenuCloseContextProvider } from \"./Menus/MenuCloseContext\";\n\nimport Popover from \"./Popover\";\n\nexport interface ContextMenuProps {\n  x: number;\n  y: number;\n  open: boolean;\n  onRequestClose(): void;\n}\n\nconst ContextMenu: React.FC<ContextMenuProps> = ({\n  x,\n  y,\n  open,\n  onRequestClose,\n  children,\n}) => {\n  const anchorEl = React.useMemo<VirtualElement>(\n    () => ({\n      getBoundingClientRect: () => ({\n        left: x,\n        top: y,\n        right: x,\n        bottom: y,\n        width: 0,\n        height: 0,\n        x,\n        y,\n      }),\n    }),\n    [x, y]\n  );\n\n  return (\n    <MenuCloseContextProvider value={onRequestClose}>\n      <Popover\n        isOpen={open}\n        onRequestClose={onRequestClose}\n        anchorEl={anchorEl}\n        placement=\"bottom-start\"\n      >\n        {children}\n      </Popover>\n    </MenuCloseContextProvider>\n  );\n};\n\nexport default ContextMenu;\n\nexport interface ContextMenuRenderProps {\n  point: Point;\n}\nexport interface UseContextMenu {\n  renderContextMenu(\n    content:\n      | React.ReactNode\n      | ((renderProps: ContextMenuRenderProps) => React.ReactNode)\n  ): React.ReactNode;\n  openContextMenu(e: React.MouseEvent): void;\n}\nexport function useContextMenu(): UseContextMenu {\n  const [ctxPos, setCtxPos] = React.useState<Point | null>(null);\n\n  const openContextMenu = React.useCallback((e: React.MouseEvent) => {\n    setCtxPos({ x: e.pageX, y: e.pageY });\n  }, []);\n\n  const onCloseContextMenu = React.useCallback(() => {\n    setCtxPos(null);\n  }, []);\n\n  const renderContextMenu = React.useCallback(\n    (\n      content:\n        | React.ReactNode\n        | ((renderProps: ContextMenuRenderProps) => React.ReactNode)\n    ) => {\n      if (!ctxPos) {\n        return null;\n      }\n\n      if (typeof content === \"function\") {\n        content = content({ point: ctxPos });\n      }\n\n      return (\n        <ContextMenu\n          open\n          onRequestClose={onCloseContextMenu}\n          x={ctxPos.x}\n          y={ctxPos.y}\n        >\n          {content}\n        </ContextMenu>\n      );\n    },\n    [ctxPos, onCloseContextMenu]\n  );\n\n  return {\n    openContextMenu,\n    renderContextMenu,\n  };\n}\n","import * as React from \"react\";\n\nimport Button from \"@/components/Button\";\nimport Modal from \"@/components/Modal\";\n\nimport styles from \"./Dialog.module.css\";\n\nexport interface DialogProps {\n  isOpen: boolean;\n  title: string;\n  acceptText?: string;\n  cancelText?: string;\n  footer?: React.ReactNode;\n  onAccept?(): void;\n  onCancel?(): void;\n}\n\nconst Dialog: React.FC<DialogProps> = ({\n  isOpen,\n  title,\n  acceptText,\n  cancelText,\n  onAccept,\n  onCancel,\n  footer,\n  children,\n}) => {\n  return (\n    <Modal\n      className={styles[\"dialog\"]}\n      isOpen={isOpen}\n      onRequestClose={onCancel}\n    >\n      <div className={styles[\"dialog-title\"]}>{title}</div>\n      <div>{children}</div>\n      <div className={styles[\"dialog-footer\"]}>\n        {footer}\n        {onCancel && (\n          <Button onClick={onCancel}>{cancelText ?? \"Cancel\"}</Button>\n        )}\n        {onAccept && (\n          <Button variant=\"primary\" onClick={onAccept}>\n            {acceptText ?? \"Accept\"}\n          </Button>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default Dialog;\n","export * from \"./Dialog\";\nimport Dialog from \"./Dialog\";\nexport default Dialog;\n","import * as React from \"react\";\n\nimport useSelector from \"@/hooks/useSelector\";\n\nimport { dialogTypeSelector } from \"@/services/dialog/selectors/dialog\";\n\nimport { getDialogComponent } from \"@/dialogs/renderer\";\n\nconst DialogManager: React.FC = () => {\n  const dialogType = useSelector(dialogTypeSelector);\n\n  if (!dialogType) {\n    return null;\n  }\n\n  const DialogComponent = getDialogComponent(dialogType);\n  return <DialogComponent />;\n};\n\nexport default DialogManager;\n","import DialogManager from \"./DialogManager\";\nexport default DialogManager;\n","import { cls } from \"@/utils\";\nimport * as React from \"react\";\nimport AtomicTextInput from \"./AtomicTextInput\";\n\nexport interface EditableTextProps {\n  className?: string;\n  textClassname?: string;\n  inputClassname?: string;\n  label?: JSX.Element;\n  defaultValue: string;\n  isEditing: boolean;\n  onRequestEdit?(): void;\n  onCommit(value: string): void;\n  onCancel(): void;\n}\n\nconst EditableText: React.FC<EditableTextProps> = ({\n  className,\n  textClassname,\n  inputClassname,\n  label,\n  defaultValue,\n  isEditing,\n  onRequestEdit,\n  onCommit,\n  onCancel,\n}) => {\n  const inputRef = React.useRef<HTMLInputElement | null>(null);\n\n  const onSpanDoubleClick = React.useCallback(\n    (e: React.MouseEvent) => {\n      if (!onRequestEdit) {\n        return;\n      }\n      if (e.defaultPrevented) {\n        return;\n      }\n      e.preventDefault();\n      onRequestEdit();\n    },\n    [onRequestEdit]\n  );\n\n  // AtomicTextInput enters editing mode when the user changes something.\n  // It will not call cancel on blur.\n  // We want to exit when blurred\n  const onKeyUp = React.useCallback(\n    (e: React.KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === \"Escape\" && isEditing) {\n        onCancel();\n      }\n    },\n    [isEditing, onCancel]\n  );\n\n  const onBlur = React.useCallback(() => {\n    if (isEditing) {\n      onCancel();\n    }\n  }, [isEditing, onCancel]);\n\n  React.useEffect(() => {\n    if (isEditing && inputRef.current) {\n      inputRef.current.select();\n    }\n  }, [isEditing]);\n\n  if (!isEditing) {\n    return (\n      <span\n        className={cls(className, textClassname)}\n        onDoubleClick={onSpanDoubleClick}\n      >\n        {label ?? defaultValue}\n      </span>\n    );\n  }\n\n  return (\n    <AtomicTextInput\n      ref={inputRef}\n      className={cls(className, inputClassname)}\n      autoFocus\n      defaultValue={defaultValue}\n      onBlur={onBlur}\n      onKeyUp={onKeyUp}\n      onCommit={onCommit}\n      onCancel={onCancel}\n    />\n  );\n};\n\nexport default EditableText;\n","import * as React from \"react\";\n\nimport { cls } from \"@/utils\";\n\nimport styles from \"./Icons.module.css\";\n\nconst CloseIcon: React.FC<React.SVGProps<SVGSVGElement>> = (props) => {\n  return (\n    <svg\n      width={16}\n      height={16}\n      {...props}\n      className={cls(styles.icon, props.className)}\n    >\n      <path d=\"M4,4 L12,12 M4,12 L12,4\" />\n    </svg>\n  );\n};\n\nexport default CloseIcon;\n","import * as React from \"react\";\n\nimport { cls } from \"@/utils\";\n\nimport styles from \"./Icons.module.css\";\n\nconst PauseIcon: React.FC<React.SVGProps<SVGSVGElement>> = (props) => {\n  return (\n    <svg\n      width={16}\n      height={16}\n      {...props}\n      className={cls(styles.icon, props.className)}\n    >\n      <path d=\"M2.5,1 L6.5,1 L6.5,15 L2.5,15 z M9.5,1 L13.5,1 L13.5,15 L9.5,15 z\" />\n    </svg>\n  );\n};\n\nexport default PauseIcon;\n","import * as React from \"react\";\n\nimport { cls } from \"@/utils\";\n\nimport styles from \"./Icons.module.css\";\n\nconst PlayIcon: React.FC<React.SVGProps<SVGSVGElement>> = (props) => {\n  return (\n    <svg\n      width={16}\n      height={16}\n      {...props}\n      className={cls(styles.icon, props.className)}\n    >\n      <path d=\"M3,0 L13,8 L3,16 z\" />\n    </svg>\n  );\n};\n\nexport default PlayIcon;\n","import * as React from \"react\";\n\nimport { cls } from \"@/utils\";\n\nimport styles from \"./Icons.module.css\";\n\nconst StepIcon: React.FC<React.SVGProps<SVGSVGElement>> = (props) => {\n  return (\n    <svg\n      width={16}\n      height={16}\n      {...props}\n      className={cls(styles.icon, props.className)}\n    >\n      <path d=\"M3,0 L13,8 L3,16 z M11,1 l2,0 l0,14 l-2,0 z\" />\n    </svg>\n  );\n};\n\nexport default StepIcon;\n","import * as React from \"react\";\n\nimport { cls } from \"@/utils\";\n\nimport styles from \"./Icons.module.css\";\n\nconst StopIcon: React.FC<React.SVGProps<SVGSVGElement>> = (props) => {\n  return (\n    <svg\n      width={16}\n      height={16}\n      {...props}\n      className={cls(styles.icon, props.className)}\n    >\n      <path d=\"M1,1 L15,1 L15,15 L1,15 z\" />\n    </svg>\n  );\n};\n\nexport default StopIcon;\n","import * as React from \"react\";\n\nimport { cls } from \"@/utils\";\n\nimport Checkbox from \"@/components/Checkbox\";\n\nimport styles from \"./Menus.module.css\";\n\nexport interface CheckboxMenuItemProps {\n  disabled?: boolean;\n  secondary?: string;\n  value: boolean;\n  onChange(e: React.ChangeEvent<HTMLInputElement>): void;\n}\nconst CheckboxMenuItem: React.FC<CheckboxMenuItemProps> = ({\n  disabled,\n  secondary,\n  value,\n  onChange,\n  children,\n}) => {\n  return (\n    <li\n      className={cls(\n        styles[\"menu-item\"],\n        disabled && styles[\"menu-item--disabled\"]\n      )}\n    >\n      <Checkbox\n        className={styles[\"menu-item-content\"]}\n        value={value}\n        onChange={onChange}\n      >\n        <span className={styles[\"menu-item-text\"]}>{children}</span>\n        {secondary && (\n          <span className={styles[\"menu-item-secondary\"]}>{secondary}</span>\n        )}\n      </Checkbox>\n    </li>\n  );\n};\n\nexport default CheckboxMenuItem;\n","import * as React from \"react\";\n\nimport styles from \"./Menus.module.css\";\n\nconst DividerMenuItem: React.FC = () => {\n  return <div className={styles[\"menu-divider\"]} />;\n};\n\nexport default DividerMenuItem;\n","import * as React from \"react\";\n\nimport EditableText, { EditableTextProps } from \"../EditableText\";\n\nimport { useMenuCloseContext } from \"./MenuCloseContext\";\n\nimport styles from \"./Menus.module.css\";\n\nexport type EditableTextMenuItemProps = EditableTextProps;\nconst EditableTextMenuItem: React.FC<EditableTextMenuItemProps> = (props) => {\n  const { onRequestEdit, onCommit } = props;\n\n  const requestMenuClose = useMenuCloseContext();\n\n  const onClick = React.useCallback(() => {\n    if (onRequestEdit) {\n      onRequestEdit();\n    }\n  }, [onRequestEdit]);\n\n  const onEditableCommit = React.useCallback(\n    (value: string) => {\n      onCommit(value);\n      requestMenuClose();\n    },\n    [onCommit, requestMenuClose]\n  );\n\n  return (\n    <li className={styles[\"menu-item\"]} onClick={onClick}>\n      <EditableText {...props} onCommit={onEditableCommit} />\n    </li>\n  );\n};\n\nexport default EditableTextMenuItem;\n","import * as React from \"react\";\n\nimport styles from \"./Menus.module.css\";\n\nconst Menu: React.FC = ({ children }) => {\n  return <ul className={styles[\"menu\"]}>{children}</ul>;\n};\n\nexport default Menu;\n","import * as React from \"react\";\n\nfunction noop() {\n  /* Do nothing */\n}\n\nconst MenuCloseContext = React.createContext<() => void>(noop);\n\nexport function useMenuCloseContext() {\n  return React.useContext(MenuCloseContext);\n}\n\nexport const MenuCloseContextProvider = MenuCloseContext.Provider;\n","import * as React from \"react\";\n\nimport { cls } from \"@/utils\";\n\nimport styles from \"./Menus.module.css\";\nimport { useMenuCloseContext } from \"./MenuCloseContext\";\n\nexport interface MenuItemProps {\n  disabled?: boolean;\n  secondary?: string;\n  onClick?(e: React.MouseEvent<HTMLElement>): void;\n}\nconst MenuItem: React.FC<MenuItemProps> = ({\n  disabled,\n  onClick,\n  secondary,\n  children,\n}) => {\n  const requestMenuClose = useMenuCloseContext();\n  const onItemClick = React.useCallback(\n    (e: React.MouseEvent<HTMLAnchorElement>) => {\n      if (onClick) {\n        onClick(e);\n      }\n      requestMenuClose();\n    },\n    [requestMenuClose, onClick]\n  );\n  return (\n    <li\n      className={cls(\n        styles[\"menu-item\"],\n        disabled && styles[\"menu-item--disabled\"]\n      )}\n    >\n      <a className={styles[\"menu-item-content\"]} onClick={onItemClick}>\n        <span className={styles[\"menu-item-text\"]}>{children}</span>\n        {secondary && (\n          <span className={styles[\"menu-item-secondary\"]}>{secondary}</span>\n        )}\n      </a>\n    </li>\n  );\n};\n\nexport default MenuItem;\n","import * as React from \"react\";\n\nimport { cls } from \"@/utils\";\n\nimport AutoPopover from \"@/components/AutoPopover\";\n\nimport styles from \"./Menus.module.css\";\n\nexport interface SubMenuItemProps {\n  disabled?: boolean;\n  secondary?: string;\n  content: JSX.Element;\n}\nconst SubMenuItem: React.FC<SubMenuItemProps> = ({\n  disabled,\n  secondary,\n  content,\n  children,\n}) => {\n  return (\n    <li\n      className={cls(\n        styles[\"menu-item\"],\n        disabled && styles[\"menu-item--disabled\"]\n      )}\n    >\n      <AutoPopover placement=\"right-start\" content={content}>\n        <a className={styles[\"menu-item-content\"]}>\n          <span className={styles[\"menu-item-text\"]}>{children}</span>\n          {secondary && (\n            <span className={styles[\"menu-item-secondary\"]}>{secondary}</span>\n          )}\n          <svg className={styles[\"menu-item-icon\"]} width={12} height={12}>\n            <path d=\"M0,0 l6,6 l-6,6 z\" fill=\"black\" strokeWidth={0} />\n          </svg>\n        </a>\n      </AutoPopover>\n    </li>\n  );\n};\n\nexport default SubMenuItem;\n","import { cls } from \"@/utils\";\nimport * as React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { FocusOn, AutoFocusInside } from \"react-focus-on\";\n\nimport sizing from \"@/styles/sizing.module.css\";\n\nimport styles from \"./Modal.module.css\";\n\nexport interface ModalProps {\n  className?: string;\n  isOpen: boolean;\n  onRequestClose?(): void;\n}\n\nconst Modal: React.FC<ModalProps> = ({\n  className,\n  isOpen,\n  onRequestClose,\n  children,\n}) => {\n  if (!isOpen) {\n    return null;\n  }\n\n  return createPortal(\n    <div className={cls(\"modal\", styles[\"modal\"])}>\n      <FocusOn onClickOutside={onRequestClose} onEscapeKey={onRequestClose}>\n        <div className={cls(styles[\"modal-content\"], className)}>\n          <AutoFocusInside className={sizing[\"fill-parent\"]}>\n            {children}\n          </AutoFocusInside>\n        </div>\n      </FocusOn>\n    </div>,\n    document.body\n  );\n};\n\nexport default Modal;\n","export * from \"./Modal\";\nimport Modal from \"./Modal\";\nexport default Modal;\n","import * as React from \"react\";\nimport { createPortal } from \"react-dom\";\n\nimport { Options, VirtualElement } from \"@popperjs/core\";\nimport { usePopper } from \"react-popper\";\n\nimport { useOutsideMouseEvent } from \"@/hooks/useOutsideMouseEvent\";\nimport { useArrayState } from \"@/hooks/useArrayState\";\n\nimport {\n  PopoverChildContextProvider,\n  usePopoverChild,\n} from \"./PopoverChildContext\";\n\nexport interface PopoverProps {\n  anchorEl: Element | VirtualElement | null;\n  placement?: Options[\"placement\"];\n  isOpen: boolean;\n  onRequestClose?(): void;\n}\n\nconst noop = () => {\n  /*no op*/\n};\n\nconst Popover: React.FC<PopoverProps> = ({\n  isOpen,\n  anchorEl,\n  placement = \"auto\",\n  onRequestClose = noop,\n  children,\n}) => {\n  const [popoverRef, setPopoverRef] = React.useState<HTMLDivElement | null>(\n    null\n  );\n  const { attributes, styles } = usePopper(\n    isOpen ? anchorEl : null,\n    popoverRef,\n    {\n      placement,\n    }\n  );\n\n  // Register us as a child of a parent popover, if any is present.\n  usePopoverChild(popoverRef);\n\n  const [\n    popoverChildren,\n    registerPopoverChild,\n    unregisterPopoverChild,\n  ] = useArrayState<HTMLElement>();\n\n  // Close when a click happens on the outside.\n  // We still want to handle this even if we are a child, as the user\n  // may have clicked on a parent popover which should close us.\n  const insideRefs = React.useMemo(() => [popoverRef, ...popoverChildren], [\n    popoverChildren,\n    popoverRef,\n  ]);\n  useOutsideMouseEvent(insideRefs, onRequestClose);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return createPortal(\n    <PopoverChildContextProvider\n      registerPopoverChild={registerPopoverChild}\n      unregisterPopoverChild={unregisterPopoverChild}\n    >\n      <div\n        ref={setPopoverRef}\n        style={{ ...styles.popper, zIndex: 10 }}\n        {...attributes.popper}\n      >\n        {children}\n      </div>\n    </PopoverChildContextProvider>,\n    document.body\n  );\n};\n\nexport default Popover;\n","import * as React from \"react\";\n\nexport interface PopoverChildContext {\n  registerPopoverChild(element: HTMLElement): void;\n  unregisterPopoverChild(element: HTMLElement): void;\n}\n\nfunction noop() {\n  // no op.\n}\nconst noopPopoverChildContext: PopoverChildContext = {\n  registerPopoverChild: noop,\n  unregisterPopoverChild: noop,\n};\n\nexport const PopoverChildContext = React.createContext<PopoverChildContext | null>(\n  null\n);\n\nexport const usePopoverChildContext = () =>\n  React.useContext(PopoverChildContext);\n\nexport const PopoverChildContextProvider: React.FC<PopoverChildContext> = ({\n  registerPopoverChild: contextRegister,\n  unregisterPopoverChild: contextUnregister,\n  children,\n}) => {\n  const parent = usePopoverChildContext();\n  const parentRegister = parent?.registerPopoverChild;\n  const parentUnregister = parent?.unregisterPopoverChild;\n\n  const registerPopoverChild = React.useCallback(\n    (element: HTMLElement) => {\n      if (parentRegister) {\n        parentRegister(element);\n      }\n      contextRegister(element);\n    },\n    [contextRegister, parentRegister]\n  );\n\n  const unregisterPopoverChild = React.useCallback(\n    (element: HTMLElement) => {\n      contextUnregister(element);\n      if (parentUnregister) {\n        parentUnregister;\n      }\n    },\n    [contextUnregister, parentUnregister]\n  );\n\n  const providedContext = React.useMemo(\n    () => ({\n      registerPopoverChild,\n      unregisterPopoverChild,\n    }),\n    [registerPopoverChild, unregisterPopoverChild]\n  );\n\n  return (\n    <PopoverChildContext.Provider value={providedContext}>\n      {children}\n    </PopoverChildContext.Provider>\n  );\n};\n\nexport function usePopoverChild(element: HTMLElement | null) {\n  const popoverContext =\n    React.useContext(PopoverChildContext) ?? noopPopoverChildContext;\n\n  // We do not want to trigger the effect when\n  //  the context changes, as the context will change\n  //  as a result of calling register and unregister.\n  // As a result, we will not function right if somehow our\n  //  element transfers to a different popup chain without re-rendering.\n  const ctxRef = React.useRef(popoverContext);\n  React.useEffect(() => {\n    ctxRef.current = popoverContext;\n  });\n\n  React.useEffect(() => {\n    if (element) {\n      ctxRef.current.registerPopoverChild(element);\n      return () => ctxRef.current.unregisterPopoverChild(element);\n    }\n  }, [element]);\n}\n","export * from \"./Popover\";\nimport Popover from \"./Popover\";\nexport default Popover;\n","import * as React from \"react\";\n\nimport { cls } from \"@/utils\";\n\nimport interaction from \"@/styles/interaction.module.css\";\n\nimport styles from \"./SelectionList.module.css\";\n\nexport interface SelectionListItem {\n  id?: string;\n  value: string;\n  label: React.ReactNode;\n  isSelected?: boolean;\n}\n\nexport interface SelectionListProps {\n  className?: string;\n  id?: string;\n  items: SelectionListItem[];\n  onItemSelected(value: string): void;\n}\n\nconst SelectionList: React.FC<SelectionListProps> = ({\n  className,\n  id,\n  items,\n  onItemSelected,\n}) => {\n  return (\n    <ul\n      id={id}\n      className={cls(\"selection-list\", styles[\"selection-list\"], className)}\n    >\n      {items.map((item) => (\n        <SelectionListItem\n          key={item.value}\n          {...item}\n          onItemSelected={onItemSelected}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default SelectionList;\n\ninterface SelectionListItemProps extends SelectionListItem {\n  onItemSelected(value: string): void;\n}\n\nconst SelectionListItem: React.FC<SelectionListItemProps> = ({\n  id,\n  value,\n  label,\n  isSelected,\n  onItemSelected,\n}) => {\n  const onClick = React.useCallback(\n    (e: React.MouseEvent) => {\n      if (e.defaultPrevented) {\n        return;\n      }\n\n      e.preventDefault();\n      onItemSelected(value);\n    },\n    [onItemSelected, value]\n  );\n\n  return (\n    <li\n      id={id}\n      className={cls(\n        \"selection-list-item\",\n        styles[\"selection-list-item\"],\n        isSelected && styles[\"selection-list-item--selected\"]\n      )}\n      onClick={onClick}\n    >\n      <div\n        className={cls(\n          styles[\"selection-list-item-content\"],\n          interaction[\"text-unselectable\"]\n        )}\n      >\n        {label}\n      </div>\n    </li>\n  );\n};\n","import SelectionList from \"./SelectionList\";\nexport * from \"./SelectionList\";\nexport default SelectionList;\n","import * as React from \"react\";\nimport get from \"lodash/get\";\n\nimport { cls, fpSetByArray } from \"@/utils\";\n\nimport {\n  TesselDropPosition,\n  TesselItem,\n  TesselValue,\n  TesselWindowRenderer,\n} from \"./types\";\n\nimport TesselFrame from \"./TesselFrame\";\nimport TesselDropCapture from \"./TesselDropCapture\";\n\nimport styles from \"./Tessel.module.css\";\n\nimport { TesselInteractionProvider } from \"./TesselContext\";\nimport { pruneEmptyTesselValues } from \"./utils\";\n\nexport interface TesselProps {\n  className?: string;\n  rootItem: TesselValue | null;\n  renderWindow: TesselWindowRenderer;\n  onLayoutChange(rootItem: TesselValue | null): void;\n}\n\nconst Tessel: React.FC<TesselProps> = ({\n  className,\n  rootItem,\n  renderWindow,\n  onLayoutChange,\n}) => {\n  const moveWindow = React.useCallback(\n    (from: string[], to: string[], position: TesselDropPosition) => {\n      if (from.length === 0) {\n        // If we have a window at the root, there is no place to drag it to.\n        return;\n      }\n\n      let newRoot = rootItem;\n      const movingElement = get(newRoot, from);\n      // If rootItem is a string (implicit window), than there is no way we can find our\n      // from target inside of it (given that from is not the root).\n      // This would be covered by movingElement being undefined, but we add\n      // the extra check to inform typescript of this condition.\n      if (!newRoot || typeof newRoot === \"string\" || !movingElement) {\n        return;\n      }\n\n      // Target must exist, or be the root.\n      if (to.length > 0 && !get(newRoot, to)) {\n        return;\n      }\n\n      // First, null out the from path.\n      // We cannot clean up the stack at this point as that might remove path\n      // elements that we are moving to.  Cleanup will be done later.\n      newRoot = fpSetByArray(newRoot, from, null);\n\n      // Now, insert the window at the new location\n      newRoot = fpSetByArray(newRoot, to, (item: TesselValue) => {\n        let newItem: TesselItem;\n        if (position === \"left\" || position === \"right\") {\n          newItem = {\n            direction: \"row\",\n            division: 50,\n            first: position === \"left\" ? movingElement : item,\n            second: position === \"right\" ? movingElement : item,\n          };\n        } else if (position === \"top\" || position === \"bottom\") {\n          newItem = {\n            direction: \"column\",\n            division: 50,\n            first: position === \"top\" ? movingElement : item,\n            second: position === \"bottom\" ? movingElement : item,\n          };\n        } else {\n          // Unknown position\n          throw new Error(`Unknown tessel position: ${position}`);\n        }\n        return newItem;\n      });\n\n      // Remove the empty entry from the removal of the from element.\n      newRoot = pruneEmptyTesselValues(newRoot);\n\n      onLayoutChange(newRoot);\n    },\n    [rootItem, onLayoutChange]\n  );\n\n  const closeWindow = React.useCallback(\n    (path: string[]) => {\n      let newRoot = rootItem;\n      if (!newRoot) {\n        return;\n      }\n      if (typeof newRoot === \"string\") {\n        if (path.length === 0) {\n          onLayoutChange(null);\n        }\n        return;\n      }\n\n      // First, null out the from path.\n      // We cannot clean up the stack at this point as that might remove path\n      // elements that we are moving to.  Cleanup will be done later.\n      newRoot = fpSetByArray(newRoot, path, null);\n      // Remove the empty entry from the removal of the from element.\n      newRoot = pruneEmptyTesselValues(newRoot);\n\n      onLayoutChange(newRoot);\n    },\n    [onLayoutChange, rootItem]\n  );\n\n  return (\n    <div className={cls(\"tessel\", styles[\"tessel\"], className)}>\n      <TesselInteractionProvider\n        moveWindow={moveWindow}\n        closeWindow={closeWindow}\n      >\n        <TesselDropCapture>\n          <div className={styles[\"tessel-content\"]}>\n            {rootItem && (\n              <TesselFrame\n                value={rootItem}\n                renderWindow={renderWindow}\n                onLayoutChange={onLayoutChange}\n              />\n            )}\n          </div>\n        </TesselDropCapture>\n      </TesselInteractionProvider>\n    </div>\n  );\n};\n\nexport default Tessel;\n","import * as React from \"react\";\nimport { TesselDropPosition } from \"./types\";\n\nconst tesselPathContext = React.createContext<string[]>([]);\nexport function useTesselPath() {\n  return React.useContext(tesselPathContext);\n}\nexport interface TesselContextProviderProps {\n  pathKey: string;\n}\nexport const TesselPathProvider: React.FC<TesselContextProviderProps> = ({\n  pathKey,\n  children,\n}) => {\n  const path = useTesselPath();\n\n  const newPath = React.useMemo<string[]>(() => [...path, pathKey], [\n    path,\n    pathKey,\n  ]);\n\n  return (\n    <tesselPathContext.Provider value={newPath}>\n      {children}\n    </tesselPathContext.Provider>\n  );\n};\n\nexport interface TesselInteractionContext {\n  moveWindow(from: string[], to: string[], position: TesselDropPosition): void;\n  closeWindow(path: string[]): void;\n}\nfunction noop() {\n  /* no op */\n}\nconst tesselInteractionContext = React.createContext<TesselInteractionContext>({\n  moveWindow: noop,\n  closeWindow: noop,\n});\nexport function useTesselInteraction() {\n  return React.useContext(tesselInteractionContext);\n}\n\nexport type TesselInteractionProviderProps = TesselInteractionContext;\nexport const TesselInteractionProvider: React.FC<TesselInteractionProviderProps> = ({\n  moveWindow,\n  closeWindow,\n  children,\n}) => {\n  const context = React.useMemo<TesselInteractionContext>(\n    () => ({\n      moveWindow,\n      closeWindow,\n    }),\n    [moveWindow, closeWindow]\n  );\n\n  return (\n    <tesselInteractionContext.Provider value={context}>\n      {children}\n    </tesselInteractionContext.Provider>\n  );\n};\n","import { arrayEquals } from \"@/arrays\";\nimport { useComponentBounds } from \"@/hooks/useComponentBounds\";\nimport { cls } from \"@/utils\";\nimport * as React from \"react\";\nimport { DropTargetMonitor, DragObjectWithType, useDrop } from \"react-dnd\";\n\nimport {\n  isTesselWindowDragObject,\n  TESSEL_WINDOW_DRAG_OBJECT,\n} from \"./drag-items/tessel-window\";\n\nimport styles from \"./Tessel.module.css\";\nimport { useTesselInteraction, useTesselPath } from \"./TesselContext\";\nimport { TesselDropPosition } from \"./types\";\n\nexport interface TesselDropCaptureProps {\n  className?: string;\n  id?: string;\n  children?: React.ReactNode;\n}\nconst TesselDropCapture = React.forwardRef<\n  HTMLDivElement,\n  TesselDropCaptureProps\n>(({ className, id, children }, forwardRef) => {\n  const tesselPath = useTesselPath();\n  const { moveWindow } = useTesselInteraction();\n\n  const ref = React.useRef<HTMLDivElement | null>(null);\n  const { top, left, right, bottom } = useComponentBounds(ref);\n\n  const [dropPos, setDropPos] = React.useState<TesselDropPosition | null>(null);\n\n  const onHover = React.useCallback(\n    (item: DragObjectWithType, monitor: DropTargetMonitor) => {\n      if (!monitor.isOver({ shallow: true })) {\n        setDropPos(null);\n        return;\n      }\n\n      const pos = monitor.getClientOffset();\n      if (item == null || pos == null || !isTesselWindowDragObject(item)) {\n        setDropPos(null);\n        return;\n      }\n\n      if (pos.x < left || pos.x > right) {\n        setDropPos(null);\n        return;\n      }\n\n      if (pos.y < top || pos.y > bottom) {\n        setDropPos(null);\n        return;\n      }\n\n      const relX = pos.x - left;\n      const xPercent = relX / (right - left);\n      if (xPercent <= 0.3) {\n        setDropPos(\"left\");\n        return;\n      }\n      if (xPercent >= 0.6) {\n        setDropPos(\"right\");\n        return;\n      }\n\n      const relY = pos.y - top;\n      const yPercent = relY / (bottom - top);\n      if (yPercent <= 0.3) {\n        setDropPos(\"top\");\n        return;\n      }\n      if (yPercent >= 0.6) {\n        setDropPos(\"bottom\");\n        return;\n      }\n\n      setDropPos(null);\n    },\n    [top, left, right, bottom]\n  );\n\n  const onDrop = React.useCallback(\n    (item: DragObjectWithType, monitor: DropTargetMonitor) => {\n      if (!monitor.isOver({ shallow: true })) {\n        return;\n      }\n\n      if (!isTesselWindowDragObject(item)) {\n        return;\n      }\n      const { path: draggingPath } = item.payload;\n\n      if (arrayEquals(draggingPath, tesselPath)) {\n        return;\n      }\n\n      if (dropPos == null) {\n        return;\n      }\n\n      moveWindow(draggingPath, tesselPath, dropPos);\n    },\n    [tesselPath, dropPos, moveWindow]\n  );\n\n  const [{ draggingSelf }, dropRef] = useDrop(\n    {\n      accept: TESSEL_WINDOW_DRAG_OBJECT,\n      collect: (monitor) => {\n        // This is here as hover is not called on hover exit.\n        // We need something to capture the exit event.\n        if (!monitor.isOver({ shallow: true })) {\n          setDropPos(null);\n        }\n\n        const item = monitor.getItem();\n        if (!item || !isTesselWindowDragObject(item)) {\n          return {};\n        }\n\n        return {\n          draggingSelf: arrayEquals(item.payload.path, tesselPath),\n        };\n      },\n      hover: onHover,\n      drop: onDrop,\n    },\n    [onHover, onDrop]\n  );\n\n  let dropMarkerClassname = styles[\"tessel-drop-marker\"] + \" \";\n  if (dropPos != null && !draggingSelf) {\n    switch (dropPos) {\n      case \"bottom\":\n        dropMarkerClassname += styles[\"drop-bottom\"];\n        break;\n      case \"top\":\n        dropMarkerClassname += styles[\"drop-top\"];\n        break;\n      case \"left\":\n        dropMarkerClassname += styles[\"drop-left\"];\n        break;\n      case \"right\":\n        dropMarkerClassname += styles[\"drop-right\"];\n        break;\n    }\n  }\n\n  return (\n    <div\n      id={id}\n      ref={(divRef) => {\n        ref.current = divRef;\n        dropRef(divRef);\n        if (typeof forwardRef === \"function\") {\n          forwardRef(divRef);\n        } else if (forwardRef) {\n          forwardRef.current = divRef;\n        }\n      }}\n      className={cls(\n        styles[\"tessel-drop-capture\"],\n        draggingSelf && styles[\"tessel-drop-capture--dragging\"],\n        className\n      )}\n    >\n      {children}\n      <div className={dropMarkerClassname} />\n    </div>\n  );\n});\n\nexport default TesselDropCapture;\n","import * as React from \"react\";\nimport TesselSplitFrame from \"./TesselSplitFrame\";\n\nimport {\n  isTesselSplit,\n  isTesselWindow,\n  normalizeTesselItem,\n  TesselValue,\n  TesselWindowRenderer,\n} from \"./types\";\n\nexport interface TesselFrameProps {\n  value: TesselValue;\n  renderWindow: TesselWindowRenderer;\n  onLayoutChange(value: TesselValue): void;\n}\n\nconst TesselFrame: React.FC<TesselFrameProps> = ({\n  value,\n  renderWindow,\n  onLayoutChange,\n}) => {\n  const item = normalizeTesselItem(value);\n  if (isTesselWindow(item)) {\n    return renderWindow(item);\n  } else if (isTesselSplit(item)) {\n    return (\n      <TesselSplitFrame\n        item={item}\n        renderWindow={renderWindow}\n        onLayoutChange={onLayoutChange}\n      />\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default TesselFrame;\n","import { cls } from \"@/utils\";\nimport * as React from \"react\";\nimport throttle from \"lodash/throttle\";\n\nimport { useRefValue } from \"@/hooks/useRefValue\";\n\nimport { TesselDirection } from \"./types\";\n\nimport styles from \"./Tessel.module.css\";\n\nexport interface TesselSplitProps {\n  direction: TesselDirection;\n  onChangePercentage(percent: number, position: number): void;\n}\n\nconst ZeroRect: DOMRect = Object.freeze({\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n  x: 0,\n  y: 0,\n  height: 0,\n  width: 0,\n  toJSON: () => ({}),\n});\n\nconst TesselSplit: React.FC<TesselSplitProps> = ({\n  direction,\n  onChangePercentage,\n}) => {\n  const ref = React.useRef<HTMLDivElement | null>(null);\n\n  const pointerCaptureRef = React.useRef<number | null>(null);\n\n  // Ref these up so we can continue using the same throttle across rerenders.\n  const directionRef = useRefValue(direction);\n  const onChangePercentageRef = useRefValue(onChangePercentage);\n\n  const onHandlePointerMove = React.useMemo(\n    () =>\n      throttle(\n        (e: React.PointerEvent<HTMLDivElement>) => {\n          if (pointerCaptureRef.current == null || ref.current == null) {\n            return;\n          }\n\n          const parentRect =\n            ref.current.parentElement?.getBoundingClientRect() ?? ZeroRect;\n\n          let percentage = 0;\n          let position = 0;\n          if (directionRef.current === \"row\") {\n            position = e.pageX - parentRect.left;\n            percentage = position / parentRect.width;\n            if (isNaN(percentage)) {\n              percentage = 0;\n              position = parentRect.left;\n            } else if (percentage > 1) {\n              percentage = 1;\n              position = parentRect.right;\n            }\n          } else {\n            position = e.pageY - parentRect.top;\n            percentage = position / parentRect.height;\n            if (isNaN(percentage)) {\n              percentage = 0;\n              position = parentRect.top;\n            } else if (percentage > 1) {\n              percentage = 1;\n              position = parentRect.bottom;\n            }\n          }\n\n          onChangePercentageRef.current!(percentage * 100, position);\n        },\n        1000 / 60,\n        { leading: true }\n      ),\n    [directionRef, onChangePercentageRef]\n  );\n\n  const onPointerMove = React.useCallback(\n    (e: React.PointerEvent<HTMLDivElement>) => {\n      e.persist();\n      onHandlePointerMove(e);\n    },\n    [onHandlePointerMove]\n  );\n\n  const onPointerDown = React.useCallback(\n    (e: React.PointerEvent<HTMLDivElement>) => {\n      if (e.defaultPrevented || !ref.current) {\n        return;\n      }\n\n      if (pointerCaptureRef.current) {\n        return;\n      }\n\n      e.preventDefault();\n\n      ref.current.setPointerCapture(e.pointerId);\n      pointerCaptureRef.current = e.pointerId;\n    },\n    []\n  );\n\n  const onPointerUp = React.useCallback(() => {\n    if (ref.current && pointerCaptureRef.current) {\n      ref.current.releasePointerCapture(pointerCaptureRef.current);\n      pointerCaptureRef.current = null;\n    }\n  }, []);\n\n  return (\n    <div\n      ref={ref}\n      className={cls(\n        \"tessel-split\",\n        styles[\"tessel-split\"],\n        styles[\n          direction === \"row\" ? \"tessel-split--row\" : \"tessel-split--column\"\n        ]\n      )}\n      onPointerDown={onPointerDown}\n      onPointerMove={onPointerMove}\n      onPointerUp={onPointerUp}\n    />\n  );\n};\n\nexport default TesselSplit;\n","import * as React from \"react\";\n\nimport { cls } from \"@/utils\";\n\nimport sizing from \"@/styles/sizing.module.css\";\nimport flex from \"@/styles/flex.module.css\";\n\nimport {\n  isTesselFixedDivision,\n  isTesselPercentDivision,\n  normalizeTesselDivision,\n  TesselDivision,\n  TesselItem,\n  TesselSplitItem,\n  TesselValue,\n  TesselWindowRenderer,\n} from \"./types\";\n\nimport TesselSplit from \"./TesselSplit\";\nimport TesselFrame from \"./TesselFrame\";\nimport { TesselPathProvider } from \"./TesselContext\";\n\nexport interface TesselSplitFrameProps {\n  item: TesselSplitItem;\n  renderWindow: TesselWindowRenderer;\n  onLayoutChange(relativeRoot: TesselItem): void;\n}\n\nconst TesselSplitFrame: React.FC<TesselSplitFrameProps> = ({\n  item,\n  renderWindow,\n  onLayoutChange,\n}) => {\n  const { direction, first, second, division: divisionValue } = item;\n  const sizeDirection = direction === \"row\" ? \"width\" : \"height\";\n\n  const onChangePercentage = React.useCallback(\n    (percentage: number, absolute: number) => {\n      const division = normalizeTesselDivision(item.division);\n      onLayoutChange({\n        ...item,\n        division: applyDivisionChange(division, percentage, absolute),\n      });\n    },\n    [item, onLayoutChange]\n  );\n\n  const onFirstLayoutChange = React.useCallback(\n    (value: TesselValue) => {\n      onLayoutChange({\n        ...item,\n        first: value,\n      });\n    },\n    [item, onLayoutChange]\n  );\n\n  const onSecondLayoutChange = React.useCallback(\n    (value: TesselValue) => {\n      onLayoutChange({\n        ...item,\n        second: value,\n      });\n    },\n    [item, onLayoutChange]\n  );\n\n  const division = normalizeTesselDivision(divisionValue);\n  let firstSize = \"50%\";\n  let secondSize = \"50%\";\n  let firstFix = false;\n  let secondFix = false;\n  if (isTesselPercentDivision(division)) {\n    const { firstPercent } = division;\n    firstSize = `${firstPercent}%`;\n    secondSize = `${100 - firstPercent}%`;\n  } else if (isTesselFixedDivision(division)) {\n    const { firstSize: firstSizeDiv, secondSize: secondSizeDiv } = division;\n    // Only support one of firstSize or secondSize\n    if (firstSizeDiv) {\n      firstSize = `${firstSizeDiv}px`;\n      firstFix = true;\n      secondSize = \"100%\";\n    } else {\n      firstSize = \"100%\";\n      secondSize = `${secondSizeDiv}px`;\n      secondFix = true;\n    }\n  }\n\n  return (\n    <div\n      className={cls(\n        sizing[\"fill-parent\"],\n        flex[direction === \"row\" ? \"flex-row\" : \"flex-column\"]\n      )}\n    >\n      <div\n        className={cls(\n          firstFix ? flex[\"flexitem-fix\"] : flex[\"flexitem-shrink\"]\n        )}\n        style={{ [sizeDirection]: firstSize }}\n      >\n        <TesselPathProvider pathKey=\"first\">\n          <TesselFrame\n            value={first}\n            renderWindow={renderWindow}\n            onLayoutChange={onFirstLayoutChange}\n          />\n        </TesselPathProvider>\n      </div>\n      <TesselSplit\n        direction={direction}\n        onChangePercentage={onChangePercentage}\n      />\n      <div\n        className={cls(\n          secondFix ? flex[\"flexitem-fix\"] : flex[\"flexitem-shrink\"]\n        )}\n        style={{ [sizeDirection]: secondSize }}\n      >\n        <TesselPathProvider pathKey=\"second\">\n          <TesselFrame\n            value={second}\n            renderWindow={renderWindow}\n            onLayoutChange={onSecondLayoutChange}\n          />\n        </TesselPathProvider>\n      </div>\n    </div>\n  );\n};\n\nfunction applyDivisionChange(\n  division: TesselDivision,\n  percent: number,\n  absolute: number\n): TesselDivision {\n  if (isTesselPercentDivision(division)) {\n    return {\n      firstPercent: percent,\n    };\n  } else if (isTesselFixedDivision(division)) {\n    if (typeof division.secondSize === \"number\") {\n      return {\n        secondSize: absolute,\n      };\n    }\n\n    return {\n      firstSize: absolute,\n    };\n  }\n\n  return division;\n}\n\nexport default TesselSplitFrame;\n","import * as React from \"react\";\n\nimport { useDrag } from \"react-dnd\";\n\nimport { cls } from \"@/utils\";\n\nimport { tesselWindowDragObject } from \"./drag-items/tessel-window\";\n\nimport { useTesselInteraction, useTesselPath } from \"./TesselContext\";\nimport TesselDropCapture from \"./TesselDropCapture\";\n\nimport styles from \"./Tessel.module.css\";\nimport CloseIcon from \"../Icons/Close\";\n\nexport interface TesselWindowProps {\n  className?: string;\n  id?: string;\n  title: string;\n}\nconst TesselWindow: React.FC<TesselWindowProps> = ({\n  className,\n  id,\n  title,\n  children,\n}) => {\n  const path = useTesselPath();\n\n  const { closeWindow } = useTesselInteraction();\n  const onCloseWindow = React.useCallback(() => {\n    closeWindow(path);\n  }, [closeWindow, path]);\n\n  const [, dragSourceRef] = useDrag({\n    item: tesselWindowDragObject(path),\n  });\n\n  return (\n    <TesselDropCapture id={id} className={styles[\"tessel-window\"]}>\n      <div ref={dragSourceRef} className={styles[\"tessel-window-titlebar\"]}>\n        <div className={styles[\"tessel-window-title\"]}>{title}</div>\n        <div className={styles[\"tessel-window-controls\"]}>\n          <CloseIcon\n            className={styles[\"tessel-window-controls-close\"]}\n            onClick={onCloseWindow}\n          />\n        </div>\n      </div>\n      <div className={cls(styles[\"tessel-window-content\"], className)}>\n        {children}\n      </div>\n    </TesselDropCapture>\n  );\n};\n\nexport default TesselWindow;\n","import { DragObjectWithType } from \"react-dnd\";\n\nexport const TESSEL_WINDOW_DRAG_OBJECT = \"@tessel/window\" as const;\nexport const tesselWindowDragObject = (path: string[]) => ({\n  type: TESSEL_WINDOW_DRAG_OBJECT,\n  payload: { path },\n});\nexport type TesselWindowDragObject = ReturnType<typeof tesselWindowDragObject>;\nexport function isTesselWindowDragObject(\n  item: DragObjectWithType\n): item is TesselWindowDragObject {\n  return item.type === TESSEL_WINDOW_DRAG_OBJECT;\n}\n","export * from \"./Tessel\";\nexport * from \"./types\";\n\nimport Tessel from \"./Tessel\";\nexport default Tessel;\nexport { Tessel };\n","import has from \"lodash/has\";\n\nexport type TesselWindowRenderer = (\n  window: TesselWindowItem\n) => React.ReactElement | null;\n\nexport interface TesselWindowItem<P = Record<string, any>> {\n  windowId: string;\n  windowProps?: P;\n}\n\nexport type TesselDirection = \"row\" | \"column\";\n\nexport interface TesselPercentDivision {\n  firstPercent: number;\n}\nexport interface TesselFixedDivision {\n  firstSize?: number;\n  secondSize?: number;\n}\nexport type TesselDivision = TesselPercentDivision | TesselFixedDivision;\nexport type TesselDivisionValue = number | TesselDivision;\n\nexport interface TesselSplitItem {\n  first: TesselValue;\n  second: TesselValue;\n  direction: TesselDirection;\n  division: TesselDivisionValue;\n}\n\nexport type TesselItem = TesselWindowItem | TesselSplitItem;\nexport type TesselValue = string | TesselItem;\n\nexport type TesselDropPosition = \"left\" | \"right\" | \"top\" | \"bottom\";\n\nexport function normalizeTesselItem(value: TesselValue): TesselItem {\n  if (typeof value === \"string\") {\n    return {\n      windowId: value,\n    };\n  }\n\n  return value;\n}\n\nexport function isTesselWindow(item: TesselItem): item is TesselWindowItem {\n  return has(item, \"windowId\");\n}\n\nexport function isTesselSplit(item: TesselItem): item is TesselSplitItem {\n  return has(item, \"first\") && has(item, \"second\") && has(item, \"direction\");\n}\n\nexport function normalizeTesselDivision(\n  value: TesselDivisionValue\n): TesselDivision {\n  if (typeof value === \"number\") {\n    return {\n      firstPercent: value,\n    };\n  }\n\n  return value;\n}\n\nexport function isTesselPercentDivision(\n  value: TesselDivision\n): value is TesselPercentDivision {\n  return has(value, \"firstPercent\");\n}\n\nexport function isTesselFixedDivision(\n  value: TesselDivision\n): value is TesselFixedDivision {\n  return has(value, \"firstSize\") || has(value, \"secondSize\");\n}\n","import { isTesselSplit, normalizeTesselItem, TesselValue } from \"./types\";\n\nexport function walkTesselValues(\n  value: TesselValue,\n  walk: (value: TesselValue, path: string[]) => boolean | undefined\n) {\n  function doWork(value: TesselValue, path: string[]): boolean {\n    if (walk(value, []) === false) {\n      return false;\n    }\n\n    const normalized = normalizeTesselItem(value);\n    if (isTesselSplit(normalized)) {\n      if (!doWork(normalized.first, [...path, \"first\"])) {\n        return false;\n      }\n      if (!doWork(normalized.second, [...path, \"second\"])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  doWork(value, []);\n}\n\nexport function filterTesselValues(\n  value: TesselValue,\n  filter: (value: TesselValue) => boolean\n): TesselValue | null {\n  if (!filter(value)) {\n    return null;\n  }\n\n  const normalized = normalizeTesselItem(value);\n\n  if (isTesselSplit(normalized)) {\n    const first = filterTesselValues(normalized.first, filter);\n    const second = filterTesselValues(normalized.second, filter);\n\n    if (first && second) {\n      return value;\n    }\n\n    return first ?? second ?? null;\n  }\n\n  return value;\n}\n\nexport function findAndReplaceTesselValue(\n  value: TesselValue,\n  replace: (value: TesselValue) => TesselValue | null\n): TesselValue {\n  function doWork(value: TesselValue): TesselValue | null {\n    const newValue = replace(value);\n    if (newValue) {\n      return newValue;\n    }\n\n    const normalized = normalizeTesselItem(value);\n    if (isTesselSplit(normalized)) {\n      const first = doWork(normalized.first);\n      if (first) {\n        return {\n          ...normalized,\n          first,\n        };\n      }\n\n      const second = doWork(normalized.second);\n      if (second) {\n        return {\n          ...normalized,\n          second,\n        };\n      }\n    }\n\n    return null;\n  }\n  return doWork(value) ?? value;\n}\n\nexport function pruneEmptyTesselValues(value: TesselValue): TesselValue {\n  if (typeof value === \"string\") {\n    return value;\n  }\n\n  if (isTesselSplit(value)) {\n    if (value.first == null) {\n      return pruneEmptyTesselValues(value.second);\n    }\n    if (value.second == null) {\n      return pruneEmptyTesselValues(value.first);\n    }\n    return {\n      ...value,\n      first: pruneEmptyTesselValues(value.first),\n      second: pruneEmptyTesselValues(value.second),\n    };\n  }\n\n  return value;\n}\n","import * as React from \"react\";\n\nimport { cls } from \"@/utils\";\n\nimport styles from \"./TitleBar.module.css\";\n\nexport interface TitleBarProps {\n  className?: string;\n  title?: string;\n}\nconst TitleBar: React.FC<TitleBarProps> = ({ className, title, children }) => {\n  return (\n    <div className={cls(styles.titlebar, className)}>\n      <span className={styles[\"titlebar-heading\"]}>Discrelog</span>\n      <div className={styles[\"titlebar-divider\"]} />\n      {title && <div className={styles[\"titlebar-title\"]}>{title}</div>}\n      {children}\n    </div>\n  );\n};\n\nexport default TitleBar;\n","import TitleBar from \"./TitleBar\";\nexport default TitleBar;\n","import * as React from \"react\";\nimport { createPortal } from \"react-dom\";\n\nimport { Options, VirtualElement } from \"@popperjs/core\";\nimport { usePopper } from \"react-popper\";\n\nimport { cls } from \"@/utils\";\n\nexport interface PopoverProps {\n  className?: string;\n  anchorEl: Element | VirtualElement | null;\n  placement?: Options[\"placement\"];\n  isOpen: boolean;\n}\n\nimport styles from \"./Tooltip.module.css\";\n\nconst Tooltip: React.FC<PopoverProps> = ({\n  className,\n  isOpen,\n  anchorEl,\n  placement = \"auto\",\n  children,\n}) => {\n  const [popoverRef, setPopoverRef] = React.useState<HTMLDivElement | null>(\n    null\n  );\n  const [arrowRef, setArrowRef] = React.useState<HTMLDivElement | null>(null);\n\n  const { attributes, styles: popperStyles } = usePopper(\n    isOpen ? anchorEl : null,\n    popoverRef,\n    {\n      placement,\n      modifiers: [\n        {\n          name: \"arrow\",\n          options: {\n            element: arrowRef,\n          },\n        },\n        {\n          name: \"offset\",\n          options: {\n            offset: [0, 8],\n          },\n        },\n      ],\n    }\n  );\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return createPortal(\n    <div\n      ref={setPopoverRef}\n      className={cls(styles[\"tooltip\"], className)}\n      style={popperStyles.popper}\n      role=\"tooltip\"\n      {...attributes.popper}\n    >\n      {children}\n      <div\n        ref={setArrowRef}\n        data-popper-arrow\n        className={styles[\"tooltip-arrow\"]}\n        style={popperStyles.arrow}\n        {...attributes.arrow}\n      />\n    </div>,\n    document.body\n  );\n};\n\nexport default Tooltip;\n","import Tooltip from \"./Tooltip\";\nexport default Tooltip;\n","import * as React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { useDispatch } from \"react-redux\";\n\nimport { asArray } from \"@/arrays\";\n\nimport useSelector from \"@/hooks/useSelector\";\nimport { useQuerySelector } from \"@/hooks/useQuerySelector\";\n\nimport {\n  isTutorialActiveSelector,\n  tutorialAnnotationsSelector,\n} from \"@/services/tutorial/selectors/tutorial\";\nimport { AnnotatedElement } from \"@/services/tutorial/state\";\n\nimport Button from \"../Button\";\nimport Tooltip from \"../Tooltip\";\n\nimport styles from \"./Tutorial.module.css\";\n\nconst Tutorial: React.FC = () => {\n  const isTutorialActive = useSelector(isTutorialActiveSelector);\n  const tutorialAnnotations = useSelector(tutorialAnnotationsSelector);\n\n  if (!isTutorialActive) {\n    return null;\n  }\n\n  const annotations = tutorialAnnotations.map((annotation) => (\n    <Annotation key={annotation.selector} {...annotation} />\n  ));\n\n  const css = tutorialAnnotations\n    .map(\n      ({ selector }) => `\n    ${selector} {\n      position: relative;\n      z-index: 10;\n    }\n  `\n    )\n    .join(\"\\n\");\n\n  return createPortal(\n    <div className={styles[\"tutorial\"]}>\n      <div className={styles[\"tutorial-backdrop\"]} />\n      <style>{css}</style>\n      {annotations}\n    </div>,\n    document.body\n  );\n};\n\nexport default Tutorial;\n\nconst Annotation: React.FC<AnnotatedElement> = ({\n  selector,\n  message,\n  placement,\n  action = [],\n}) => {\n  const dispatch = useDispatch();\n\n  const element = useQuerySelector(selector);\n\n  React.useEffect(() => {\n    if (element) {\n      element.scrollIntoView();\n    }\n  }, [element]);\n\n  const actions = asArray(action);\n\n  if (!element || (!message && !actions.length)) {\n    return null;\n  }\n\n  const actionElements = actions.map(({ name, action }) => {\n    return (\n      <Button key={name} size=\"small\" onClick={() => dispatch(action)}>\n        {name}\n      </Button>\n    );\n  });\n\n  return (\n    <Tooltip\n      className={styles[\"tutorial-tooltip\"]}\n      anchorEl={element}\n      placement={placement}\n      isOpen={true}\n    >\n      {message}\n      {actionElements && (\n        <div className={styles[\"tutorial-tooltip-actions\"]}>\n          {actionElements}\n        </div>\n      )}\n    </Tooltip>\n  );\n};\n","import Tutorial from \"./Tutorial\";\nexport default Tutorial;\n","import * as React from \"react\";\n\nimport useSelector from \"@/hooks/useSelector\";\nimport { useAction } from \"@/hooks/useAction\";\n\nimport { acceptDialog } from \"@/actions/dialog-response-accept\";\n\nimport { dialogDataSelector } from \"@/services/dialog/selectors/dialog\";\n\nimport Button from \"@/components/Button\";\nimport Dialog from \"@/components/Dialog\";\n\nimport styles from \"./ExportProjectLinkDialog.module.css\";\n\nimport { ExportProjectLinkDialogData } from \"./types\";\n\nconst ExportProjectLinkDialog: React.FC = () => {\n  const onCloseDialog = useAction(acceptDialog);\n  const dialogData: ExportProjectLinkDialogData | null = useSelector(\n    dialogDataSelector\n  ) as any;\n\n  const projectLink = dialogData?.projectLink;\n\n  const onCopy = React.useCallback(() => {\n    if (!projectLink) {\n      return;\n    }\n    // TODO: Show link in dialog on failure\n    navigator.clipboard.writeText(projectLink).catch(() => {\n      /* do nothing */\n    });\n  }, [projectLink]);\n\n  if (!projectLink) {\n    return null;\n  }\n\n  const dialogFooter = (\n    <Button variant=\"primary\" onClick={onCopy}>\n      Copy to Clipboard\n    </Button>\n  );\n\n  return (\n    <Dialog\n      isOpen={true}\n      title=\"Export Project Link\"\n      cancelText=\"Close\"\n      onCancel={onCloseDialog}\n      footer={dialogFooter}\n    >\n      <div className={styles[\"export-link-dialog-link-container\"]}>\n        <code className={styles[\"export-link-dialog-link\"]}>{projectLink}</code>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default ExportProjectLinkDialog;\n","import ExportProjectLinkDialog from \"./ExportProjectLinkDialog\";\n\nexport { ExportProjectLinkDialog };\nexport const ExportProjectLinkDialogType = \"export-project-link\" as const;\nexport * from \"./types\";\n","import * as React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport uniq from \"lodash/uniq\";\n\nimport { useAction } from \"@/hooks/useAction\";\nimport useSelector from \"@/hooks/useSelector\";\n\nimport { acceptDialog } from \"@/actions/dialog-response-accept\";\nimport { cancelDialog } from \"@/actions/dialog-response-cancel\";\n\nimport { dialogDataSelector } from \"@/services/dialog/selectors/dialog\";\n\nimport Dialog from \"@/components/Dialog\";\nimport Checkbox from \"@/components/Checkbox\";\n\nimport styles from \"./ImportProjectCircuitsDialog.module.css\";\nimport { ImportProjectCircuitsDialogData } from \"./types\";\n\nconst ImportProjectCircuitsDialog: React.FC = () => {\n  const dispatch = useDispatch();\n  const dialogData: ImportProjectCircuitsDialogData | null = useSelector(\n    dialogDataSelector\n  ) as any;\n\n  const [selectedIds, setSelectedIds] = React.useState<string[]>([]);\n\n  const onCloseDialog = useAction(cancelDialog);\n  const onAcceptDialog = React.useCallback(() => {\n    dispatch(acceptDialog(selectedIds));\n  }, [dispatch, selectedIds]);\n\n  if (!dialogData) {\n    return null;\n  }\n\n  const { circuits } = dialogData;\n\n  return (\n    <Dialog\n      isOpen={true}\n      title=\"Import Circuits\"\n      onAccept={onAcceptDialog}\n      onCancel={onCloseDialog}\n      acceptText=\"Import Circuits\"\n    >\n      <div>\n        <p>Choose the circuits to import.</p>\n        <p>\n          Any chosen circuits that depend on other circuits will import their\n          dependencies automatically.\n        </p>\n        <p>\n          If any circuits already exist in your project, they will not be\n          re-imported.\n        </p>\n      </div>\n      <ul className={styles[\"import-project-circuits-list\"]}>\n        {circuits.map(({ circuitId, circuitName }) => (\n          <li key={circuitId}>\n            <ImportCircuitCheckbox\n              circuitId={circuitId}\n              circuitName={circuitName}\n              selectedIds={selectedIds}\n              onSetSelectedIds={setSelectedIds}\n            />\n          </li>\n        ))}\n      </ul>\n    </Dialog>\n  );\n};\n\ninterface ImportCircuitCheckboxProps {\n  circuitId: string;\n  circuitName: string;\n  selectedIds: string[];\n  onSetSelectedIds(selectedIds: string[]): void;\n}\nconst ImportCircuitCheckbox: React.FC<ImportCircuitCheckboxProps> = ({\n  circuitId,\n  circuitName,\n  selectedIds,\n  onSetSelectedIds,\n}) => {\n  const onChange = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      if (e.target.checked) {\n        onSetSelectedIds(uniq([...selectedIds, circuitId]));\n      }\n    },\n    [circuitId, onSetSelectedIds, selectedIds]\n  );\n\n  return (\n    <Checkbox onChange={onChange} value={selectedIds.indexOf(circuitId) !== -1}>\n      {circuitName}\n    </Checkbox>\n  );\n};\n\nexport default ImportProjectCircuitsDialog;\n","import ImportProjectCircuitsDialog from \"./ImportProjectCircuitsDialog\";\n\nexport { ImportProjectCircuitsDialog };\nexport const ImportProjectCircuitsDialogType = \"import-project-circuits\" as const;\nexport * from \"./types\";\n","import React from \"react\";\nimport { DialogType } from \"./types\";\n\nimport { ExportProjectLinkDialog } from \"./dialog-types/export-project-link\";\nimport { ImportProjectCircuitsDialog } from \"./dialog-types/import-project-circuits\";\n\nexport function getDialogComponent(type: DialogType): React.ComponentType {\n  switch (type) {\n    case \"export-project-link\":\n      return ExportProjectLinkDialog;\n    case \"import-project-circuits\":\n      return ImportProjectCircuitsDialog;\n    default:\n      return unknownDialog(type);\n  }\n}\n\nfunction unknownDialog(dialogType: never): never {\n  throw new Error(`Unknown dialog type ${dialogType}`);\n}\n","import { ElementDefinitionSource } from \"../types\";\n\nimport IntegratedCircuitDefinitionSources from \"./integrated-circuits\";\nimport InteractionDefinitionSources from \"./interaction\";\nimport LogicDefinitionSources from \"./logic\";\nimport OutputDefinitionSources from \"./output\";\nimport PinDefinitionSources from \"./pins\";\n\nconst elementDefinitionSources: ElementDefinitionSource[] = [\n  ...IntegratedCircuitDefinitionSources,\n  ...InteractionDefinitionSources,\n  ...LogicDefinitionSources,\n  ...OutputDefinitionSources,\n  ...PinDefinitionSources,\n];\n\nexport default elementDefinitionSources;\n","import * as React from \"react\";\n\nimport { createSelector } from \"reselect\";\nimport sortBy from \"lodash/sortBy\";\nimport getBounds from \"svg-path-bounds\";\n\nimport { PinDirection } from \"@/logic\";\nimport { boundsToRect, Point } from \"@/geometry\";\n\nimport { IntegratedCircuitElementVisualProps } from \"@/elements/visuals/IntegratedCircuitElementVisual\";\n\nimport { elementIdsByCircuitIdSelector } from \"@/services/circuit-graph/selectors/elements\";\nimport { ROOT_CIRCUIT_ID } from \"@/services/circuits/constants\";\nimport { elementTypesByElementIdSelector } from \"@/services/circuit-graph/selectors/elements\";\nimport { elementPositionsByElementIdSelector } from \"@/services/circuit-layout/selectors/element-positions\";\nimport { circuitNamesByIdSelector } from \"@/services/circuit-properties/selectors/circuits\";\n\nimport {\n  ElementDefinition,\n  ElementDefinitionSource,\n  ElementPinDefinition,\n} from \"../../types\";\n\nimport { circuitIdToElementType, getICBorderPath } from \"./utils\";\n\nconst IntegratedCircuitDefinitionSource: ElementDefinitionSource = createSelector(\n  (state) => elementIdsByCircuitIdSelector.local(state.circuitGraph),\n  (state) => elementTypesByElementIdSelector.local(state.circuitGraph),\n  (state) => elementPositionsByElementIdSelector.local(state.circuitLayout),\n  (state) => circuitNamesByIdSelector.local(state.circuitProperties),\n  (\n    elementIdsByCircuitId,\n    elementTypesByElementId,\n    elementPositionsByElementId,\n    circuitNamesById\n  ) => {\n    return Object.keys(elementIdsByCircuitId)\n      .filter((x) => x !== ROOT_CIRCUIT_ID)\n      .map((circuitId) => {\n        const elementIds = elementIdsByCircuitId[circuitId] ?? [];\n        const circuitName =\n          circuitNamesById[circuitId] ?? circuitId.substr(0, 5);\n\n        // Sort by y axis position to get consistent pin locations.\n        let pinElementIds = elementIds.filter((elementId) =>\n          elementTypesByElementId[elementId].startsWith(\"pin-\")\n        );\n        pinElementIds = sortBy(\n          pinElementIds,\n          (elementId) => elementPositionsByElementId[elementId].y,\n          (elementId) => elementPositionsByElementId[elementId].x\n        );\n\n        const pins: Record<string, ElementPinDefinition> = {};\n        const inputPinIds: string[] = [];\n        const outputPinIds: string[] = [];\n        for (const pinElementId of pinElementIds) {\n          const type = elementTypesByElementId[pinElementId];\n          if (type === \"pin-input\") {\n            pins[pinElementId] = {\n              direction: \"input\",\n              ...circuitPinPosition(inputPinIds.length, \"input\"),\n            };\n            inputPinIds.push(pinElementId);\n          } else if (type === \"pin-output\") {\n            pins[pinElementId] = {\n              direction: \"output\",\n              ...circuitPinPosition(outputPinIds.length, \"output\"),\n            };\n            outputPinIds.push(pinElementId);\n          }\n        }\n\n        const componentProps: IntegratedCircuitElementVisualProps = {\n          circuitId,\n          inputPinIds,\n          outputPinIds,\n        };\n\n        const def: ElementDefinition = {\n          type: circuitIdToElementType(circuitId),\n          category: \"integrated-circuit\",\n          displayName: circuitName,\n          elementProduction: {\n            type: \"circuit\",\n            circuitId,\n          },\n          visual: {\n            hitRect: boundsToRect(\n              getBounds(\n                getICBorderPath(inputPinIds.length, outputPinIds.length)\n              )\n            ),\n            trayComponent: () => (\n              <g stroke=\"black\" strokeWidth={1}>\n                <rect x={10} y={10} width={30} height={30} fill=\"none\" />\n\n                <line x1={10} y1={15} x2={5} y2={15} />\n                <line x1={40} y1={15} x2={45} y2={15} />\n\n                <line x1={10} y1={35} x2={5} y2={35} />\n                <line x1={40} y1={35} x2={45} y2={35} />\n              </g>\n            ),\n            component: \"integrated-circuit\",\n            componentProps,\n          },\n          pins,\n        };\n        return def;\n      });\n  }\n);\n\nexport default [IntegratedCircuitDefinitionSource];\n\nfunction circuitPinPosition(pinIndex: number, direction: PinDirection): Point {\n  return {\n    x: direction === \"input\" ? 0 : 100,\n    y: pinIndex * 50 + 25,\n  };\n}\n","export function circuitIdToElementType(circuitId: string) {\n  return `ic-${circuitId}`;\n}\n\nexport function elementTypeToCircuitId(\n  elementType: string | null\n): string | null {\n  if (!elementType || !elementType.startsWith(\"ic-\")) {\n    return null;\n  }\n  return elementType.substr(3);\n}\n\nexport function getICBorderPath(inputPinCount: number, outputPinCount: number) {\n  const height = Math.max(inputPinCount, outputPinCount, 1) * 50 - 20;\n  return `M10,10 h80 v${height} h-80 z`;\n}\n","import { ElementDefinitionSource } from \"../../types\";\n\nconst InteractionDefinitionSources: ElementDefinitionSource[] = [\n  require(\"./momentary\").default,\n  require(\"./toggle\").default,\n];\n\nexport default InteractionDefinitionSources;\n","import { ElementDefinition } from \"../../types\";\n\nconst toggleElementDefinition: ElementDefinition = {\n  type: \"interaction-momentary\",\n  category: \"input-output\",\n  displayName: \"Momentary Switch\",\n  elementProduction: \"input-momentary\",\n  visual: {\n    hitRect: {\n      p1: { x: 5, y: 5 },\n      p2: { x: 45, y: 45 },\n    },\n    component: \"interaction-momentary\",\n  },\n  pins: {\n    OUT: {\n      direction: \"output\",\n      x: 50,\n      y: 25,\n    },\n  },\n};\n\nexport default toggleElementDefinition;\n","import { ElementDefinition } from \"../../types\";\n\nconst toggleElementDefinition: ElementDefinition = {\n  type: \"interaction-toggle\",\n  category: \"input-output\",\n  displayName: \"Toggle Switch\",\n  elementProduction: \"input-toggle\",\n  visual: {\n    hitRect: {\n      p1: { x: 5, y: 5 },\n      p2: { x: 45, y: 45 },\n    },\n    component: \"interaction-toggle\",\n  },\n  pins: {\n    OUT: {\n      direction: \"output\",\n      x: 50,\n      y: 25,\n    },\n  },\n};\n\nexport default toggleElementDefinition;\n","import * as React from \"react\";\nimport getBounds from \"svg-path-bounds\";\n\nimport { boundsToRect } from \"@/geometry\";\n\nimport { ElementDefinition } from \"../../types\";\nimport { createStaticElementVisual } from \"../../visuals/static-element-visual\";\n\n// Shape path from https://commons.wikimedia.org/wiki/File:AND_ANSI.svg\n\nconst hitPath = `M30 5V45H50.47619c11.267908 0 20-9.000045 20-20s-8.732091-20-20-20H30z`;\n\nconst andElementDefinition: ElementDefinition = {\n  type: \"logic-and\",\n  category: \"logic\",\n  displayName: \"AND\",\n  elementProduction: \"logic-and\",\n  visual: createStaticElementVisual(\n    boundsToRect(getBounds(hitPath)),\n    <g>\n      <path d={hitPath} fill=\"transparent\" stroke=\"none\" />\n      <path\n        className=\"element-select-highlight--stroke\"\n        fill=\"none\"\n        stroke=\"#000\"\n        strokeWidth=\"2\"\n        d=\"M70,25 h30 M31,15 H5 M32,35 H5\"\n      />\n      <path\n        className=\"element-select-highlight--fill\"\n        d=\"M30 5V45H50.47619c11.267908 0 20-9.000045 20-20s-8.732091-20-20-20H30zm2.857143 2.857143H50.47619c9.760663 0 16.666667 7.639955 16.666667 17.142857 0 9.502902-7.382195 17.142857-17.142857 17.142857H32.857143V7.857143z\"\n      />\n    </g>\n  ),\n  pins: {\n    A: { direction: \"input\", x: 0, y: 14.5 },\n    B: { direction: \"input\", x: 0, y: 35 },\n    OUT: { direction: \"output\", x: 100, y: 25 },\n  },\n};\nexport default andElementDefinition;\n","import * as React from \"react\";\nimport getBounds from \"svg-path-bounds\";\n\nimport { boundsToRect } from \"@/geometry\";\n\nimport { ElementDefinition } from \"../../types\";\nimport { createStaticElementVisual } from \"../../visuals/static-element-visual\";\n\n// Shape path from https://commons.wikimedia.org/wiki/File:Buffer_ANSI.svg\n\nconst hitPath = `M 28.96875,2.59375 L 28.96875,5 L 28.96875,45 L 28.96875,47.40625 L 31.125,46.34375 L 72.15625,26.34375 L 75,25 L 72.15625,23.65625 L 31.125,3.65625 L 28.96875,2.59375 z`;\n\nconst bufferElementDefinition: ElementDefinition = {\n  type: \"logic-buffer\",\n  category: \"logic\",\n  displayName: \"Buffer\",\n  elementProduction: \"logic-buffer\",\n  visual: createStaticElementVisual(\n    boundsToRect(getBounds(hitPath)),\n    <g>\n      <path d={hitPath} fill=\"transparent\" stroke=\"none\" />\n      <path\n        className=\"element-select-highlight--stroke\"\n        fill=\"none\"\n        stroke=\"black\"\n        strokeWidth=\"2\"\n        d=\"M72,25 L 100,25\"\n      />\n      <path\n        className=\"element-select-highlight--stroke\"\n        fill=\"none\"\n        stroke=\"black\"\n        strokeWidth=\"2\"\n        d=\"M 29.043478,25 L 5.0434781,25\"\n      />\n      <path\n        className=\"element-select-highlight--fill\"\n        stroke=\"none\"\n        fill=\"black\"\n        d=\"M 28.96875,2.59375 L 28.96875,5 L 28.96875,45 L 28.96875,47.40625 L 31.125,46.34375 L 72.15625,26.34375 L 75,25 L 72.15625,23.65625 L 31.125,3.65625 L 28.96875,2.59375 z M 31.96875,7.40625 L 68.09375,25 L 31.96875,42.59375 L 31.96875,7.40625 z\"\n      />\n    </g>\n  ),\n  pins: {\n    IN: {\n      direction: \"input\",\n      x: 0,\n      y: 25,\n    },\n    OUT: {\n      direction: \"output\",\n      x: 100,\n      y: 25,\n    },\n  },\n};\nexport default bufferElementDefinition;\n","import { ElementDefinitionSource } from \"../../types\";\n\nconst LogicElementDefinitionSources: ElementDefinitionSource[] = [\n  require(\"./and\").default,\n  require(\"./buffer\").default,\n  require(\"./nand\").default,\n  require(\"./nor\").default,\n  require(\"./not\").default,\n  require(\"./or\").default,\n  require(\"./xor\").default,\n];\n\nexport default LogicElementDefinitionSources;\n","import * as React from \"react\";\n\nimport { Rectangle } from \"@/geometry\";\n\nimport { ElementDefinition } from \"../../types\";\nimport { createStaticElementVisual } from \"../../visuals/static-element-visual\";\n\n// Shape path from https://en.wikipedia.org/wiki/NAND_logic#/media/File:NAND_ANSI_Labelled.svg\n\nconst hitRect: Rectangle = {\n  p1: {\n    x: 24,\n    y: 5,\n  },\n  p2: {\n    x: 80,\n    y: 45,\n  },\n};\n\nconst nandElementDefinition: ElementDefinition = {\n  type: \"logic-nand\",\n  category: \"logic\",\n  displayName: \"NAND\",\n  elementProduction: \"logic-nand\",\n  visual: createStaticElementVisual(\n    hitRect,\n    <g transform=\"translate(-10,0)\">\n      <path\n        d=\"M 40,5 L 40,6.4285714 L 40,43.571429 L 40,45 L 41.428571,45 L 60.47619,45 C 71.744098,45 80.47619,35.999955 80.47619,25 C 80.47619,14.000045 71.744099,5.0000002 60.47619,5 C 60.47619,5 60.47619,5 41.428571,5 L 40,5 z\"\n        stroke=\"none\"\n        fill=\"transparent\"\n      />\n      <path\n        className=\"element-select-highlight--stroke\"\n        strokeWidth=\"2\"\n        stroke=\"black\"\n        fill=\"none\"\n        d=\"M 88,25 H110\"\n      />\n      <path\n        className=\"element-select-highlight--stroke\"\n        strokeWidth=\"2\"\n        stroke=\"black\"\n        fill=\"none\"\n        d=\"M 41,15 L 15,15\"\n      />\n      <path\n        className=\"element-select-highlight--stroke\"\n        strokeWidth=\"2\"\n        stroke=\"black\"\n        fill=\"none\"\n        d=\"M 42,35 L 15,35\"\n      />\n      <path\n        className=\"element-select-highlight--fill\"\n        d=\"M 40,5 L 40,6.4285714 L 40,43.571429 L 40,45 L 41.428571,45 L 60.47619,45 C 71.744098,45 80.47619,35.999955 80.47619,25 C 80.47619,14.000045 71.744099,5.0000002 60.47619,5 C 60.47619,5 60.47619,5 41.428571,5 L 40,5 z M 42.857143,7.8571429 C 50.834264,7.8571429 55.918368,7.8571429 58.095238,7.8571429 C 59.285714,7.8571429 59.880952,7.8571429 60.178571,7.8571429 C 60.327381,7.8571429 60.409227,7.8571429 60.446429,7.8571429 C 60.465029,7.8571429 60.471543,7.8571429 60.47619,7.8571429 C 70.236853,7.857143 77.142857,15.497098 77.142857,25 C 77.142857,34.502902 69.760662,42.142857 60,42.142857 L 42.857143,42.142857 L 42.857143,7.8571429 z\"\n      />\n      <path\n        className=\"element-select-highlight--stroke\"\n        strokeWidth=\"2\"\n        stroke=\"black\"\n        fill=\"none\"\n        d=\"M 79,25 A 4,4 0 1 1 71,25 A 4,4 0 1 1 79,25 z\"\n        transform=\"translate(9,0)\"\n      />\n    </g>\n  ),\n  pins: {\n    A: {\n      direction: \"input\",\n      x: 0,\n      y: 14.5,\n    },\n    B: {\n      direction: \"input\",\n      x: 0,\n      y: 35,\n    },\n    OUT: {\n      direction: \"output\",\n      x: 100,\n      y: 25,\n    },\n  },\n};\nexport default nandElementDefinition;\n","import * as React from \"react\";\n\nimport { Rectangle } from \"@/geometry\";\n\nimport { ElementDefinition } from \"../../types\";\nimport { createStaticElementVisual } from \"../../visuals/static-element-visual\";\n\n// Shape path from https://commons.wikimedia.org/wiki/File:NOR_ANSI.svg\n\nconst hitRect: Rectangle = {\n  p1: {\n    x: 24,\n    y: 5,\n  },\n  p2: {\n    x: 80,\n    y: 45,\n  },\n};\n\nconst norElementDefinition: ElementDefinition = {\n  type: \"logic-nor\",\n  category: \"logic\",\n  displayName: \"NOR\",\n  elementProduction: \"logic-nor\",\n  visual: createStaticElementVisual(\n    hitRect,\n    <g>\n      <path\n        fill=\"transparent\"\n        stroke=\"none\"\n        d=\"M24.09375 5l2 2.4375S31.75 14.437549 31.75 25s-5.65625 17.5625-5.65625 17.5625l-2 2.4375H41.25c2.408076.000001 7.689699.024514 13.625-2.40625s12.536536-7.343266 17.6875-16.875L71.25 25l1.3125-.71875C62.259387 5.21559 46.006574 5 41.25 5H24.09375z\"\n      />\n      <path\n        className=\"element-select-highlight--stroke\"\n        fill=\"none\"\n        stroke=\"#000\"\n        strokeWidth=\"2\"\n        d=\"M79,25 h21 M31,15 H5 M32,35 H5\"\n      />\n      <path\n        className=\"element-select-highlight--fill\"\n        fillRule=\"evenodd\"\n        d=\"M24.09375 5l2 2.4375S31.75 14.437549 31.75 25s-5.65625 17.5625-5.65625 17.5625l-2 2.4375H41.25c2.408076.000001 7.689699.024514 13.625-2.40625s12.536536-7.343266 17.6875-16.875L71.25 25l1.3125-.71875C62.259387 5.21559 46.006574 5 41.25 5H24.09375zm5.875 3H41.25c4.684173 0 18.28685-.130207 27.96875 17C64.451964 33.429075 58.697469 37.68391 53.5 39.8125 48.139339 42.007924 43.658075 42.000001 41.25 42H30c1.873588-3.108434 4.75-9.04935 4.75-17 0-7.973354-2.908531-13.900185-4.78125-17z\"\n      />\n      <path\n        className=\"element-select-highlight--stroke\"\n        fill=\"none\"\n        stroke=\"#000\"\n        strokeWidth=\"2\"\n        d=\"M79 25a4 4 0 1 1-8 0 4 4 0 1 1 8 0z\"\n      />\n    </g>\n  ),\n  pins: {\n    A: {\n      direction: \"input\",\n      x: 0,\n      y: 14.5,\n    },\n    B: {\n      direction: \"input\",\n      x: 0,\n      y: 35,\n    },\n    OUT: {\n      direction: \"output\",\n      x: 100,\n      y: 25,\n    },\n  },\n};\nexport default norElementDefinition;\n","import * as React from \"react\";\n\nimport { Rectangle } from \"@/geometry\";\n\nimport { ElementDefinition } from \"../../types\";\nimport { createStaticElementVisual } from \"../../visuals/static-element-visual\";\n\n// Shape path from https://commons.wikimedia.org/wiki/File:NOT_ANSI.svg\n\nconst hitRect: Rectangle = {\n  p1: {\n    x: 24,\n    y: 5,\n  },\n  p2: {\n    x: 80,\n    y: 45,\n  },\n};\n\nconst notElementDefinition: ElementDefinition = {\n  type: \"logic-not\",\n  category: \"logic\",\n  displayName: \"NOT\",\n  elementProduction: \"logic-not\",\n  visual: createStaticElementVisual(\n    hitRect,\n    <g>\n      <path\n        fill=\"transparent\"\n        stroke=\"none\"\n        d=\"M28.96875 2.59375v44.8125l2.15625-1.0625 41.03125-20v-2.6875l-41.03125-20-2.15625-1.0625z\"\n      />\n      <path\n        className=\"element-select-highlight--stroke\"\n        fill=\"none\"\n        stroke=\"#000\"\n        strokeWidth=\"2\"\n        d=\"M79,25 H100 M29,25 h-24\"\n      />\n      <path\n        className=\"element-select-highlight--fill\"\n        d=\"M28.96875 2.59375v44.8125l2.15625-1.0625 41.03125-20v-2.6875l-41.03125-20-2.15625-1.0625zm3 4.8125L68.09375 25l-36.125 17.59375V7.40625z\"\n      />\n      <path\n        className=\"element-select-highlight--stroke\"\n        fill=\"none\"\n        stroke=\"#000\"\n        strokeWidth=\"2\"\n        d=\"M79 25a4 4 0 1 1-8 0 4 4 0 1 1 8 0z\"\n      />\n    </g>\n  ),\n  pins: {\n    IN: {\n      direction: \"input\",\n      x: 0,\n      y: 25,\n    },\n    OUT: {\n      direction: \"output\",\n      x: 100,\n      y: 25,\n    },\n  },\n};\nexport default notElementDefinition;\n","import * as React from \"react\";\nimport getBounds from \"svg-path-bounds\";\n\nimport { boundsToRect } from \"@/geometry\";\n\nimport { ElementDefinition } from \"../../types\";\nimport { createStaticElementVisual } from \"../../visuals/static-element-visual\";\n\n// Shape path from https://commons.wikimedia.org/wiki/File:OR_ANSI.svg\n\nconst hitPath = `M24.09375 5l2 2.4375S31.75 14.437549 31.75 25s-5.65625 17.5625-5.65625 17.5625l-2 2.4375H41.25c2.408076.000001 7.689699.024514 13.625-2.40625s12.536536-7.343266 17.6875-16.875L71.25 25l1.3125-.71875C62.259387 5.21559 46.006574 5 41.25 5H24.09375z`;\n\nconst orElementDefinition: ElementDefinition = {\n  type: \"logic-or\",\n  category: \"logic\",\n  displayName: \"OR\",\n  elementProduction: \"logic-or\",\n  visual: createStaticElementVisual(\n    boundsToRect(getBounds(hitPath)),\n    <g>\n      <path d={hitPath} fill=\"transparent\" stroke=\"none\" />\n      <path\n        className=\"element-select-highlight--stroke\"\n        fill=\"none\"\n        stroke=\"#000\"\n        strokeWidth=\"2\"\n        d=\"M70,25 h30 M31,15 H5 M32,35 H5\"\n      />\n      <path\n        className=\"element-select-highlight--fill\"\n        fillRule=\"evenodd\"\n        d=\"M24.09375 5l2 2.4375S31.75 14.437549 31.75 25s-5.65625 17.5625-5.65625 17.5625l-2 2.4375H41.25c2.408076.000001 7.689699.024514 13.625-2.40625s12.536536-7.343266 17.6875-16.875L71.25 25l1.3125-.71875C62.259387 5.21559 46.006574 5 41.25 5H24.09375zm5.875 3H41.25c4.684173 0 18.28685-.130207 27.96875 17C64.451964 33.429075 58.697469 37.68391 53.5 39.8125 48.139339 42.007924 43.658075 42.000001 41.25 42H30c1.873588-3.108434 4.75-9.04935 4.75-17 0-7.973354-2.908531-13.900185-4.78125-17z\"\n      />\n    </g>\n  ),\n  pins: {\n    A: {\n      direction: \"input\",\n      x: 0,\n      y: 14.5,\n    },\n    B: {\n      direction: \"input\",\n      x: 0,\n      y: 35,\n    },\n    OUT: {\n      direction: \"output\",\n      x: 100,\n      y: 25,\n    },\n  },\n};\nexport default orElementDefinition;\n","import * as React from \"react\";\nimport getBounds from \"svg-path-bounds\";\n\nimport { boundsToRect } from \"@/geometry\";\n\nimport { ElementDefinition } from \"../../types\";\nimport { createStaticElementVisual } from \"../../visuals/static-element-visual\";\n\n// Shape path from https://commons.wikimedia.org/wiki/File:XOR_ANSI.svg\n\nconst hitPath = `M24.09375 5l2 2.4375S31.75 14.43755 31.75 25s-5.65625 17.5625-5.65625 17.5625l-2 2.4375H41.25c2.40808 0 7.6897.02451 13.625-2.40625s12.53654-7.34327 17.6875-16.875L71.25 25l1.3125-.71875C62.25939 5.21559 46.00657 5 41.25 5H24.09375z`;\n\nconst xorElementDefinition: ElementDefinition = {\n  type: \"logic-xor\",\n  category: \"logic\",\n  displayName: \"XOR\",\n  elementProduction: \"logic-xor\",\n  visual: createStaticElementVisual(\n    boundsToRect(getBounds(hitPath)),\n    <g>\n      <path d={hitPath} fill=\"transparent\" stroke=\"none\" />\n      <path\n        className=\"element-select-highlight--stroke\"\n        fill=\"none\"\n        stroke=\"#000\"\n        strokeWidth=\"2\"\n        d=\"M70,25 h30 M30,15 H5 M31,35 H5\"\n      />\n      <g fillRule=\"evenodd\" className=\"element-select-highlight--fill\">\n        <path d=\"M24.25 42C22.65263 44.6444 22 45 22 45h-3.65625l2-2.4375S26 35.56245 26 25 20.34375 7.4375 20.34375 7.4375l-2-2.4375H22c.78125.9375 1.42188 1.65625 2.21875 3C26.09147 11.09981 29 17.02665 29 25c0 7.95065-2.8967 13.87942-4.75 17z\" />\n        <path d=\"M24.09375 5l2 2.4375S31.75 14.43755 31.75 25s-5.65625 17.5625-5.65625 17.5625l-2 2.4375H41.25c2.40808 0 7.6897.02451 13.625-2.40625s12.53654-7.34327 17.6875-16.875L71.25 25l1.3125-.71875C62.25939 5.21559 46.00657 5 41.25 5H24.09375zm5.875 3H41.25c4.68417 0 18.28685-.1302 27.96875 17C64.45196 33.42907 58.69747 37.68391 53.5 39.8125 48.13934 42.00792 43.65808 42 41.25 42H30c1.87359-3.10843 4.75-9.04935 4.75-17 0-7.97335-2.90853-13.90019-4.78125-17z\" />\n      </g>\n    </g>\n  ),\n  pins: {\n    A: {\n      direction: \"input\",\n      x: 0,\n      y: 14.5,\n    },\n    B: {\n      direction: \"input\",\n      x: 0,\n      y: 35,\n    },\n    OUT: {\n      direction: \"output\",\n      x: 100,\n      y: 25,\n    },\n  },\n};\nexport default xorElementDefinition;\n","import { ElementDefinitionSource } from \"../../types\";\n\nconst OutputElementDefinitionSources: ElementDefinitionSource[] = [\n  require(\"./led\").default,\n  require(\"./seg7\").default,\n];\n\nexport default OutputElementDefinitionSources;\n","import { LedEvolverState } from \"@/evolvers/definitions/output-led\";\n\nimport { ElementDefinition } from \"../../types\";\nimport { createShapePathVisual } from \"../../visuals/ShapePathElementVisual\";\n\nfunction genCirclePath(cx: number, cy: number, r: number): string {\n  return `M ${cx - r}, ${cy}\n    a ${r},${r} 0 1,0 ${r * 2},0\n    a ${r},${r} 0 1,0 ${-(r * 2)},0`;\n}\n\nconst path = genCirclePath(25, 25, 20);\n\nconst ledElementDefinition: ElementDefinition = {\n  type: \"output-led\",\n  category: \"input-output\",\n  displayName: \"Indicator Light\",\n  elementProduction: \"output-led\",\n  visual: createShapePathVisual(path, {\n    path,\n    stroke: \"black\",\n    strokeWidth: 3,\n    fill: (state: LedEvolverState) =>\n      state.value ? \"lightgreen\" : \"darkgreen\",\n  }),\n  pins: {\n    IN: {\n      direction: \"input\",\n      x: 0,\n      y: 25,\n    },\n  },\n};\nexport default ledElementDefinition;\n","import { ElementDefinition } from \"../../types\";\nimport {\n  createShapePathVisual,\n  ShapePathDefinition,\n} from \"../../visuals/ShapePathElementVisual\";\n\n// Shape path from https://commons.wikimedia.org/wiki/File:7-segment_abcdefg.svg\n\nconst SCALE = 3;\nconst OFFSET = [15, 0];\n\n/**\n * Produce a visual path definition of a segment given a series of polygon points.\n * The path definition will color itself based on the state key specified by 'name'\n * @param name The state key to select color based on.  The key should represent a boolean value.\n * @param points An array of [x,y] pairs that make up the polygon.\n */\nfunction createSeg(\n  name: string,\n  points: [number, number][]\n): ShapePathDefinition {\n  const start = points[0];\n  let path = `M${start[0] * SCALE + OFFSET[0]},${start[1] * SCALE + OFFSET[1]}`;\n  for (const p of points.slice(1)) {\n    const [x, y] = p;\n    path += `L${x * SCALE + OFFSET[0]},${y * SCALE + OFFSET[1]}`;\n  }\n  path += \"z\";\n  return {\n    path,\n    fill: (state) => (state[name] ? \"red\" : \"gray\"),\n    strokeWidth: 0,\n  };\n}\n\nconst seg7ElementDefinition: ElementDefinition = {\n  type: \"output-seg7\",\n  category: \"input-output\",\n  displayName: \"7-Segment Display\",\n  elementProduction: \"output-seg7\",\n  visual: createShapePathVisual(`M15,0 V63 H45 V0 z`, [\n    createSeg(\"A\", [\n      [1, 1],\n      [2, 0],\n      [8, 0],\n      [9, 1],\n      [8, 2],\n      [2, 2],\n    ]),\n    createSeg(\"B\", [\n      [9, 1],\n      [10, 2],\n      [10, 8],\n      [9, 9],\n      [8, 8],\n      [8, 2],\n    ]),\n    createSeg(\"C\", [\n      [9, 9],\n      [10, 10],\n      [10, 16],\n      [9, 17],\n      [8, 16],\n      [8, 10],\n    ]),\n    createSeg(\"D\", [\n      [9, 17],\n      [8, 18],\n      [2, 18],\n      [1, 17],\n      [2, 16],\n      [8, 16],\n    ]),\n    createSeg(\"E\", [\n      [1, 17],\n      [0, 16],\n      [0, 10],\n      [1, 9],\n      [2, 10],\n      [2, 16],\n    ]),\n    createSeg(\"F\", [\n      [1, 9],\n      [0, 8],\n      [0, 2],\n      [1, 1],\n      [2, 2],\n      [2, 8],\n    ]),\n    createSeg(\"G\", [\n      [1, 9],\n      [2, 8],\n      [8, 8],\n      [9, 9],\n      [8, 10],\n      [2, 10],\n    ]),\n  ]),\n  pins: {\n    A: {\n      direction: \"input\",\n      x: 0,\n      y: 5,\n    },\n    B: {\n      direction: \"input\",\n      x: 0,\n      y: 15,\n    },\n    C: {\n      direction: \"input\",\n      x: 0,\n      y: 25,\n    },\n    D: {\n      direction: \"input\",\n      x: 0,\n      y: 35,\n    },\n    E: {\n      direction: \"input\",\n      x: 0,\n      y: 45,\n    },\n    F: {\n      direction: \"input\",\n      x: 0,\n      y: 55,\n    },\n    G: {\n      direction: \"input\",\n      x: 0,\n      y: 65,\n    },\n  },\n};\nexport default seg7ElementDefinition;\n","import * as React from \"react\";\nimport getBounds from \"svg-path-bounds\";\n\nimport { boundsToRect } from \"@/geometry\";\n\nimport { ElementDefinition } from \"../../types\";\nimport { createStaticElementVisual } from \"../../visuals/static-element-visual\";\n\nconst hitPath = `M15,25 a 10,10 0 1,0 20 0 a 10,10 0 1,0 -20,0`;\n\nconst pinHighElementDefinition: ElementDefinition = {\n  type: \"pin-high\",\n  category: \"input-output\",\n  elementProduction: \"pin-high\",\n  displayName: \"High Pin\",\n  visual: createStaticElementVisual(\n    boundsToRect(getBounds(hitPath)),\n    <g>\n      <path d={hitPath} fill=\"transparent\" stroke=\"none\" />\n      <path\n        className=\"element-select-highlight--stroke\"\n        d=\"M15,25 a 10,10 0 1,0 20 0 a 10,10 0 1,0 -20,0 M35,25 h15\"\n        stroke=\"black\"\n        strokeWidth={2}\n        fill=\"none\"\n      />\n      <path\n        className=\"element-select-highlight--stroke\"\n        d=\"M25,20 v10 M20,25 h10\"\n        fill=\"none\"\n        stroke=\"black\"\n        strokeWidth={2}\n      />\n    </g>\n  ),\n  pins: {\n    OUT: {\n      direction: \"output\",\n      x: 50,\n      y: 25,\n    },\n  },\n};\nexport default pinHighElementDefinition;\n","import { ElementDefinitionSource } from \"../../types\";\n\nconst PinElementDefinitionSources: ElementDefinitionSource[] = [\n  require(\"./high\").default,\n  require(\"./input\").default,\n  require(\"./output\").default,\n];\n\nexport default PinElementDefinitionSources;\n","import * as React from \"react\";\nimport getBounds from \"svg-path-bounds\";\n\nimport { boundsToRect } from \"@/geometry\";\nimport { describeArc } from \"@/svg\";\n\nimport { ElementDefinition } from \"../../types\";\nimport { createStaticElementVisual } from \"../../visuals/static-element-visual\";\n\nconst hitPath = `M15,25 a 10,10 0 1,0 20 0 a 10,10 0 1,0 -20,0`;\n\nconst pinInputElementDefinition: ElementDefinition = {\n  type: \"pin-input\",\n  category: \"input-output\",\n  displayName: \"Input Pin\",\n  visual: createStaticElementVisual(\n    boundsToRect(getBounds(hitPath)),\n    <g>\n      <path d={hitPath} fill=\"transparent\" stroke=\"none\" />\n      <path\n        className=\"element-select-highlight--stroke\"\n        d=\"M15,25 a 10,10 0 1,0 20 0 a 10,10 0 1,0 -20,0 M35,25 h15\"\n        stroke=\"black\"\n        strokeWidth={2}\n        fill=\"none\"\n      />\n      <path\n        className=\"element-select-highlight--stroke\"\n        d={describeArc(25, 25, 3, -45, 225)}\n        fill=\"none\"\n        stroke=\"black\"\n        strokeWidth={2}\n      />\n    </g>\n  ),\n  pins: {\n    OUT: {\n      direction: \"output\",\n      x: 50,\n      y: 25,\n    },\n  },\n};\nexport default pinInputElementDefinition;\n","import * as React from \"react\";\nimport getBounds from \"svg-path-bounds\";\n\nimport { boundsToRect } from \"@/geometry\";\n\nimport { ElementDefinition } from \"../../types\";\nimport { createStaticElementVisual } from \"../../visuals/static-element-visual\";\n\nconst hitPath = `M15,25 a 10,10 0 1,0 20 0 a 10,10 0 1,0 -20,0`;\n\nconst pinOutputElementDefinition: ElementDefinition = {\n  type: \"pin-output\",\n  category: \"input-output\",\n  displayName: \"Output Pin\",\n  visual: createStaticElementVisual(\n    boundsToRect(getBounds(hitPath)),\n    <g>\n      <path d={hitPath} fill=\"transparent\" stroke=\"none\" />\n      <path\n        className=\"element-select-highlight--stroke\"\n        d=\"M15,25 a 10,10 0 1,0 20 0 a 10,10 0 1,0 -20,0 M15,25 h-12\"\n        stroke=\"black\"\n        strokeWidth={2}\n        fill=\"none\"\n      />\n      <circle\n        className=\"element-select-highlight--fill\"\n        cx={25}\n        cy={25}\n        r={3}\n        fill=\"black\"\n        stroke=\"none\"\n      />\n    </g>\n  ),\n  pins: {\n    IN: {\n      direction: \"input\",\n      x: 0,\n      y: 25,\n    },\n  },\n};\nexport default pinOutputElementDefinition;\n","import { EvolverType } from \"@/evolvers\";\n\nexport interface ElementSimProduction {\n  type: \"element\";\n  evolverType: EvolverType;\n}\n\nexport interface CircuitSimProduction {\n  type: \"circuit\";\n  circuitId: string;\n}\n\nexport type SimProductionObject = ElementSimProduction | CircuitSimProduction;\n\nexport type SimProduction = EvolverType | SimProductionObject;\n\nexport function normalizeSimProduction(\n  simProduction: SimProduction\n): SimProductionObject {\n  if (typeof simProduction === \"string\") {\n    return {\n      type: \"element\",\n      evolverType: simProduction,\n    };\n  }\n\n  return simProduction;\n}\n","import * as React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { cls } from \"@/utils\";\n\nimport { viewCircuit } from \"@/actions/view-circuit\";\n\nimport useSelector from \"@/hooks/useSelector\";\n\nimport interaction from \"@/styles/interaction.module.css\";\n\nimport { circuitNameFromIdSelector } from \"@/services/circuit-properties/selectors/circuits\";\nimport { elementNamesByElementIdSelector } from \"@/services/circuit-graph/selectors/elements\";\nimport { ElementComponentProps } from \"@/elements/types\";\n\nimport { getICBorderPath } from \"@/elements/definitions/integrated-circuits/utils\";\n\nexport interface IntegratedCircuitElementVisualProps {\n  circuitId: string;\n  inputPinIds: string[];\n  outputPinIds: string[];\n}\n\nexport const IntegratedCircuitElementVisual: React.FC<\n  IntegratedCircuitElementVisualProps & ElementComponentProps\n> = ({ elementId, elementPath, circuitId, inputPinIds, outputPinIds }) => {\n  const dispatch = useDispatch();\n  // TODO: Now that we are relying on components being in a tessel path, we\n  // definitely should move element components into children of CircuitEditor\n  // and connect to them from element-types using ids.\n  // More practically: this should ignore tessel path and instead rely on ui-layout\n  // to open us up in the last interacted with view.\n  const circuitName = useSelector((state) =>\n    circuitNameFromIdSelector(state, circuitId)\n  );\n\n  const elementNamesById = useSelector(elementNamesByElementIdSelector);\n\n  const borderPath = getICBorderPath(inputPinIds.length, outputPinIds.length);\n\n  const onViewCircuit = React.useCallback(\n    (e: React.MouseEvent) => {\n      if (!elementId) {\n        return;\n      }\n\n      if (e.defaultPrevented) {\n        return;\n      }\n      e.preventDefault();\n\n      dispatch(viewCircuit(circuitId, [...(elementPath || []), elementId]));\n    },\n    [elementId, dispatch, circuitId, elementPath]\n  );\n\n  const inputPins = inputPinIds.map((pinId, i) => {\n    const y = i * 50 + 25;\n    return (\n      <g key={pinId}>\n        <line\n          className=\"element-select-highlight--stroke\"\n          stroke=\"black\"\n          strokeWidth={2}\n          x1={4}\n          y1={y}\n          x2={10}\n          y2={y}\n        />\n        <text\n          className={interaction[\"text-unselectable\"]}\n          x={15}\n          y={y}\n          dominantBaseline=\"middle\"\n          fontSize=\".7em\"\n        >\n          {elementNamesById[pinId]}\n        </text>\n      </g>\n    );\n  });\n\n  const outputPins = outputPinIds.map((pinId, i) => {\n    const y = i * 50 + 25;\n    return (\n      <g key={pinId}>\n        <line\n          key={i}\n          className=\"element-select-highlight--stroke\"\n          stroke=\"black\"\n          strokeWidth={2}\n          x1={90}\n          y1={y}\n          x2={100}\n          y2={y}\n        />\n        <text\n          className={interaction[\"text-unselectable\"]}\n          x={85}\n          y={y}\n          textAnchor=\"end\"\n          dominantBaseline=\"middle\"\n          fontSize=\".7em\"\n        >\n          {elementNamesById[pinId]}\n        </text>\n      </g>\n    );\n  });\n\n  return (\n    <g>\n      <text\n        className={cls(\n          interaction[\"text-unselectable\"],\n          \"element-select-highlight--fill\"\n        )}\n        textAnchor=\"middle\"\n        x={50}\n        y={0}\n      >\n        {circuitName}\n      </text>\n      <path\n        className=\"element-select-highlight--stroke element-select-highlight--fill\"\n        stroke=\"black\"\n        fill=\"white\"\n        d={borderPath}\n        onDoubleClick={onViewCircuit}\n      />\n      {inputPins}\n      {outputPins}\n    </g>\n  );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport interaction from \"@/styles/interaction.module.css\";\n\nimport useSelector from \"@/hooks/useSelector\";\n\nimport { interactElement } from \"@/actions/element-interact\";\n\nimport { ElementComponentProps } from \"@/elements/types\";\nimport { elementOutputsFromCircuitElementIdSelector } from \"@/services/simulator/selectors/elements\";\nimport { isSimActiveSelector } from \"@/services/simulator-control/selectors/run\";\n\nimport styles from \"./element-visuals.module.css\";\n\nexport const MomentaryInteractionElementVisual: React.FC<ElementComponentProps> = ({\n  elementId,\n  elementPath,\n}) => {\n  const dispatch = useDispatch();\n  const isSimActive = useSelector(isSimActiveSelector);\n\n  const circuitIdPath = React.useMemo(\n    () => [...(elementPath || []), elementId ?? \"~~none\"],\n    [elementPath, elementId]\n  );\n\n  const outputs = useSelector((state) =>\n    elementOutputsFromCircuitElementIdSelector(state, circuitIdPath)\n  );\n\n  const onPress = React.useCallback(\n    (e: React.MouseEvent) => {\n      if (!isSimActive) {\n        return;\n      }\n\n      if (e.button !== 0) {\n        return;\n      }\n\n      if (e.defaultPrevented) {\n        return;\n      }\n      e.preventDefault();\n\n      dispatch(interactElement(circuitIdPath, true));\n    },\n    [circuitIdPath, dispatch, isSimActive]\n  );\n\n  const onRelease = React.useCallback(() => {\n    if (!isSimActive) {\n      return;\n    }\n\n    dispatch(interactElement(circuitIdPath, false));\n  }, [circuitIdPath, dispatch, isSimActive]);\n\n  let onColor = \"darkgreen\";\n  let onTextColor = \"lightgrey\";\n  if (outputs) {\n    if (outputs.OUT) {\n      onColor = \"lightgreen\";\n      onTextColor = \"black\";\n    }\n  }\n\n  return (\n    <g\n      onMouseDown={onPress}\n      onMouseUp={onRelease}\n      onMouseLeave={onRelease}\n      className={styles[\"element-interaction-toggle\"]}\n    >\n      <rect\n        className=\"element-select-highlight--stroke element-select-highlight--fill\"\n        x={5}\n        y={5}\n        width={40}\n        height={40}\n        stroke=\"black\"\n        fill=\"#AFAFAF\"\n        strokeWidth={1}\n      />\n\n      <line x1={45} y1={25} x2={50} y2={25} stroke=\"black\" strokeWidth={2} />\n\n      <circle cx={25} cy={25} r={17} fill={onColor} />\n\n      <text\n        className={interaction[\"text-unselectable\"]}\n        x={25}\n        y={25}\n        fontSize=\".8em\"\n        fill={onTextColor}\n        textAnchor=\"middle\"\n        dominantBaseline=\"middle\"\n      >\n        Push\n      </text>\n    </g>\n  );\n};\n","import * as React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport getBounds from \"svg-path-bounds\";\n\nimport { boundsToRect, Rectangle } from \"@/geometry\";\n\nimport { interactElement } from \"@/actions/element-interact\";\n\nimport { ElementComponentProps, ElementVisualDefinition } from \"../types\";\n\nexport interface ShapePathDefinition {\n  /**\n   * The svg path of this visual element.\n   */\n  path: string;\n  /**\n   * The fill or fill-producing function for this visual element.\n   */\n  fill?: string | ((state: any) => string);\n  stroke?: string | ((state: any) => string);\n  strokeWidth?: number | ((state: any) => number);\n}\n\nexport type ShapePath = string | ShapePathDefinition;\n\ninterface ShapePathElementVisualProps {\n  /**\n   * The path or paths that make up the visual component of this element.\n   */\n  shapePath: ShapePath | ShapePath[];\n  hitPath: string;\n}\n\nconst ShapePathElementVisual: React.FC<\n  ShapePathElementVisualProps & ElementComponentProps\n> = ({ elementId, elementPath, shapePath, hitPath, evolverState }) => {\n  const dispatch = useDispatch();\n\n  const onClick = React.useCallback(\n    (e: React.MouseEvent) => {\n      if (!elementId) {\n        return;\n      }\n\n      if (e.defaultPrevented) {\n        return;\n      }\n\n      e.preventDefault();\n\n      dispatch(interactElement([...(elementPath || []), elementId]));\n    },\n    [elementId, dispatch, elementPath]\n  );\n\n  const visuals = normalizeVisuals(shapePath, evolverState);\n  const body = visuals.map((v, i) => (\n    <path\n      key={i}\n      d={v.path}\n      className=\"element-select-highlight--stroke element-select-highlight--fill\"\n      fill={v.fill}\n      stroke={v.stroke}\n      strokeWidth={v.strokeWidth}\n    />\n  ));\n\n  return (\n    <g onClick={onClick}>\n      <path d={hitPath} fill=\"transparent\" stroke=\"none\" />\n      {body}\n    </g>\n  );\n};\n\ninterface ShapePathElementTrayItemProps {\n  shapePath: ShapePath | ShapePath[];\n  hitRect: Rectangle;\n}\nconst TrayShapePadding = 5;\nconst ShapePathElementTrayItem: React.FC<ShapePathElementTrayItemProps> = ({\n  shapePath,\n  hitRect,\n}) => {\n  const visuals = normalizeVisuals(shapePath, {});\n  const body = visuals.map((v, i) => (\n    <path\n      key={i}\n      d={v.path}\n      className=\"element-select-highlight--stroke element-select-highlight--fill\"\n      fill={v.fill}\n      stroke={v.stroke}\n      strokeWidth={v.strokeWidth}\n    />\n  ));\n\n  return (\n    <svg\n      width={50}\n      height={50}\n      viewBox={`${hitRect.p1.x - TrayShapePadding} ${\n        hitRect.p1.y - TrayShapePadding\n      } ${hitRect.p2.x - hitRect.p1.x + TrayShapePadding * 2} ${\n        hitRect.p2.y - hitRect.p1.y + TrayShapePadding * 2\n      }`}\n    >\n      {body}\n    </svg>\n  );\n};\n\nexport function createShapePathVisual(\n  hitPath: string,\n  shapePath: ShapePath | ShapePath[]\n): ElementVisualDefinition {\n  const hitRect = boundsToRect(getBounds(hitPath));\n  return {\n    trayComponent: () => (\n      <ShapePathElementTrayItem shapePath={shapePath} hitRect={hitRect} />\n    ),\n    component: (props: ElementComponentProps) => (\n      <ShapePathElementVisual\n        shapePath={shapePath}\n        hitPath={hitPath}\n        {...props}\n      />\n    ),\n    hitRect,\n  };\n}\n\nfunction normalizeVisuals(\n  v: ShapePath | ShapePath[],\n  state: any\n): { path: string; fill?: string; stroke?: string; strokeWidth?: number }[] {\n  const asArray = Array.isArray(v) ? v : [v];\n\n  return asArray.map((x) => {\n    if (typeof x === \"string\") {\n      return {\n        path: x,\n        fill: \"black\",\n        stroke: \"black\",\n        strokeWidth: 2,\n      };\n    }\n    const fill = typeof x.fill === \"function\" ? x.fill(state || {}) : x.fill;\n    const stroke =\n      typeof x.stroke === \"function\" ? x.stroke(state || {}) : x.stroke;\n    const strokeWidth =\n      typeof x.strokeWidth === \"function\"\n        ? x.strokeWidth(state || {})\n        : x.strokeWidth;\n    return {\n      path: x.path,\n      fill,\n      stroke,\n      strokeWidth,\n    };\n  });\n}\n","import * as React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport interaction from \"@/styles/interaction.module.css\";\n\nimport { interactElement } from \"@/actions/element-interact\";\n\nimport { ElementComponentProps } from \"@/elements/types\";\n\nimport { ToggleEvolverState } from \"@/evolvers/definitions/input-toggle\";\n\nimport styles from \"./element-visuals.module.css\";\n\nexport const ToggleInteractionElementVisual: React.FC<ElementComponentProps<\n  ToggleEvolverState\n>> = ({ elementId, elementPath, evolverState }) => {\n  const dispatch = useDispatch();\n\n  const onClick = React.useCallback(\n    (e: React.MouseEvent) => {\n      if (!elementId) {\n        return;\n      }\n\n      if (e.button !== 0) {\n        return;\n      }\n\n      if (e.defaultPrevented) {\n        return;\n      }\n\n      e.preventDefault();\n\n      dispatch(interactElement([...(elementPath || []), elementId]));\n    },\n    [elementId, dispatch, elementPath]\n  );\n\n  let onColor = \"darkgreen\";\n  let onTextColor = \"lightgrey\";\n  let offColor = \"darkred\";\n  if (evolverState) {\n    const { toggleState } = evolverState;\n    if (toggleState) {\n      onColor = \"lightgreen\";\n      onTextColor = \"black\";\n    } else {\n      offColor = \"red\";\n    }\n  }\n\n  return (\n    <g onClick={onClick} className={styles[\"element-interaction-toggle\"]}>\n      <rect\n        className=\"element-select-highlight--stroke element-select-highlight--fill\"\n        x={5}\n        y={5}\n        width={40}\n        height={40}\n        stroke=\"black\"\n        fill=\"#AFAFAF\"\n        strokeWidth={1}\n      />\n      <line x1={45} y1={25} x2={50} y2={25} stroke=\"black\" strokeWidth={2} />\n      <rect\n        x={10}\n        y={10}\n        width={30}\n        height={15}\n        strokeWidth={0}\n        fill={onColor}\n      />\n      <text\n        className={interaction[\"text-unselectable\"]}\n        x={25}\n        y={19}\n        fontSize=\".8em\"\n        fill={onTextColor}\n        textAnchor=\"middle\"\n        dominantBaseline=\"middle\"\n      >\n        On\n      </text>\n      <rect\n        x={10}\n        y={25}\n        width={30}\n        height={15}\n        strokeWidth={0}\n        fill={offColor}\n      />\n      <text\n        className={interaction[\"text-unselectable\"]}\n        x={25}\n        y={34}\n        fontSize=\".8em\"\n        fill=\"lightgrey\"\n        textAnchor=\"middle\"\n        dominantBaseline=\"middle\"\n      >\n        Off\n      </text>\n    </g>\n  );\n};\n","import * as React from \"react\";\n\nimport {\n  ElementComponentType,\n  ElementVisualDefinition,\n} from \"@/elements/types\";\n\nimport { IntegratedCircuitElementVisual } from \"./IntegratedCircuitElementVisual\";\nimport { MomentaryInteractionElementVisual } from \"./MomentaryInteractionElementVisual\";\nimport { ToggleInteractionElementVisual } from \"./ToggleInteractionElementVisual\";\n\nconst NamedElementComponents: Record<string, ElementComponentType> = {\n  \"integrated-circuit\": IntegratedCircuitElementVisual,\n  \"interaction-momentary\": MomentaryInteractionElementVisual,\n  \"interaction-toggle\": ToggleInteractionElementVisual,\n};\n\nconst ErrorComponent: React.FC<{ componentName: string }> = ({\n  componentName,\n}) => {\n  return (\n    <g>\n      <rect width={50} height={50} fill=\"red\" />\n      <text x={25} y={25} dominantBaseline=\"middle\">\n        {componentName}\n      </text>\n    </g>\n  );\n};\n\nexport function getNodeVisualElement(\n  elementId: string | undefined,\n  elementPath: string[] | undefined,\n  evolverState: any,\n  visual: ElementVisualDefinition\n): JSX.Element {\n  const { component, componentProps } = visual;\n\n  const elementProps = {\n    elementId,\n    elementPath,\n    evolverState,\n    ...componentProps,\n  };\n\n  let Component: ElementComponentType;\n  if (typeof component === \"string\") {\n    Component = NamedElementComponents[component];\n    if (!Component) {\n      // Making a new component here each pass will invalidate the dom on every render,\n      //  but this only is for exceptional error cases anyway.\n      Component = () => <ErrorComponent componentName={component} />;\n    }\n  } else {\n    Component = component;\n  }\n\n  return <Component {...elementProps} />;\n}\n","import * as React from \"react\";\n\nimport { Rectangle } from \"@/geometry\";\n\nimport { ElementVisualDefinition } from \"../types\";\n\nconst TrayComponentPadding = 5;\n\nexport function createStaticElementVisual(\n  hitRect: Rectangle,\n  element: JSX.Element\n): ElementVisualDefinition {\n  return {\n    hitRect,\n    trayComponent: () => (\n      <svg\n        width={50}\n        height={50}\n        viewBox={`${hitRect.p1.x - TrayComponentPadding} ${\n          hitRect.p1.y - TrayComponentPadding\n        } ${hitRect.p2.x - hitRect.p1.x + TrayComponentPadding * 2} ${\n          hitRect.p2.y - hitRect.p1.y + TrayComponentPadding * 2\n        }`}\n      >\n        {element}\n      </svg>\n    ),\n    component: () => element,\n  };\n}\n","export const isDev = process.env.NODE_ENV === \"development\";\n\nconst rootUrlBuilder = new URL(window.location.origin);\nrootUrlBuilder.pathname = __webpack_public_path__;\nexport const rootUrl = rootUrlBuilder.toString();\n\nexport const appVersion = DISCRELOG_VERSION;\n","export const EVOLVER_RESPONSE_TIME = 4;\n","import { EvolverDefinition } from \"../types\";\n\nfunction asEvolverDef(module: any): EvolverDefinition {\n  return module.default as EvolverDefinition;\n}\n\nexport const EvolverDefinitionsByType = {\n  \"input-momentary\": asEvolverDef(require(\"./input-momentary\")),\n  \"input-toggle\": asEvolverDef(require(\"./input-toggle\")),\n\n  \"logic-and\": asEvolverDef(require(\"./logic-and\")),\n  \"logic-buffer\": asEvolverDef(require(\"./logic-buffer\")),\n  \"logic-nand\": asEvolverDef(require(\"./logic-nand\")),\n  \"logic-nor\": asEvolverDef(require(\"./logic-nor\")),\n  \"logic-not\": asEvolverDef(require(\"./logic-not\")),\n  \"logic-or\": asEvolverDef(require(\"./logic-or\")),\n  \"logic-xor\": asEvolverDef(require(\"./logic-xor\")),\n\n  \"output-led\": asEvolverDef(require(\"./output-led\")),\n  \"output-seg7\": asEvolverDef(require(\"./output-seg7\")),\n\n  \"pin-high\": asEvolverDef(require(\"./pin-high\")),\n};\nexport type EvolverType = keyof typeof EvolverDefinitionsByType;\n","import { EvolutionResult } from \"@/logic\";\n\nimport { EVOLVER_RESPONSE_TIME } from \"../constants\";\nimport { EvolverDefinition } from \"../types\";\n\nconst inputMomentaryEvolverDefinition: EvolverDefinition = {\n  inputPins: [],\n  outputPins: [\"OUT\"],\n  interact(state: any, data: any): EvolutionResult {\n    if (data === undefined) {\n      return {\n        transitions: [\n          {\n            tickOffset: 1,\n            valuesByPin: { OUT: true },\n          },\n          {\n            tickOffset: 1 + Math.round(EVOLVER_RESPONSE_TIME * 1.5),\n            valuesByPin: { OUT: false },\n          },\n        ],\n      };\n    } else if (data) {\n      return {\n        transitions: {\n          tickOffset: 1,\n          valuesByPin: { OUT: true },\n        },\n      };\n    } else {\n      return {\n        transitions: {\n          tickOffset: 1,\n          valuesByPin: { OUT: false },\n        },\n      };\n    }\n  },\n};\nexport default inputMomentaryEvolverDefinition;\n","import { EvolverDefinition } from \"../types\";\n\nexport interface ToggleEvolverState {\n  toggleState: boolean;\n}\nconst defaultToggleState: ToggleEvolverState = {\n  toggleState: false,\n};\n\nconst inputToggleEvolverDefinition: EvolverDefinition = {\n  inputPins: [],\n  outputPins: [\"OUT\"],\n  interact(state: ToggleEvolverState = defaultToggleState) {\n    const nextState = !state.toggleState;\n    return {\n      state: Object.assign({}, state, {\n        toggleState: nextState,\n      }),\n      transitions: {\n        tickOffset: 1,\n        valuesByPin: { OUT: nextState },\n      },\n    };\n  },\n  evolve: (state: ToggleEvolverState = defaultToggleState) => {\n    return {\n      state,\n      transitions: {\n        tickOffset: 1,\n        valuesByPin: { OUT: state.toggleState },\n      },\n    };\n  },\n};\nexport default inputToggleEvolverDefinition;\n","import { EVOLVER_RESPONSE_TIME } from \"../constants\";\nimport { EvolverDefinition } from \"../types\";\n\nconst logicAndEvolverDefinition: EvolverDefinition = {\n  inputPins: [\"A\", \"B\"],\n  outputPins: [\"OUT\"],\n  evolve(_, inputs) {\n    return {\n      transitions: {\n        tickOffset: EVOLVER_RESPONSE_TIME,\n        valuesByPin: { OUT: inputs.A && inputs.B },\n      },\n    };\n  },\n};\nexport default logicAndEvolverDefinition;\n","import { EVOLVER_RESPONSE_TIME } from \"../constants\";\nimport { EvolverDefinition } from \"../types\";\n\nconst logicBufferEvolverDefinition: EvolverDefinition = {\n  inputPins: [\"IN\"],\n  outputPins: [\"OUT\"],\n  evolve(_, inputs) {\n    return {\n      transitions: {\n        tickOffset: EVOLVER_RESPONSE_TIME,\n        valuesByPin: { OUT: inputs.IN },\n      },\n    };\n  },\n};\nexport default logicBufferEvolverDefinition;\n","import { EVOLVER_RESPONSE_TIME } from \"../constants\";\nimport { EvolverDefinition } from \"../types\";\n\nconst logicNandEvolverDefinition: EvolverDefinition = {\n  inputPins: [\"A\", \"B\"],\n  outputPins: [\"OUT\"],\n  evolve(_, inputs) {\n    return {\n      transitions: {\n        tickOffset: EVOLVER_RESPONSE_TIME,\n        valuesByPin: { OUT: !(inputs.A && inputs.B) },\n      },\n    };\n  },\n};\nexport default logicNandEvolverDefinition;\n","import { EVOLVER_RESPONSE_TIME } from \"../constants\";\nimport { EvolverDefinition } from \"../types\";\n\nconst logicNorEvolverDefinition: EvolverDefinition = {\n  inputPins: [\"A\", \"B\"],\n  outputPins: [\"OUT\"],\n  evolve(_, inputs) {\n    return {\n      transitions: {\n        tickOffset: EVOLVER_RESPONSE_TIME,\n        valuesByPin: { OUT: !(inputs.A || inputs.B) },\n      },\n    };\n  },\n};\nexport default logicNorEvolverDefinition;\n","import { EVOLVER_RESPONSE_TIME } from \"../constants\";\nimport { EvolverDefinition } from \"../types\";\n\nconst logicNotEvolverDefinition: EvolverDefinition = {\n  inputPins: [\"IN\"],\n  outputPins: [\"OUT\"],\n  evolve(_, inputs) {\n    return {\n      transitions: {\n        tickOffset: EVOLVER_RESPONSE_TIME,\n        valuesByPin: { OUT: !inputs.IN },\n      },\n    };\n  },\n};\nexport default logicNotEvolverDefinition;\n","import { EVOLVER_RESPONSE_TIME } from \"../constants\";\nimport { EvolverDefinition } from \"../types\";\n\nconst logicOrEvolverDefinition: EvolverDefinition = {\n  inputPins: [\"A\", \"B\"],\n  outputPins: [\"OUT\"],\n  evolve(_, inputs) {\n    return {\n      transitions: {\n        tickOffset: EVOLVER_RESPONSE_TIME,\n        valuesByPin: { OUT: inputs.A || inputs.B },\n      },\n    };\n  },\n};\nexport default logicOrEvolverDefinition;\n","import { EVOLVER_RESPONSE_TIME } from \"../constants\";\nimport { EvolverDefinition } from \"../types\";\n\nconst logicXorEvolverDefinition: EvolverDefinition = {\n  inputPins: [\"A\", \"B\"],\n  outputPins: [\"OUT\"],\n  evolve(_, inputs) {\n    return {\n      transitions: {\n        tickOffset: EVOLVER_RESPONSE_TIME,\n        valuesByPin: { OUT: (inputs.A || inputs.B) && inputs.A != inputs.B },\n      },\n    };\n  },\n};\nexport default logicXorEvolverDefinition;\n","import { EvolverDefinition } from \"../types\";\n\nexport interface LedEvolverState {\n  value: boolean;\n}\n\nconst outputLedEvolverDefinition: EvolverDefinition = {\n  inputPins: [\"IN\"],\n  outputPins: [],\n  evolve(_, inputs) {\n    return {\n      state: {\n        value: inputs.IN,\n      },\n    };\n  },\n};\nexport default outputLedEvolverDefinition;\n","import { EvolverDefinition } from \"../types\";\n\nconst outputSeg7EvolverDefinition: EvolverDefinition = {\n  inputPins: [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\"],\n  outputPins: [],\n  evolve(_, inputs) {\n    return {\n      state: { ...inputs },\n    };\n  },\n};\nexport default outputSeg7EvolverDefinition;\n","import { EvolverDefinition } from \"../types\";\n\nconst pinHighEvolverDefinition: EvolverDefinition = {\n  inputPins: [],\n  outputPins: [\"OUT\"],\n  evolve() {\n    return {\n      transitions: {\n        tickOffset: 1,\n        valuesByPin: { OUT: true },\n      },\n    };\n  },\n};\nexport default pinHighEvolverDefinition;\n","export * from \"./definitions\";\nexport * from \"./types\";\n","import { Example } from \"@/services/examples/types\";\nimport { SaveData } from \"@/services/savedata/types\";\n\nconst fourBitAlu: Example = {\n  title: \"4-Bit ALU\",\n  getSave: () => import(\"./save.json\") as Promise<SaveData>,\n};\n\nexport default fourBitAlu;\n","import { Example } from \"@/services/examples/types\";\nimport { SaveData } from \"@/services/savedata/types\";\n\nconst latchesAndAdders: Example = {\n  title: \"Latches and Adders\",\n  getSave: () => import(\"./save.json\") as Promise<SaveData>,\n};\n\nexport default latchesAndAdders;\n","export interface Point {\n  x: number;\n  y: number;\n}\n\nexport interface Size {\n  width: number;\n  height: number;\n}\n\nexport interface Rectangle {\n  p1: Point;\n  p2: Point;\n}\n\n// Bit silly to have two ways of tracking a rectangular region, but this is inherited from svg-path-bounds\nexport type Bounds = [left: number, top: number, right: number, bottom: number];\n\nexport const ZeroPoint = Object.freeze({ x: 0, y: 0 });\nexport const ZeroRect = Object.freeze({ p1: ZeroPoint, p2: ZeroPoint });\n\nexport function boundsToRect(bounds: Bounds): Rectangle {\n  return {\n    p1: { x: bounds[0], y: bounds[1] },\n    p2: { x: bounds[2], y: bounds[3] },\n  };\n}\n\nexport function snapValue(v: number, snap: number) {\n  return Math.round(v / snap) * snap;\n}\nexport function snapPoint(p: Point, snap: number) {\n  return {\n    x: snapValue(p.x, snap),\n    y: snapValue(p.y, snap),\n  };\n}\n\nexport function magnitude(v: Point): number {\n  return Math.sqrt(v.x * v.x + v.y * v.y);\n}\nexport function normalize(p: Point): Point {\n  const m = magnitude(p);\n  return {\n    x: p.x / m,\n    y: p.y / m,\n  };\n}\n\nexport function dotProduct(a: Point, b: Point): number {\n  return a.x * b.x + a.y * b.y;\n}\n\nexport function scale(p: Point, scaler: number) {\n  return { x: p.x * scaler, y: p.y * scaler };\n}\n\nexport function normalizeRectangle(p1: Point, p2: Point): Rectangle;\nexport function normalizeRectangle(r: Rectangle): Rectangle;\nexport function normalizeRectangle(...args: any[]): Rectangle {\n  let p1: Point;\n  let p2: Point;\n  if (args.length === 1) {\n    const r = args[0] as Rectangle;\n    p1 = r.p1;\n    p2 = r.p2;\n  } else {\n    p1 = args[0] as Point;\n    p2 = args[1] as Point;\n  }\n  return {\n    p1: {\n      x: Math.min(p1.x, p2.x),\n      y: Math.min(p1.y, p2.y),\n    },\n    p2: {\n      x: Math.max(p1.x, p2.x),\n      y: Math.max(p1.y, p2.y),\n    },\n  };\n}\n\nexport function offsetRectangle(rect: Rectangle, offset: Point) {\n  return {\n    p1: pointAdd(rect.p1, offset),\n    p2: pointAdd(rect.p2, offset),\n  };\n}\n\nexport function pointAdd(p1: Point, p2: Point): Point {\n  return {\n    x: p1.x + p2.x,\n    y: p1.y + p2.y,\n  };\n}\nexport function pointSubtract(p1: Point, p2: Point): Point {\n  return {\n    x: p1.x - p2.x,\n    y: p1.y - p2.y,\n  };\n}\nexport function pointEquals(p1: Point, p2: Point): boolean {\n  return p1.x === p2.x && p1.y === p2.y;\n}\n\nexport function pointIntersectsRect(p: Point, r: Rectangle): boolean {\n  r = normalizeRectangle(r);\n\n  if (r.p1.x > p.x || r.p2.x < p.x) {\n    return false;\n  }\n\n  if (r.p1.y > p.y || r.p2.y < p.y) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function calcSize(r: Rectangle): Size {\n  r = normalizeRectangle(r);\n  return {\n    width: r.p2.x - r.p1.x,\n    height: r.p2.y - r.p1.y,\n  };\n}\n\nexport function union(r1: Rectangle, r2: Rectangle): Rectangle {\n  r1 = normalizeRectangle(r1);\n  r2 = normalizeRectangle(r2);\n  return {\n    p1: {\n      x: Math.min(r1.p1.x, r2.p1.x),\n      y: Math.min(r1.p1.y, r2.p1.y),\n    },\n    p2: {\n      x: Math.max(r1.p2.x, r2.p2.x),\n      y: Math.max(r1.p2.y, r2.p2.y),\n    },\n  };\n}\n\nexport function rectIntersectsRect(r1: Rectangle, r2: Rectangle): boolean {\n  r1 = normalizeRectangle(r1);\n  r2 = normalizeRectangle(r2);\n\n  // r1 starts after p2's extent, or does not reach r2's start.\n  if (r1.p1.x > r2.p2.x || r1.p2.x < r2.p1.x) {\n    return false;\n  }\n\n  // r1 starts after p2's extent, or does not reach r2's start.\n  if (r1.p1.y > r2.p2.y || r1.p2.y < r2.p1.y) {\n    return false;\n  }\n\n  return true;\n}\n\nexport interface LinePointInterceptOpts {\n  threshhold?: number;\n  axialGridSnap?: number;\n}\n\nexport interface LinePointInterceptResult {\n  interceptPoint: Point;\n  interceptLineLengthDistance: number;\n  interceptLinePointDistance: number;\n}\nexport function linePointIntercept(\n  lineStart: Point,\n  lineEnd: Point,\n  point: Point,\n  { threshhold = 4, axialGridSnap = 0 }: LinePointInterceptOpts\n): LinePointInterceptResult | null {\n  const lineSub = pointSubtract(lineEnd, lineStart);\n  const lineLength = magnitude(lineSub);\n  const lineVector = normalize(lineSub);\n\n  if (Number.isNaN(lineVector.x) || Number.isNaN(lineVector.y)) {\n    return null;\n  }\n\n  const v = pointSubtract(point, lineStart);\n  const interceptDistance = dotProduct(v, lineVector);\n\n  if (interceptDistance < 0 || interceptDistance > lineLength) {\n    return null;\n  }\n\n  const interceptPoint = pointAdd(\n    lineStart,\n    scale(lineVector, interceptDistance)\n  );\n\n  if (axialGridSnap > 0) {\n    // If snapping is enabled, snap to the axis the line follows.\n    if (Math.abs(lineVector.x) === 1) {\n      interceptPoint.x = snapValue(interceptPoint.x, axialGridSnap);\n    }\n    if (Math.abs(lineVector.y) === 1) {\n      interceptPoint.y = snapValue(interceptPoint.y, axialGridSnap);\n    }\n  }\n\n  const lineToDotDist = magnitude(pointSubtract(point, interceptPoint));\n  if (lineToDotDist > threshhold) {\n    return null;\n  }\n\n  return {\n    interceptPoint,\n    // Point may have snapped, recalculate distance\n    interceptLineLengthDistance: magnitude(\n      pointSubtract(interceptPoint, lineStart)\n    ),\n    interceptLinePointDistance: lineToDotDist,\n  };\n}\n","import { createHashHistory } from \"history\";\n\nconst history = createHashHistory();\n\nexport default history;\n","import * as React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { AnyAction } from \"redux\";\n\nexport function useAction(actionCreator: () => AnyAction): () => AnyAction;\nexport function useAction<Args>(\n  actionCreator: (...args: Args[]) => AnyAction\n): () => AnyAction;\nexport function useAction<A0, Args>(\n  actionCreator: (a0: A0, ...args: Args[]) => AnyAction,\n  a0: A0\n): () => AnyAction;\nexport function useAction(\n  actionCreator: (...args: any[]) => AnyAction,\n  ...preBind: any[]\n): () => AnyAction {\n  const dispatch = useDispatch();\n  return React.useCallback(\n    () => {\n      const action = actionCreator(...preBind);\n      if (action) {\n        dispatch(action);\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [dispatch, actionCreator, ...preBind]\n  ) as any;\n}\n\nexport function useClickAction(\n  actionCreator: (...args: any[]) => AnyAction,\n  ...preBind: any[]\n): (e: React.MouseEvent) => AnyAction {\n  const dispatch = useDispatch();\n  return React.useCallback(\n    (e: React.MouseEvent) => {\n      if (e.defaultPrevented) {\n        return;\n      }\n      e.preventDefault();\n      const action = actionCreator(...preBind);\n      if (action) {\n        dispatch(action);\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [dispatch, actionCreator, ...preBind]\n  ) as any;\n}\n","import * as React from \"react\";\nimport difference from \"lodash/difference\";\n\nexport type UseArrayState<T> = [\n  items: T[],\n  addItem: (value: T) => void,\n  removeItem: (value: T) => void,\n  setItems: (items: T[]) => void\n];\n\nexport function useArrayState<T>(defaultValue: T[] = []): UseArrayState<T> {\n  const [items, setItems] = React.useState(defaultValue);\n  const addItem = React.useCallback(\n    (item: T) => {\n      setItems([...items, item]);\n    },\n    [items]\n  );\n  const removeItem = React.useCallback(\n    (item: T) => {\n      setItems(difference(items, [item]));\n    },\n    [items]\n  );\n\n  return [items, addItem, removeItem, setItems];\n}\n","import * as React from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\ninterface UseComponentBounds {\n  left: number;\n  top: number;\n  right: number;\n  bottom: number;\n  width: number;\n  height: number;\n}\nexport function useComponentBounds(ref: React.RefObject<HTMLElement | null>) {\n  const [size, setSize] = React.useState<UseComponentBounds>({\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    width: 0,\n    height: 0,\n  });\n\n  React.useLayoutEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n\n    const observer = new ResizeObserver(() => {\n      const el = ref.current;\n      if (!el) {\n        return;\n      }\n      const b = el.getBoundingClientRect();\n      setSize({\n        top: b.top,\n        left: b.left,\n        right: b.right,\n        bottom: b.bottom,\n        width: b.width,\n        height: b.height,\n      });\n    });\n\n    observer.observe(ref.current);\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [ref]);\n\n  return size;\n}\n","import { Point } from \"@/geometry\";\nimport * as React from \"react\";\n\nexport interface UseMouseDragDetector {\n  startTracking(e: React.MouseEvent): void;\n}\n\nexport interface UseMouseDragDetectorOpts {\n  dragThreshold?: number;\n  onClick?(e: MouseEvent): void;\n  onDragStart?(e: MouseEvent, originalCoords: Point): void;\n}\nexport function useMouseDragDetector({\n  dragThreshold = 5,\n  onClick,\n  onDragStart,\n}: UseMouseDragDetectorOpts): UseMouseDragDetector {\n  // We need both state and ref for this.\n  //  State lets us trigger a rerender / useEffect.\n  //  Ref lets us check for cancellation when handling document events.\n  //  We seem to get a few rogue onMouseMove events after we try to stop tracking.\n  const [isTracking, setTracking] = React.useState(false);\n  const mouseDownRef = React.useRef<Point | null>(null);\n\n  const onMouseDown = React.useCallback((e: React.MouseEvent) => {\n    if (!e.preventDefault) {\n      return;\n    }\n\n    setTracking(true);\n    mouseDownRef.current = { x: e.pageX, y: e.pageY };\n  }, []);\n\n  const onMouseMove = React.useCallback(\n    (e: MouseEvent) => {\n      if (!mouseDownRef.current) {\n        return;\n      }\n\n      const d = mouseDownRef.current;\n      if (\n        Math.abs(d.x - e.pageX) >= dragThreshold ||\n        Math.abs(d.y - e.pageY) >= dragThreshold\n      ) {\n        if (onDragStart) {\n          onDragStart(e, mouseDownRef.current);\n        }\n        setTracking(false);\n        mouseDownRef.current = null;\n      }\n    },\n    [dragThreshold, onDragStart]\n  );\n\n  const onMouseUp = React.useCallback(\n    (e: MouseEvent) => {\n      if (!mouseDownRef.current) {\n        return;\n      }\n\n      if (onClick) {\n        onClick(e);\n      }\n\n      setTracking(false);\n      mouseDownRef.current = null;\n    },\n    [onClick]\n  );\n\n  React.useEffect(() => {\n    if (!isTracking) {\n      return;\n    }\n\n    document.addEventListener(\"mousemove\", onMouseMove);\n    document.addEventListener(\"mouseup\", onMouseUp);\n\n    return () => {\n      document.removeEventListener(\"mousemove\", onMouseMove);\n      document.removeEventListener(\"mouseup\", onMouseUp);\n    };\n  }, [isTracking, onMouseMove, onMouseUp]);\n\n  return {\n    startTracking: onMouseDown,\n  };\n}\n","import * as React from \"react\";\n\nexport function useNativeEvent<\n  T extends GlobalEventHandlers,\n  K extends keyof GlobalEventHandlersEventMap\n>(\n  ref: React.RefObject<T | null>,\n  type: K,\n  listener: (\n    this: GlobalEventHandlers,\n    ev: GlobalEventHandlersEventMap[K]\n  ) => any,\n  options?: boolean | AddEventListenerOptions\n) {\n  React.useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n\n    // De-reference the target so we remove from the right element.\n    const listenTarget = ref.current;\n\n    listenTarget.addEventListener(type, listener, options);\n    return () => {\n      listenTarget.removeEventListener(type, listener, options);\n    };\n  }, [type, listener, ref, options]);\n}\n","import * as React from \"react\";\n\nimport { asArray, MaybeArray } from \"@/arrays\";\nimport { isTruthy } from \"@/utils\";\n\nexport function useOutsideMouseEvent(\n  element: MaybeArray<HTMLElement | null>,\n  onOutsideEvent: () => void,\n  when = true\n) {\n  const onEvent = React.useCallback(\n    (e: MouseEvent | TouchEvent) => {\n      const elements = asArray(element).filter(isTruthy);\n      if (!elements.length) {\n        return;\n      }\n\n      if (elements.every((element) => !element.contains(e.target as any))) {\n        onOutsideEvent();\n      }\n    },\n    [element, onOutsideEvent]\n  );\n\n  React.useEffect(() => {\n    if (!when) {\n      return;\n    }\n\n    document.addEventListener(\"mousedown\", onEvent);\n    document.addEventListener(\"touchstart\", onEvent);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", onEvent);\n      document.removeEventListener(\"touchstart\", onEvent);\n    };\n  }, [onEvent, when]);\n}\n","import * as React from \"react\";\n\nexport function useQuerySelector(selector: string): Element | null {\n  const [element, setElement] = React.useState<Element | null>(null);\n  React.useEffect(() => {\n    const observer = new MutationObserver(() => {\n      setElement(document.querySelector(selector));\n    });\n\n    observer.observe(document.body, {\n      childList: true,\n      subtree: true,\n    });\n\n    setElement(document.querySelector(selector));\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [selector]);\n\n  return element;\n}\n","import * as React from \"react\";\n\nexport function useRefValue<T>(value: T): React.RefObject<T> {\n  const ref = React.useRef(value);\n  React.useEffect(() => {\n    ref.current = value;\n  });\n\n  return ref;\n}\n","import { useSelector as useSelectorRedux } from \"react-redux\";\n\nimport { AppState } from \"@/store\";\n\nexport default function useSelector<T>(selector: (s: AppState) => T) {\n  return useSelectorRedux<AppState, T>(selector);\n}\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport \"resize-observer-polyfill\";\n\nimport { Provider } from \"react-redux\";\nimport { Router } from \"react-router-dom\";\n\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\n\nimport history from \"./history\";\nimport \"./styles\";\n\nimport { store } from \"./store\";\n\nimport App from \"./components/App\";\n\nconst rootEl = document.getElementById(\"root\");\n\nReactDOM.render(\n  <DndProvider backend={HTML5Backend}>\n    <Router history={history}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </DndProvider>,\n  rootEl\n);\n","import { keyboardIsMac } from \"./runtime-env\";\n\nexport const MODIFIER_KEYS_NONE = Object.freeze<ModifierKeys>({});\n\nexport interface ModifierKeys {\n  ctrlMetaKey?: boolean;\n  shiftKey?: boolean;\n  altKey?: boolean;\n}\n\nexport interface MouseEventModifierKeys {\n  ctrlKey: boolean;\n  altKey: boolean;\n  shiftKey: boolean;\n  metaKey: boolean;\n}\nexport function getModifiers(e: MouseEventModifierKeys): ModifierKeys {\n  const { ctrlKey, altKey, shiftKey, metaKey } = e;\n  return {\n    // Mac reserves ctrl for system use, apps use meta.\n    ctrlMetaKey: keyboardIsMac ? metaKey : ctrlKey,\n    altKey,\n    shiftKey,\n  };\n}\n","import * as React from \"react\";\n\nimport { cls } from \"@/utils\";\nimport { appVersion } from \"@/env\";\n\nimport flex from \"@/styles/flex.module.css\";\n\nimport { useAction } from \"@/hooks/useAction\";\n\nimport { hasAutosave } from \"@/services/autosave/api\";\n\nimport examples from \"@/services/examples/examples\";\n\nimport { restorePreviousProject } from \"@/actions/project-restore-previous\";\nimport { navigatePage } from \"@/actions/page-navigate\";\n\nimport { newProject } from \"@/actions/project-new\";\nimport { loadProject } from \"@/actions/project-load\";\nimport { loadExample } from \"@/actions/example-load\";\n\nimport Button from \"@/components/Button\";\n\nimport styles from \"./HomePage.module.css\";\nimport { useDispatch } from \"react-redux\";\n\nconst HomePage: React.FC = () => {\n  const dispatch = useDispatch();\n  const onNavigateHome = useAction(navigatePage, \"home\");\n  const onNewProject = useAction(newProject);\n  const onLoadProject = useAction(loadProject);\n  const onLoadPreviousProject = useAction(restorePreviousProject);\n\n  React.useEffect(() => {\n    onNavigateHome();\n  }, [onNavigateHome]);\n\n  const hasPreviousSave = hasAutosave();\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.content}>\n        <div className={styles.panel}>\n          <h1>Discrelog</h1>\n          <h3>\n            Discrelog is a discrete logic simulator for exploring TTL logic\n            systems.\n          </h3>\n        </div>\n        <div className={cls(flex[\"flex-row\"], flex[\"flex-space-around\"])}>\n          <div\n            className={cls(\n              styles.panel,\n              styles[\"button-container\"],\n              flex[\"flexitem-grow\"]\n            )}\n          >\n            <Button onClick={onNewProject}>Start a new project</Button>\n          </div>\n          <div\n            className={cls(\n              styles.panel,\n              styles[\"button-container\"],\n              flex[\"flexitem-grow\"]\n            )}\n          >\n            <Button onClick={onLoadProject}>Load an existing project</Button>\n          </div>\n          <div\n            className={cls(\n              styles.panel,\n              styles[\"button-container\"],\n              flex[\"flexitem-grow\"]\n            )}\n          >\n            <Button disabled={!hasPreviousSave} onClick={onLoadPreviousProject}>\n              Restore previous project\n            </Button>\n          </div>\n        </div>\n        <div className={styles.panel}>\n          <h3>Examples</h3>\n          <ul>\n            {Object.keys(examples).map((exampleKey) => (\n              <li key={exampleKey}>\n                <a\n                  href=\"#\"\n                  onClick={(e) => {\n                    dispatch(loadExample(exampleKey));\n                    e.preventDefault();\n                  }}\n                >\n                  {examples[exampleKey].title}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className={cls(styles.footer, styles.panel)}>{appVersion}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import HomePage from \"./HomePage\";\nexport default HomePage;\n","import * as React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { cls } from \"@/utils\";\n\nimport sizing from \"@/styles/sizing.module.css\";\nimport flex from \"@/styles/flex.module.css\";\n\nimport { rearrangeLayout } from \"@/actions/layout-rearrange\";\nimport { circuitEditorDragAbort } from \"@/actions/circuit-editor-drag-abort\";\nimport { navigatePage } from \"@/actions/page-navigate\";\n\nimport useSelector from \"@/hooks/useSelector\";\nimport { useNativeEvent } from \"@/hooks/useNativeEvent\";\n\nimport Tessel, { TesselValue, TesselWindowItem } from \"@/components/Tessel\";\n\nimport { layoutSelector } from \"@/services/ui-layout/selectors/layout\";\n\nimport ProjectEditorTitleBar from \"./components/ProjectEditorTitleBar\";\n\nimport CircuitFieldWindow from \"./windows/CircuitEditorWindow\";\nimport CircuitsTreeWindow from \"./windows/CircuitsTreeWindow\";\nimport ElementTrayWindow from \"./windows/ElementTrayWindow\";\n\nconst WindowsById: Record<string, React.ComponentType<any>> = {\n  \"element-tray\": ElementTrayWindow,\n  \"circuit-field\": CircuitFieldWindow,\n  \"circuits-list\": CircuitsTreeWindow,\n};\n\nfunction renderWindow(window: TesselWindowItem): React.ReactElement | null {\n  const Component = WindowsById[window.windowId];\n  if (!Component) {\n    return null;\n  }\n  return <Component {...window.windowProps} />;\n}\n\nconst ProjectEditorPage: React.FC = () => {\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    dispatch(navigatePage(\"editor\"));\n  }, [dispatch]);\n\n  const layout = useSelector(layoutSelector);\n  const onLayoutChange = React.useCallback(\n    (layout: TesselValue) => {\n      dispatch(rearrangeLayout(layout));\n    },\n    [dispatch]\n  );\n\n  // A bit hacky, but we need some singleton component to install a global check\n  // to look for drag cancellations when we mouse up outside of any circuit editor.\n  const onMouseUp = React.useCallback(\n    (e: MouseEvent) => {\n      let element: Element | null = e.target as Element;\n      while (element != null) {\n        if (element.classList.contains(\"circuit-editor\")) {\n          return;\n        }\n        element = element.parentElement;\n      }\n      dispatch(circuitEditorDragAbort());\n    },\n    [dispatch]\n  );\n\n  useNativeEvent({ current: document.body }, \"mouseup\", onMouseUp);\n\n  return (\n    <div className={cls(sizing[\"fill-parent\"], flex[\"flex-column\"])}>\n      <ProjectEditorTitleBar className={flex[\"flexitem-fix\"]} />\n      <div className={cls(sizing[\"fill-parent\"], flex[\"flexitem-shrink\"])}>\n        <Tessel\n          className={cls(\"project-editor\", sizing[\"fill-parent\"])}\n          rootItem={layout}\n          onLayoutChange={onLayoutChange}\n          renderWindow={renderWindow}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectEditorPage;\n","import * as React from \"react\";\n\nimport { keyboardCommandModifier } from \"@/runtime-env\";\n\nimport { useAction } from \"@/hooks/useAction\";\nimport useSelector from \"@/hooks/useSelector\";\n\nimport { canRedoSelector, canUndoSelector } from \"@/undo/selectors\";\n\nimport { selectedElementIdsSelector } from \"@/services/selection/selectors/selection\";\nimport { canPasteSelector } from \"@/services/clipboard/selectors/clipboard\";\n\nimport { undo } from \"@/actions/undo\";\nimport { redo } from \"@/actions/redo\";\nimport { copySelection } from \"@/actions/selection-copy\";\nimport { paste } from \"@/actions/clipboard-paste\";\n\nimport Menu from \"@/components/Menus/Menu\";\nimport MenuItem from \"@/components/Menus/MenuItem\";\nimport DividerMenuItem from \"@/components/Menus/DividerMenuItem\";\n\nconst EditMenu: React.FC = () => {\n  const canUndo = useSelector(canUndoSelector);\n  const onUndo = useAction(undo);\n  const canRedo = useSelector(canRedoSelector);\n  const onRedo = useAction(redo);\n\n  const canCopy = useSelector(selectedElementIdsSelector).length > 0;\n  const onCopy = useAction(copySelection);\n  const canPaste = useSelector(canPasteSelector);\n  const onPaste = useAction(paste);\n\n  return (\n    <Menu>\n      <MenuItem\n        disabled={!canUndo}\n        secondary={`${keyboardCommandModifier}+z`}\n        onClick={onUndo}\n      >\n        Undo\n      </MenuItem>\n      <MenuItem\n        disabled={!canRedo}\n        secondary={`${keyboardCommandModifier}+shift+z`}\n        onClick={onRedo}\n      >\n        Redo\n      </MenuItem>\n      <DividerMenuItem />\n      <MenuItem\n        disabled={!canCopy}\n        secondary={`${keyboardCommandModifier}+c`}\n        onClick={onCopy}\n      >\n        Copy\n      </MenuItem>\n      <MenuItem\n        disabled={!canPaste}\n        secondary={`${keyboardCommandModifier}+v`}\n        onClick={onPaste}\n      >\n        Paste\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default EditMenu;\n","import * as React from \"react\";\n\nimport { useAction } from \"@/hooks/useAction\";\nimport { newProject } from \"@/actions/project-new\";\nimport { saveProject } from \"@/actions/project-save\";\nimport { loadProject } from \"@/actions/project-load\";\nimport { exportProjectLink } from \"@/actions/project-export-link\";\nimport { importCircuitFromProject } from \"@/actions/project-import-circuits\";\n\nimport Menu from \"@/components/Menus/Menu\";\nimport MenuItem from \"@/components/Menus/MenuItem\";\nimport DividerMenuItem from \"@/components/Menus/DividerMenuItem\";\n\nconst FileMenu: React.FC = () => {\n  const onNewProject = useAction(newProject);\n  const onSaveProject = useAction(saveProject);\n  const onLoadProject = useAction(loadProject);\n  const onImportProjectCircuits = useAction(importCircuitFromProject);\n  const onExportLink = useAction(exportProjectLink);\n\n  return (\n    <Menu>\n      <MenuItem onClick={onNewProject}>New</MenuItem>\n      <DividerMenuItem />\n      <MenuItem onClick={onLoadProject}>Load</MenuItem>\n      <MenuItem onClick={onSaveProject}>Save</MenuItem>\n      <DividerMenuItem />\n      <MenuItem onClick={onImportProjectCircuits}>Import Circuits</MenuItem>\n      <DividerMenuItem />\n      <MenuItem onClick={onExportLink}>Export Link</MenuItem>\n    </Menu>\n  );\n};\n\nexport default FileMenu;\n","import * as React from \"react\";\n\nimport { useAction } from \"@/hooks/useAction\";\n\nimport { tutorialStart } from \"@/actions/tutorial-start\";\n\nimport Menu from \"@/components/Menus/Menu\";\nimport MenuItem from \"@/components/Menus/MenuItem\";\nimport SubMenuItem from \"@/components/Menus/SubMenuItem\";\n\nconst HelpMenu: React.FC = () => {\n  return (\n    <Menu>\n      <SubMenuItem content={<TutorialsMenu />}>Tutorials</SubMenuItem>\n    </Menu>\n  );\n};\n\nconst TutorialsMenu: React.FC = () => {\n  const onBasicsTutorial = useAction(tutorialStart, \"basics\");\n  const onCircuitsTutorial = useAction(tutorialStart, \"circuits\");\n  return (\n    <Menu>\n      <MenuItem onClick={onBasicsTutorial}>Basics</MenuItem>\n      <MenuItem onClick={onCircuitsTutorial}>Circuits</MenuItem>\n    </Menu>\n  );\n};\n\nexport default HelpMenu;\n","import * as React from \"react\";\n\nimport useSelector from \"@/hooks/useSelector\";\n\nimport {\n  projectModifiedSelector,\n  projectNameSelector,\n} from \"@/services/project/selectors/project\";\n\nimport TitleBar from \"@/components/TitleBar\";\nimport AutoPopover from \"@/components/AutoPopover\";\nimport Button from \"@/components/Button\";\n\nimport FileMenu from \"../FileMenu\";\nimport EditMenu from \"../EditMenu\";\nimport ViewMenu from \"../ViewMenu\";\nimport HelpMenu from \"../HelpMenu\";\nimport SimControls from \"../SimControls\";\n\nimport styles from \"./ProjectEditorTitleBar.module.css\";\n\nexport interface ProjectEditorTitleBarProps {\n  className?: string;\n}\nconst ProjectEditorTitleBar: React.FC<ProjectEditorTitleBarProps> = ({\n  className,\n}) => {\n  const projectName = useSelector(projectNameSelector);\n  const projectModified = useSelector(projectModifiedSelector);\n\n  const title = `${projectName}${projectModified ? \"*\" : \"\"}`;\n\n  return (\n    <TitleBar className={className} title={title}>\n      <AutoPopover content={<FileMenu />} placement=\"bottom-start\">\n        <Button variant=\"menu\">File</Button>\n      </AutoPopover>\n      <AutoPopover content={<EditMenu />} placement=\"bottom-start\">\n        <Button variant=\"menu\">Edit</Button>\n      </AutoPopover>\n      <AutoPopover content={<ViewMenu />} placement=\"bottom-start\">\n        <Button variant=\"menu\">View</Button>\n      </AutoPopover>\n      <AutoPopover content={<HelpMenu />} placement=\"bottom-start\">\n        <Button variant=\"menu\">Help</Button>\n      </AutoPopover>\n      <div className={styles[\"project-titlebar-controls\"]}>\n        <SimControls />\n      </div>\n    </TitleBar>\n  );\n};\n\nexport default ProjectEditorTitleBar;\n","import ProjectEditorTitleBar from \"./ProjectEditorTitleBar\";\nexport default ProjectEditorTitleBar;\n","import * as React from \"react\";\n\nimport { cls } from \"@/utils\";\n\nimport useSelector from \"@/hooks/useSelector\";\nimport { useClickAction } from \"@/hooks/useAction\";\n\nimport { startSim } from \"@/actions/sim-start\";\nimport { stopSim } from \"@/actions/sim-stop\";\nimport { pauseSim } from \"@/actions/sim-pause\";\nimport { stepSim } from \"@/actions/sim-step\";\n\nimport {\n  isSimActiveSelector,\n  isSimPausedSelector,\n} from \"@/services/simulator-control/selectors/run\";\nimport { averageMsecsPerTickSelector } from \"@/services/simulator/selectors/performance\";\n\nimport PlayIcon from \"@/components/Icons/Play\";\nimport StopIcon from \"@/components/Icons/Stop\";\nimport PauseIcon from \"@/components/Icons/Pause\";\nimport StepIcon from \"@/components/Icons/Step\";\n\nimport styles from \"./SimControls.module.css\";\n\nconst PlayPauseButton: React.FC = () => {\n  const isActive = useSelector(isSimActiveSelector);\n  const isPaused = useSelector(isSimPausedSelector);\n\n  const avgMsecsPerTick = useSelector(averageMsecsPerTickSelector);\n\n  const onPlayClick = useClickAction(startSim);\n  const onStopClick = useClickAction(stopSim);\n  const onPauseClick = useClickAction(pauseSim, \"toggle\");\n  const onStepClick = useClickAction(stepSim);\n\n  const onMuteMouseDown = React.useCallback((e: React.MouseEvent) => {\n    // Prevent rapid clicks from selecting nearby text.\n    e.preventDefault();\n  }, []);\n\n  return (\n    <span>\n      {isActive && (\n        <span className={styles[\"simrate\"]}>\n          {avgMsecsPerTick.toFixed(2)} ms\n        </span>\n      )}\n      {isActive ? (\n        <StopIcon\n          id=\"simctrl-stop\"\n          className={cls(styles[\"button\"], styles[\"button-stop\"])}\n          onClick={onStopClick}\n          onMouseDown={onMuteMouseDown}\n        />\n      ) : (\n        <PlayIcon\n          id=\"simctrl-run\"\n          className={cls(styles[\"button\"], styles[\"button-play\"])}\n          onClick={onPlayClick}\n          onMouseDown={onMuteMouseDown}\n        />\n      )}\n      <StepIcon\n        id=\"simctrl-step\"\n        className={cls(styles[\"button\"], styles[\"button-step\"])}\n        onClick={onStepClick}\n        onMouseDown={onMuteMouseDown}\n      />\n      <PauseIcon\n        id=\"simctrl-pause\"\n        className={cls(\n          styles[\"button\"],\n          styles[\"button-pause\"],\n          !isActive && styles[\"button--disabled\"],\n          isPaused && styles[\"selected\"]\n        )}\n        onClick={onPauseClick}\n        onMouseDown={onMuteMouseDown}\n      />\n    </span>\n  );\n};\n\nexport default PlayPauseButton;\n","import SimControls from \"./SimControls\";\nexport default SimControls;\n","import * as React from \"react\";\n\nimport { useAction } from \"@/hooks/useAction\";\nimport useSelector from \"@/hooks/useSelector\";\n\nimport { viewElementNames } from \"@/actions/view-element-names\";\nimport { resetView } from \"@/actions/view-reset\";\n\nimport { elementNameModeSelector } from \"@/services/ui-settings/selectors/element-name\";\n\nimport Menu from \"@/components/Menus/Menu\";\nimport CheckboxMenuItemItem from \"@/components/Menus/CheckboxMenuItem\";\nimport SubMenuItem from \"@/components/Menus/SubMenuItem\";\nimport DividerMenuItem from \"@/components/Menus/DividerMenuItem\";\nimport MenuItem from \"@/components/Menus/MenuItem\";\n\nconst ViewMenu: React.FC = () => {\n  const onResetView = useAction(resetView);\n  return (\n    <Menu>\n      <SubMenuItem content={<ElementNamesMenu />}>Element Names</SubMenuItem>\n      <DividerMenuItem />\n      <MenuItem onClick={onResetView}>Reset View</MenuItem>\n    </Menu>\n  );\n};\n\nconst ElementNamesMenu: React.FC = () => {\n  const mode = useSelector(elementNameModeSelector);\n  const onAlwaysVisible = useAction(viewElementNames, \"all\");\n  const onNamedOnly = useAction(viewElementNames, \"named-only\");\n  const onHidden = useAction(viewElementNames, \"none\");\n\n  return (\n    <Menu>\n      <CheckboxMenuItemItem value={mode === \"all\"} onChange={onAlwaysVisible}>\n        Always visible\n      </CheckboxMenuItemItem>\n      <CheckboxMenuItemItem\n        value={mode === \"named-only\"}\n        onChange={onNamedOnly}\n      >\n        Named Items Only\n      </CheckboxMenuItemItem>\n      <CheckboxMenuItemItem value={mode === \"none\"} onChange={onHidden}>\n        Hidden\n      </CheckboxMenuItemItem>\n    </Menu>\n  );\n};\n\nexport default ViewMenu;\n","import ProjectEditorPage from \"./ProjectEditorPage\";\nexport default ProjectEditorPage;\n","import * as React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { HotKeys } from \"react-hotkeys\";\nimport { AnyAction } from \"redux\";\n\nimport { cls } from \"@/utils\";\nimport useSelector from \"@/hooks/useSelector\";\n\nimport sizing from \"@/styles/sizing.module.css\";\nimport flex from \"@/styles/flex.module.css\";\n\nimport { circuitEditorStateFromIdSelector } from \"@/services/circuit-editors/selectors/editor\";\nimport { circuitNameFromIdSelector } from \"@/services/circuit-properties/selectors/circuits\";\n\nimport { paste } from \"@/actions/clipboard-paste\";\nimport { copySelection } from \"@/actions/selection-copy\";\nimport { deleteSelection } from \"@/actions/selection-delete\";\nimport { selectAll } from \"@/actions/select-all\";\nimport { undo } from \"@/actions/undo\";\nimport { redo } from \"@/actions/redo\";\nimport { circuitEditorReceiveFocus } from \"@/actions/circuit-editor-receive-focus\";\nimport { stepSim } from \"@/actions/sim-step\";\n\nimport CircuitNodeBreadcrumb from \"@/components/CircuitNodeBreadcrumb\";\nimport CircuitField from \"@/components/CircuitEditor\";\nimport TesselWindow from \"@/components/Tessel/TesselWindow\";\n\nimport keymap, {\n  KeymapHandler,\n  KEYMAP_SIM_STEP,\n  KEYMAP_COPY,\n  KEYMAP_PASTE,\n  KEYMAP_DELETE,\n  KEYMAP_SELECT_ALL,\n  KEYMAP_UNDO,\n  KEYMAP_REDO,\n} from \"./keymap\";\n\nexport interface CircuitEditorWindowProps {\n  editorId: string;\n}\nconst CircuitEditorWindow: React.FC<CircuitEditorWindowProps> = ({\n  editorId,\n}) => {\n  const dispatch = useDispatch();\n  const { circuitId, elementIdPath } = useSelector((state) =>\n    circuitEditorStateFromIdSelector(state, editorId)\n  ) ?? { circuitId: null, elementIdPath: [] };\n\n  const circuitName =\n    useSelector((state) => circuitNameFromIdSelector(state, circuitId)) ??\n    \"<Circuit Missing>\";\n\n  // FIXME: Move key handling into CircuitEditor\n  const keyHandlers = React.useMemo(() => {\n    function createEventDispatcher(action: AnyAction): HotkeyHandler {\n      return (e?: KeyboardEvent) => {\n        if (e) {\n          if (e.defaultPrevented) {\n            return;\n          }\n          e.preventDefault();\n        }\n        dispatch(action);\n      };\n    }\n    const keyHandlers: KeymapHandler = {\n      [KEYMAP_SIM_STEP]: createEventDispatcher(stepSim()),\n      [KEYMAP_SELECT_ALL]: createEventDispatcher(selectAll()),\n      [KEYMAP_COPY]: createEventDispatcher(copySelection()),\n      [KEYMAP_PASTE]: createEventDispatcher(paste()),\n      [KEYMAP_DELETE]: createEventDispatcher(deleteSelection()),\n      [KEYMAP_UNDO]: createEventDispatcher(undo()),\n      [KEYMAP_REDO]: createEventDispatcher(redo()),\n    };\n    return keyHandlers;\n  }, [dispatch]);\n\n  const onViewActivated = React.useCallback(() => {\n    dispatch(circuitEditorReceiveFocus(editorId));\n  }, [dispatch, editorId]);\n\n  return (\n    <TesselWindow title={`${circuitName} [Circuit]`}>\n      <HotKeys keyMap={keymap} handlers={keyHandlers} component={FillParent}>\n        <div\n          onFocus={onViewActivated}\n          className={cls(\n            \"circuit-field-view\",\n            sizing[\"fill-parent\"],\n            flex[\"flex-column\"]\n          )}\n        >\n          <CircuitNodeBreadcrumb\n            circuitId={circuitId}\n            elementIdPath={elementIdPath}\n          />\n          <CircuitField\n            className={cls(sizing[\"fill-parent\"], flex[\"flexitem-shrink\"])}\n            editorId={editorId}\n          />\n        </div>\n      </HotKeys>\n    </TesselWindow>\n  );\n};\n\nconst FillParent: React.FC = ({ children, ...props }) => {\n  return (\n    <div {...props} className={sizing[\"fill-parent\"]}>\n      {children}\n    </div>\n  );\n};\n\nexport default CircuitEditorWindow;\n","import CircuitEditorWindow from \"./CircuitEditorWindow\";\nexport default CircuitEditorWindow;\n","import { keyboardCommandModifier } from \"@/runtime-env\";\n\nexport const KEYMAP_SIM_STEP = \"keymap:CircuitEditor/SimStep\" as const;\nexport const KEYMAP_SELECT_ALL = \"keymap:CircuitEditor/SelectAll\" as const;\nexport const KEYMAP_COPY = \"keymap:CircuitEditor/Copy\" as const;\nexport const KEYMAP_PASTE = \"keymap:CircuitEditor/Paste\" as const;\nexport const KEYMAP_DELETE = \"keymap:CircuitEditor/Delete\" as const;\nexport const KEYMAP_UNDO = \"keymap:CircuitEditor/Undo\" as const;\nexport const KEYMAP_REDO = \"keymap:CircuitEditor/Redo\" as const;\n\nconst keymap = {\n  [KEYMAP_SIM_STEP]: \"space\",\n  [KEYMAP_SELECT_ALL]: `${keyboardCommandModifier}+a`,\n  [KEYMAP_COPY]: `${keyboardCommandModifier}+c`,\n  [KEYMAP_PASTE]: `${keyboardCommandModifier}+v`,\n  [KEYMAP_DELETE]: [\"backspace\", \"del\"],\n  [KEYMAP_UNDO]: `${keyboardCommandModifier}+z`,\n  [KEYMAP_REDO]: [\n    `${keyboardCommandModifier}+y`,\n    `${keyboardCommandModifier}+shift+z`,\n  ],\n};\nexport default keymap;\n\nexport type KeymapKeys = keyof typeof keymap;\nexport type KeymapHandler = Record<KeymapKeys, HotkeyHandler>;\n","import {\n  isTesselWindow,\n  TesselValue,\n  TesselWindowItem,\n} from \"@/components/Tessel\";\n\nimport { CircuitEditorWindowProps } from \"./CircuitEditorWindow\";\n\nexport const CIRCUIT_FIELD_WINDOW_ID = \"circuit-field\" as const;\n\nexport const circuitEditorTesselWindow = (\n  circuitEditorId: string\n): TesselWindowItem<CircuitEditorWindowProps> => ({\n  windowId: CIRCUIT_FIELD_WINDOW_ID,\n  windowProps: {\n    editorId: circuitEditorId,\n  },\n});\n\nexport function isCircuitEditorTesselWindow(\n  x: TesselValue\n): x is Required<TesselWindowItem<CircuitEditorWindowProps>> {\n  if (typeof x === \"string\") {\n    // We must have props to be a proper circuit field.\n    return false;\n  }\n  if (!isTesselWindow(x)) {\n    return false;\n  }\n  return x.windowId === CIRCUIT_FIELD_WINDOW_ID;\n}\n","import * as React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { cls } from \"@/utils\";\n\nimport sizing from \"@/styles/sizing.module.css\";\n\nimport useSelector from \"@/hooks/useSelector\";\n\nimport { deleteCircuit } from \"@/actions/circuit-delete\";\nimport { viewCircuit } from \"@/actions/view-circuit\";\nimport { addCircuit } from \"@/actions/circuit-add\";\nimport { renameCircuit } from \"@/actions/circuit-rename\";\n\nimport {\n  circuitNameFromIdSelector,\n  circuitNamesByIdSelector,\n} from \"@/services/circuit-properties/selectors/circuits\";\nimport { ROOT_CIRCUIT_ID } from \"@/services/circuits/constants\";\n\nimport { useContextMenu } from \"@/components/ContextMenu\";\nimport Menu from \"@/components/Menus/Menu\";\nimport MenuItem from \"@/components/Menus/MenuItem\";\nimport DividerMenuItem from \"@/components/Menus/DividerMenuItem\";\nimport SelectionList, { SelectionListItem } from \"@/components/SelectionList\";\nimport EditableText from \"@/components/EditableText\";\nimport TesselWindow from \"@/components/Tessel/TesselWindow\";\n\nimport { getCircuitListItemHtmlId } from \"./ids\";\n\nimport styles from \"./CircuitsTreeWindow.module.css\";\n\nconst CircuitsTreeWindow: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const circuitNamesById = useSelector(circuitNamesByIdSelector);\n\n  const { openContextMenu, renderContextMenu } = useContextMenu();\n\n  const onCircuitSelected = React.useCallback(\n    (circuitId: string) => {\n      dispatch(viewCircuit(circuitId));\n    },\n    [dispatch]\n  );\n\n  const onContextMenu = React.useCallback(\n    (e: React.MouseEvent<HTMLDivElement>) => {\n      e.preventDefault();\n      openContextMenu(e);\n    },\n    [openContextMenu]\n  );\n\n  const listItems: SelectionListItem[] = React.useMemo(\n    () =>\n      Object.keys(circuitNamesById).map((circuitId) => {\n        return {\n          id: getCircuitListItemHtmlId(circuitId),\n          value: circuitId,\n          label: <CircuitTreeNodeCircuitLabel circuitId={circuitId} />,\n        };\n      }),\n    [circuitNamesById]\n  );\n\n  return (\n    <TesselWindow\n      id=\"circuit-list-window\"\n      title=\"Circuits\"\n      className={cls(styles.circuitstree)}\n    >\n      <div className={sizing[\"fill-parent\"]} onContextMenu={onContextMenu}>\n        <SelectionList\n          className={sizing[\"fill-parent\"]}\n          id=\"circuit-list\"\n          items={listItems}\n          onItemSelected={onCircuitSelected}\n        />\n      </div>\n      {renderContextMenu(<CircuitTreeContextMenu />)}\n    </TesselWindow>\n  );\n};\n\nexport default CircuitsTreeWindow;\n\ninterface CircuitTreeNodeLabelProps {\n  circuitId: string;\n}\n\nconst CircuitTreeNodeCircuitLabel: React.FC<CircuitTreeNodeLabelProps> = ({\n  circuitId,\n}) => {\n  const dispatch = useDispatch();\n  const circuitName = useSelector((state) =>\n    circuitNameFromIdSelector(state, circuitId)\n  );\n  const [isRenaming, setIsRenaming] = React.useState(false);\n\n  const { openContextMenu, renderContextMenu } = useContextMenu();\n\n  const onRequestRename = React.useCallback(() => {\n    if (circuitId === ROOT_CIRCUIT_ID) {\n      return;\n    }\n    setIsRenaming(true);\n  }, [circuitId]);\n\n  const onCancelRename = React.useCallback(() => {\n    setIsRenaming(false);\n  }, []);\n\n  const onRename = React.useCallback(\n    (newName) => {\n      dispatch(renameCircuit(circuitId, newName));\n      setIsRenaming(false);\n    },\n    [circuitId, dispatch]\n  );\n\n  const onOpenNewWindow = React.useCallback(\n    (e: React.MouseEvent) => {\n      e.preventDefault();\n      dispatch(viewCircuit(circuitId, null, { newWindow: true }));\n    },\n    [circuitId, dispatch]\n  );\n\n  const onDelete = React.useCallback(\n    (e: React.MouseEvent) => {\n      e.preventDefault();\n      dispatch(deleteCircuit(circuitId));\n    },\n    [dispatch, circuitId]\n  );\n\n  const onContextMenu = React.useCallback(\n    (e: React.MouseEvent<HTMLElement>) => {\n      e.preventDefault();\n      e.stopPropagation();\n      openContextMenu(e);\n    },\n    [openContextMenu]\n  );\n\n  return (\n    <div\n      className={styles[\"circuitstree-item\"]}\n      onContextMenu={onContextMenu}\n      onDoubleClick={onRequestRename}\n    >\n      <EditableText\n        defaultValue={circuitName}\n        isEditing={isRenaming}\n        onRequestEdit={onRequestRename}\n        onCommit={onRename}\n        onCancel={onCancelRename}\n      />\n      {renderContextMenu(\n        <Menu>\n          {circuitId !== ROOT_CIRCUIT_ID && (\n            <>\n              <MenuItem onClick={onRequestRename}>Rename Circuit</MenuItem>\n              <DividerMenuItem />\n            </>\n          )}\n          <MenuItem onClick={onOpenNewWindow}>Open in New Window</MenuItem>\n          {circuitId !== ROOT_CIRCUIT_ID && (\n            <>\n              <DividerMenuItem />\n              <MenuItem onClick={onDelete}>Delete Circuit</MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nconst CircuitTreeContextMenu: React.FC = () => {\n  const dispatch = useDispatch();\n  const onNewCircuit = React.useCallback(() => {\n    dispatch(addCircuit());\n  }, [dispatch]);\n\n  return (\n    <Menu>\n      <MenuItem onClick={onNewCircuit}>New Circuit</MenuItem>\n    </Menu>\n  );\n};\n","export function getCircuitListItemHtmlId(circuitId: string) {\n  return `circuit-list--circuit-${circuitId}`;\n}\n","import CircuitsTreeWindow from \"./CircuitsTreeWindow\";\nexport default CircuitsTreeWindow;\n","import * as React from \"react\";\nimport uniq from \"lodash/uniq\";\nimport { useDrag } from \"react-dnd\";\n\nimport interaction from \"@/styles/interaction.module.css\";\n\nimport useSelector from \"@/hooks/useSelector\";\n\nimport { ElementDefinition } from \"@/elements/types\";\nimport { getNodeVisualElement } from \"@/elements/visuals\";\n\nimport {\n  elementDefinitionFromTypeSelector,\n  elementDefinitionsSelector,\n} from \"@/services/element-types/selectors/element-types\";\n\nimport { newElementDragObject } from \"@/components/CircuitEditor/drag-items/new-element\";\nimport TesselWindow from \"@/components/Tessel/TesselWindow\";\nimport Tooltip from \"@/components/Tooltip\";\n\nimport styles from \"./ElementTrayWindow.module.css\";\n\nconst CategoryNames: Record<ElementDefinition[\"category\"], string> = {\n  \"input-output\": \"I/O\",\n  \"integrated-circuit\": \"Integrated Circuits\",\n  logic: \"Logic\",\n};\n\nconst ElementTrayWindow: React.FC = () => {\n  const elementDefinitions = useSelector(elementDefinitionsSelector);\n  const categories = uniq(elementDefinitions.map((x) => x.category));\n  const [search, setSearch] = React.useState(\"\");\n  const onSearchChanged = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setSearch(e.target.value.toLowerCase());\n    },\n    []\n  );\n\n  return (\n    <TesselWindow\n      id=\"element-tray\"\n      title=\"Elements\"\n      className={styles[\"element-tray\"]}\n    >\n      <div>\n        <input\n          className={styles[\"element-tray-search\"]}\n          type=\"text\"\n          value={search}\n          onChange={onSearchChanged}\n          placeholder=\"Search\"\n        />\n      </div>\n      <div className={styles[\"element-tray-element-container\"]}>\n        <ul className={styles[\"element-tray-element-list\"]}>\n          {categories.map((category) => (\n            <TrayCategory key={category} category={category} search={search} />\n          ))}\n        </ul>\n      </div>\n    </TesselWindow>\n  );\n};\nexport default ElementTrayWindow;\n\ninterface TrayCategoryProps {\n  category: ElementDefinition[\"category\"];\n  search: string;\n}\n\nconst TrayCategory: React.FC<TrayCategoryProps> = ({ category, search }) => {\n  const elementDefinitions = useSelector(elementDefinitionsSelector);\n  const defInCategory = elementDefinitions.filter(\n    (def) => def.category === category\n  );\n\n  function shouldShowElement(def: ElementDefinition) {\n    if (def.category !== category) {\n      return false;\n    }\n\n    if (\n      search !== null &&\n      def.displayName.toLowerCase().indexOf(search) === -1\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  const elements = defInCategory.filter(shouldShowElement).map((def) => {\n    return <TrayElement key={def.type} elementType={def.type} />;\n  });\n\n  if (elements.length === 0) {\n    return null;\n  }\n\n  return (\n    <>\n      <li className={styles[\"element-tray-category\"]}>\n        {CategoryNames[category]}\n      </li>\n      {elements}\n    </>\n  );\n};\n\ninterface TrayElementProps {\n  elementType: string;\n}\nconst TrayElement: React.FC<TrayElementProps> = ({ elementType }) => {\n  const [liRef, setLiRef] = React.useState<HTMLElement | null>(null);\n  const def = useSelector((state) =>\n    elementDefinitionFromTypeSelector(state, elementType)\n  );\n\n  const [showTooltip, setShowTooltip] = React.useState(false);\n  const onShowTooltip = React.useCallback((e: React.MouseEvent) => {\n    e.preventDefault();\n    setShowTooltip(true);\n  }, []);\n  const onHideTooltip = React.useCallback(\n    (e: React.MouseEvent) => {\n      if (e.target !== liRef) {\n        return;\n      }\n      setShowTooltip(false);\n    },\n    [liRef]\n  );\n\n  const [, dragRef] = useDrag({\n    item: newElementDragObject(elementType),\n  });\n\n  let elementTrayVisual: JSX.Element;\n  let displayName = elementType;\n  let viewBox = \"0 0 50 50\";\n  if (def) {\n    const { trayComponent, hitRect } = def.visual;\n    if (trayComponent) {\n      const TrayComponent = trayComponent;\n      elementTrayVisual = <TrayComponent />;\n    } else {\n      elementTrayVisual = getNodeVisualElement(\n        undefined,\n        [],\n        undefined,\n        def.visual\n      );\n      viewBox = `${hitRect.p1.x} ${hitRect.p1.y} ${hitRect.p2.x} ${hitRect.p2.y}`;\n    }\n    displayName = def.displayName;\n  } else {\n    elementTrayVisual = <NodeTrayErrorComponent />;\n  }\n\n  return (\n    <li\n      id={`element-tray--element-${elementType}`}\n      ref={(ref) => {\n        setLiRef(ref);\n        dragRef(ref);\n      }}\n      className={styles[\"element-tray-item\"]}\n      onClick={onShowTooltip}\n      onMouseOut={onHideTooltip}\n    >\n      <Tooltip placement=\"top\" isOpen={showTooltip} anchorEl={liRef}>\n        Click and drag to create a new circuit element.\n      </Tooltip>\n      <span className={styles[\"element-tray-item-preview\"]}>\n        <svg width={30} height={30} viewBox={viewBox}>\n          {elementTrayVisual}\n        </svg>\n      </span>\n      <span className={interaction[\"text-unselectable\"]}>{displayName}</span>\n    </li>\n  );\n};\n\nconst NodeTrayErrorComponent = () => (\n  <rect fill=\"red\" x1={0} y1={0} x2={50} y2={50} />\n);\n","import ElementTrayWindow from \"./ElementTrayWindow\";\nexport default ElementTrayWindow;\n","import { importProjectLink } from \"@/actions/project-import-link\";\nimport * as React from \"react\";\n\nimport { useDispatch } from \"react-redux\";\nimport { RouteChildrenProps } from \"react-router-dom\";\n\nconst ProjectImporterPage: React.FC<RouteChildrenProps> = ({ location }) => {\n  const dispatch = useDispatch();\n  const [importError, setImportError] = React.useState(false);\n\n  React.useEffect(() => {\n    let searchParams: URLSearchParams;\n    try {\n      searchParams = new URLSearchParams(location.search);\n    } catch (e) {\n      setImportError(true);\n      return;\n    }\n\n    const data = searchParams.get(\"data\");\n    if (!data) {\n      setImportError(true);\n      return;\n    }\n\n    dispatch(importProjectLink(data));\n\n    // This is an effect, these are not dependencies.  Stop warning me about this.\n    // We only want to run on page load.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // TODO: better styling.\n\n  if (importError) {\n    // TODO: Better error message\n    return <div>Failed to import project</div>;\n  }\n\n  return <div>Importing Project...</div>;\n};\n\nexport default ProjectImporterPage;\n","import ProjectImporterPage from \"./ProjectImporterPage\";\nexport default ProjectImporterPage;\n","import { AnyAction } from \"redux\";\n\nimport { ACTION_CIRCUIT_ADD } from \"@/actions/circuit-add\";\nimport { ACTION_CIRCUIT_DELETE } from \"@/actions/circuit-delete\";\nimport { ACTION_CIRCUIT_RENAME } from \"@/actions/circuit-rename\";\n\nimport { ACTION_ELEMENT_ADD } from \"@/actions/element-add\";\nimport { ACTION_ELEMENT_DELETE } from \"@/actions/element-delete\";\nimport { ACTION_ELEMENT_RENAME } from \"@/actions/element-rename\";\n\nimport { ACTION_SELECTION_ALIGN_TO_GRID } from \"@/actions/selection-align-to-grid\";\nimport { ACTION_SELECTION_DELETE } from \"@/actions/selection-delete\";\nimport { ACTION_SELECTION_MOVE } from \"@/actions/selection-move\";\n\nimport { ACTION_PASTE } from \"@/actions/clipboard-paste\";\nimport { ACTION_CIRCUIT_EDITOR_DRAG_END } from \"@/actions/circuit-editor-drag-end\";\n\nimport { ACTION_UNDO } from \"@/actions/undo\";\nimport { ACTION_REDO } from \"@/actions/redo\";\n\nimport { ACTION_PROJECT_NEW } from \"@/actions/project-new\";\nimport { ACTION_PROJECT_RECEIVE } from \"@/actions/project-receive\";\n\nimport { ACTION_WIRE_CONNECT } from \"@/actions/wire-connect\";\nimport { ACTION_WIRE_HYDRATE } from \"@/actions/wire-hydrate\";\nimport { ACTION_WIRE_JOINT_MOVE } from \"@/actions/wire-joint-move\";\nimport { ACTION_WIRE_JOINT_DELETE } from \"@/actions/wire-joint-delete\";\nimport { ACTION_WIRE_SEGMENT_INSERT_JOINT } from \"@/actions/wire-segment-insert-joint\";\nimport { ACTION_WIRE_SEGMENT_SET_LINE } from \"@/actions/wire-segment-set-line\";\n\nexport const PROJECT_MUTATION_ACTIONS = [\n  ACTION_CIRCUIT_ADD,\n  ACTION_CIRCUIT_DELETE,\n  ACTION_CIRCUIT_RENAME,\n\n  ACTION_ELEMENT_ADD,\n  ACTION_ELEMENT_DELETE,\n  ACTION_ELEMENT_RENAME,\n\n  ACTION_SELECTION_ALIGN_TO_GRID,\n  ACTION_SELECTION_DELETE,\n  ACTION_SELECTION_MOVE,\n\n  ACTION_UNDO,\n  ACTION_REDO,\n\n  ACTION_WIRE_CONNECT,\n  ACTION_WIRE_HYDRATE,\n  ACTION_WIRE_JOINT_MOVE,\n  ACTION_WIRE_JOINT_DELETE,\n  ACTION_WIRE_SEGMENT_INSERT_JOINT,\n  ACTION_WIRE_SEGMENT_SET_LINE,\n\n  // These actions typically fire off other actions in this list,\n  // and are redundant for services that take part in the core reducer.\n  // However, undo/redo is outside of the core reducer and does not see the\n  // reentrant actions in order to produce a single undo stack entry for\n  // the entire paste operation.\n  ACTION_PASTE,\n  ACTION_CIRCUIT_EDITOR_DRAG_END,\n];\n\nexport function isProjectMutationAction(action: AnyAction) {\n  return PROJECT_MUTATION_ACTIONS.indexOf(action.type) !== -1;\n}\n\nexport const PROJECT_RESET_ACTIONS = [\n  ACTION_PROJECT_NEW,\n  ACTION_PROJECT_RECEIVE,\n];\n\nexport function isProjectResetAction(action: AnyAction) {\n  return PROJECT_RESET_ACTIONS.indexOf(action.type) !== -1;\n}\n","import * as React from \"react\";\n\nimport { Switch, Route } from \"react-router-dom\";\n\nimport HomePage from \"@/pages/HomePage\";\nimport ProjectEditorPage from \"@/pages/ProjectEditorPage\";\nimport ProjectImporterPage from \"@/pages/ProjectImporterPage\";\n\nconst Routes: React.FC = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={HomePage} />\n      <Route exact path=\"/editor\" component={ProjectEditorPage} />\n      <Route exact path=\"/import\" component={ProjectImporterPage} />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import { os } from \"platform\";\n\nconst OS_MAC = /(Mac|iOS|OS\\ X)/;\n\nexport const keyboardIsMac = OS_MAC.test((os || \"undefined\").toString());\n\nexport const keyboardCommandModifier = keyboardIsMac ? \"command\" : \"ctrl\";\n","import union from \"lodash/union\";\nimport difference from \"lodash/difference\";\n\nimport { ModifierKeys } from \"./modifier-keys\";\n\nexport type SelectionMode =\n  | \"set\"\n  | \"append\"\n  | \"remove\"\n  | \"toggle\"\n  | \"set-if-unselected\";\n\nexport function getSelectMode(\n  modifiers: ModifierKeys,\n  defaultMode: SelectionMode = \"set\"\n): SelectionMode {\n  if (modifiers.shiftKey && modifiers.ctrlMetaKey) {\n    return \"remove\";\n  }\n  if (modifiers.shiftKey) {\n    return \"append\";\n  }\n  if (modifiers.ctrlMetaKey) {\n    return \"toggle\";\n  }\n  return defaultMode;\n}\n\nexport function combineSelection(\n  selectedIds: string[],\n  chosenIds: string[],\n  mode: SelectionMode\n) {\n  switch (mode) {\n    case \"set\":\n      return chosenIds;\n    case \"set-if-unselected\": {\n      if (chosenIds.every((chosen) => selectedIds.indexOf(chosen) !== -1)) {\n        // All were selected.\n        return selectedIds;\n      }\n\n      // One wasn't selected, set it\n      return chosenIds;\n    }\n    case \"append\":\n      return union(selectedIds, chosenIds);\n    case \"remove\":\n      return difference(selectedIds, chosenIds);\n    case \"toggle\": {\n      return difference(selectedIds, chosenIds).concat(\n        difference(chosenIds, selectedIds)\n      );\n    }\n  }\n\n  return chosenIds;\n}\n\nexport function combineExtraniousSelection(\n  selectedIds: string[],\n  mode: SelectionMode\n) {\n  switch (mode) {\n    case \"append\":\n    case \"remove\":\n      return selectedIds;\n  }\n\n  return [];\n}\n","import { SaveData } from \"../savedata/types\";\n\nexport function storeAutosave(save: SaveData): void {\n  localStorage.setItem(\"autosave\", JSON.stringify(save));\n}\n\nexport function hasAutosave(): boolean {\n  const str = localStorage.getItem(\"autosave\");\n  return Boolean(str);\n}\n\nexport function loadAutosave(): SaveData | null {\n  const str = localStorage.getItem(\"autosave\");\n  if (!str) {\n    return null;\n  }\n\n  try {\n    return JSON.parse(str);\n  } catch {\n    return null;\n  }\n}\n\nexport function deleteAutosave() {\n  localStorage.removeItem(\"autosave\");\n}\n","import { fork } from \"@redux-saga/core/effects\";\n\nimport projectMutateSaga from \"./project-mutate\";\nimport projectResetSaga from \"./project-reset\";\n\nexport default function* autosaveSaga() {\n  yield fork(projectMutateSaga);\n  yield fork(projectResetSaga);\n}\n","import { select, takeEvery } from \"@redux-saga/core/effects\";\n\nimport { AppState } from \"@/store\";\n\nimport { PROJECT_MUTATION_ACTIONS } from \"@/project-mutation-actions\";\n\nimport { createSave } from \"@/services/savedata/api\";\nimport { isTutorialActiveSelector } from \"@/services/tutorial/selectors/tutorial\";\n\nimport { storeAutosave } from \"../api\";\n\nexport default function* projectMutateSaga() {\n  yield takeEvery(PROJECT_MUTATION_ACTIONS, handleProjectMutateAction);\n}\n\nfunction* handleProjectMutateAction() {\n  const state: AppState = yield select();\n\n  if (isTutorialActiveSelector(state)) {\n    return;\n  }\n\n  try {\n    const save = createSave(state);\n    storeAutosave(save);\n  } catch (e) {\n    console.error(\"Failed to make autosave:\", e);\n  }\n}\n","import { takeEvery } from \"@redux-saga/core/effects\";\n\nimport { ACTION_PROJECT_NEW } from \"@/actions/project-new\";\n\nimport { deleteAutosave } from \"../api\";\n\nexport default function* projectResetSaga() {\n  yield takeEvery(ACTION_PROJECT_NEW, handleProjectNewAction);\n}\n\nfunction* handleProjectNewAction() {\n  deleteAutosave();\n}\n","import { isCircuitEditorDragAbortAction } from \"@/actions/circuit-editor-drag-abort\";\nimport { defaultCircuitEditorDragServiceState } from \"../state\";\nimport { createCircuitEditorDragReducer } from \"../utils\";\n\nexport default createCircuitEditorDragReducer((state, action) => {\n  if (!isCircuitEditorDragAbortAction(action)) {\n    return state;\n  }\n\n  return defaultCircuitEditorDragServiceState;\n});\n","import { isCircuitEditorDragContinueAction } from \"@/actions/circuit-editor-drag-continue\";\n\nimport { createCircuitEditorDragReducer } from \"../utils\";\n\nexport default createCircuitEditorDragReducer((state, action) => {\n  if (!isCircuitEditorDragContinueAction(action)) {\n    return state;\n  }\n\n  const { dragPos, modifierKeys, editorId } = action.payload;\n\n  return {\n    ...state,\n    dragEnd: dragPos,\n    dragEndEditorId: editorId,\n    dragModifierKeys: modifierKeys,\n  };\n});\n","import { AnyAction } from \"redux\";\n\nimport { normalizeRectangle, pointSubtract } from \"@/geometry\";\nimport { fpSet } from \"@/utils\";\nimport { getSelectMode } from \"@/selection-mode\";\n\nimport { AppState, defaultAppState } from \"@/store\";\nimport rootReducer from \"@/store/reducer\";\n\nimport {\n  CircuitEditorDragEndAction,\n  isCircuitEditorDragEndAction,\n} from \"@/actions/circuit-editor-drag-end\";\nimport { selectRegion } from \"@/actions/select-region\";\nimport { moveSelection } from \"@/actions/selection-move\";\nimport { wireSegmentInsertJoint } from \"@/actions/wire-segment-insert-joint\";\nimport { wireConnect } from \"@/actions/wire-connect\";\n\nimport { circuitIdForEditorIdSelector } from \"@/services/circuit-editors/selectors/editor\";\n\nimport { defaultCircuitEditorDragServiceState } from \"../state\";\n\nimport {\n  applyGridJointSnapSelector,\n  applyGridElementSnapSelector,\n} from \"../selectors/snap\";\nimport { dragWireEndTargetByPointSelector } from \"../selectors/drag-wire\";\n\nexport default function dragEndReducer(\n  state: AppState = defaultAppState,\n  action: AnyAction\n) {\n  if (!isCircuitEditorDragEndAction(action)) {\n    return state;\n  }\n\n  state = executeDragMode(state, action);\n\n  state = fpSet(\n    state,\n    \"services\",\n    \"circuitEditorDrag\",\n    defaultCircuitEditorDragServiceState\n  );\n\n  return state;\n}\n\nfunction executeDragMode(\n  state: AppState,\n  action: CircuitEditorDragEndAction\n): AppState {\n  const { dragMode } = state.services.circuitEditorDrag;\n\n  switch (dragMode) {\n    case \"select\":\n      return executeSelectDrag(state, action);\n    case \"move\":\n      return executeMoveDrag(state, action);\n    case \"wire\":\n      return executeWireDrag(state, action);\n    case \"wire-segment-new-joint\":\n      return executeWireNewJointDrag(state, action);\n  }\n\n  return state;\n}\n\nfunction executeSelectDrag(\n  state: AppState,\n  action: CircuitEditorDragEndAction\n): AppState {\n  const dragState = state.services.circuitEditorDrag;\n  if (dragState.dragMode !== \"select\") {\n    return state;\n  }\n\n  const { dragStartEditorId, dragEndEditorId } = dragState;\n  if (dragStartEditorId != dragEndEditorId) {\n    return state;\n  }\n\n  const { dragModifierKeys, dragStart } = dragState;\n  const { x, y } = action.payload;\n\n  const circuitId = circuitIdForEditorIdSelector(state, dragStartEditorId);\n  if (!circuitId) {\n    return state;\n  }\n\n  const selectionMode = getSelectMode(dragModifierKeys);\n  const rect = normalizeRectangle(dragStart, { x, y });\n  return rootReducer(state, selectRegion(rect, circuitId, selectionMode));\n}\n\nfunction executeMoveDrag(\n  state: AppState,\n  action: CircuitEditorDragEndAction\n): AppState {\n  const dragState = state.services.circuitEditorDrag;\n  if (dragState.dragMode !== \"move\") {\n    return state;\n  }\n\n  const { dragStartEditorId, dragEndEditorId } = dragState;\n  if (dragStartEditorId != dragEndEditorId) {\n    return state;\n  }\n\n  const { dragStart, dragModifierKeys } = dragState;\n  const { x, y } = action.payload;\n\n  let moveBy = pointSubtract({ x, y }, dragStart);\n  const hasElements = state.services.selection.selectedElementIds.length > 0;\n\n  if (!dragModifierKeys.ctrlMetaKey) {\n    // We apply the snap here because we want to snap the offset, not the resulting positions.\n    // Applying the snap in moveSelection can result in different objects moving different distances\n    // depending on their snap.\n    if (hasElements) {\n      moveBy = applyGridElementSnapSelector(state, moveBy);\n    } else {\n      moveBy = applyGridJointSnapSelector(state, moveBy);\n    }\n  }\n\n  return rootReducer(state, moveSelection(moveBy.x, moveBy.y));\n}\n\nfunction executeWireDrag(\n  state: AppState,\n  action: CircuitEditorDragEndAction\n): AppState {\n  const dragState = state.services.circuitEditorDrag;\n  if (dragState.dragMode !== \"wire\") {\n    return state;\n  }\n\n  const { dragStartEditorId, dragEndEditorId } = dragState;\n  if (dragStartEditorId != dragEndEditorId) {\n    return state;\n  }\n\n  const circuitId = circuitIdForEditorIdSelector(state, dragStartEditorId);\n  if (!circuitId) {\n    return state;\n  }\n\n  const { dragStartTarget } = dragState;\n  const { x, y } = action.payload;\n  const dragEndTarget = dragWireEndTargetByPointSelector(state, { x, y });\n  if (!dragEndTarget) {\n    return state;\n  }\n\n  return rootReducer(\n    state,\n    wireConnect(circuitId, dragStartTarget, dragEndTarget)\n  );\n}\n\nfunction executeWireNewJointDrag(\n  state: AppState,\n  action: CircuitEditorDragEndAction\n): AppState {\n  const dragState = state.services.circuitEditorDrag;\n  if (dragState.dragMode !== \"wire-segment-new-joint\") {\n    return state;\n  }\n\n  const { dragStartEditorId, dragEndEditorId } = dragState;\n  if (dragStartEditorId != dragEndEditorId) {\n    return state;\n  }\n\n  const { dragWireId, dragWireSegmentId } = dragState;\n  const { x, y } = action.payload;\n\n  return rootReducer(\n    state,\n    wireSegmentInsertJoint(dragWireId, dragWireSegmentId, { x, y })\n  );\n}\n","import { AnyAction } from \"redux\";\n\nimport { fpSet } from \"@/utils\";\nimport { getSelectMode } from \"@/selection-mode\";\n\nimport { AppState, defaultAppState } from \"@/store\";\nimport rootReducer from \"@/store/reducer\";\n\nimport { isCircuitEditorDragStartElementAction } from \"@/actions/circuit-editor-drag-start-element\";\nimport { selectElements } from \"@/actions/select-elements\";\n\nimport { isElementSelectedFromElementIdSelector } from \"@/services/selection/selectors/selection\";\n\nexport default function dragStartNodeReducer(\n  state: AppState = defaultAppState,\n  action: AnyAction\n) {\n  if (!isCircuitEditorDragStartElementAction(action)) {\n    return state;\n  }\n\n  const { elementId, x, y, modifierKeys, editorId } = action.payload;\n\n  state = fpSet(state, \"services\", \"circuitEditorDrag\", () => ({\n    dragMode: \"move\" as const,\n    dragStart: {\n      x,\n      y,\n    },\n    dragStartEditorId: editorId,\n    dragModifierKeys: modifierKeys,\n    dragEnd: null,\n    dragEndEditorId: null,\n  }));\n\n  if (!isElementSelectedFromElementIdSelector(state, elementId)) {\n    const selectionMode = getSelectMode(modifierKeys);\n    // Dragging an element that was not previously selected.  Perform a selection on the element.\n    state = rootReducer(state, selectElements(elementId, selectionMode));\n  }\n\n  return state;\n}\n","import { isCircuitEditorDragStartSelectAction } from \"@/actions/circuit-editor-drag-start-select\";\n\nimport { createCircuitEditorDragReducer } from \"../utils\";\n\nexport default createCircuitEditorDragReducer((state, action) => {\n  if (!isCircuitEditorDragStartSelectAction(action)) {\n    return state;\n  }\n\n  const { x, y, modifierKeys, editorId } = action.payload;\n\n  return {\n    ...state,\n    dragMode: \"select\",\n    dragStart: {\n      x,\n      y,\n    },\n    dragStartEditorId: editorId,\n    dragModifierKeys: modifierKeys,\n    dragEnd: null,\n    dragEndEditorId: null,\n  };\n});\n","import { AnyAction } from \"redux\";\n\nimport { getSelectMode } from \"@/selection-mode\";\nimport { fpSet } from \"@/utils\";\n\nimport { AppState, defaultAppState } from \"@/store\";\nimport rootReducer from \"@/store/reducer\";\n\nimport { isJointSelectedFromJointIdSelector } from \"@/services/selection/selectors/selection\";\n\nimport { isCircuitEditorDragStartWireJointAction } from \"@/actions/circuit-editor-drag-start-wire-joint\";\nimport { selectWireJoints } from \"@/actions/select-wire-joints\";\n\nexport default (state: AppState = defaultAppState, action: AnyAction) => {\n  if (!isCircuitEditorDragStartWireJointAction(action)) {\n    return state;\n  }\n\n  const { x, y, editorId, wireId, jointId, modifierKeys } = action.payload;\n\n  if (modifierKeys.ctrlMetaKey) {\n    state = fpSet(state, \"services\", \"circuitEditorDrag\", () => ({\n      dragMode: \"wire\" as const,\n      dragStart: { x, y },\n      dragStartEditorId: editorId,\n      dragStartTarget: {\n        type: \"joint\" as const,\n        wireId,\n        jointId,\n      },\n      dragModifierKeys: modifierKeys,\n      dragEnd: null,\n      dragEndEditorId: null,\n    }));\n  } else {\n    state = fpSet(state, \"services\", \"circuitEditorDrag\", () => ({\n      dragMode: \"move\" as const,\n      dragStart: { x, y },\n      dragStartEditorId: editorId,\n      dragModifierKeys: modifierKeys,\n      dragEnd: null,\n      dragEndEditorId: null,\n    }));\n\n    if (!isJointSelectedFromJointIdSelector(state, jointId)) {\n      const selectionMode = getSelectMode(modifierKeys);\n      // Dragging an element that was not previously selected.  Perform a selection on the element.\n      state = rootReducer(state, selectWireJoints(jointId, selectionMode));\n    }\n  }\n\n  return state;\n};\n","import { dotProduct, normalize, pointSubtract } from \"@/geometry\";\n\nimport { isCircuitEditorDragStartWireSegmentAction } from \"@/actions/circuit-editor-drag-start-wire-segment\";\n\nimport {\n  endPositionForWireSegmentId,\n  startPositionForWireSegmentId,\n} from \"@/services/circuit-graph/selectors/wire-positions\";\n\nimport { createCircuitEditorDragReducer } from \"../utils\";\nimport { applyGridJointSnapSelector } from \"../selectors/snap\";\n\nexport default createCircuitEditorDragReducer((state, action, rootState) => {\n  if (!isCircuitEditorDragStartWireSegmentAction(action)) {\n    return state;\n  }\n\n  const {\n    x,\n    y,\n    editorId,\n    modifierKeys,\n    wireId,\n    wireSegmentId,\n  } = action.payload;\n\n  const dragStart = applyGridJointSnapSelector(rootState, { x, y });\n\n  if (modifierKeys.ctrlMetaKey) {\n    const startPos = startPositionForWireSegmentId(rootState, wireSegmentId);\n    const endPos = endPositionForWireSegmentId(rootState, wireSegmentId);\n    const lineVector = normalize(pointSubtract(endPos, startPos));\n    const v = pointSubtract(dragStart, startPos);\n    const segmentInsertLength = dotProduct(v, lineVector);\n\n    return {\n      dragMode: \"wire\",\n      dragStart,\n      dragStartEditorId: editorId,\n      dragModifierKeys: modifierKeys,\n      dragStartTarget: {\n        type: \"segment\",\n        segmentId: wireSegmentId,\n        segmentInsertLength,\n      },\n      dragEnd: null,\n      dragEndEditorId: null,\n    };\n  }\n\n  return {\n    dragMode: \"wire-segment-new-joint\",\n    dragStart,\n    dragStartEditorId: editorId,\n    dragModifierKeys: modifierKeys,\n    dragWireId: wireId,\n    dragWireSegmentId: wireSegmentId,\n    dragEnd: null,\n    dragEndEditorId: null,\n  };\n});\n","import { isCircuitEditorDragStartWireAction } from \"@/actions/circuit-editor-drag-start-wire\";\n\nimport { createCircuitEditorDragReducer } from \"../utils\";\n\nexport default createCircuitEditorDragReducer((state, action) => {\n  if (!isCircuitEditorDragStartWireAction(action)) {\n    return state;\n  }\n\n  const { x, y, target, editorId, modifierKeys } = action.payload;\n\n  return {\n    dragMode: \"wire\",\n    dragStartEditorId: editorId,\n    dragStart: { x, y },\n    dragStartTarget: target,\n    dragModifierKeys: modifierKeys,\n    dragEndEditorId: null,\n    dragEnd: null,\n  };\n});\n","import { concatReducers } from \"@/store/utils\";\n\nimport dragAbortReducer from \"./drag-abort\";\nimport dragContinueReducer from \"./drag-continue\";\nimport dragEndReducer from \"./drag-end\";\nimport dragStartElementReducer from \"./drag-start-element\";\nimport dragStartSelectReducer from \"./drag-start-select\";\nimport dragStartWireJointReducer from \"./drag-start-wire-joint\";\nimport dragStartWireSegmentReducer from \"./drag-start-wire-segment\";\nimport dragStartWireReducer from \"./drag-start-wire\";\nimport mouseLeaveReducer from \"./mouse-leave\";\n\nexport default concatReducers(\n  dragAbortReducer,\n  dragContinueReducer,\n  dragEndReducer,\n  dragStartElementReducer,\n  dragStartSelectReducer,\n  dragStartWireJointReducer,\n  dragStartWireSegmentReducer,\n  dragStartWireReducer,\n  mouseLeaveReducer\n);\n","import { isCircuitEditorMouseLeaveAction } from \"@/actions/circuit-editor-mouse-leave\";\n\nimport { createCircuitEditorDragReducer } from \"../utils\";\n\nexport default createCircuitEditorDragReducer((state, action) => {\n  if (!isCircuitEditorMouseLeaveAction(action)) {\n    return state;\n  }\n\n  if (state.dragMode == null) {\n    return state;\n  }\n\n  return {\n    ...state,\n    dragEnd: null,\n  };\n});\n","import { AppState } from \"@/store\";\n\nimport {\n  normalize,\n  Point,\n  pointAdd,\n  pointEquals,\n  pointSubtract,\n  snapPoint,\n  ZeroPoint,\n} from \"@/geometry\";\nimport { immutableEmptyArray } from \"@/arrays\";\n\nimport {\n  selectedElementIdsSelector,\n  selectedJointIdsSelector,\n} from \"@/services/selection/selectors/selection\";\nimport { segmentIdsForJointIdSelector } from \"@/services/circuit-graph/selectors/wires\";\nimport { ElementPin, WireSegment } from \"@/services/circuit-graph/types\";\nimport { elementPinPositionFromElementPinSelector } from \"@/services/circuit-layout/selectors/element-pin-positions\";\nimport {\n  wireJointPositionByJointIdSelector,\n  wireJointPositionFromJointIdSelector,\n} from \"@/services/circuit-graph/selectors/wire-positions\";\nimport { elementPositionsByElementIdSelector } from \"@/services/circuit-layout/selectors/element-positions\";\n\nimport { gridElementSnapSelector, gridJointSnapSelector } from \"./snap\";\n\nlet cachedDragMoveOffset: Point | null = null;\nexport const dragMoveOffsetSelector = (state: AppState) => {\n  const dragState = state.services.circuitEditorDrag;\n  if (dragState.dragMode !== \"move\") {\n    return null;\n  }\n\n  const selectedElementIds = selectedElementIdsSelector(state);\n\n  let gridSnap: number;\n  if (selectedElementIds.length > 0) {\n    gridSnap = gridElementSnapSelector(state);\n  } else {\n    gridSnap = gridJointSnapSelector(state);\n  }\n\n  const { dragStart, dragEnd, dragModifierKeys } = dragState;\n  if (!dragEnd) {\n    return null;\n  }\n\n  let offset = pointSubtract(dragEnd, dragStart);\n\n  if (dragModifierKeys.shiftKey) {\n    const lineVector = normalize(pointSubtract(dragEnd, dragStart));\n    if (Math.abs(lineVector.x) >= 0.5) {\n      offset = {\n        x: offset.x,\n        y: 0,\n      };\n    } else {\n      offset = {\n        x: 0,\n        y: offset.y,\n      };\n    }\n  }\n\n  if (!dragModifierKeys.ctrlMetaKey) {\n    offset = snapPoint(offset, gridSnap);\n  }\n\n  if (!cachedDragMoveOffset || !pointEquals(offset, cachedDragMoveOffset)) {\n    cachedDragMoveOffset = offset;\n  }\n\n  return cachedDragMoveOffset;\n};\n\nexport const dragMoveElementPositionsByIdSelector = (state: AppState) => {\n  const offset = dragMoveOffsetSelector(state);\n\n  if (!offset) {\n    return null;\n  }\n\n  const selectedElementIds = selectedElementIdsSelector(state);\n  const elementPositionsById = elementPositionsByElementIdSelector(state);\n\n  const dragMoveElementPositionsById: Record<string, Point> = {};\n  for (const elementId of selectedElementIds) {\n    dragMoveElementPositionsById[elementId] = pointAdd(\n      elementPositionsById[elementId],\n      offset\n    );\n  }\n  return dragMoveElementPositionsById;\n};\n\nexport const dragMoveJointPositionsByIdSelector = (state: AppState) => {\n  const offset = dragMoveOffsetSelector(state);\n\n  if (!offset) {\n    return null;\n  }\n\n  const selectedJointIds = selectedJointIdsSelector(state);\n  const JointPositionsById = wireJointPositionByJointIdSelector(state);\n\n  const dragMoveJointPositionsById: Record<string, Point> = {};\n  for (const jointId of selectedJointIds) {\n    dragMoveJointPositionsById[jointId] = pointAdd(\n      JointPositionsById[jointId],\n      offset\n    );\n  }\n  return dragMoveJointPositionsById;\n};\n\nexport const dragMoveGhostLinesSelector = (\n  state: AppState\n): [start: Point, end: Point][] => {\n  const dragService = state.services.circuitEditorDrag;\n  if (dragService.dragMode !== \"move\") {\n    return immutableEmptyArray<[Point, Point]>();\n  }\n\n  const selectedJointIds = selectedJointIdsSelector(state);\n  const selectedElementIds = selectedElementIdsSelector(state);\n  const offset = dragMoveOffsetSelector(state);\n  if (!offset) {\n    return immutableEmptyArray<[Point, Point]>();\n  }\n\n  function getPinPosition(pin: ElementPin): Point {\n    let pos = elementPinPositionFromElementPinSelector(\n      state,\n      pin.elementId,\n      pin.pinId\n    );\n    if (selectedElementIds.indexOf(pin.elementId) !== -1) {\n      pos = pointAdd(pos, offset!);\n    }\n    return pos;\n  }\n\n  function getJointPosition(jointId: string): Point {\n    let pos = wireJointPositionFromJointIdSelector(state, jointId);\n    if (!pos) {\n      return ZeroPoint;\n    }\n    if (selectedJointIds.indexOf(jointId) !== -1) {\n      pos = pointAdd(pos, offset!);\n    }\n    return pos;\n  }\n\n  function getSegmentGhostLine(segment: WireSegment): [Point, Point] | null {\n    switch (segment.type) {\n      case \"output\":\n        return [\n          getPinPosition(segment.outputPin),\n          getJointPosition(segment.jointId),\n        ];\n      case \"input\":\n        return [\n          getJointPosition(segment.jointId),\n          getPinPosition(segment.inputPin),\n        ];\n      case \"bridge\":\n        return [\n          getJointPosition(segment.jointAId),\n          getJointPosition(segment.jointBId),\n        ];\n    }\n\n    return null;\n  }\n\n  const ghostLines: [Point, Point][] = [];\n  const visitedSegments = new Set<string>();\n  for (const jointId of selectedJointIds) {\n    const segmentIds = segmentIdsForJointIdSelector(state, jointId);\n    for (const segmentId of segmentIds) {\n      if (visitedSegments.has(segmentId)) {\n        continue;\n      }\n      visitedSegments.add(segmentId);\n      const ghostLine = getSegmentGhostLine(\n        state.services.circuitGraph.wireSegmentsById[segmentId]\n      );\n      if (!ghostLine) {\n        continue;\n      }\n      ghostLines.push(ghostLine);\n    }\n  }\n\n  return ghostLines;\n};\n","import { createSelector } from \"reselect\";\n\nimport { normalizeRectangle } from \"@/geometry\";\n\nimport { createCircuitEditorDragSelector } from \"../utils\";\n\nimport { dragEndSelector, dragModeSelector, dragStartSelector } from \"./drag\";\n\nexport const selectionRectSelector = createCircuitEditorDragSelector(\n  createSelector(\n    dragModeSelector.local,\n    dragStartSelector.local,\n    dragEndSelector.local,\n    (dragMode, dragStart, dragEnd) =>\n      dragMode === \"select\" && dragStart && dragEnd\n        ? normalizeRectangle(dragStart, dragEnd)\n        : null\n  )\n);\n","import { createSelector } from \"reselect\";\n\nimport { AppState } from \"@/store\";\n\nimport {\n  linePointIntercept,\n  magnitude,\n  normalize,\n  Point,\n  pointAdd,\n  pointEquals,\n  pointSubtract,\n  scale,\n  snapValue,\n  ZeroPoint,\n} from \"@/geometry\";\nimport { immutableEmptyArray } from \"@/arrays\";\n\nimport {\n  elementPinPositionFromElementPinSelector,\n  elementPinPositionsByPinIdByElementIdSelector,\n} from \"@/services/circuit-layout/selectors/element-pin-positions\";\nimport { circuitIdForEditorIdSelector } from \"@/services/circuit-editors/selectors/editor\";\nimport { elementIdsFromCircuitIdSelector } from \"@/services/circuit-graph/selectors/elements\";\nimport {\n  ElementPin,\n  JointWireConnectTarget,\n  SegmentWireConnectTarget,\n  WireConnectTarget,\n} from \"@/services/circuit-graph/types\";\nimport {\n  endPositionForWireSegmentId,\n  startPositionForWireSegmentId,\n  wireJointPositionFromJointIdSelector,\n} from \"@/services/circuit-graph/selectors/wire-positions\";\nimport {\n  wireIdsFromCircuitIdSelector,\n  wireJointIdsFromWireIdSelector,\n  wireSegmentIdsFromWireIdSelector,\n} from \"@/services/circuit-graph/selectors/wires\";\n\nimport { applyGridJointSnapSelector, gridJointSnapSelector } from \"./snap\";\n\nfunction elementPinFromPoint(\n  state: AppState,\n  circuitId: string,\n  point: Point\n): ElementPin | null {\n  const pinPositionsByPinIdByElementId = elementPinPositionsByPinIdByElementIdSelector(\n    state\n  );\n  const elementIds = elementIdsFromCircuitIdSelector(state, circuitId);\n  if (!elementIds) {\n    return null;\n  }\n\n  for (const elementId of elementIds) {\n    const pinPositionsByPinId =\n      pinPositionsByPinIdByElementId[elementId] ?? ZeroPoint;\n    const pinIds = Object.keys(pinPositionsByPinId);\n    for (const pinId of pinIds) {\n      const pinPosition = pinPositionsByPinId[pinId];\n      const offset = pointSubtract(point, pinPosition);\n      const length = magnitude(offset);\n      if (length > 6) {\n        continue;\n      }\n\n      return { elementId, pinId };\n    }\n  }\n\n  return null;\n}\nfunction wireJointFromPoint(\n  state: AppState,\n  circuitId: string,\n  p: Point\n): JointWireConnectTarget | null {\n  const wireIds = wireIdsFromCircuitIdSelector(state, circuitId);\n  for (const wireId of wireIds) {\n    const jointIds = wireJointIdsFromWireIdSelector(state, wireId);\n    for (const jointId of jointIds) {\n      const jointPos = wireJointPositionFromJointIdSelector(state, jointId);\n      if (magnitude(pointSubtract(p, jointPos)) > 4) {\n        continue;\n      }\n\n      return {\n        type: \"joint\",\n        jointId,\n      };\n    }\n  }\n\n  return null;\n}\n\nfunction wireSegmentFromPoint(\n  state: AppState,\n  circuitId: string,\n  p: Point,\n  snapToGrid: boolean\n): SegmentWireConnectTarget | null {\n  const snap = gridJointSnapSelector(state);\n  const wireIds = wireIdsFromCircuitIdSelector(state, circuitId);\n  for (const wireId of wireIds) {\n    const segmentIds = wireSegmentIdsFromWireIdSelector(state, wireId);\n    for (const segmentId of segmentIds) {\n      const startPos = startPositionForWireSegmentId(state, segmentId);\n      const endPos = endPositionForWireSegmentId(state, segmentId);\n\n      const intercept = linePointIntercept(startPos, endPos, p, {\n        axialGridSnap: snapToGrid ? snap : undefined,\n      });\n      if (!intercept) {\n        continue;\n      }\n\n      return {\n        type: \"segment\",\n        segmentId,\n        segmentInsertLength: intercept.interceptLineLengthDistance,\n      };\n    }\n  }\n\n  return null;\n}\n\nfunction getDragTargetPoint(\n  state: AppState,\n  target: WireConnectTarget\n): Point | null {\n  switch (target.type) {\n    case \"floating\":\n      return target.point;\n    case \"pin\":\n      return elementPinPositionFromElementPinSelector(\n        state,\n        target.pin.elementId,\n        target.pin.pinId\n      );\n    case \"segment\": {\n      const { segmentId, segmentInsertLength } = target;\n      const startPos = startPositionForWireSegmentId(state, segmentId);\n      const endPos = endPositionForWireSegmentId(state, segmentId);\n      const lineVector = normalize(pointSubtract(endPos, startPos));\n      const fracPos = pointAdd(\n        startPos,\n        scale(lineVector, segmentInsertLength)\n      );\n      return fracPos;\n    }\n    case \"joint\":\n      return wireJointPositionFromJointIdSelector(state, target.jointId);\n  }\n\n  return null;\n}\n\n/**\n * Gets the drag target at the given point.\n *\n * WARN: Not react safe.\n */\nexport const dragWireEndTargetByPointSelector = (\n  state: AppState,\n  p: Point\n): WireConnectTarget | null => {\n  const dragService = state.services.circuitEditorDrag;\n  if (dragService.dragMode !== \"wire\") {\n    return null;\n  }\n\n  const { dragStartEditorId, dragModifierKeys } = dragService;\n  const snapToGrid = !dragModifierKeys.ctrlMetaKey;\n  const circuitId = circuitIdForEditorIdSelector(state, dragStartEditorId);\n  if (!circuitId) {\n    return null;\n  }\n\n  const targetPin = elementPinFromPoint(state, circuitId, p);\n  if (targetPin) {\n    return {\n      type: \"pin\",\n      pin: targetPin,\n    };\n  }\n\n  const jointTarget = wireJointFromPoint(state, circuitId, p);\n  if (jointTarget) {\n    return jointTarget;\n  }\n\n  const segmentTarget = wireSegmentFromPoint(state, circuitId, p, snapToGrid);\n  if (segmentTarget) {\n    return segmentTarget;\n  }\n\n  const snap = gridJointSnapSelector(state);\n  if (!dragModifierKeys.shiftKey) {\n    // Restrict to ordinals\n    const startPos = dragWireSegmentStartPositionSelector(state);\n    if (startPos) {\n      const lineVector = normalize(pointSubtract(p, startPos));\n      if (Math.abs(lineVector.x) >= 0.5) {\n        p = {\n          x: snapToGrid ? snapValue(p.x, snap) : p.x,\n          y: startPos.y,\n        };\n      } else {\n        p = {\n          x: startPos.x,\n          y: snapToGrid ? snapValue(p.y, snap) : p.y,\n        };\n      }\n    }\n  } else if (snapToGrid) {\n    p = applyGridJointSnapSelector(state, p);\n  }\n\n  return {\n    type: \"floating\",\n    point: p,\n  };\n};\n\n// This is called many times in a single render pass, so we cache it by root state.\n// We need the root state, as lots of data is involved in finding the target point.  This is mainly\n// due to needing to calculate pin positions, which requires element definitions.\n// This could be more aggressively cached, but it is only heavy to calculate when dragging a wire,\n// and it invalidates every mouse move.\nexport const dragWireEndTargetSelector = createSelector(\n  (state: AppState) => state,\n  (state: AppState): WireConnectTarget | null => {\n    const dragService = state.services.circuitEditorDrag;\n    if (dragService.dragMode !== \"wire\") {\n      return null;\n    }\n\n    const { dragEnd } = dragService;\n    if (!dragEnd) {\n      return null;\n    }\n\n    return dragWireEndTargetByPointSelector(state, dragEnd);\n  }\n);\n\nlet dragWireSegmentStartPositionCache: Point = ZeroPoint;\nexport const dragWireSegmentStartPositionSelector = (state: AppState) => {\n  const dragService = state.services.circuitEditorDrag;\n  if (dragService.dragMode !== \"wire\") {\n    return null;\n  }\n\n  const pt = getDragTargetPoint(state, dragService.dragStartTarget);\n  if (!pt) {\n    return null;\n  }\n\n  if (!pointEquals(pt, dragWireSegmentStartPositionCache)) {\n    dragWireSegmentStartPositionCache = pt;\n  }\n\n  return dragWireSegmentStartPositionCache;\n};\n\nlet dragWireSegmentEndPositionCache: Point = ZeroPoint;\nexport const dragWireSegmentEndPositionSelector = (state: AppState) => {\n  const endTarget = dragWireEndTargetSelector(state);\n  if (!endTarget) {\n    return null;\n  }\n\n  const pt = getDragTargetPoint(state, endTarget);\n  if (!pt) {\n    return null;\n  }\n\n  if (!pointEquals(pt, dragWireSegmentEndPositionCache)) {\n    dragWireSegmentEndPositionCache = pt;\n  }\n\n  return dragWireSegmentEndPositionCache;\n};\n\nexport const isPinDragWireTarget = (\n  state: AppState,\n  elementId: string,\n  pinId: string\n) => {\n  const endTarget = dragWireEndTargetSelector(state);\n  if (!endTarget) {\n    return false;\n  }\n\n  return (\n    endTarget.type === \"pin\" &&\n    endTarget.pin.elementId === elementId &&\n    endTarget.pin.pinId === pinId\n  );\n};\n\nexport const isJointDragWireTarget = (state: AppState, jointId: string) => {\n  const endTarget = dragWireEndTargetSelector(state);\n  if (!endTarget) {\n    return false;\n  }\n\n  return endTarget.type === \"joint\" && endTarget.jointId === jointId;\n};\n\nexport const segmentDragWireTargetOffset = (\n  state: AppState,\n  segmentId: string\n): number | null => {\n  const endTarget = dragWireEndTargetSelector(state);\n  if (!endTarget) {\n    return null;\n  }\n\n  if (endTarget.type !== \"segment\" || endTarget.segmentId !== segmentId) {\n    return null;\n  }\n\n  return endTarget.segmentInsertLength;\n};\n\nexport const dragWireJointPositionSelector = (state: AppState) => {\n  const dragService = state.services.circuitEditorDrag;\n  if (dragService.dragMode !== \"wire-segment-new-joint\") {\n    return null;\n  }\n\n  let dragEnd = dragService.dragEnd;\n  if (!dragEnd) {\n    return null;\n  }\n\n  if (!dragService.dragModifierKeys.ctrlMetaKey) {\n    dragEnd = applyGridJointSnapSelector(state, dragEnd);\n  }\n\n  return dragEnd;\n};\n\nexport const dragJointGhostLinesSelector = (\n  state: AppState\n): [start: Point, end: Point][] => {\n  const dragService = state.services.circuitEditorDrag;\n  if (dragService.dragMode !== \"wire-segment-new-joint\") {\n    return immutableEmptyArray<[Point, Point]>();\n  }\n\n  const { dragWireSegmentId } = dragService;\n  const jointPosition = dragWireJointPositionSelector(state);\n  if (!dragWireSegmentId || !jointPosition) {\n    return immutableEmptyArray<[Point, Point]>();\n  }\n\n  const startPos = startPositionForWireSegmentId(state, dragWireSegmentId);\n  const endPos = endPositionForWireSegmentId(state, dragWireSegmentId);\n  if (!startPos || !endPos) {\n    return immutableEmptyArray<[Point, Point]>();\n  }\n\n  return [\n    [startPos, jointPosition],\n    [jointPosition, endPos],\n  ];\n};\n","import { createCircuitEditorDragSelector } from \"../utils\";\nimport { CircuitEditorDragServiceState } from \"../state\";\n\nexport const dragModeSelector = createCircuitEditorDragSelector(\n  (s) => s.dragMode\n);\n\nexport const isEditorDraggingSelector = createCircuitEditorDragSelector(\n  (s: CircuitEditorDragServiceState, editorId: string) => {\n    if (s.dragMode == null) {\n      return false;\n    }\n\n    if (s.dragStartEditorId !== s.dragEndEditorId) {\n      return false;\n    }\n\n    return s.dragStartEditorId === editorId;\n  }\n);\n\nexport const isDraggingSelector = createCircuitEditorDragSelector(\n  (s) => s.dragMode != null\n);\n\nexport const dragStartSelector = createCircuitEditorDragSelector((s) => {\n  if (!s.dragMode) {\n    return null;\n  }\n\n  return s.dragStart;\n});\n\nexport const dragEndSelector = createCircuitEditorDragSelector((s) => {\n  if (!s.dragMode) {\n    return null;\n  }\n\n  return s.dragEnd;\n});\n","import { Point, snapPoint } from \"@/geometry\";\nimport { AppState } from \"@/store\";\n\nimport { createCircuitEditorDragSelector } from \"../utils\";\n\nexport const gridElementSnapSelector = createCircuitEditorDragSelector(\n  () => 50\n);\n\nexport const gridJointSnapSelector = createCircuitEditorDragSelector(() => 5);\n\nexport const applyGridElementSnapSelector = (s: AppState, p: Point) => {\n  const snap = gridElementSnapSelector(s);\n  return snapPoint(p, snap);\n};\n\nexport const applyGridJointSnapSelector = (s: AppState, p: Point) => {\n  const snap = gridJointSnapSelector(s);\n  return snapPoint(p, snap);\n};\n","import { Point } from \"@/geometry\";\nimport { ModifierKeys } from \"@/modifier-keys\";\nimport { WireConnectTarget } from \"../circuit-graph/types\";\n\nexport interface CircuitEditorDragNullState {\n  dragMode: null;\n}\n\nexport interface CircuitEditorDragActiveState {\n  /**\n   * The editor this drag operation started in.\n   */\n  dragStartEditorId: string;\n\n  /**\n   * The start of the drag operation.\n   */\n  dragStart: Point;\n\n  /**\n   * The editor the drag operation is currently in.\n   */\n  dragEndEditorId: string | null;\n\n  /**\n   * The current end point for the drag operation.  This does not indicate the final\n   * drag position, but the current most up to date position.\n   */\n  dragEnd: Point | null;\n\n  /**\n   * The modifier keys in play for the drag operation.\n   */\n  dragModifierKeys: ModifierKeys;\n}\n\nexport interface CircuitEditorDragMoveState\n  extends CircuitEditorDragActiveState {\n  dragMode: \"move\";\n}\n\nexport interface CircuitEditorDragSelectState\n  extends CircuitEditorDragActiveState {\n  dragMode: \"select\";\n}\n\nexport interface CircuitEditorDragWireState\n  extends CircuitEditorDragActiveState {\n  dragMode: \"wire\";\n\n  /**\n   * The wire connection target this drag is starting from.\n   */\n  dragStartTarget: WireConnectTarget;\n}\n\nexport interface CircuitEditorDragWireSegmentNewJointState\n  extends CircuitEditorDragActiveState {\n  dragMode: \"wire-segment-new-joint\";\n\n  /**\n   * The id of the wire whose segment is being dragged.\n   */\n  dragWireId: string;\n\n  /**\n   * The id of the wire segment being dragged.\n   */\n  dragWireSegmentId: string;\n}\n\nexport type CircuitEditorDragServiceState =\n  | CircuitEditorDragNullState\n  | CircuitEditorDragMoveState\n  | CircuitEditorDragSelectState\n  | CircuitEditorDragWireState\n  | CircuitEditorDragWireSegmentNewJointState;\n\nconst _defaultState: CircuitEditorDragServiceState = {\n  dragMode: null,\n};\n\nexport const defaultCircuitEditorDragServiceState = Object.freeze(\n  _defaultState\n);\n","import {\n  createServiceReducerCreator,\n  createServiceSelectorCreator,\n} from \"../service-state-utils\";\n\nexport const createCircuitEditorDragReducer = createServiceReducerCreator(\n  \"circuitEditorDrag\"\n);\nexport const createCircuitEditorDragSelector = createServiceSelectorCreator(\n  \"circuitEditorDrag\"\n);\n","export const DEFAULT_CIRCUIT_EDITOR_ID = \"root-editor\";\n","import pick from \"lodash/pick\";\n\nimport { isDeleteCircuitAction } from \"@/actions/circuit-delete\";\n\nimport { createCircuitEditorsReducer } from \"../utils\";\n\nexport default createCircuitEditorsReducer((state, action) => {\n  if (!isDeleteCircuitAction(action)) {\n    return state;\n  }\n\n  const { circuitId } = action.payload;\n\n  const keepIds = Object.keys(state.circucitEditorsById).filter(\n    (id) => state.circucitEditorsById[id].circuitId !== circuitId\n  );\n\n  let activeEditorId = state.activeEditorId;\n  if (!activeEditorId || keepIds.indexOf(activeEditorId) === -1) {\n    activeEditorId = null;\n  }\n\n  return {\n    ...state,\n    circucitEditorsById: pick(state.circucitEditorsById, keepIds),\n    activeEditorId,\n  };\n});\n","import { isCircuitEditorReceiveFocusAction } from \"@/actions/circuit-editor-receive-focus\";\n\nimport { createCircuitEditorsReducer } from \"../utils\";\n\nexport default createCircuitEditorsReducer((state, action) => {\n  if (!isCircuitEditorReceiveFocusAction(action)) {\n    return state;\n  }\n\n  const { editorId } = action.payload;\n\n  if (Object.keys(state.circucitEditorsById).indexOf(editorId) === -1) {\n    return state;\n  }\n\n  return {\n    ...state,\n    activeEditorId: editorId,\n  };\n});\n","import { concatReducers } from \"@/store/utils\";\n\nimport circuitDeleteReducer from \"./circuit-delete\";\nimport editorFocusReducer from \"./editor-focus\";\nimport projectNewReducer from \"./project-new\";\nimport viewCircuitReducer from \"./view-circuit\";\n\nexport default concatReducers(\n  circuitDeleteReducer,\n  editorFocusReducer,\n  projectNewReducer,\n  viewCircuitReducer\n);\n","import { isNewProjectAction } from \"@/actions/project-new\";\n\nimport { createCircuitEditorsReducer } from \"../utils\";\nimport { defaultCircuitEditorServiceState } from \"../state\";\n\nexport default createCircuitEditorsReducer((state, action) => {\n  if (!isNewProjectAction(action)) {\n    return state;\n  }\n\n  return defaultCircuitEditorServiceState;\n});\n","import { circuitIdsSelector } from \"@/services/circuit-properties/selectors/circuits\";\n\nimport { isViewCircuitAction } from \"@/actions/view-circuit\";\n\nimport { createCircuitEditorsReducer, findActiveEditorId } from \"../utils\";\n\nexport default createCircuitEditorsReducer((state, action, appState) => {\n  if (!isViewCircuitAction(action)) {\n    return state;\n  }\n\n  const { circuitId, elementIdPath, newWindowId } = action.payload;\n\n  if (circuitIdsSelector(appState).indexOf(circuitId) === -1) {\n    return state;\n  }\n\n  let targetWindowId = newWindowId;\n  if (!targetWindowId) {\n    targetWindowId = findActiveEditorId(state);\n  }\n\n  if (!targetWindowId) {\n    return state;\n  }\n\n  return {\n    ...state,\n    circucitEditorsById: {\n      ...state.circucitEditorsById,\n      [targetWindowId]: {\n        circuitId,\n        elementIdPath: elementIdPath ?? [],\n      },\n    },\n    activeEditorId: targetWindowId,\n  };\n});\n","import { AppState } from \"@/store\";\n\nimport { CircuitEditorsServiceState } from \"../state\";\nimport { createCircuitEditorsSelector } from \"../utils\";\n\nexport const circuitEditorStateFromIdSelector = createCircuitEditorsSelector(\n  (s: CircuitEditorsServiceState, editorId: string) =>\n    s.circucitEditorsById[editorId]\n);\n\nexport const circuitIdForEditorIdSelector = (\n  state: AppState,\n  editorId: string\n) => {\n  const editorState = circuitEditorStateFromIdSelector(state, editorId);\n  if (!editorState) {\n    return null;\n  }\n\n  return editorState.circuitId;\n};\n\nexport const activeCircuitEditorIdSelector = createCircuitEditorsSelector(\n  (s) => {\n    if (s.activeEditorId) {\n      return s.activeEditorId;\n    }\n\n    const keys = Object.keys(s.circucitEditorsById);\n    if (keys.length > 0) {\n      return keys[0];\n    }\n\n    return null;\n  }\n);\n\nexport const activeCircuitEditorStateSelector = createCircuitEditorsSelector(\n  (s) => (s.activeEditorId ? s.circucitEditorsById[s.activeEditorId] : null)\n);\n\nexport const activeCircuitIdSelector = createCircuitEditorsSelector((s) => {\n  if (!s.activeEditorId) {\n    return null;\n  }\n  const editorState = s.circucitEditorsById[s.activeEditorId];\n  if (!editorState) {\n    return null;\n  }\n\n  return editorState.circuitId;\n});\n\nexport const editorIdsFromCircuitIdSelector = createCircuitEditorsSelector(\n  (s: CircuitEditorsServiceState, circuitId: string) => {\n    return Object.keys(s.circucitEditorsById).filter(\n      (id) => s.circucitEditorsById[id].circuitId === circuitId\n    );\n  }\n);\n","import { ROOT_CIRCUIT_ID } from \"../circuits/constants\";\n\nimport { DEFAULT_CIRCUIT_EDITOR_ID } from \"./constants\";\n\nexport interface CircuitEditorState {\n  circuitId: string;\n  elementIdPath: string[];\n}\n\nexport interface CircuitEditorsServiceState {\n  circucitEditorsById: Record<string, CircuitEditorState>;\n  activeEditorId: string | null;\n}\n\nconst _defaultState: CircuitEditorsServiceState = {\n  circucitEditorsById: {\n    [DEFAULT_CIRCUIT_EDITOR_ID]: {\n      circuitId: ROOT_CIRCUIT_ID,\n      elementIdPath: [],\n    },\n  },\n  activeEditorId: null,\n};\n\nexport const defaultCircuitEditorServiceState = Object.freeze(_defaultState);\n","import first from \"lodash/first\";\n\nimport {\n  createServiceReducerCreator,\n  createServiceSelectorCreator,\n} from \"../service-state-utils\";\nimport { CircuitEditorsServiceState } from \"./state\";\n\nexport const createCircuitEditorsReducer = createServiceReducerCreator(\n  \"circuitEditors\"\n);\nexport const createCircuitEditorsSelector = createServiceSelectorCreator(\n  \"circuitEditors\"\n);\n\nexport function findActiveEditorId(\n  state: CircuitEditorsServiceState\n): string | null {\n  if (state.activeEditorId) {\n    return state.activeEditorId;\n  }\n  return first(Object.keys(state.circucitEditorsById)) ?? null;\n}\n","import { isAddCircuitAction } from \"@/actions/circuit-add\";\n\nimport { createCircuitGraphReducer } from \"../utils\";\n\nexport default createCircuitGraphReducer((state, action) => {\n  if (!isAddCircuitAction(action)) {\n    return state;\n  }\n\n  const { circuitId } = action.payload;\n  return {\n    ...state,\n    elementIdsByCircuitId: {\n      ...state.elementIdsByCircuitId,\n      [circuitId]: [],\n    },\n    wireIdsByCircuitId: {\n      ...state.wireIdsByCircuitId,\n      [circuitId]: [],\n    },\n  };\n});\n","import pick from \"lodash/pick\";\nimport { isDeleteCircuitAction } from \"@/actions/circuit-delete\";\n\nimport { circuitIdToElementType } from \"@/elements/definitions/integrated-circuits/utils\";\n\nimport { createCircuitGraphReducer } from \"../utils\";\n\nimport elementDelete from \"./operations/element-delete\";\n\nexport default createCircuitGraphReducer((state, action, rootState) => {\n  if (!isDeleteCircuitAction(action)) {\n    return state;\n  }\n\n  const { circuitId } = action.payload;\n  const remainingCircuitIds = Object.keys(state.elementIdsByCircuitId).filter(\n    (x) => x !== circuitId\n  );\n\n  const elementIdsForCircuit = state.elementIdsByCircuitId[circuitId] ?? [];\n\n  const circuitElementType = circuitIdToElementType(circuitId);\n  const elementIdsOfCircuit = Object.keys(state.elementsById).filter(\n    (id) => state.elementsById[id].elementType === circuitElementType\n  );\n\n  const removedElementIds = [...elementIdsForCircuit, ...elementIdsOfCircuit];\n\n  state = elementDelete(state, removedElementIds, rootState);\n\n  return {\n    ...state,\n    elementIdsByCircuitId: pick(\n      state.elementIdsByCircuitId,\n      remainingCircuitIds\n    ),\n    wireIdsByCircuitId: pick(state.wireIdsByCircuitId, remainingCircuitIds),\n  };\n});\n","import { AnyAction } from \"redux\";\n\nimport { reducerPriority, PRIORITY_PRE } from \"@/store/priorities\";\n\nimport { isAddElementAction } from \"@/actions/element-add\";\n\nimport { createCircuitGraphReducer } from \"../utils\";\n\nexport default reducerPriority(\n  PRIORITY_PRE,\n  createCircuitGraphReducer((state, action: AnyAction) => {\n    if (!isAddElementAction(action)) {\n      return state;\n    }\n\n    const { elementId, elementType, elementName, circuitId } = action.payload;\n    return {\n      ...state,\n      elementsById: {\n        ...state.elementsById,\n        [elementId]: {\n          elementType,\n          elementName: elementName ?? null,\n        },\n      },\n      elementIdsByCircuitId: {\n        ...state.elementIdsByCircuitId,\n        [circuitId]: [...state.elementIdsByCircuitId[circuitId], elementId],\n      },\n    };\n  })\n);\n","import { isDeleteElementAction } from \"@/actions/element-delete\";\n\nimport { createCircuitGraphReducer } from \"../utils\";\n\nimport elementDelete from \"./operations/element-delete\";\n\nexport default createCircuitGraphReducer((state, action, rootState) => {\n  if (!isDeleteElementAction(action)) {\n    return state;\n  }\n\n  const { elementIds } = action.payload;\n\n  return elementDelete(state, elementIds, rootState);\n});\n","import { AnyAction } from \"redux\";\n\nimport { isRenameElementAction } from \"@/actions/element-rename\";\n\nimport { createCircuitGraphReducer } from \"../utils\";\n\nexport default createCircuitGraphReducer((state, action: AnyAction) => {\n  if (!isRenameElementAction(action)) {\n    return state;\n  }\n\n  const { elementId } = action.payload;\n  if (!state.elementsById[elementId]) {\n    return state;\n  }\n\n  let elementName: string | null = action.payload.elementName;\n  if (!elementName && elementName.trim() === \"\") {\n    elementName = null;\n  }\n\n  return {\n    ...state,\n    elementsById: {\n      ...state.elementsById,\n      [elementId]: {\n        ...state.elementsById[elementId],\n        elementName: elementName,\n      },\n    },\n  };\n});\n","export class WireOperationError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.message = message;\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n}\n","import { concatReducers } from \"@/store/utils\";\n\nimport circuitAddReducer from \"./circuit-add\";\nimport circuitDeleteReducer from \"./circuit-delete\";\nimport elementAddReducer from \"./element-add\";\nimport elementDeleteReducer from \"./element-delete\";\nimport elementRenameReducer from \"./element-rename\";\nimport projectNewReducer from \"./project-new\";\nimport wireConnectReducer from \"./wire-connect\";\nimport wireHydrateReducer from \"./wire-hydrate\";\nimport wireInsertJointReducer from \"./wire-insert-joint\";\nimport wireJointDeleteReducer from \"./wire-joint-delete\";\nimport wireJointMoveReducer from \"./wire-joint-move\";\nimport wireSegmentDeleteReducer from \"./wire-segment-delete\";\nimport wireSegmentSetLine from \"./wire-segment-set-line\";\n\nconst graphReducer = concatReducers(\n  circuitAddReducer,\n  circuitDeleteReducer,\n  elementAddReducer,\n  elementDeleteReducer,\n  elementRenameReducer,\n  projectNewReducer,\n  wireConnectReducer,\n  wireHydrateReducer,\n  wireInsertJointReducer,\n  wireJointDeleteReducer,\n  wireJointMoveReducer,\n  wireSegmentDeleteReducer,\n  wireSegmentSetLine\n);\n\nexport default graphReducer;\n","import pick from \"lodash/pick\";\nimport difference from \"lodash/difference\";\nimport includes from \"lodash/includes\";\nimport find from \"lodash/find\";\nimport flatMap from \"lodash/flatMap\";\nimport mapValues from \"lodash/mapValues\";\n\nimport { AppState } from \"@/store\";\n\nimport { CircuitGraphServiceState } from \"../../state\";\nimport { elementPinEquals, WireSegment } from \"../../types\";\n\nimport { elementPinsFromPinElementSelector } from \"../../selectors/pins\";\n\nimport wireSegmentDelete from \"./wire-segment-delete\";\n\nexport default function elementDelete(\n  state: CircuitGraphServiceState,\n  removedElementIds: string[],\n  rootState: AppState\n): CircuitGraphServiceState {\n  const remainingElementIds = difference(\n    Object.keys(state.elementsById),\n    removedElementIds\n  );\n\n  const elementIdsByCircuitId = mapValues(\n    state.elementIdsByCircuitId,\n    (circuitElementIds) => difference(circuitElementIds, removedElementIds)\n  );\n\n  state = {\n    ...state,\n    elementsById: pick(state.elementsById, remainingElementIds),\n    elementIdsByCircuitId,\n  };\n\n  // Remove wires targeting these elements.\n  const removedIcPins = flatMap(removedElementIds, (elementId) =>\n    elementPinsFromPinElementSelector(rootState, elementId)\n  );\n\n  function isSegmentForRemovedElement(segment: WireSegment) {\n    switch (segment.type) {\n      case \"input-output\":\n        return (\n          includes(removedElementIds, segment.inputPin.elementId) ||\n          includes(removedElementIds, segment.outputPin.elementId)\n        );\n      case \"input\":\n        return includes(removedElementIds, segment.inputPin.elementId);\n      case \"output\":\n        return includes(removedElementIds, segment.outputPin.elementId);\n    }\n    return false;\n  }\n\n  function isSegmentForRemovedPin(segment: WireSegment) {\n    switch (segment.type) {\n      case \"input-output\":\n        return Boolean(\n          find(removedIcPins, (removedPin) =>\n            elementPinEquals(removedPin, segment.inputPin)\n          ) ||\n            find(removedIcPins, (removedPin) =>\n              elementPinEquals(removedPin, segment.outputPin)\n            )\n        );\n      case \"input\":\n        return Boolean(\n          find(removedIcPins, (removedPin) =>\n            elementPinEquals(removedPin, segment.inputPin)\n          )\n        );\n      case \"output\":\n        return Boolean(\n          find(removedIcPins, (removedPin) =>\n            elementPinEquals(removedPin, segment.outputPin)\n          )\n        );\n    }\n    return false;\n  }\n\n  const removedSegmentIds = Object.keys(state.wireSegmentsById).filter(\n    (segmentId) => {\n      const segment = state.wireSegmentsById[segmentId];\n      return (\n        isSegmentForRemovedElement(segment) || isSegmentForRemovedPin(segment)\n      );\n    }\n  );\n\n  state = removedSegmentIds.reduce((state, segmentId) => {\n    return wireSegmentDelete(state, segmentId);\n  }, state);\n\n  return state;\n}\n","import { CircuitGraphServiceState } from \"../../state\";\nimport { getSegmentIdsFromJoint } from \"../../utils\";\n\nimport { wireIdFromWireJointIdSelector } from \"../../selectors/wires\";\n\nimport { WireOperationError } from \"../errors/WireOperationError\";\n\nimport { wireSegmentMerge } from \"../primitives/wire-segment-merge\";\n\nimport wireSegmentDelete from \"./wire-segment-delete\";\n\nexport function wireJointMergeOrDelete(\n  state: CircuitGraphServiceState,\n  jointId: string\n): CircuitGraphServiceState {\n  const wireId = wireIdFromWireJointIdSelector.local(state, jointId);\n  if (!wireId) {\n    throw new WireOperationError(\"Wire for joint not found\");\n  }\n\n  const jointedSegmentIds = getSegmentIdsFromJoint(state, wireId, jointId);\n\n  if (jointedSegmentIds.length === 2) {\n    try {\n      return wireSegmentMerge(\n        state,\n        jointedSegmentIds[0],\n        jointedSegmentIds[1],\n        jointId\n      );\n    } catch (e) {\n      if (e instanceof WireOperationError === false) {\n        throw e;\n      }\n    }\n  }\n\n  state = jointedSegmentIds.reduce(\n    (state, segmentId) => wireSegmentDelete(state, segmentId),\n    state\n  );\n\n  return state;\n}\n","import { CircuitGraphServiceState } from \"../../state\";\n\nimport { wireIdFromWireSegmentIdSelector } from \"../../selectors/wires\";\n\nimport { wireRemove } from \"../primitives/wire-remove\";\nimport { wireSplit } from \"../primitives/wire-split\";\nimport { wireSegmentRemove } from \"../primitives/wire-segment-remove\";\n\nexport default function wireSegmentDelete(\n  state: CircuitGraphServiceState,\n  wireSegmentId: string\n): CircuitGraphServiceState {\n  const wireId = wireIdFromWireSegmentIdSelector.local(state, wireSegmentId);\n  if (!wireId) {\n    return state;\n  }\n\n  const wire = state.wiresByWireId[wireId];\n  if (wire.wireSegmentIds.indexOf(wireSegmentId) === -1) {\n    return state;\n  }\n\n  const removedSegment = state.wireSegmentsById[wireSegmentId];\n  if (!removedSegment) {\n    return state;\n  }\n\n  if (\n    removedSegment.type === \"input-output\" ||\n    wire.wireSegmentIds.length === 1\n  ) {\n    // Removing this segment will remove the entire wire.\n    return wireRemove(state, wireId);\n  }\n\n  if (removedSegment.type === \"bridge\") {\n    // Remove the bridge.\n    // Make sure to remove the orpahned joints, we will detect their\n    // remaining presense as an indicator if the network was split.\n    state = wireSegmentRemove(state, wireSegmentId, {\n      removeOrphanJoints: true,\n    });\n\n    // Check if we cut the wire into two networks.\n    // We can tell because removeSegment will delete orphaned joints, and\n    // if both joints werent removed then other parts of the wire network still exist\n    // at both ends.\n    // We need to re-obtain the wire, as removeSegment made a new instance for it with new data.\n    const wire = state.wiresByWireId[wireId];\n    const { jointAId, jointBId } = removedSegment;\n    if (\n      wire &&\n      wire.wireJointIds.indexOf(jointAId) !== -1 &&\n      wire.wireJointIds.indexOf(jointBId) !== -1\n    ) {\n      state = wireSplit(state, removedSegment.jointAId);\n    }\n\n    return state;\n  }\n\n  // At this point, the segment is a connection from an element pin to the rest of the wire.\n  // There are no joints to delete, as the single joint will be used by the other wire segment.\n  return wireSegmentRemove(state, wireSegmentId);\n}\n","import { CircuitGraphServiceState } from \"../../state\";\nimport { Wire } from \"../../types\";\n\nexport function wireCreate(\n  state: CircuitGraphServiceState,\n  circuitId: string,\n  wireId: string,\n  wire?: Wire\n): CircuitGraphServiceState {\n  return {\n    ...state,\n    wireIdsByCircuitId: {\n      ...state.wireIdsByCircuitId,\n      [circuitId]: [...state.wireIdsByCircuitId[circuitId], wireId],\n    },\n    wiresByWireId: {\n      ...state.wiresByWireId,\n      [wireId]: wire ?? {\n        wireSegmentIds: [],\n        wireJointIds: [],\n      },\n    },\n  };\n}\n","import { Point } from \"@/geometry\";\n\nimport { CircuitGraphServiceState } from \"../../state\";\n\nexport function wireJointInsert(\n  state: CircuitGraphServiceState,\n  wireId: string,\n  jointId: string,\n  point: Point\n): CircuitGraphServiceState {\n  state = {\n    ...state,\n    wiresByWireId: {\n      ...state.wiresByWireId,\n      [wireId]: {\n        ...state.wiresByWireId[wireId],\n        wireJointIds: [...state.wiresByWireId[wireId].wireJointIds, jointId],\n      },\n    },\n    wireJointPositionsByJointId: {\n      ...state.wireJointPositionsByJointId,\n      [jointId]: point,\n    },\n  };\n\n  return state;\n}\n","import pick from \"lodash/pick\";\n\nimport { wireIdFromWireJointIdSelector } from \"../../selectors/wires\";\nimport { CircuitGraphServiceState } from \"../../state\";\n\nimport { WireOperationError } from \"../errors/WireOperationError\";\n\nexport function wireJointRemove(\n  state: CircuitGraphServiceState,\n  jointId: string\n): CircuitGraphServiceState {\n  const wireId = wireIdFromWireJointIdSelector.local(state, jointId);\n  if (!wireId) {\n    throw new WireOperationError(\"Wire for joint id not found.\");\n  }\n\n  const wire = state.wiresByWireId[wireId];\n\n  const wiresByWireId: typeof state.wiresByWireId = {\n    ...state.wiresByWireId,\n    [wireId]: {\n      ...wire,\n      wireJointIds: [...wire.wireJointIds.filter((x) => x !== jointId)],\n    },\n  };\n\n  const wireJointPositionsByJointId = pick(\n    state.wireJointPositionsByJointId,\n    Object.keys(state.wireJointPositionsByJointId).filter((x) => x !== jointId)\n  );\n\n  return {\n    ...state,\n    wiresByWireId,\n    wireJointPositionsByJointId,\n  };\n}\n","import { v4 as uuidV4 } from \"uuid\";\nimport pick from \"lodash/pick\";\n\nimport { circuitIdForWireIdSelector } from \"../../selectors/wires\";\nimport { CircuitGraphServiceState } from \"../../state\";\nimport { collectWireLineIds } from \"../../utils\";\n\nexport function wireMerge(\n  state: CircuitGraphServiceState,\n  targetWireId: string,\n  subjectWireId: string\n): CircuitGraphServiceState {\n  const targetCircuitId = circuitIdForWireIdSelector.local(state, targetWireId);\n  const subjectCircuitId = circuitIdForWireIdSelector.local(\n    state,\n    subjectWireId\n  );\n  if (!targetCircuitId || !subjectCircuitId) {\n    throw new Error(\"Unable to determine circuit id for wire.\");\n  }\n\n  if (targetCircuitId !== subjectCircuitId) {\n    throw new Error(\"Unable to merge wires in different circuits.\");\n  }\n\n  const targetWire = state.wiresByWireId[targetWireId];\n  const subjectWire = state.wiresByWireId[subjectWireId];\n  if (!targetWire || !subjectWire) {\n    throw new Error(\"Wire not found.\");\n  }\n\n  const [targetInputs, targetOutputs] = collectWireLineIds(state, targetWireId);\n  const [subjectInputs, subjectOutputs] = collectWireLineIds(\n    state,\n    subjectWireId\n  );\n\n  if (\n    targetOutputs.length + subjectOutputs.length <= 1 &&\n    targetInputs.length <= 1 &&\n    subjectInputs.length <= 1\n  ) {\n    // At most one output between them, and each has at most one input.  combine the lines.\n    const sourceLineId = uuidV4();\n    state = setWireLineIds(state, targetWireId, sourceLineId);\n    state = setWireLineIds(state, subjectWireId, sourceLineId);\n  }\n\n  const remainingWireIds = Object.keys(state.wiresByWireId).filter(\n    (x) => x !== subjectWireId\n  );\n\n  return {\n    ...state,\n    wireIdsByCircuitId: {\n      ...state.wireIdsByCircuitId,\n      [targetCircuitId]: state.wireIdsByCircuitId[targetCircuitId].filter(\n        (x) => x !== subjectWireId\n      ),\n    },\n    wiresByWireId: {\n      ...pick(state.wiresByWireId, remainingWireIds),\n      [targetWireId]: {\n        ...targetWire,\n        wireSegmentIds: [\n          ...targetWire.wireSegmentIds,\n          ...subjectWire.wireSegmentIds,\n        ],\n        wireJointIds: [...targetWire.wireJointIds, ...subjectWire.wireJointIds],\n      },\n    },\n  };\n}\n\nfunction setWireLineIds(\n  state: CircuitGraphServiceState,\n  wireId: string,\n  lineId: string\n): CircuitGraphServiceState {\n  const wire = state.wiresByWireId[wireId];\n  if (!wire) {\n    return state;\n  }\n\n  const wireSegmentsById: typeof state.wireSegmentsById = {\n    ...state.wireSegmentsById,\n  };\n\n  for (const segId of wire.wireSegmentIds) {\n    const seg = state.wireSegmentsById[segId];\n    if (seg.type === \"input\" || seg.type === \"output\") {\n      wireSegmentsById[segId] = {\n        ...seg,\n        lineId,\n      };\n    }\n  }\n\n  return {\n    ...state,\n    wireSegmentsById,\n  };\n}\n","import mapValues from \"lodash/mapValues\";\nimport pick from \"lodash/pick\";\nimport difference from \"lodash/difference\";\n\nimport { CircuitGraphServiceState } from \"../../state\";\n\nexport function wireRemove(\n  state: CircuitGraphServiceState,\n  wireId: string\n): CircuitGraphServiceState {\n  const wire = state.wiresByWireId[wireId];\n  if (!wire) {\n    return state;\n  }\n\n  const { wireSegmentIds, wireJointIds } = wire;\n\n  return {\n    ...state,\n    wireIdsByCircuitId: mapValues(state.wireIdsByCircuitId, (wiresInCircuit) =>\n      wiresInCircuit.filter((x) => x !== wireId)\n    ),\n    wireSegmentsById: pick(\n      state.wireSegmentsById,\n      difference(Object.keys(state.wireSegmentsById), wireSegmentIds)\n    ),\n    wiresByWireId: pick(\n      state.wiresByWireId,\n      Object.keys(state.wiresByWireId).filter((x) => x !== wireId)\n    ),\n    wireJointPositionsByJointId: pick(\n      state.wireJointPositionsByJointId,\n      difference(Object.keys(state.wireJointPositionsByJointId), wireJointIds)\n    ),\n  };\n}\n","import { v4 as uuidV4 } from \"uuid\";\n\nimport { normalize, pointAdd, pointSubtract, scale } from \"@/geometry\";\n\nimport { AppState } from \"@/store\";\n\nimport {\n  endPositionForWireSegmentId,\n  startPositionForWireSegmentId,\n} from \"../../selectors/wire-positions\";\n\nimport { CircuitGraphServiceState } from \"../../state\";\nimport { WireSegment } from \"../../types\";\nimport { wireIdFromWireSegmentIdSelector } from \"../../selectors/wires\";\nimport { wireJointInsert } from \"./wire-joint-insert\";\nimport { wireSegmentRemove } from \"./wire-segment-remove\";\nimport { wireSegmentInsert } from \"./wire-segment-insert\";\nimport { WireOperationError } from \"../errors/WireOperationError\";\n\nexport default function wireSegmentAddJoint(\n  state: CircuitGraphServiceState,\n  wireSegmentId: string,\n  segmentSplitLength: number,\n  splitJointId: string,\n  rootState: AppState\n): CircuitGraphServiceState {\n  const wireId = wireIdFromWireSegmentIdSelector.local(state, wireSegmentId);\n  if (!wireId) {\n    throw new WireOperationError(\"Wire segment parent wire not found.\");\n  }\n\n  const targetSegment = state.wireSegmentsById[wireSegmentId];\n  if (!targetSegment) {\n    throw new WireOperationError(\"Wire segment not found.\");\n  }\n\n  const startPos = startPositionForWireSegmentId(rootState, wireSegmentId);\n  const endPos = endPositionForWireSegmentId(rootState, wireSegmentId);\n  const lineVector = normalize(pointSubtract(endPos, startPos));\n  const segmentJointPos = pointAdd(\n    startPos,\n    scale(lineVector, segmentSplitLength)\n  );\n\n  state = wireJointInsert(state, wireId, splitJointId, segmentJointPos);\n\n  const firstSegmentId = uuidV4();\n  const secondSegmentId = uuidV4();\n  let firstSegment: WireSegment;\n  let secondSegment: WireSegment;\n  switch (targetSegment.type) {\n    case \"bridge\":\n      {\n        firstSegment = {\n          type: \"bridge\",\n          jointAId: targetSegment.jointAId,\n          jointBId: splitJointId,\n        };\n        secondSegment = {\n          type: \"bridge\",\n          jointAId: splitJointId,\n          jointBId: targetSegment.jointBId,\n        };\n      }\n      break;\n    case \"input\":\n    case \"output\":\n      {\n        firstSegment = {\n          ...targetSegment,\n          jointId: splitJointId,\n        };\n        secondSegment = {\n          type: \"bridge\",\n          jointAId: splitJointId,\n          jointBId: targetSegment.jointId,\n        };\n      }\n      break;\n    case \"input-output\":\n      {\n        const lineId = uuidV4();\n        firstSegment = {\n          type: \"output\",\n          outputPin: targetSegment.outputPin,\n          jointId: splitJointId,\n          lineId,\n        };\n        secondSegment = {\n          type: \"input\",\n          inputPin: targetSegment.inputPin,\n          jointId: splitJointId,\n          lineId,\n        };\n      }\n      break;\n    default:\n      throw new WireOperationError(\"Unknown segment type.\");\n  }\n\n  // Remove the modified segment, it is to be replaced with the two new segments.\n  state = wireSegmentRemove(state, wireSegmentId, {\n    deleteWireIfLastSegment: false,\n    removeOrphanJoints: false,\n  });\n\n  // Add the new segments.\n  state = wireSegmentInsert(state, wireId, firstSegmentId, firstSegment);\n  state = wireSegmentInsert(state, wireId, secondSegmentId, secondSegment);\n\n  return state;\n}\n","import { CircuitGraphServiceState } from \"../../state\";\nimport { WireSegment } from \"../../types\";\n\nexport function wireSegmentInsert(\n  state: CircuitGraphServiceState,\n  wireId: string,\n  segmentId: string,\n  segment: WireSegment\n): CircuitGraphServiceState {\n  return {\n    ...state,\n    wiresByWireId: {\n      ...state.wiresByWireId,\n      [wireId]: {\n        ...state.wiresByWireId[wireId],\n        wireSegmentIds: [\n          ...state.wiresByWireId[wireId].wireSegmentIds,\n          segmentId,\n        ],\n      },\n    },\n    wireSegmentsById: {\n      ...state.wireSegmentsById,\n      [segmentId]: segment,\n    },\n  };\n}\n","import { v4 as uuidV4 } from \"uuid\";\n\nimport { wireIdFromWireSegmentIdSelector } from \"../../selectors/wires\";\nimport { CircuitGraphServiceState } from \"../../state\";\nimport { InputWireSegment, OutputWireSegment } from \"../../types\";\nimport { getJointIdsFromSegment } from \"../../utils\";\n\nimport { WireOperationError } from \"../errors/WireOperationError\";\n\nimport { wireJointRemove } from \"./wire-joint-remove\";\nimport { wireSegmentRemove } from \"./wire-segment-remove\";\nimport { wireSegmentInsert } from \"./wire-segment-insert\";\n\nexport function wireSegmentMerge(\n  state: CircuitGraphServiceState,\n  segmentId1: string,\n  segmentId2: string,\n  jointId: string\n): CircuitGraphServiceState {\n  const wireId1 = wireIdFromWireSegmentIdSelector.local(state, segmentId1);\n  const wireId2 = wireIdFromWireSegmentIdSelector.local(state, segmentId2);\n\n  if (!wireId1 || !wireId2) {\n    throw new WireOperationError(\"Wire for segment not found.\");\n  }\n\n  if (wireId1 !== wireId2) {\n    throw new WireOperationError(\n      \"Merging segments from different wires is not supported.\"\n    );\n  }\n\n  const seg1 = state.wireSegmentsById[segmentId1];\n  const seg2 = state.wireSegmentsById[segmentId2];\n  if (!seg1 || !seg2) {\n    throw new WireOperationError(\"Wire segment not found.\");\n  }\n\n  if (seg1.type === \"input-output\" || seg2.type === \"input-output\") {\n    // Impossible to merge.  Impossible for a wire to have more than one segment if one is input-output anyway.\n    throw new WireOperationError(\"Cannot merge input-output segments.\");\n  }\n\n  // If we have inputs and outputs, try turning them into an input-output.\n  if (\n    (seg1.type === \"input\" || seg1.type === \"output\") &&\n    (seg2.type === \"input\" || seg2.type === \"output\")\n  ) {\n    // Cannot merge two like-types.\n    if (seg1.type === seg2.type) {\n      throw new WireOperationError(\"Cannot merge two inputs or two outputs.\");\n    }\n\n    // Segments dont share this joint.\n    if (seg1.jointId !== jointId || seg2.jointId !== jointId) {\n      throw new WireOperationError(\"Segments do not share the given joint.\");\n    }\n\n    const inputSegment =\n      seg1.type === \"input\" ? seg1 : (seg2 as InputWireSegment);\n    const outputSegment =\n      seg1.type === \"output\" ? seg1 : (seg2 as OutputWireSegment);\n    state = wireJointRemove(state, jointId);\n    state = wireSegmentRemove(state, segmentId1, {\n      deleteWireIfLastSegment: false,\n      removeOrphanJoints: false,\n    });\n    state = wireSegmentRemove(state, segmentId2, {\n      deleteWireIfLastSegment: false,\n      removeOrphanJoints: false,\n    });\n    state = wireSegmentInsert(state, wireId1, uuidV4(), {\n      type: \"input-output\",\n      inputPin: inputSegment.inputPin,\n      outputPin: outputSegment.outputPin,\n    });\n    return state;\n  }\n\n  // At this point, at least one segment is a bridge, and the other is an input, output, or bridge.\n  const bridge =\n    seg1.type === \"bridge\" ? seg1 : seg2.type === \"bridge\" ? seg2 : null;\n  if (!bridge) {\n    throw new WireOperationError(\"Cannot merge segment configuration.\");\n  }\n\n  // Alt can be an input, output, or bridge.\n  const alt = seg1 === bridge ? seg2 : seg1;\n\n  // This is the joint that will remain once we combine the segments, and will be part of the new segment.\n  const bridgeRemainderJoint = getJointIdsFromSegment(bridge)\n    .filter((x) => x !== jointId)\n    .pop();\n  if (!bridgeRemainderJoint) {\n    throw new WireOperationError(\"Cannot merge segment configuration.\");\n  }\n\n  state = wireJointRemove(state, jointId);\n  // Keep the joints, we will reuse them.\n  state = wireSegmentRemove(state, segmentId1, {\n    removeOrphanJoints: false,\n    deleteWireIfLastSegment: false,\n  });\n  state = wireSegmentRemove(state, segmentId2, {\n    removeOrphanJoints: false,\n    deleteWireIfLastSegment: false,\n  });\n\n  switch (alt.type) {\n    case \"bridge\": {\n      const altRemainderJoint =\n        alt.jointAId === jointId\n          ? alt.jointBId\n          : alt.jointBId === jointId\n          ? alt.jointAId\n          : null;\n      if (!altRemainderJoint) {\n        throw new WireOperationError(\"Segments do not share the given joint.\");\n      }\n      state = wireSegmentInsert(state, wireId1, uuidV4(), {\n        type: \"bridge\",\n        jointAId: bridgeRemainderJoint,\n        jointBId: altRemainderJoint,\n      });\n      return state;\n    }\n    case \"input\":\n    case \"output\": {\n      if (alt.jointId !== jointId) {\n        throw new WireOperationError(\"Segments do not share the given joint.\");\n      }\n      // If we combine an input or output with a bridge, we just extend the input or output\n      // to the far joint of the bridge.\n      state = wireSegmentInsert(state, wireId1, uuidV4(), {\n        ...alt,\n        jointId: bridgeRemainderJoint,\n      });\n      return state;\n    }\n  }\n\n  throw new WireOperationError(\"Cannot merge segment configuration.\");\n}\n","import pick from \"lodash/pick\";\n\nimport { CircuitGraphServiceState } from \"../../state\";\nimport { getJointIdsFromSegment } from \"../../utils\";\n\nimport { wireIdFromWireSegmentIdSelector } from \"../../selectors/wires\";\n\nimport { WireOperationError } from \"../errors/WireOperationError\";\nimport { wireRemove } from \"./wire-remove\";\nimport { wireJointRemove } from \"./wire-joint-remove\";\n\nexport interface WireSegmentRemoveOpts {\n  deleteWireIfLastSegment?: boolean;\n  removeOrphanJoints?: boolean;\n}\nexport function wireSegmentRemove(\n  state: CircuitGraphServiceState,\n  segmentId: string,\n  {\n    deleteWireIfLastSegment = true,\n    removeOrphanJoints = true,\n  }: WireSegmentRemoveOpts = {}\n): CircuitGraphServiceState {\n  const wireId = wireIdFromWireSegmentIdSelector.local(state, segmentId);\n  if (!wireId) {\n    throw new WireOperationError(\"Wire for segment not found.\");\n  }\n\n  const segment = state.wireSegmentsById[segmentId];\n  if (!segment) {\n    throw new WireOperationError(\"Segment not found\");\n  }\n\n  const remainingSegmentIds = state.wiresByWireId[wireId].wireSegmentIds.filter(\n    (x) => x !== segmentId\n  );\n\n  if (deleteWireIfLastSegment && remainingSegmentIds.length === 0) {\n    return wireRemove(state, wireId);\n  }\n\n  if (removeOrphanJoints) {\n    const joints = getJointIdsFromSegment(segment);\n    for (const jointId of joints) {\n      if (\n        remainingSegmentIds.every(\n          (remainingSegmentId) =>\n            getJointIdsFromSegment(\n              state.wireSegmentsById[remainingSegmentId]\n            ).indexOf(jointId) === -1\n        )\n      ) {\n        // No other segment uses this joint.\n        state = wireJointRemove(state, jointId);\n      }\n    }\n  }\n\n  return {\n    ...state,\n    wiresByWireId: {\n      ...state.wiresByWireId,\n      [wireId]: {\n        // Re-obtain wire ref as wireRemoveJoint will have changed it.\n        ...state.wiresByWireId[wireId],\n        wireSegmentIds: remainingSegmentIds,\n      },\n    },\n    wireSegmentsById: pick(\n      state.wireSegmentsById,\n      Object.keys(state.wireSegmentsById).filter((x) => x !== segmentId)\n    ),\n  };\n}\n","import difference from \"lodash/difference\";\nimport mapValues from \"lodash/mapValues\";\nimport { v4 as uuidV4 } from \"uuid\";\n\nimport {\n  circuitIdForWireIdSelector,\n  wireIdFromWireJointIdSelector,\n} from \"../../selectors/wires\";\nimport { CircuitGraphServiceState } from \"../../state\";\nimport { isInputWireSegment, isOutputWireSegment } from \"../../types\";\nimport { getJointIdsFromSegment, getSegmentIdsFromJoint } from \"../../utils\";\nimport { WireOperationError } from \"../errors/WireOperationError\";\n\nimport { wireCreate } from \"./wire-create\";\n\n/**\n * Scans through a wire network given a joint id and moves all connected segments and joints to a new network.\n */\nexport function wireSplit(\n  state: CircuitGraphServiceState,\n  jointId: string\n): CircuitGraphServiceState {\n  const oldWireId = wireIdFromWireJointIdSelector.local(state, jointId);\n  if (!oldWireId) {\n    throw new WireOperationError(\"Wire id for joint not found.\");\n  }\n\n  const circuitId = circuitIdForWireIdSelector.local(state, oldWireId);\n  if (!circuitId) {\n    throw new WireOperationError(\"Circuit id for joint not found.\");\n  }\n\n  // Collect all connected segments and joints\n  const { jointIds, segmentIds } = collectWireNetwork(\n    state,\n    oldWireId,\n    jointId\n  );\n\n  // New wire won't have any content.\n  if (jointIds.length === 0 || segmentIds.length === 0) {\n    return state;\n  }\n\n  // Strip values from existing wire network\n  const oldWire = state.wiresByWireId[oldWireId];\n  const remainingWireSegmentIds = difference(\n    oldWire.wireSegmentIds,\n    segmentIds\n  );\n  const remainingWireJointIds = difference(oldWire.wireJointIds, jointIds);\n  if (\n    remainingWireJointIds.length === 0 ||\n    remainingWireSegmentIds.length === 0\n  ) {\n    // Old wire won't have any content.\n    return state;\n  }\n\n  state = {\n    ...state,\n    wiresByWireId: {\n      ...state.wiresByWireId,\n      [oldWireId]: {\n        ...oldWire,\n        wireSegmentIds: remainingWireSegmentIds,\n        wireJointIds: remainingWireJointIds,\n      },\n    },\n  };\n\n  // Change the line ids.\n  // This is so in the future if the wire networks are joined, we won't get conflicting inputs.\n  const lineIdMap: Record<string, string> = {};\n  function mapLineId(lineId: string): string {\n    if (!lineIdMap[lineId]) {\n      lineIdMap[lineId] = uuidV4();\n    }\n\n    return lineIdMap[lineId];\n  }\n\n  state = {\n    ...state,\n    wireSegmentsById: mapValues(\n      state.wireSegmentsById,\n      (segment, segmentId) => {\n        if (segmentIds.indexOf(segmentId) === -1) {\n          return segment;\n        }\n\n        if (!isOutputWireSegment(segment) && !isInputWireSegment(segment)) {\n          return segment;\n        }\n\n        return {\n          ...segment,\n          lineId: mapLineId(segment.lineId),\n        };\n      }\n    ),\n  };\n\n  // Create a new wire to store the values\n  const newWireId = uuidV4();\n  state = wireCreate(state, circuitId, newWireId, {\n    wireJointIds: jointIds,\n    wireSegmentIds: segmentIds,\n  });\n\n  return state;\n}\n\nfunction collectWireNetwork(\n  state: CircuitGraphServiceState,\n  wireId: string,\n  jointId: string\n): { jointIds: string[]; segmentIds: string[] } {\n  const jointIds = new Set<string>();\n  const segmentIds = new Set<string>();\n\n  function collectSegment(segmentId: string) {\n    if (segmentIds.has(segmentId)) {\n      return;\n    }\n\n    const segment = state.wireSegmentsById[segmentId];\n    if (!segment) {\n      return;\n    }\n\n    segmentIds.add(segmentId);\n    const jointIds = getJointIdsFromSegment(segment);\n    jointIds.forEach(collectJoint);\n  }\n\n  function collectJoint(jointId: string) {\n    if (jointIds.has(jointId)) {\n      return;\n    }\n\n    jointIds.add(jointId);\n    const segmentIds = getSegmentIdsFromJoint(state, wireId, jointId);\n    segmentIds.forEach(collectSegment);\n  }\n\n  collectJoint(jointId);\n\n  return {\n    jointIds: Array.from(jointIds),\n    segmentIds: Array.from(segmentIds),\n  };\n}\n","import { isNewProjectAction } from \"@/actions/project-new\";\n\nimport { createCircuitGraphReducer } from \"../utils\";\nimport { defaultCircuitGraphServiceState } from \"../state\";\n\nexport default createCircuitGraphReducer((state, action) => {\n  if (!isNewProjectAction(action)) {\n    return state;\n  }\n\n  return defaultCircuitGraphServiceState;\n});\n","import { v4 as uuidV4 } from \"uuid\";\n\nimport { AppState } from \"@/store\";\n\nimport { isWireConnectAction } from \"@/actions/wire-connect\";\n\nimport { ElementPin, WireConnectTarget, WireSegment } from \"../types\";\nimport { createCircuitGraphReducer, collectWireLineIds } from \"../utils\";\nimport { CircuitGraphServiceState } from \"../state\";\n\nimport { circuitIdFromElementIdSelector } from \"../selectors/elements\";\nimport {\n  circuitIdFromWireJointIdSelector,\n  inputPinIsWiredSelector,\n  wireIdFromWireJointIdSelector,\n} from \"../selectors/wires\";\nimport { pinDirectionFromElementPinSelector } from \"../selectors/pins\";\n\nimport { wireCreate } from \"./primitives/wire-create\";\nimport { wireSegmentInsert } from \"./primitives/wire-segment-insert\";\nimport { wireJointInsert } from \"./primitives/wire-joint-insert\";\nimport wireSegmentAddJoint from \"./primitives/wire-segment-add-joint\";\nimport { wireMerge } from \"./primitives/wire-merge\";\n\nimport { WireOperationError } from \"./errors/WireOperationError\";\n\nexport default createCircuitGraphReducer((state, action, rootState) => {\n  if (!isWireConnectAction(action)) {\n    return state;\n  }\n\n  const unchangedState = state;\n\n  const { circuitId, from, to } = action.payload;\n\n  const {\n    state: fromState,\n    jointId: fromJointId,\n    pin: fromPin,\n    circuitId: fromCircuitId,\n  } = targetToParts(state, circuitId, from, rootState);\n  state = fromState;\n\n  const {\n    state: toState,\n    jointId: toJointId,\n    pin: toPin,\n    circuitId: toCircuitId,\n  } = targetToParts(state, circuitId, to, rootState);\n  state = toState;\n\n  if (!fromCircuitId || !toCircuitId || fromCircuitId !== toCircuitId) {\n    return unchangedState;\n  }\n\n  // Pin to pin is a new wire with an input-output segment.\n  if (fromPin && toPin) {\n    const newState = wirePins(state, fromPin, toPin, fromCircuitId, rootState);\n    return newState ?? unchangedState;\n  }\n\n  // Joint to joint potentially bridges two wires.\n  if (fromJointId && toJointId) {\n    const newState = wireJoints(state, fromJointId, toJointId);\n    return newState ?? unchangedState;\n  }\n\n  // At this point, we are going from a joint to a pin.\n  const jointId = fromJointId ?? toJointId;\n  const pin = fromPin ?? toPin;\n  if (jointId && pin) {\n    const newState = wireJointToPin(state, jointId, pin, rootState);\n    return newState ?? unchangedState;\n  }\n\n  return unchangedState;\n});\n\nfunction wirePins(\n  state: CircuitGraphServiceState,\n  fromPin: ElementPin,\n  toPin: ElementPin,\n  circuitId: string,\n  rootState: AppState\n): CircuitGraphServiceState | null {\n  const fromDirection = pinDirectionFromElementPinSelector(\n    rootState,\n    fromPin.elementId,\n    fromPin.pinId\n  );\n  const toDirection = pinDirectionFromElementPinSelector(\n    rootState,\n    toPin.elementId,\n    toPin.pinId\n  );\n\n  if (!fromDirection || !toDirection || fromDirection === toDirection) {\n    return null;\n  }\n\n  const inputPin = fromDirection === \"input\" ? fromPin : toPin;\n  const outputPin = fromDirection === \"input\" ? toPin : fromPin;\n\n  // Input pins can only have one wire.\n  if (inputPinIsWiredSelector(rootState, inputPin.elementId, inputPin.pinId)) {\n    return null;\n  }\n\n  // Pin to pin, create a new wire.\n  const wireId = uuidV4();\n  state = wireCreate(state, circuitId, wireId);\n  state = wireSegmentInsert(state, wireId, uuidV4(), {\n    type: \"input-output\",\n    inputPin,\n    outputPin,\n  });\n  return state;\n}\n\nfunction wireJoints(\n  state: CircuitGraphServiceState,\n  fromJointId: string,\n  toJointId: string\n): CircuitGraphServiceState | null {\n  const fromWireId = wireIdFromWireJointIdSelector.local(state, fromJointId);\n  const toWireId = wireIdFromWireJointIdSelector.local(state, toJointId);\n  if (!fromWireId || !toWireId) {\n    return null;\n  }\n\n  if (fromWireId !== toWireId) {\n    const mergedState = wireMerge(state, fromWireId, toWireId);\n    if (!mergedState) {\n      return null;\n    }\n    state = mergedState;\n  }\n\n  state = wireSegmentInsert(state, fromWireId, uuidV4(), {\n    type: \"bridge\",\n    jointAId: fromJointId,\n    jointBId: toJointId,\n  });\n  return state;\n}\n\nfunction wireJointToPin(\n  state: CircuitGraphServiceState,\n  jointId: string,\n  pin: ElementPin,\n  rootState: AppState\n): CircuitGraphServiceState | null {\n  const wireId = wireIdFromWireJointIdSelector.local(state, jointId);\n  if (!wireId) {\n    return null;\n  }\n\n  const direction = pinDirectionFromElementPinSelector(\n    rootState,\n    pin.elementId,\n    pin.pinId\n  );\n  if (!direction) {\n    return null;\n  }\n\n  const lineId = defaultLineIdFromWiredPin(state, wireId, pin, rootState);\n\n  let segment: WireSegment;\n  if (direction === \"input\") {\n    if (inputPinIsWiredSelector(rootState, pin.elementId, pin.pinId)) {\n      return null;\n    }\n\n    segment = {\n      type: \"input\",\n      inputPin: pin,\n      jointId,\n      lineId,\n    };\n  } else if (direction === \"output\") {\n    segment = {\n      type: \"output\",\n      outputPin: pin,\n      jointId,\n      lineId,\n    };\n  } else {\n    throw new WireOperationError(\"Unknown pin direction\");\n  }\n\n  state = wireSegmentInsert(state, wireId, uuidV4(), segment);\n  return state;\n}\n\nfunction defaultLineIdFromWiredPin(\n  state: CircuitGraphServiceState,\n  wireId: string,\n  pin: ElementPin,\n  rootState: AppState\n): string {\n  const direction = pinDirectionFromElementPinSelector(\n    rootState,\n    pin.elementId,\n    pin.pinId\n  );\n\n  const [inputLineIds, outputLineIds] = collectWireLineIds(state, wireId);\n\n  if (direction === \"output\" && outputLineIds.length > 0) {\n    // Already have an output connected, create a new line for this one.\n    return uuidV4();\n  } else if (\n    (inputLineIds.length === 1 && outputLineIds.length === 0) ||\n    (inputLineIds.length === 0 && outputLineIds.length === 1) ||\n    (inputLineIds.length === 1 &&\n      outputLineIds.length === 1 &&\n      inputLineIds[0] === outputLineIds[0])\n  ) {\n    // If we only have one input or output, use that.\n    return inputLineIds[0] ?? outputLineIds[0];\n  }\n\n  // Multiple outputs are available.\n  // Make a new line\n  return uuidV4();\n}\n\nfunction targetToParts(\n  state: CircuitGraphServiceState,\n  circuitId: string,\n  target: WireConnectTarget,\n  rootState: AppState\n): {\n  state: CircuitGraphServiceState;\n  jointId: string | null;\n  pin: ElementPin | null;\n  circuitId: string | null;\n} {\n  switch (target.type) {\n    case \"pin\":\n      return {\n        state,\n        jointId: null,\n        pin: target.pin,\n        circuitId: circuitIdFromElementIdSelector.local(\n          state,\n          target.pin.elementId\n        ),\n      };\n    case \"joint\":\n      return {\n        state,\n        jointId: target.jointId,\n        pin: null,\n        circuitId: circuitIdFromWireJointIdSelector.local(\n          state,\n          target.jointId\n        ),\n      };\n    case \"floating\": {\n      // Create a new wire to hold the point.\n      // If this is to a pin, the wire will stand.\n      // If this is to another wire, the wire will merge.\n      const wireId = uuidV4();\n      state = wireCreate(state, circuitId, wireId);\n      const jointId = uuidV4();\n      state = wireJointInsert(state, wireId, jointId, target.point);\n      return { state, jointId, pin: null, circuitId };\n    }\n    case \"segment\": {\n      const jointId = uuidV4();\n      state = wireSegmentAddJoint(\n        state,\n        target.segmentId,\n        target.segmentInsertLength,\n        jointId,\n        rootState\n      );\n      return { state, jointId, pin: null, circuitId };\n    }\n  }\n\n  throw new WireOperationError(\"Unknown wire connect target\");\n}\n","import { Point } from \"@/geometry\";\n\nimport { isHydrateWireAction } from \"@/actions/wire-hydrate\";\n\nimport { WireSegment } from \"../types\";\nimport { createCircuitGraphReducer } from \"../utils\";\n\nexport default createCircuitGraphReducer((state, action) => {\n  if (!isHydrateWireAction(action)) {\n    return state;\n  }\n\n  const { wireId, circuitId, wireSegments, wireJoints } = action.payload;\n\n  const newSegments: Record<string, WireSegment> = {};\n  for (const segment of wireSegments) {\n    const { wireSegmentId, ...wireSegment } = segment;\n    newSegments[wireSegmentId] = wireSegment;\n  }\n\n  const newJoints: Record<string, Point> = {};\n  for (const joint of wireJoints) {\n    const { jointId, ...point } = joint;\n    newJoints[jointId] = point;\n  }\n\n  return {\n    ...state,\n    wireIdsByCircuitId: {\n      ...state.wireIdsByCircuitId,\n      [circuitId]: [...state.wireIdsByCircuitId[circuitId], wireId],\n    },\n    wiresByWireId: {\n      ...state.wiresByWireId,\n      [wireId]: {\n        wireSegmentIds: Object.keys(newSegments),\n        wireJointIds: Object.keys(newJoints),\n      },\n    },\n    wireSegmentsById: {\n      ...state.wireSegmentsById,\n      ...newSegments,\n    },\n    wireJointPositionsByJointId: {\n      ...state.wireJointPositionsByJointId,\n      ...newJoints,\n    },\n  };\n});\n","import { v4 as uuidV4 } from \"uuid\";\n\nimport { isWireSegmentInsertJointAction } from \"@/actions/wire-segment-insert-joint\";\n\nimport { WireSegment } from \"../types\";\nimport { createCircuitGraphReducer } from \"../utils\";\n\nimport { wireJointInsert } from \"./primitives/wire-joint-insert\";\nimport { wireSegmentRemove } from \"./primitives/wire-segment-remove\";\nimport { wireSegmentInsert } from \"./primitives/wire-segment-insert\";\n\nexport default createCircuitGraphReducer((state, action) => {\n  if (!isWireSegmentInsertJointAction(action)) {\n    return state;\n  }\n\n  const { wireId, wireSegmentId, jointPos } = action.payload;\n\n  const targetWire = state.wiresByWireId[wireId];\n  if (!targetWire) {\n    return state;\n  }\n\n  const targetSegment = state.wireSegmentsById[wireSegmentId];\n  if (!targetSegment) {\n    return state;\n  }\n\n  const newJointId = uuidV4();\n\n  let firstSegment: WireSegment;\n  let secondSegment: WireSegment;\n  switch (targetSegment.type) {\n    case \"bridge\":\n      {\n        firstSegment = {\n          type: \"bridge\",\n          jointAId: targetSegment.jointAId,\n          jointBId: newJointId,\n        };\n        secondSegment = {\n          type: \"bridge\",\n          jointAId: newJointId,\n          jointBId: targetSegment.jointBId,\n        };\n      }\n      break;\n    case \"input\":\n    case \"output\":\n      {\n        firstSegment = {\n          ...targetSegment,\n          jointId: newJointId,\n        };\n        secondSegment = {\n          type: \"bridge\",\n          jointAId: newJointId,\n          jointBId: targetSegment.jointId,\n        };\n      }\n      break;\n    case \"input-output\":\n      {\n        const lineId = uuidV4();\n        firstSegment = {\n          type: \"output\",\n          outputPin: targetSegment.outputPin,\n          jointId: newJointId,\n          lineId,\n        };\n        secondSegment = {\n          type: \"input\",\n          inputPin: targetSegment.inputPin,\n          jointId: newJointId,\n          lineId,\n        };\n      }\n      break;\n    default:\n      return state;\n  }\n\n  state = wireJointInsert(state, wireId, newJointId, jointPos);\n  state = wireSegmentRemove(state, wireSegmentId, {\n    deleteWireIfLastSegment: false,\n    removeOrphanJoints: false,\n  });\n  state = wireSegmentInsert(state, wireId, uuidV4(), firstSegment);\n  state = wireSegmentInsert(state, wireId, uuidV4(), secondSegment);\n\n  return state;\n});\n","import { isWireJointDeleteAction } from \"@/actions/wire-joint-delete\";\n\nimport { createCircuitGraphReducer } from \"../utils\";\nimport { WireOperationError } from \"./errors/WireOperationError\";\n\nimport { wireJointMergeOrDelete } from \"./operations/wire-joint-merge-or-delete\";\n\nexport default createCircuitGraphReducer((state, action) => {\n  if (!isWireJointDeleteAction(action)) {\n    return state;\n  }\n\n  const { jointIds } = action.payload;\n\n  state = jointIds.reduce((state, jointId) => {\n    try {\n      return wireJointMergeOrDelete(state, jointId);\n    } catch (e) {\n      if (e instanceof WireOperationError === false) {\n        throw e;\n      }\n      return state;\n    }\n  }, state);\n\n  return state;\n});\n","import mapValues from \"lodash/mapValues\";\nimport pick from \"lodash/pick\";\n\nimport { isWireJointMoveAction } from \"@/actions/wire-joint-move\";\n\nimport {\n  applyGridElementSnapSelector,\n  applyGridJointSnapSelector,\n} from \"@/services/circuit-editor-drag/selectors/snap\";\n\nimport { createCircuitGraphReducer } from \"../utils\";\n\nexport default createCircuitGraphReducer((state, action, appState) => {\n  if (!isWireJointMoveAction(action)) {\n    return state;\n  }\n\n  const { jointIds, position, relative, snapMode } = action.payload;\n\n  const movedJointPositions = mapValues(\n    pick(state.wireJointPositionsByJointId, jointIds),\n    (p) => {\n      let movedP = {\n        x: relative ? p.x + position.x : position.x,\n        y: relative ? p.y + position.y : position.y,\n      };\n      switch (snapMode) {\n        case \"element\":\n          movedP = applyGridElementSnapSelector(appState, movedP);\n          break;\n        case \"joint\":\n          movedP = applyGridJointSnapSelector(appState, movedP);\n          break;\n      }\n      return movedP;\n    }\n  );\n\n  return {\n    ...state,\n    wireJointPositionsByJointId: {\n      ...state.wireJointPositionsByJointId,\n      ...movedJointPositions,\n    },\n  };\n});\n","import { isWireSegmentDeleteAction } from \"@/actions/wire-segment-delete\";\n\nimport { createCircuitGraphReducer } from \"../utils\";\n\nimport wireSegmentDelete from \"./operations/wire-segment-delete\";\n\nexport default createCircuitGraphReducer((state, action) => {\n  if (!isWireSegmentDeleteAction(action)) {\n    return state;\n  }\n\n  const { segmentIds } = action.payload;\n\n  state = segmentIds.reduce(\n    (state, segmentId) => wireSegmentDelete(state, segmentId),\n    state\n  );\n\n  return state;\n});\n","import { isWireSegmentSetLineAction } from \"@/actions/wire-segment-set-line\";\nimport { isInputWireSegment, isOutputWireSegment } from \"../types\";\nimport { createCircuitGraphReducer } from \"../utils\";\n\nexport default createCircuitGraphReducer((state, action) => {\n  if (!isWireSegmentSetLineAction(action)) {\n    return state;\n  }\n\n  const { wireSegmentId, lineId } = action.payload;\n\n  const segment = state.wireSegmentsById[wireSegmentId];\n  if (!segment) {\n    return state;\n  }\n\n  if (!isInputWireSegment(segment) && !isOutputWireSegment(segment)) {\n    return state;\n  }\n\n  return {\n    ...state,\n    wireSegmentsById: {\n      ...state.wireSegmentsById,\n      [wireSegmentId]: {\n        ...segment,\n        lineId,\n      },\n    },\n  };\n});\n","import { AppState } from \"@/store\";\n\nimport { circuitIdToElementType } from \"@/elements/definitions/integrated-circuits/utils\";\n\nimport { CircuitGraphServiceState } from \"../state\";\nimport { createCircuitGraphSelector } from \"../utils\";\n\nconst circuitIdForElementIdSelector = createCircuitGraphSelector(\n  (state: CircuitGraphServiceState, elementId: string) => {\n    const { elementIdsByCircuitId } = state;\n    const circuitIds = Object.keys(elementIdsByCircuitId);\n    for (const circuitId of circuitIds) {\n      if (elementIdsByCircuitId[circuitId].indexOf(elementId) !== -1) {\n        return circuitId;\n      }\n    }\n    return null;\n  }\n);\n\nexport const circuitWouldRecurseSelector = (\n  state: AppState,\n  circuitId: string | null,\n  targetCircuitId: string\n): boolean => {\n  if (!circuitId) {\n    return false;\n  }\n  if (circuitId === targetCircuitId) {\n    return true;\n  }\n\n  const targetCircuitNodeType = circuitIdToElementType(targetCircuitId);\n  const { elementsById } = state.services.circuitGraph;\n  const targetCircuitElementIds = Object.keys(elementsById).filter(\n    (elementId) => elementsById[elementId].elementType === targetCircuitNodeType\n  );\n\n  return targetCircuitElementIds.some((elementId) => {\n    const targetContainingCircuitId = circuitIdForElementIdSelector(\n      state,\n      elementId\n    );\n    if (!targetContainingCircuitId) {\n      return false;\n    }\n    return circuitWouldRecurseSelector(\n      state,\n      circuitId,\n      targetContainingCircuitId\n    );\n  });\n};\n","import { createSelector } from \"reselect\";\n\nimport { CircuitGraphServiceState } from \"../state\";\nimport { createCircuitGraphSelector } from \"../utils\";\nimport {\n  ElementConnection,\n  isInputOutputWireSegment,\n  isInputWireSegment,\n  isOutputWireSegment,\n} from \"../types\";\n\nexport const connectionsSelector = createCircuitGraphSelector(\n  createSelector(\n    (state: CircuitGraphServiceState) => state.wiresByWireId,\n    (state: CircuitGraphServiceState) => state.wireSegmentsById,\n    (wiresById, segmentsById) => {\n      const connections: ElementConnection[] = [];\n\n      const wireIds = Object.keys(wiresById);\n      for (const wireId of wireIds) {\n        const { wireSegmentIds } = wiresById[wireId];\n        const segments = wireSegmentIds.map((id) => segmentsById[id]);\n        for (const segment of segments) {\n          if (isInputOutputWireSegment(segment)) {\n            connections.push({\n              inputPin: segment.inputPin,\n              outputPin: segment.outputPin,\n            });\n          } else if (isOutputWireSegment(segment)) {\n            const inputs = segments\n              .filter(isInputWireSegment)\n              .filter(({ lineId }) => lineId === segment.lineId);\n            for (const input of inputs) {\n              connections.push({\n                outputPin: segment.outputPin,\n                inputPin: input.inputPin,\n              });\n            }\n          }\n        }\n      }\n\n      return connections;\n    }\n  )\n);\n","import { AppState } from \"@/store\";\n\nimport { elementDefinitionFromTypeSelector } from \"@/services/element-types/selectors/element-types\";\n\nexport const elementDefinitionFromElementIdSelector = (\n  state: AppState,\n  elementId: string\n) => {\n  // Not using the selector here to avoid circular dependencies in imports.\n  const elementType =\n    state.services.circuitGraph.elementsById[elementId]?.elementType;\n  if (!elementType) {\n    return null;\n  }\n\n  const def = elementDefinitionFromTypeSelector(state, elementType);\n\n  return def;\n};\n","import { createSelector } from \"reselect\";\nimport mapValues from \"lodash/mapValues\";\n\nimport { createCircuitGraphSelector } from \"../utils\";\nimport { CircuitGraphServiceState } from \"../state\";\nimport { Element } from \"../types\";\n\nexport const elementsByElementIdSelector = createCircuitGraphSelector(\n  (s) => s.elementsById\n);\n\nexport const elementIdsSelector = createCircuitGraphSelector(\n  createSelector(\n    elementsByElementIdSelector.local,\n    (elementsById: Record<string, Element>) => Object.keys(elementsById)\n  )\n);\n\nexport const elementTypesByElementIdSelector = createCircuitGraphSelector(\n  createSelector(\n    elementsByElementIdSelector.local,\n    (elementsById: Record<string, Element>) =>\n      mapValues(elementsById, (x) => x.elementType)\n  )\n);\n\nexport const elementFromElementIdSelector = createCircuitGraphSelector(\n  (s: CircuitGraphServiceState, elementId: string) =>\n    s.elementsById[elementId] || null\n);\n\nexport const elementIdsFromTypeSelector = createCircuitGraphSelector(\n  (s: CircuitGraphServiceState, desiredType: string) => {\n    const elementIds: string[] = [];\n    for (const elementId of Object.keys(s.elementsById)) {\n      const { elementType } = s.elementsById[elementId];\n      if (elementType === desiredType) {\n        elementIds.push(elementId);\n      }\n    }\n    return elementIds;\n  }\n);\n\nexport const elementTypeFromElementIdSelector = createCircuitGraphSelector(\n  (s: CircuitGraphServiceState, elementId: string) => {\n    const element = elementFromElementIdSelector.local(s, elementId);\n    if (!element) {\n      return null;\n    }\n    return element.elementType;\n  }\n);\n\nexport const elementIdsByCircuitIdSelector = createCircuitGraphSelector(\n  (state) => state.elementIdsByCircuitId\n);\n\nconst EmptyElementIds = Object.freeze([] as string[]);\nexport const elementIdsFromCircuitIdSelector = createCircuitGraphSelector<\n  string,\n  string[]\n>(\n  (state, circuitId: string) =>\n    state.elementIdsByCircuitId[circuitId] ?? EmptyElementIds\n);\n\nexport const circuitIdFromElementIdSelector = createCircuitGraphSelector<\n  string,\n  string | null\n>((state, elementId) => {\n  for (const circuitId of Object.keys(state.elementIdsByCircuitId)) {\n    const elementIds = state.elementIdsByCircuitId[circuitId];\n    if (elementIds.indexOf(elementId) !== -1) {\n      return circuitId;\n    }\n  }\n  return null;\n});\n\nexport const elementNamesByElementIdSelector = createCircuitGraphSelector(\n  createSelector(\n    (state) => state.elementsById,\n    (elementsById) => {\n      return mapValues(elementsById, (element) => element.elementName);\n    }\n  )\n);\n\nexport const elementNameOrDefaultFromElementIdSelector = createCircuitGraphSelector(\n  (s: CircuitGraphServiceState, elementId: string) => {\n    const element = elementFromElementIdSelector.local(s, elementId);\n    if (!element) {\n      return null;\n    }\n\n    return element.elementName ?? elementId.substr(0, 4);\n  }\n);\n\nexport const elementNameFromElementIdSelector = createCircuitGraphSelector(\n  (s: CircuitGraphServiceState, elementId: string) => {\n    const element = elementFromElementIdSelector.local(s, elementId);\n    if (!element) {\n      return null;\n    }\n\n    return element.elementName;\n  }\n);\n","import values from \"lodash/values\";\nimport { orderBy } from \"natural-orderby\";\n\nimport { isTruthy } from \"@/utils\";\n\nimport { CircuitGraphServiceState } from \"../state\";\nimport {\n  ElementPin,\n  isInputOutputWireSegment,\n  isInputWireSegment,\n  isOutputWireSegment,\n  WireSegment,\n} from \"../types\";\nimport { collectWireLineIds, createCircuitGraphSelector } from \"../utils\";\n\nimport { wireIdFromWireSegmentIdSelector } from \"./wires\";\nimport { elementNameOrDefaultFromElementIdSelector } from \"./elements\";\nimport { pinNameFromElementPinSelector } from \"./pins\";\n\nexport interface WireLineCandidate {\n  name: string;\n  lineId: string;\n  selected: boolean;\n}\n\nexport const wireLineCandidatesForSegmentId = createCircuitGraphSelector(\n  (state: CircuitGraphServiceState, segmentId: string) => {\n    const segment = state.wireSegmentsById[segmentId];\n    if (!segment || isInputOutputWireSegment(segment)) {\n      return [];\n    }\n\n    const wireId = wireIdFromWireSegmentIdSelector.local(state, segmentId);\n    if (!wireId) {\n      return [];\n    }\n\n    const [inputLineIds, outputLineIds] = collectWireLineIds(state, wireId);\n\n    let candidates: WireLineCandidate[] = [];\n    if (isInputWireSegment(segment)) {\n      candidates = outputLineIds\n        .map((lineId) => {\n          const elementPin = outputElementPinFromLineId(state, lineId);\n          if (!elementPin) {\n            return null;\n          }\n          const elementName = elementNameOrDefaultFromElementIdSelector.local(\n            state,\n            elementPin.elementId\n          );\n          const pinName = pinNameFromElementPinSelector.local(\n            state,\n            elementPin.elementId,\n            elementPin.pinId\n          );\n          return {\n            name: `From [${elementName}]:[${pinName}]`,\n            lineId,\n            selected: lineId === segment.lineId,\n          };\n        })\n        .filter(isTruthy);\n    } else if (isOutputWireSegment(segment)) {\n      candidates = inputLineIds\n        .filter((lineId) => !lineHasOutput(state, lineId, segment))\n        .map((lineId) => {\n          const inputPins = inputElementPinsFromLineId(state, lineId);\n          if (inputPins.length === 0) {\n            return null;\n          }\n          const firstElementName = elementNameOrDefaultFromElementIdSelector.local(\n            state,\n            inputPins[0].elementId\n          );\n          const firstPinName = pinNameFromElementPinSelector.local(\n            state,\n            inputPins[0].elementId,\n            inputPins[0].pinId\n          );\n          let name = `To [${firstElementName}]:[${firstPinName}]`;\n          if (inputPins.length > 1) {\n            name += `(+${inputPins.length - 1})`;\n          }\n          return {\n            name,\n            lineId,\n            selected: lineId === segment.lineId,\n          };\n        })\n        .filter(isTruthy);\n    }\n\n    return orderBy(candidates, \"name\", \"asc\");\n  }\n);\n\nfunction outputElementPinFromLineId(\n  state: CircuitGraphServiceState,\n  lineId: string\n): ElementPin | null {\n  for (const segment of values(state.wireSegmentsById)) {\n    if (!isOutputWireSegment(segment) || segment.lineId !== lineId) {\n      continue;\n    }\n    return segment.outputPin;\n  }\n\n  return null;\n}\n\nfunction inputElementPinsFromLineId(\n  state: CircuitGraphServiceState,\n  lineId: string\n): ElementPin[] {\n  const inputPins: ElementPin[] = [];\n  for (const segment of values(state.wireSegmentsById)) {\n    if (!isInputWireSegment(segment) || segment.lineId !== lineId) {\n      continue;\n    }\n    inputPins.push(segment.inputPin);\n  }\n\n  return inputPins;\n}\n\nfunction lineHasOutput(\n  state: CircuitGraphServiceState,\n  lineId: string,\n  excludeSegment?: WireSegment\n): boolean {\n  for (const segment of values(state.wireSegmentsById)) {\n    if (excludeSegment === segment) {\n      continue;\n    }\n    if (isOutputWireSegment(segment) && segment.lineId === lineId) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","import { AppState } from \"@/store\";\n\nimport {\n  circuitIdFromElementIdSelector,\n  elementNameOrDefaultFromElementIdSelector,\n} from \"@/services/circuit-graph/selectors/elements\";\nimport {\n  circuitIdToElementType,\n  elementTypeToCircuitId,\n} from \"@/elements/definitions/integrated-circuits/utils\";\n\nimport { ElementPin } from \"../types\";\n\nimport { connectionsSelector } from \"./connections\";\nimport { elementDefinitionFromElementIdSelector } from \"./element-def\";\nimport {\n  elementIdsFromTypeSelector,\n  elementTypeFromElementIdSelector,\n} from \"./elements\";\nimport { createCircuitGraphSelector } from \"../utils\";\nimport { CircuitGraphServiceState } from \"../state\";\n\nexport const pinDirectionFromElementPinSelector = (\n  state: AppState,\n  elementId: string,\n  pinId: string\n) => {\n  const def = elementDefinitionFromElementIdSelector(state, elementId);\n  if (!def) {\n    return null;\n  }\n\n  const pinDef = def.pins[pinId];\n  if (!pinDef) {\n    return null;\n  }\n  return pinDef.direction;\n};\n\n/**\n * Gets a map of element input pins to their output sources given an element id.\n *\n * WARN: Not react safe.  For reducer use only\n */\nexport const elementOutputSourcesByPinIdFromElementIdSelector = (\n  state: AppState,\n  elementId: string\n) => {\n  const connections = connectionsSelector(state);\n  const def = elementDefinitionFromElementIdSelector(state, elementId);\n\n  if (!def) {\n    return {};\n  }\n\n  let outputPins: string[] = [];\n  outputPins = Object.keys(def.pins).filter(\n    (x) => def.pins[x].direction === \"output\"\n  );\n\n  const outputConnections = connections.filter(\n    (x) => x.outputPin.elementId === elementId\n  );\n\n  const result: Record<string, ElementPin[]> = {};\n  for (const pin of outputPins) {\n    result[pin] = [];\n  }\n\n  for (const connection of outputConnections) {\n    const { outputPin, inputPin } = connection;\n    result[outputPin.pinId].push(inputPin);\n  }\n\n  return result;\n};\n\nexport const elementPinsFromPinElementSelector = (\n  state: AppState,\n  elementId: string\n): ElementPin[] => {\n  const elementType = elementTypeFromElementIdSelector(state, elementId);\n  if (elementType !== \"pin-input\" && elementType !== \"pin-output\") {\n    return [];\n  }\n\n  const circuitId = circuitIdFromElementIdSelector(state, elementId);\n  if (!circuitId) {\n    return [];\n  }\n\n  const icElementType = circuitIdToElementType(circuitId);\n  const icElementIds = elementIdsFromTypeSelector(state, icElementType);\n\n  return icElementIds.map((icElementId) => ({\n    elementId: icElementId,\n    pinId: elementId,\n  }));\n};\n\nexport const pinNameFromElementPinSelector = createCircuitGraphSelector(\n  (state: CircuitGraphServiceState, elementId: string, pinId: string) => {\n    const elementType = elementTypeFromElementIdSelector.local(\n      state,\n      elementId\n    );\n    const circuitId = elementTypeToCircuitId(elementType);\n    if (circuitId) {\n      // Pin id is the element id of the pin, look up it's name.\n      return elementNameOrDefaultFromElementIdSelector.local(state, pinId);\n    }\n\n    return pinId;\n  }\n);\n","import { ZeroPoint } from \"@/geometry\";\n\nimport { AppState } from \"@/store\";\n\nimport { elementPinPositionFromElementPinSelector } from \"@/services/circuit-layout/selectors/element-pin-positions\";\n\nimport { CircuitGraphServiceState } from \"../state\";\nimport { createCircuitGraphSelector } from \"../utils\";\n\nimport { wireSegmentByWireSegmentIdSelector } from \"./wires\";\n\nexport const wireJointPositionByJointIdSelector = createCircuitGraphSelector(\n  (s) => s.wireJointPositionsByJointId\n);\n\nexport const wireJointPositionFromJointIdSelector = createCircuitGraphSelector(\n  (state: CircuitGraphServiceState, jointId: string) =>\n    state.wireJointPositionsByJointId[jointId] ?? ZeroPoint\n);\n\nexport const startPositionForWireSegmentId = (\n  state: AppState,\n  wireSegmentId: string\n) => {\n  const segment = wireSegmentByWireSegmentIdSelector(state, wireSegmentId);\n  switch (segment.type) {\n    case \"output\":\n    case \"input-output\": {\n      // Outputs start at the output and end at the joint.\n      const { outputPin } = segment;\n      return elementPinPositionFromElementPinSelector(\n        state,\n        outputPin.elementId,\n        outputPin.pinId\n      );\n    }\n    case \"input\": {\n      // Inputs start at joint and end at input.\n      const { jointId } = segment;\n      return wireJointPositionFromJointIdSelector(state, jointId);\n    }\n    case \"bridge\": {\n      const { jointAId } = segment;\n      return wireJointPositionFromJointIdSelector(state, jointAId);\n    }\n  }\n};\n\nexport const endPositionForWireSegmentId = (\n  state: AppState,\n  wireSegmentId: string\n) => {\n  const segment = wireSegmentByWireSegmentIdSelector(state, wireSegmentId);\n  switch (segment.type) {\n    case \"output\": {\n      // Outputs start at the output and end at the joint.\n      const { jointId } = segment;\n      return wireJointPositionFromJointIdSelector(state, jointId);\n    }\n    case \"input\":\n    case \"input-output\": {\n      // Inputs start at joint and end at input.\n      const { inputPin } = segment;\n      return elementPinPositionFromElementPinSelector(\n        state,\n        inputPin.elementId,\n        inputPin.pinId\n      );\n    }\n    case \"bridge\": {\n      const { jointBId } = segment;\n      return wireJointPositionFromJointIdSelector(state, jointBId);\n    }\n  }\n};\n","import { createSelector } from \"reselect\";\nimport first from \"lodash/first\";\nimport values from \"lodash/values\";\nimport flatMap from \"lodash/flatMap\";\nimport uniq from \"lodash/uniq\";\nimport find from \"lodash/find\";\n\nimport { AppState } from \"@/store\";\n\nimport { immutableEmptyArray } from \"@/arrays\";\n\nimport { elementOutputFromCircuitElementPinSelector } from \"@/services/simulator/selectors/elements\";\n\nimport { CircuitGraphServiceState } from \"../state\";\nimport {\n  createCircuitGraphSelector,\n  getJointIdsFromSegment,\n  getSegmentIdsFromJoint,\n} from \"../utils\";\nimport {\n  ElementPin,\n  elementPinEquals,\n  isInputOutputWireSegment,\n  isInputWireSegment,\n  isOutputWireSegment,\n  OutputWireSegment,\n  wireSegmentHasInput,\n} from \"../types\";\nimport { elementTypeFromElementIdSelector } from \"./elements\";\nimport { elementTypeToCircuitId } from \"@/elements/definitions/integrated-circuits/utils\";\n\nexport const wiresByWireIdSelector = createCircuitGraphSelector(\n  (state) => state.wiresByWireId\n);\nexport const wireIdsSelector = createSelector(\n  wiresByWireIdSelector,\n  (wiresByWireId) => Object.keys(wiresByWireId)\n);\n\nexport const wireSegmentsByWireSegmentIdSelector = createCircuitGraphSelector(\n  (state) => state.wireSegmentsById\n);\n\nexport const wireSegmentsSelector = createCircuitGraphSelector(\n  createSelector(\n    wireSegmentsByWireSegmentIdSelector.local,\n    (segmentsBySegmentId) => values(segmentsBySegmentId)\n  )\n);\n\nexport const wireSegmentIdsFromWireIdSelector = createCircuitGraphSelector(\n  (s: CircuitGraphServiceState, wireId: string) => {\n    const wire = s.wiresByWireId[wireId];\n    if (!wire) {\n      return immutableEmptyArray<string>();\n    }\n    return wire.wireSegmentIds;\n  }\n);\n\nexport const wireIdFromWireSegmentIdSelector = createCircuitGraphSelector(\n  (s: CircuitGraphServiceState, segmentId: string) => {\n    for (const wireId of Object.keys(s.wiresByWireId)) {\n      const { wireSegmentIds } = s.wiresByWireId[wireId];\n      if (wireSegmentIds.indexOf(segmentId) !== -1) {\n        return wireId;\n      }\n    }\n    return null;\n  }\n);\n\nexport const wireJointIdsFromWireIdSelector = createCircuitGraphSelector(\n  (s: CircuitGraphServiceState, wireId: string) => {\n    const wire = s.wiresByWireId[wireId];\n    if (!wire) {\n      return immutableEmptyArray<string>();\n    }\n\n    return wire.wireJointIds;\n  }\n);\n\nexport const circuitIdFromWireJointIdSelector = createCircuitGraphSelector(\n  (s: CircuitGraphServiceState, jointId: string) => {\n    const wireId = wireIdFromWireJointIdSelector.local(s, jointId);\n    if (!wireId) {\n      return null;\n    }\n\n    for (const circuitId of Object.keys(s.wireIdsByCircuitId)) {\n      if (s.wireIdsByCircuitId[circuitId].indexOf(wireId) !== -1) {\n        return circuitId;\n      }\n    }\n\n    return null;\n  }\n);\n\nexport const wireIdFromWireJointIdSelector = createCircuitGraphSelector(\n  (s: CircuitGraphServiceState, jointId: string) => {\n    for (const wireId of Object.keys(s.wiresByWireId)) {\n      const { wireJointIds } = s.wiresByWireId[wireId];\n      if (wireJointIds.indexOf(jointId) !== -1) {\n        return wireId;\n      }\n    }\n    return null;\n  }\n);\n\nexport const wireSegmentTypeFromSegmentIdSelector = createCircuitGraphSelector(\n  (s: CircuitGraphServiceState, segmentId: string) => {\n    const segment = s.wireSegmentsById[segmentId];\n    if (!segment) {\n      return null;\n    }\n    return segment.type;\n  }\n);\n\nexport const wireJointIdsByWireIdSelector = createCircuitGraphSelector(\n  (s: CircuitGraphServiceState, wireId: string) => {\n    const segmentIds = wireSegmentIdsFromWireIdSelector.local(s, wireId);\n    const jointIds = flatMap(segmentIds, (segmentId) => {\n      const segment = wireSegmentByWireSegmentIdSelector.local(s, segmentId);\n      return getJointIdsFromSegment(segment);\n    });\n\n    return uniq(jointIds);\n  }\n);\n\nexport const wireSegmentByWireSegmentIdSelector = createCircuitGraphSelector(\n  (s: CircuitGraphServiceState, wireSegmentId: string) => {\n    return s.wireSegmentsById[wireSegmentId] ?? null;\n  }\n);\n\nexport const wireSegmentIdFromElementPinSelector = createCircuitGraphSelector(\n  (state: CircuitGraphServiceState, elementId: string, pinId: string) => {\n    const wireIds = Object.keys(state.wiresByWireId);\n\n    for (const wireId of wireIds) {\n      const wire = state.wiresByWireId[wireId];\n      for (const segmentId of wire.wireSegmentIds) {\n        const segment = state.wireSegmentsById[segmentId];\n        if (\n          wireSegmentHasInput(segment) &&\n          elementPinEquals(segment.inputPin, { elementId, pinId })\n        ) {\n          return segmentId;\n        }\n        if (\n          isOutputWireSegment(segment) &&\n          elementPinEquals(segment.outputPin, { elementId, pinId })\n        ) {\n          return segmentId;\n        }\n      }\n    }\n\n    return null;\n  }\n);\n\nexport const inputPinIsWiredSelector = createCircuitGraphSelector(\n  (state: CircuitGraphServiceState, elementId: string, pinId: string) => {\n    const segmentId = wireSegmentIdFromElementPinSelector.local(\n      state,\n      elementId,\n      pinId\n    );\n    if (!segmentId) {\n      return false;\n    }\n\n    const segment = state.wireSegmentsById[segmentId];\n    return wireSegmentHasInput(segment);\n  }\n);\n\nexport const wireIdsFromCircuitIdSelector = createCircuitGraphSelector(\n  (s: CircuitGraphServiceState, circuitId: string) => {\n    return s.wireIdsByCircuitId[circuitId] ?? immutableEmptyArray<string>();\n  }\n);\n\nexport const circuitIdForWireIdSelector = createCircuitGraphSelector(\n  (s: CircuitGraphServiceState, wireId: string) => {\n    for (const circuitId of Object.keys(s.wireIdsByCircuitId)) {\n      if (s.wireIdsByCircuitId[circuitId].indexOf(wireId) !== -1) {\n        return circuitId;\n      }\n    }\n\n    return null;\n  }\n);\n\n/**\n * Gets a list of wire joint ids in a given circuit.\n * WARN: Not react safe.\n */\nexport const wireJointIdsFromCircuitIdSelector = createCircuitGraphSelector(\n  (s: CircuitGraphServiceState, circuitId: string) => {\n    const wireIds = s.wireIdsByCircuitId[circuitId];\n    const jointIds = flatMap(\n      wireIds,\n      (wireId) => s.wiresByWireId[wireId].wireJointIds\n    );\n    return jointIds;\n  }\n);\n\n/**\n * Gets a list of wire segment ids in a given circuit.\n * WARN: Not react safe.\n */\nexport const wireSegmentIdsFromCircuitIdSelector = createCircuitGraphSelector(\n  (s: CircuitGraphServiceState, circuitId: string) => {\n    const wireIds = s.wireIdsByCircuitId[circuitId];\n    const jointIds = flatMap(\n      wireIds,\n      (wireId) => s.wiresByWireId[wireId].wireSegmentIds\n    );\n    return jointIds;\n  }\n);\n\nexport const segmentIdsForJointIdSelector = createCircuitGraphSelector(\n  (s: CircuitGraphServiceState, jointId: string) => {\n    const wireId = wireIdFromWireJointIdSelector.local(s, jointId);\n    if (!wireId) {\n      return immutableEmptyArray<string>();\n    }\n    const wire = s.wiresByWireId[wireId];\n\n    const segmentIds: string[] = [];\n    for (const segmentId of wire.wireSegmentIds) {\n      const jointIds = getJointIdsFromSegment(s.wireSegmentsById[segmentId]);\n      if (jointIds.indexOf(jointId) !== -1) {\n        segmentIds.push(segmentId);\n      }\n    }\n    return segmentIds;\n  }\n);\n\n/**\n * A map of all element pins supplying power to a segment by the segment id.\n * TODO: This cache could be made more aggressive.  We can only generate it on sim start,\n * or only invalidate specific wire networks when modified.  This would speed up editing.\n */\nconst wireSegmentSourcesBySegmentIdSelector = createSelector(\n  (state: AppState) => state.services.circuitGraph,\n  (circuitGraph) => {\n    const sources: Record<string, ElementPin[]> = {};\n    for (const wireId of Object.keys(circuitGraph.wiresByWireId)) {\n      collectSegmentSources(wireId, sources, circuitGraph);\n    }\n    return sources;\n  }\n);\n\nexport const segmentIsWiredSelector = (state: AppState, segmentId: string) => {\n  const segmentSourcesBySegmentId = wireSegmentSourcesBySegmentIdSelector(\n    state\n  );\n  const source = segmentSourcesBySegmentId[segmentId];\n  return source && source.length > 0;\n};\n\nfunction collectSegmentSources(\n  wireId: string,\n  segmentSources: Record<string, ElementPin[]>,\n  circuitGraph: CircuitGraphServiceState\n): void {\n  const wire = circuitGraph.wiresByWireId[wireId];\n  if (!wire) {\n    return;\n  }\n\n  for (const segmentId of wire.wireSegmentIds) {\n    const segment = circuitGraph.wireSegmentsById[segmentId];\n    if (isInputOutputWireSegment(segment)) {\n      addSegmentSource(segmentSources, segmentId, segment.outputPin);\n      continue;\n    }\n\n    if (isOutputWireSegment(segment)) {\n      traceSegmentToInput(\n        wireId,\n        segmentId,\n        null,\n        segment,\n        segmentSources,\n        circuitGraph\n      );\n    }\n  }\n}\n\nfunction traceSegmentToInput(\n  wireId: string,\n  segmentId: string,\n  entryJointId: string | null,\n  outputSegment: OutputWireSegment,\n  segmentSources: Record<string, ElementPin[]>,\n  circuitGraph: CircuitGraphServiceState\n): boolean {\n  const segment = circuitGraph.wireSegmentsById[segmentId];\n\n  if (isInputWireSegment(segment)) {\n    if (segment.lineId !== outputSegment.lineId) {\n      return false;\n    }\n\n    addSegmentSource(segmentSources, segmentId, outputSegment.outputPin);\n    return true;\n  }\n\n  // Max of 2 joints.  We always start on an output, and follow other joints.\n  // This will have at most 1 joint.\n  const jointId = first(\n    getJointIdsFromSegment(segment).filter((x) => x !== entryJointId)\n  );\n  if (!jointId) {\n    return false;\n  }\n\n  const connectedSegmentIds = getSegmentIdsFromJoint(\n    circuitGraph,\n    wireId,\n    jointId\n  ).filter((x) => x !== segmentId);\n\n  let hasAtLeastOneInput = false;\n  for (const connectedSegmentId of connectedSegmentIds) {\n    const hasInput = traceSegmentToInput(\n      wireId,\n      connectedSegmentId,\n      jointId,\n      outputSegment,\n      segmentSources,\n      circuitGraph\n    );\n    if (hasInput) {\n      // A connection passes through us, mark it.\n      hasAtLeastOneInput = true;\n    }\n  }\n\n  if (hasAtLeastOneInput) {\n    addSegmentSource(segmentSources, segmentId, outputSegment.outputPin);\n  }\n\n  return hasAtLeastOneInput;\n}\n\nfunction addSegmentSource(\n  segmentSources: Record<string, ElementPin[]>,\n  segmentId: string,\n  source: ElementPin\n) {\n  if (!segmentSources[segmentId]) {\n    segmentSources[segmentId] = [];\n  }\n  // TODO: We can probably resolve this pin across ics, but that would need to involve\n  // calculating a delta of into our out of ics which still works when approached from different\n  // paths.\n  segmentSources[segmentId].push(source);\n}\n\nexport const wireSegmentPoweredSelector = (\n  state: AppState,\n  elementIdPath: string[],\n  wireSegmentId: string\n) => {\n  const sourcesById = wireSegmentSourcesBySegmentIdSelector(state);\n  const segmentSources = sourcesById[wireSegmentId];\n  if (!segmentSources) {\n    return false;\n  }\n\n  return segmentSources.some((sourcePin) =>\n    getPoweredStateFromOutputPin(state, elementIdPath, sourcePin)\n  );\n};\n\nfunction getPoweredStateFromOutputPin(\n  state: AppState,\n  elementIdPath: string[],\n  elementPin: ElementPin\n): boolean {\n  const resolved = resolveOutputPin(state, elementIdPath, elementPin);\n  if (!resolved) {\n    return false;\n  }\n  return elementOutputFromCircuitElementPinSelector(\n    state,\n    [...resolved.elementIdPath, resolved.elementPin.elementId],\n    resolved.elementPin.pinId\n  );\n}\n\nfunction resolveOutputPin(\n  state: AppState,\n  elementIdPath: string[],\n  elementPin: ElementPin\n): { elementIdPath: string[]; elementPin: ElementPin } | null {\n  // TODO: If target is a pin, keep chasing through the pins until we find the real element\n  // the pin is sourcing from.\n  const elementType = elementTypeFromElementIdSelector(\n    state,\n    elementPin.elementId\n  );\n\n  if (elementType === \"pin-input\") {\n    // We are wired to an input pin inside an ic, track down the element outside the ic that powers us.\n    const icId = elementIdPath[elementIdPath.length - 1];\n    const icPath = elementIdPath.slice(0, elementIdPath.length - 1);\n    // ic pin is the same id as the pin element.\n    const outputPin = getOutputPinForInputPin(state, {\n      elementId: icId,\n      pinId: elementPin.elementId,\n    });\n    if (!outputPin) {\n      return null;\n    }\n    return resolveOutputPin(state, icPath, outputPin);\n  }\n\n  const icCircuit = elementTypeToCircuitId(elementType);\n  if (icCircuit != null) {\n    // We are wired to an IC, enter the ic and track the output.\n    const icPath = [...elementIdPath, elementPin.elementId];\n    const inputPin: ElementPin = {\n      // element id of the pin element will be the pin id of the ic.\n      elementId: elementPin.pinId,\n      pinId: \"IN\",\n    };\n    const outputPin = getOutputPinForInputPin(state, inputPin);\n    if (!outputPin) {\n      return null;\n    }\n    return resolveOutputPin(state, icPath, outputPin);\n  }\n\n  return { elementIdPath, elementPin };\n}\n\n// TODO: This takes lots of time in firefox.\n// This should be cachable (map by input pin), except for that we need the element defs\n// to figure out all input pins to map by, and getting that requires the root state.\n// The def selector needs to be modified to only take a subset of the state so that we can\n// keep it cached as the simulator service data changes.\nfunction getOutputPinForInputPin(\n  state: AppState,\n  elementPin: ElementPin\n): ElementPin | null {\n  const { wiresByWireId, wireSegmentsById } = state.services.circuitGraph;\n  const wireIds = Object.keys(wiresByWireId);\n  for (const wireId of wireIds) {\n    const wire = wiresByWireId[wireId];\n    for (const segmentId of wire.wireSegmentIds) {\n      const segment = wireSegmentsById[segmentId];\n      if (!wireSegmentHasInput(segment)) {\n        continue;\n      }\n      if (elementPinEquals(segment.inputPin, elementPin)) {\n        if (segment.type === \"input-output\") {\n          return segment.outputPin;\n        } else {\n          const outputSegment = find(\n            wire.wireSegmentIds\n              .map((id) => wireSegmentsById[id])\n              .filter(isOutputWireSegment),\n            (search) => segment.lineId === search.lineId\n          );\n          if (!outputSegment) {\n            return null;\n          }\n          return outputSegment.outputPin;\n        }\n      }\n    }\n  }\n\n  return null;\n}\n","import { Point } from \"@/geometry\";\nimport { ROOT_CIRCUIT_ID } from \"../circuits/constants\";\n\nimport { Element, Wire, WireSegment } from \"./types\";\n\nexport interface CircuitGraphServiceState {\n  /**\n   * Arrays of element ids contained in a circuit by the containing circuit id.\n   */\n  elementIdsByCircuitId: Record<string, string[]>;\n\n  /**\n   * A map of elements by element id.\n   */\n  elementsById: Record<string, Element>;\n\n  /**\n   * Arrays of wire ids contained in a circuit by the containing circuit id.\n   */\n  wireIdsByCircuitId: Record<string, string[]>;\n\n  /**\n   * A map of wire data by the wire id.\n   */\n  wiresByWireId: Record<string, Wire>;\n\n  /**\n   * A map of wire segments by wire segment id.\n   */\n  wireSegmentsById: Record<string, WireSegment>;\n\n  // FIXME: It ended up being simplier to track positions in graph...\n  // Move all layout to graph, and find a better name for graph.\n  /**\n   * The positions of wire joints.\n   */\n  wireJointPositionsByJointId: Record<string, Point>;\n}\n\nconst _defaultState: CircuitGraphServiceState = {\n  elementIdsByCircuitId: {\n    [ROOT_CIRCUIT_ID]: [],\n  },\n  elementsById: {},\n  wireIdsByCircuitId: {\n    [ROOT_CIRCUIT_ID]: [],\n  },\n  wiresByWireId: {},\n  wireSegmentsById: {},\n  wireJointPositionsByJointId: {},\n};\n\nexport const defaultCircuitGraphServiceState = Object.freeze(_defaultState);\n","import { Point } from \"@/geometry\";\n\nexport interface Element {\n  /**\n   * The type of this element.\n   */\n  elementType: string;\n\n  /**\n   * The user provided name of this element.\n   */\n  elementName: string | null;\n}\n\n/**\n * Identifies a pin on a specific element.\n */\nexport interface ElementPin {\n  elementId: string;\n  pinId: string;\n}\n\nexport function elementPinEquals(a: ElementPin, b: ElementPin) {\n  return a.elementId === b.elementId && a.pinId === b.pinId;\n}\n\n/**\n * A connection from an element output to an element input.\n */\nexport interface ElementConnection {\n  /**\n   * The output pin on an element, sending a value outwards.\n   */\n  outputPin: ElementPin;\n\n  /**\n   * The input pin on an element to receive the value.\n   */\n  inputPin: ElementPin;\n}\n\nexport interface Wire {\n  wireSegmentIds: string[];\n  wireJointIds: string[];\n}\n\n/**\n * Defines a segment that passes a value into an element from the wire.\n */\nexport interface InputWireSegment {\n  type: \"input\";\n\n  /**\n   * The input pin we supply a value to.\n   */\n  inputPin: ElementPin;\n\n  /**\n   * The joint id on the non-pin side of this segment.\n   */\n  jointId: string;\n\n  /**\n   * The id of the line in the wire, used to match against the source output.\n   */\n  lineId: string;\n}\n\n/**\n * Defines a wire segment that pulls a value into the wire.\n */\nexport interface OutputWireSegment {\n  type: \"output\";\n\n  /**\n   * The output pin we take our value from.\n   */\n  outputPin: ElementPin;\n\n  /**\n   * The joint id of the non-pin side of this segment.\n   */\n  jointId: string;\n\n  /**\n   * The id of the line in the wire, used to match against inputs.\n   */\n  lineId: string;\n}\n\n/**\n * Defines a wire segment that directly connects an input to an output.\n *\n * This is a special case where a wire goes directly between two elements with no\n * additional inputs or outputs.\n */\nexport interface InputOutputWireSegment {\n  type: \"input-output\";\n  /**\n   * The output pin supplying the value.\n   */\n  outputPin: ElementPin;\n  /**\n   * The input pin where the value is supplied.\n   */\n  inputPin: ElementPin;\n}\n\n/**\n * Defines a wire segment that bridges two other segments.\n */\nexport interface BridgeWireSegment {\n  type: \"bridge\";\n  /**\n   * The first joint in the bridge.\n   */\n  jointAId: string;\n\n  /**\n   * The second joint in the bridge.\n   */\n  jointBId: string;\n}\n\nexport type WireSegment =\n  | InputWireSegment\n  | OutputWireSegment\n  | InputOutputWireSegment\n  | BridgeWireSegment;\n\nexport function isOutputWireSegment(\n  segment: WireSegment\n): segment is OutputWireSegment {\n  return segment.type === \"output\";\n}\n\nexport function isInputWireSegment(\n  segment: WireSegment\n): segment is InputWireSegment {\n  return segment.type === \"input\";\n}\n\nexport function isInputOutputWireSegment(\n  segment: WireSegment\n): segment is InputOutputWireSegment {\n  return segment.type === \"input-output\";\n}\n\nexport function wireSegmentHasInput(\n  segment: WireSegment\n): segment is InputWireSegment | InputOutputWireSegment {\n  return segment.type === \"input\" || segment.type === \"input-output\";\n}\n\n/**\n * Signifies a joint as a connection target.\n */\nexport interface JointWireConnectTarget {\n  type: \"joint\";\n\n  /**\n   * The id of the joint being connected to.\n   */\n  jointId: string;\n}\n\n/**\n * Signifies a wire segment as a connection target.\n */\nexport interface SegmentWireConnectTarget {\n  type: \"segment\";\n\n  /**\n   * The id of the segment being connected to.\n   */\n  segmentId: string;\n\n  /**\n   * The length along the segment the connection is connecting to.\n   */\n  segmentInsertLength: number;\n}\n\n/**\n * Signifies an element pin as a connection target.\n */\nexport interface PinWireConnectTarget {\n  type: \"pin\";\n\n  /**\n   * The pin being connected to.\n   */\n  pin: ElementPin;\n}\n\n/**\n * Signifies a loose connection floating on the field as a connection target.\n */\nexport interface FloatingWireConnectTarget {\n  type: \"floating\";\n\n  /**\n   * The point where the wire will float at.\n   */\n  point: Point;\n}\n\nexport type WireConnectTarget =\n  | JointWireConnectTarget\n  | SegmentWireConnectTarget\n  | PinWireConnectTarget\n  | FloatingWireConnectTarget;\n","import {\n  createServiceReducerCreator,\n  createServiceSelectorCreator,\n} from \"../service-state-utils\";\n\nimport { CircuitGraphServiceState } from \"./state\";\nimport { WireSegment } from \"./types\";\n\nexport const createCircuitGraphReducer = createServiceReducerCreator(\n  \"circuitGraph\"\n);\nexport const createCircuitGraphSelector = createServiceSelectorCreator(\n  \"circuitGraph\"\n);\n\nexport function getSegmentIdsFromJoint(\n  state: CircuitGraphServiceState,\n  wireId: string,\n  jointId: string\n): string[] {\n  const wire = state.wiresByWireId[wireId];\n\n  const jointedSegmentIds = new Set<string>();\n  for (const segmentId of wire.wireSegmentIds) {\n    const segment = state.wireSegmentsById[segmentId];\n    switch (segment.type) {\n      case \"input\":\n      case \"output\":\n        if (segment.jointId === jointId) jointedSegmentIds.add(segmentId);\n        break;\n      case \"bridge\":\n        if (segment.jointAId === jointId || segment.jointBId === jointId)\n          jointedSegmentIds.add(segmentId);\n        break;\n    }\n  }\n\n  return Array.from(jointedSegmentIds);\n}\n\nexport function getJointIdsFromSegment(segment: WireSegment): string[] {\n  switch (segment.type) {\n    case \"bridge\":\n      return [segment.jointAId, segment.jointBId];\n    case \"input\":\n    case \"output\":\n      return [segment.jointId];\n    default:\n      return [];\n  }\n}\n\nexport function collectWireLineIds(\n  state: CircuitGraphServiceState,\n  wireId: string\n): [inputLineIds: string[], outputLineIds: string[]] {\n  const wire = state.wiresByWireId[wireId];\n  if (!wire) {\n    return [[], []];\n  }\n\n  const inputLineIds = new Set<string>();\n  const outputLineIds = new Set<string>();\n  for (const segId of wire.wireSegmentIds) {\n    const seg = state.wireSegmentsById[segId];\n    if (seg.type === \"input\") {\n      inputLineIds.add(seg.lineId);\n    } else if (seg.type === \"output\") {\n      outputLineIds.add(seg.lineId);\n    }\n  }\n\n  return [Array.from(inputLineIds), Array.from(outputLineIds)];\n}\n","import { fpSet } from \"@/utils\";\n\nimport { ZeroPoint } from \"@/geometry\";\nimport { isAddElementAction } from \"@/actions/element-add\";\n\nimport { createCircuitLayoutReducer } from \"../utils\";\n\nexport default createCircuitLayoutReducer((state, action) => {\n  if (!isAddElementAction(action)) {\n    return state;\n  }\n  const { elementId, position = ZeroPoint } = action.payload;\n\n  return fpSet(state, \"elementPositionsById\", elementId, position);\n});\n","import difference from \"lodash/difference\";\nimport pick from \"lodash/pick\";\n\nimport { priorityBefore, reducerPriority } from \"@/store/priorities\";\n\nimport { isDeleteElementAction } from \"@/actions/element-delete\";\n\nimport circuitGraphElementDeleteReducer from \"@/services/circuit-graph/reducer/element-delete\";\n\nimport { createCircuitLayoutReducer } from \"../utils\";\n\n// We need to run this reducer before graph runs, as we want to check what connections are on the element being deleted.\nexport default reducerPriority(\n  priorityBefore(circuitGraphElementDeleteReducer),\n  createCircuitLayoutReducer((state, action) => {\n    if (!isDeleteElementAction(action)) {\n      return state;\n    }\n\n    const { elementIds } = action.payload;\n\n    const remainingElementIds = difference(\n      Object.keys(state.elementPositionsById),\n      elementIds\n    );\n\n    return {\n      ...state,\n      elementPositionsById: pick(\n        state.elementPositionsById,\n        remainingElementIds\n      ),\n    };\n  })\n);\n","import mapValues from \"lodash/mapValues\";\nimport pick from \"lodash/pick\";\n\nimport { isMoveElementAction } from \"@/actions/element-move\";\n\nimport { applyGridElementSnapSelector } from \"@/services/circuit-editor-drag/selectors/snap\";\n\nimport { createCircuitLayoutReducer } from \"../utils\";\n\nexport default createCircuitLayoutReducer((state, action, appState) => {\n  if (!isMoveElementAction(action)) {\n    return state;\n  }\n\n  const { elementIds, position, relative, snapMode } = action.payload;\n\n  const movedElementPositions = mapValues(\n    pick(state.elementPositionsById, elementIds),\n    (p) => {\n      let movedP = {\n        x: relative ? p.x + position.x : position.x,\n        y: relative ? p.y + position.y : position.y,\n      };\n      if (snapMode === \"element\") {\n        movedP = applyGridElementSnapSelector(appState, movedP);\n      }\n      return movedP;\n    }\n  );\n\n  return {\n    ...state,\n    elementPositionsById: {\n      ...state.elementPositionsById,\n      ...movedElementPositions,\n    },\n  };\n});\n","import { concatReducers } from \"@/store/utils\";\n\nimport elementAddReducer from \"./element-add\";\nimport elementDeleteReducer from \"./element-delete\";\nimport elementMoveReducer from \"./element-move\";\nimport projectNewReducer from \"./project-new\";\n\nconst fieldReducer = concatReducers(\n  elementAddReducer,\n  elementDeleteReducer,\n  elementMoveReducer,\n  projectNewReducer\n);\n\nexport default fieldReducer;\n","import { isNewProjectAction } from \"@/actions/project-new\";\n\nimport { createCircuitLayoutReducer } from \"../utils\";\nimport { defaultCircuitLayoutServiceState } from \"../state\";\n\nexport default createCircuitLayoutReducer((state, action) => {\n  if (!isNewProjectAction(action)) {\n    return state;\n  }\n\n  return defaultCircuitLayoutServiceState;\n});\n","import { createSelector } from \"reselect\";\n\nimport mapValues from \"lodash/mapValues\";\n\nimport { offsetRectangle, ZeroRect } from \"@/geometry\";\n\nimport { elementTypesByElementIdSelector } from \"@/services/circuit-graph/selectors/elements\";\nimport { elementDefinitionsByTypeSelector } from \"@/services/element-types/selectors/element-types\";\n\nimport { elementPositionsByElementIdSelector } from \"./element-positions\";\n\nexport const elementRectsByIdSelector = createSelector(\n  elementPositionsByElementIdSelector,\n  elementDefinitionsByTypeSelector,\n  elementTypesByElementIdSelector,\n  (positionsById, elementDefsByType, elementTypesById) =>\n    mapValues(positionsById, (position, id) => {\n      const type = elementTypesById[id];\n      if (!type) {\n        return ZeroRect;\n      }\n      const def = elementDefsByType[type];\n      if (!def) {\n        return ZeroRect;\n      }\n\n      return offsetRectangle(def.visual.hitRect, position);\n    })\n);\n","import { createSelector } from \"reselect\";\n\nimport { AppState } from \"@/store\";\n\nimport { Point, pointAdd, ZeroPoint } from \"@/geometry\";\n\nimport { elementTypesByElementIdSelector } from \"@/services/circuit-graph/selectors/elements\";\nimport { elementDefinitionsByTypeSelector } from \"@/services/element-types/selectors/element-types\";\n\nimport { elementPositionsByElementIdSelector } from \"./element-positions\";\n\nexport const elementPinPositionsByPinIdByElementIdSelector = createSelector(\n  elementDefinitionsByTypeSelector,\n  elementPositionsByElementIdSelector,\n  elementTypesByElementIdSelector,\n  (elementDefsByType, elementPositionsByElementId, elementTypesByElementId) => {\n    const elementPinPositionsByPinIdByElementId: Record<\n      string,\n      Record<string, Point>\n    > = {};\n\n    const elementIds = Object.keys(elementTypesByElementId);\n    for (const elementId of elementIds) {\n      const elementPinPositionsByPinId: Record<string, Point> = {};\n      elementPinPositionsByPinIdByElementId[\n        elementId\n      ] = elementPinPositionsByPinId;\n\n      const elementPosition =\n        elementPositionsByElementId[elementId] ?? ZeroPoint;\n\n      const elementType = elementTypesByElementId[elementId];\n      if (!elementType) {\n        continue;\n      }\n      const def = elementDefsByType[elementType];\n      if (!def) {\n        continue;\n      }\n\n      const pinIds = Object.keys(def.pins);\n      for (const pinId of pinIds) {\n        const relPinPosition = def.pins[pinId];\n        const pinPosition = pointAdd(elementPosition, relPinPosition);\n        elementPinPositionsByPinId[pinId] = pinPosition;\n      }\n    }\n\n    return elementPinPositionsByPinIdByElementId;\n  }\n);\n\nexport const elementPinPositionFromElementPinSelector = (\n  state: AppState,\n  elementId: string,\n  pinId: string\n) => {\n  const positonsByPinIdByElementId = elementPinPositionsByPinIdByElementIdSelector(\n    state\n  );\n  const elementPinPositions = positonsByPinIdByElementId[elementId];\n  if (!elementPinPositions) {\n    return ZeroPoint;\n  }\n  return elementPinPositions[pinId] ?? ZeroPoint;\n};\n","import { ZeroPoint } from \"@/geometry\";\n\nimport { createCircuitLayoutSelector } from \"../utils\";\nimport { CircuitLayoutServiceState } from \"../state\";\n\nexport const elementPositionsByElementIdSelector = createCircuitLayoutSelector(\n  (state) => state.elementPositionsById\n);\n\nexport const elementPositionFromElementIdSelector = createCircuitLayoutSelector(\n  (state: CircuitLayoutServiceState, elementId: string) =>\n    state.elementPositionsById[elementId] ?? ZeroPoint\n);\n","import { createSelector } from \"reselect\";\nimport values from \"lodash/values\";\n\nimport { Rectangle, union } from \"@/geometry\";\n\nimport { wireJointPositionByJointIdSelector } from \"@/services/circuit-graph/selectors/wire-positions\";\n\nimport { elementRectsByIdSelector } from \"./element-bounds\";\n\nconst MinFieldRect: Readonly<Rectangle> = Object.freeze({\n  p1: {\n    x: -100,\n    y: -100,\n  },\n  p2: {\n    x: 100,\n    y: 100,\n  },\n});\n\nexport const fieldRectSelector = createSelector(\n  elementRectsByIdSelector,\n  wireJointPositionByJointIdSelector,\n  (elementRectsById, jointsById) => {\n    const elementRects = values(elementRectsById);\n    const jointRects = values(jointsById).map((p) => ({ p1: p, p2: p }));\n\n    return [...elementRects, ...jointRects].reduce(union, MinFieldRect);\n  }\n);\n","import { Point } from \"@/geometry\";\n\nexport interface CircuitLayoutServiceState {\n  elementPositionsById: Record<string, Point>;\n}\n\nconst _defaultState: CircuitLayoutServiceState = {\n  elementPositionsById: {},\n};\n\nexport const defaultCircuitLayoutServiceState: Readonly<CircuitLayoutServiceState> = Object.freeze(\n  _defaultState\n);\n","import {\n  createServiceReducerCreator,\n  createServiceSelectorCreator,\n} from \"../service-state-utils\";\n\nexport const createCircuitLayoutReducer = createServiceReducerCreator(\n  \"circuitLayout\"\n);\nexport const createCircuitLayoutSelector = createServiceSelectorCreator(\n  \"circuitLayout\"\n);\n","import { isAddCircuitAction } from \"@/actions/circuit-add\";\nimport { createCircuitPropertiesReducer } from \"../utils\";\n\nexport default createCircuitPropertiesReducer((state, action) => {\n  if (!isAddCircuitAction(action)) {\n    return state;\n  }\n\n  const { circuitId } = action.payload;\n  let circuitName = action.payload.circuitName;\n\n  if (!circuitName) {\n    circuitName = `Circuit ${\n      Object.keys(state.circuitNamesByCircuitId).length + 1\n    }`;\n  }\n\n  return {\n    ...state,\n    circuitNamesByCircuitId: {\n      ...state.circuitNamesByCircuitId,\n      [circuitId]: circuitName,\n    },\n  };\n});\n","import pick from \"lodash/pick\";\n\nimport { isDeleteCircuitAction } from \"@/actions/circuit-delete\";\n\nimport { createCircuitPropertiesReducer } from \"../utils\";\n\nexport default createCircuitPropertiesReducer((state, action) => {\n  if (!isDeleteCircuitAction(action)) {\n    return state;\n  }\n\n  const { circuitId } = action.payload;\n\n  const remainingCircuitIds = Object.keys(state.circuitNamesByCircuitId).filter(\n    (x) => x !== circuitId\n  );\n\n  return {\n    ...state,\n    circuitNamesByCircuitId: pick(\n      state.circuitNamesByCircuitId,\n      remainingCircuitIds\n    ),\n  };\n});\n","import { isRenameCircuitAction } from \"@/actions/circuit-rename\";\nimport { createCircuitPropertiesReducer } from \"../utils\";\n\nexport default createCircuitPropertiesReducer((state, action) => {\n  if (!isRenameCircuitAction(action)) {\n    return state;\n  }\n\n  const { circuitId, circuitName } = action.payload;\n\n  const trimmedName = circuitName.trim();\n\n  if (trimmedName === \"\") {\n    return state;\n  }\n\n  return {\n    ...state,\n    circuitNamesByCircuitId: {\n      ...state.circuitNamesByCircuitId,\n      [circuitId]: trimmedName,\n    },\n  };\n});\n","import { concatReducers } from \"@/store/utils\";\n\nimport circuitAddReducer from \"./circuit-add\";\nimport circuitDeleteReducer from \"./circuit-delete\";\nimport circuitRenameReducer from \"./circuit-rename\";\nimport projectNewReducer from \"./project-new\";\n\nexport default concatReducers(\n  circuitAddReducer,\n  circuitDeleteReducer,\n  circuitRenameReducer,\n  projectNewReducer\n);\n","import { isNewProjectAction } from \"@/actions/project-new\";\n\nimport { ROOT_CIRCUIT_ID } from \"../../circuits/constants\";\nimport { createCircuitPropertiesReducer } from \"../utils\";\n\nexport default createCircuitPropertiesReducer((state, action) => {\n  if (!isNewProjectAction(action)) {\n    return state;\n  }\n\n  return {\n    ...state,\n    circuitNamesByCircuitId: {\n      [ROOT_CIRCUIT_ID]: \"Root\",\n    },\n    elementIdsByCircuitId: {\n      [ROOT_CIRCUIT_ID]: [],\n    },\n  };\n});\n","import { CircuitPropertiesServiceState } from \"../state\";\nimport { createCircuitPropertiesSelector } from \"../utils\";\n\nexport const circuitIdsSelector = createCircuitPropertiesSelector((state) =>\n  Object.keys(state.circuitNamesByCircuitId)\n);\n\nexport const circuitNamesByIdSelector = createCircuitPropertiesSelector(\n  (state) => state.circuitNamesByCircuitId\n);\n\nexport const circuitNameFromIdSelector = createCircuitPropertiesSelector(\n  (state: CircuitPropertiesServiceState, circuitId: string) =>\n    state.circuitNamesByCircuitId[circuitId]\n);\n","import { ROOT_CIRCUIT_ID } from \"../circuits/constants\";\n\nexport interface CircuitPropertiesServiceState {\n  /**\n   * The user-provided names for circuits by circuit id.\n   */\n  circuitNamesByCircuitId: Record<string, string>;\n}\n\nconst _defaultState: CircuitPropertiesServiceState = {\n  circuitNamesByCircuitId: {\n    [ROOT_CIRCUIT_ID]: \"Root\",\n  },\n};\n\nexport const defaultCircuitPropertiesServiceState = Object.freeze(\n  _defaultState\n);\n","import {\n  createServiceReducerCreator,\n  createServiceSelectorCreator,\n} from \"../service-state-utils\";\n\nexport const createCircuitPropertiesReducer = createServiceReducerCreator(\n  \"circuitProperties\"\n);\nexport const createCircuitPropertiesSelector = createServiceSelectorCreator(\n  \"circuitProperties\"\n);\n","export const ROOT_CIRCUIT_ID = \"root\";\n","import { AnyAction } from \"redux\";\n\nimport { AppState, defaultAppState } from \"@/store\";\n\nimport { isImportCircuitAction } from \"@/actions/circuit-import\";\nimport { importCircuitsFromSave } from \"@/services/savedata/api\";\n\nexport default function circuitImportReducer(\n  state: AppState = defaultAppState,\n  action: AnyAction\n): AppState {\n  if (!isImportCircuitAction(action)) {\n    return state;\n  }\n\n  const { circuitIds, saveData } = action.payload;\n\n  return importCircuitsFromSave(state, circuitIds, saveData);\n}\n","import circuitImportReducer from \"./circuit-import\";\n\nexport default circuitImportReducer;\n","import { v4 as uuidV4 } from \"uuid\";\nimport map from \"lodash/map\";\nimport mapValues from \"lodash/mapValues\";\nimport findIndex from \"lodash/findIndex\";\nimport zipObject from \"lodash/zipObject\";\n\nimport { pointSubtract } from \"@/geometry\";\n\nimport { isCopyElementsAction } from \"@/actions/clipboard-copy-elements\";\n\nimport { elementFromElementIdSelector } from \"@/services/circuit-graph/selectors/elements\";\nimport { elementOutputSourcesByPinIdFromElementIdSelector } from \"@/services/circuit-graph/selectors/pins\";\nimport { elementPositionsByElementIdSelector } from \"@/services/circuit-layout/selectors/element-positions\";\n\nimport { ClipboardElement } from \"../types\";\nimport { createClipboardReducer } from \"../utils\";\n\nexport default createClipboardReducer((state, action, appState) => {\n  if (!isCopyElementsAction(action)) {\n    return state;\n  }\n\n  const { elementIds } = action.payload;\n  if (elementIds.length === 0) {\n    return state;\n  }\n\n  const elementPositionsById = elementPositionsByElementIdSelector(appState);\n\n  const copyIds = zipObject(\n    elementIds,\n    map(elementIds, () => uuidV4())\n  );\n\n  function elementIsSelected(id: string): boolean {\n    return findIndex(elementIds, (x) => x === id) !== -1;\n  }\n\n  const rootPosition = elementPositionsById[elementIds[0]];\n\n  const copyElements: ClipboardElement[] = elementIds.map((elementId) => {\n    const element = elementFromElementIdSelector(appState, elementId);\n    const outputs = elementOutputSourcesByPinIdFromElementIdSelector(\n      appState,\n      elementId\n    );\n    const copyElement: ClipboardElement = {\n      id: copyIds[elementId],\n      elementType: element.elementType,\n      offset: pointSubtract(elementPositionsById[elementId], rootPosition),\n      outputs: mapValues(outputs, (pins) =>\n        pins\n          .filter((x) => elementIsSelected(x.elementId))\n          .map((pin) => {\n            return {\n              pin: {\n                elementId: copyIds[pin.elementId],\n                pinId: pin.pinId,\n              },\n            };\n          })\n      ),\n    };\n    return copyElement;\n  });\n\n  return {\n    ...state,\n    clipboardElements: copyElements,\n    clipboardPasteOrigin: rootPosition,\n  };\n});\n","import { AnyAction } from \"redux\";\nimport zipObject from \"lodash/zipObject\";\nimport map from \"lodash/map\";\nimport values from \"lodash/values\";\nimport { v4 as uuidV4 } from \"uuid\";\n\nimport { pointAdd, snapPoint } from \"@/geometry\";\nimport { AppState, defaultAppState } from \"@/store\";\nimport { fpSet } from \"@/utils\";\n\nimport rootReducer from \"@/store/reducer\";\n\nimport { addElement } from \"@/actions/element-add\";\nimport { isPasteAction } from \"@/actions/clipboard-paste\";\nimport { wireConnect } from \"@/actions/wire-connect\";\nimport { selectElements } from \"@/actions/select-elements\";\n\nimport { gridElementSnapSelector } from \"@/services/circuit-editor-drag/selectors/snap\";\nimport { activeCircuitIdSelector } from \"@/services/circuit-editors/selectors/editor\";\n\nexport default function clipboardPasteReducer(\n  state: AppState = defaultAppState,\n  action: AnyAction\n): AppState {\n  if (!isPasteAction(action)) {\n    return state;\n  }\n\n  const circuitId = activeCircuitIdSelector(state);\n  if (!circuitId) {\n    return state;\n  }\n\n  const { clipboardElements, clipboardPasteOrigin } = state.services.clipboard;\n\n  if (!clipboardElements.length) {\n    return state;\n  }\n\n  let { pastePosition } = action.payload;\n\n  const gridSnap = gridElementSnapSelector(state);\n  if (!pastePosition) {\n    pastePosition = pointAdd(clipboardPasteOrigin, {\n      x: gridSnap,\n      y: gridSnap,\n    });\n  } else {\n    pastePosition = snapPoint(pastePosition, gridSnap);\n  }\n\n  const pasteIds = zipObject(\n    clipboardElements.map((x) => x.id),\n    map(clipboardElements, () => uuidV4())\n  );\n\n  // Two passes: Create and Connect.\n\n  // Create the elements.\n  for (const element of clipboardElements) {\n    const { id, elementType: elementType, offset } = element;\n    const p = pointAdd(pastePosition, offset);\n    state = rootReducer(\n      state,\n      addElement(elementType, circuitId, p, { elementId: pasteIds[id] })\n    );\n  }\n\n  // Connect the elements\n  for (const element of clipboardElements) {\n    const { id, outputs } = element;\n    const sourceId = pasteIds[id];\n    for (const outputPin of Object.keys(outputs)) {\n      for (const output of outputs[outputPin]) {\n        const {\n          pin: { elementId: targetCopyId, pinId: targetPin },\n        } = output;\n        const targetId = pasteIds[targetCopyId];\n        state = rootReducer(\n          state,\n          wireConnect(\n            circuitId,\n            {\n              type: \"pin\",\n              pin: { elementId: sourceId, pinId: outputPin },\n            },\n            {\n              type: \"pin\",\n              pin: { elementId: targetId, pinId: targetPin },\n            }\n          )\n        );\n      }\n    }\n  }\n\n  state = fpSet(\n    state,\n    \"services\",\n    \"clipboard\",\n    \"clipboardPasteOrigin\",\n    pastePosition\n  );\n  state = rootReducer(state, selectElements(values(pasteIds)));\n\n  return state;\n}\n","import { concatReducers } from \"@/store/utils\";\n\nimport clipboardCopyReducer from \"./clipboard-copy\";\nimport clipboardPasteReducer from \"./clipboard-paste\";\n\nconst clipboardReducer = concatReducers(\n  clipboardCopyReducer,\n  clipboardPasteReducer\n);\n\nexport default clipboardReducer;\n","import { createClipboardSelector } from \"../utils\";\n\nexport const canPasteSelector = createClipboardSelector(\n  (s) => s.clipboardElements.length > 0\n);\n","import { Point, ZeroPoint } from \"@/geometry\";\n\nimport { ClipboardElement } from \"./types\";\n\nexport interface ClipboardServiceState {\n  clipboardElements: ClipboardElement[];\n  clipboardPasteOrigin: Point;\n}\n\nexport const defaultClipboardServiceState: Readonly<ClipboardServiceState> = Object.freeze(\n  {\n    clipboardElements: [],\n    clipboardPasteOrigin: ZeroPoint,\n  }\n);\n","import {\n  createServiceReducerCreator,\n  createServiceSelectorCreator,\n} from \"../service-state-utils\";\n\nexport const createClipboardReducer = createServiceReducerCreator(\"clipboard\");\nexport const createClipboardSelector = createServiceSelectorCreator(\n  \"clipboard\"\n);\n","import { SagaIterator } from \"redux-saga\";\nimport { put, take } from \"redux-saga/effects\";\n\nimport { DialogData, DialogResult, DialogType } from \"@/dialogs/types\";\n\nimport { showDialog } from \"@/actions/dialog-show\";\n\nimport {\n  AcceptDialogAction,\n  ACTION_DIALOG_RESPONSE_ACCEPT,\n} from \"@/actions/dialog-response-accept\";\nimport {\n  CancelDialogAction,\n  ACTION_DIALOG_RESPONSE_CANCEL,\n} from \"@/actions/dialog-response-cancel\";\n\nexport function* displayDialogSaga<T extends DialogType>(\n  dialogType: T,\n  data: DialogData<T>\n): SagaIterator<DialogResult<T> | null> {\n  yield put(showDialog(dialogType, data));\n  const response: AcceptDialogAction | CancelDialogAction = yield take([\n    ACTION_DIALOG_RESPONSE_ACCEPT,\n    ACTION_DIALOG_RESPONSE_CANCEL,\n  ]);\n\n  if (response.type === ACTION_DIALOG_RESPONSE_ACCEPT) {\n    return response.payload.result;\n  }\n\n  return null;\n}\n","import { isAcceptDialogAction } from \"@/actions/dialog-response-accept\";\n\nimport { defaultDialogServiceState } from \"../state\";\nimport { createDialogReducer } from \"../utils\";\n\nexport default createDialogReducer((state, action) => {\n  if (!isAcceptDialogAction(action)) {\n    return state;\n  }\n\n  return defaultDialogServiceState;\n});\n","import { isCancelDialogAction } from \"@/actions/dialog-response-cancel\";\n\nimport { defaultDialogServiceState } from \"../state\";\nimport { createDialogReducer } from \"../utils\";\n\nexport default createDialogReducer((state, action) => {\n  if (!isCancelDialogAction(action)) {\n    return state;\n  }\n\n  return defaultDialogServiceState;\n});\n","import { isShowDialogAction } from \"@/actions/dialog-show\";\nimport { createDialogReducer } from \"../utils\";\n\nexport default createDialogReducer((state, action) => {\n  if (!isShowDialogAction(action)) {\n    return state;\n  }\n\n  const { dialogType, data } = action.payload;\n\n  return {\n    ...state,\n    dialogType,\n    data,\n  };\n});\n","import { concatReducers } from \"@/store/utils\";\n\nimport dialogResponseAcceptReducer from \"./dialog-response-accept\";\nimport dialogResponseCancelReducer from \"./dialog-response-cancel\";\nimport dialogShowReducer from \"./dialog-show\";\n\nexport default concatReducers(\n  dialogResponseAcceptReducer,\n  dialogResponseCancelReducer,\n  dialogShowReducer\n);\n","import { createDialogSelector } from \"../utils\";\n\nexport const dialogTypeSelector = createDialogSelector((s) => s.dialogType);\nexport const dialogDataSelector = createDialogSelector((s) => s.data);\n","// FIXME: There has got to be a better way of typing these, so api and selectors are type safe.\n\nimport { DialogType } from \"@/dialogs/types\";\n\nexport interface DialogServiceState {\n  dialogType: DialogType | null;\n  data: any;\n}\n\nconst _defaultState: DialogServiceState = {\n  dialogType: null,\n  data: null,\n};\n\nexport const defaultDialogServiceState: Readonly<DialogServiceState> = Object.freeze(\n  _defaultState\n);\n","import {\n  createServiceReducerCreator,\n  createServiceSelectorCreator,\n} from \"../service-state-utils\";\n\nexport const createDialogReducer = createServiceReducerCreator(\"dialog\");\nexport const createDialogSelector = createServiceSelectorCreator(\"dialog\");\n","import flatMap from \"lodash/flatMap\";\nimport find from \"lodash/find\";\nimport { createSelector } from \"reselect\";\n\nimport { asArray, MaybeArray } from \"@/arrays\";\nimport { AppState } from \"@/store\";\n\nimport elementDefinitionSources from \"@/elements/definitions\";\n\nimport {\n  ElementDefinition,\n  ElementDefinitionDerivedState,\n  ElementDefinitionSource,\n} from \"@/elements/types\";\n\nconst elementDefinitionsDerivedStateSelector = createSelector(\n  (state: AppState) => state.services.circuitGraph,\n  (state: AppState) => state.services.circuitLayout,\n  (state: AppState) => state.services.circuitProperties,\n  (circuitGraph, circuitLayout, circuitProperties) => ({\n    circuitGraph,\n    circuitLayout,\n    circuitProperties,\n  })\n);\n\n/**\n * Gets an array of element definitions from the current state.\n */\nexport const elementDefinitionsSelector = createSelector(\n  elementDefinitionsDerivedStateSelector,\n  (derivedState) => {\n    const definitions = flatMap(elementDefinitionSources, (source) =>\n      resolveSources(source, derivedState)\n    );\n\n    return definitions;\n  }\n);\n\nexport const elementDefinitionsByTypeSelector = createSelector(\n  elementDefinitionsSelector,\n  (defs) => {\n    const defsByType: Record<string, ElementDefinition> = {};\n    for (const def of defs) {\n      defsByType[def.type] = def;\n    }\n    return defsByType;\n  }\n);\n\nexport const elementDefinitionFromTypeSelector = (\n  state: AppState,\n  elementType: string\n) => {\n  const definitions = elementDefinitionsSelector(state);\n  return find(definitions, (x) => x.type === elementType) ?? null;\n};\n\nfunction resolveSources(\n  source: ElementDefinitionSource,\n  state: ElementDefinitionDerivedState\n): ElementDefinition[] {\n  let resolved: MaybeArray<ElementDefinition>;\n  if (typeof source === \"function\") {\n    resolved = source(state);\n  } else {\n    resolved = source;\n  }\n\n  return asArray(resolved);\n}\n","import { Example } from \"./types\";\n\nconst requireExample = require.context(\"../../examples\", true, /index\\.ts$/);\n\nconst examples: Record<string, Example> = {};\nrequireExample.keys().forEach((key) => {\n  examples[key] = requireExample(key).default;\n});\n\nconsole.log(examples);\n\nexport default examples;\n","import { put, takeEvery } from \"@redux-saga/core/effects\";\n\nimport history from \"@/history\";\n\nimport { ACTION_EXAMPLE_LOAD, LoadExampleAction } from \"@/actions/example-load\";\n\nimport { SaveData } from \"@/services/savedata/types\";\nimport { receiveProject } from \"@/actions/project-receive\";\n\nimport examples from \"../examples\";\n\nexport default function* exampleLoadSaga() {\n  yield takeEvery(ACTION_EXAMPLE_LOAD, exampleLoad);\n}\n\nfunction* exampleLoad(action: LoadExampleAction) {\n  const { exampleKey } = action.payload;\n\n  const example = examples[exampleKey];\n  if (!example) {\n    return;\n  }\n\n  const saveData: SaveData = yield example.getSave();\n\n  yield put(receiveProject(example.title, saveData));\n  history.push(\"/editor\");\n}\n","import { fork } from \"@redux-saga/core/effects\";\n\nimport exampleLoadSaga from \"./example-load\";\n\nexport default function* examplesSaga() {\n  yield fork(exampleLoadSaga);\n}\n","import { concatReducers } from \"@/store/utils\";\n\nimport projectModifiedReducer from \"./project-modified\";\nimport projectNewReducer from \"./project-new\";\nimport projectReceiveReducer from \"./project-receive\";\nimport projectRenameReducer from \"./project-rename\";\nimport projectSaveSuccessReducer from \"./project-save-success\";\n\nexport default concatReducers(\n  projectModifiedReducer,\n  projectNewReducer,\n  projectReceiveReducer,\n  projectRenameReducer,\n  projectSaveSuccessReducer\n);\n","import { isProjectMutationAction } from \"@/project-mutation-actions\";\nimport { createProjectReducer } from \"../utils\";\n\nexport default createProjectReducer((state, action) => {\n  if (!isProjectMutationAction(action)) {\n    return state;\n  }\n\n  return {\n    ...state,\n    projectModified: true,\n  };\n});\n","import { isNewProjectAction } from \"@/actions/project-new\";\n\nimport { createProjectReducer } from \"../utils\";\n\nexport default createProjectReducer((state, action) => {\n  if (!isNewProjectAction(action)) {\n    return state;\n  }\n\n  return {\n    ...state,\n    projectName: \"New Project\",\n    projectModified: false,\n  };\n});\n","import { AnyAction } from \"redux\";\n\nimport { AppState, defaultAppState } from \"@/store\";\nimport { fpSet } from \"@/utils\";\n\nimport { isReceiveProjectAction } from \"@/actions/project-receive\";\n\nimport { loadSave } from \"@/services/savedata/api\";\n\nexport default function projectReceiveReducer(\n  state: AppState = defaultAppState,\n  action: AnyAction\n): AppState {\n  if (!isReceiveProjectAction(action)) {\n    return state;\n  }\n\n  const { fileName, saveData } = action.payload;\n\n  try {\n    state = fpSet(state, \"services\", \"project\", \"projectLoadState\", \"loading\");\n    state = loadSave(state, saveData);\n    state = fpSet(state, \"services\", \"project\", (state) => ({\n      ...state,\n      projectLoadState: \"loaded\" as const,\n      projectName: fileName,\n      projectModified: false,\n    }));\n  } catch (e) {\n    // TODO: display error\n    console.error(\"Failed to load save\", e);\n    state = fpSet(state, \"services\", \"project\", (state) => ({\n      ...state,\n      projectLoadState: \"no-project\" as const,\n      projectName: \"\",\n      projectModified: false,\n    }));\n  }\n\n  return state;\n}\n","import { isRenameProjectAction } from \"@/actions/project-rename\";\n\nimport { createProjectReducer } from \"../utils\";\n\nexport default createProjectReducer((state, action) => {\n  if (!isRenameProjectAction(action)) {\n    return state;\n  }\n\n  let { projectName } = action.payload;\n  projectName = projectName.trim();\n\n  if (projectName === \"\") {\n    return state;\n  }\n\n  return {\n    ...state,\n    projectName,\n  };\n});\n","import { isSaveProjectSuccessAction } from \"@/actions/project-save\";\nimport { createProjectReducer } from \"../utils\";\n\nexport default createProjectReducer((state, action) => {\n  if (!isSaveProjectSuccessAction(action)) {\n    return state;\n  }\n\n  return {\n    ...state,\n    projectModified: false,\n  };\n});\n","import { fork } from \"redux-saga/effects\";\n\nimport pageNavigateEditorSaga from \"./page-navigate-editor\";\nimport projectExportLinkSaga from \"./project-export-link\";\nimport projectImportCircuitsSaga from \"./project-import-circuits\";\nimport projectImportLinkSaga from \"./project-import-link\";\nimport projectLoadSaga from \"./project-load\";\nimport projectNewSaga from \"./project-new\";\nimport projectRestorePreviousSaga from \"./project-restore-previous\";\nimport projectSaveSaga from \"./project-save\";\n\nexport default function* saveDataSaga() {\n  yield fork(pageNavigateEditorSaga);\n  yield fork(projectExportLinkSaga);\n  yield fork(projectImportCircuitsSaga);\n  yield fork(projectImportLinkSaga);\n  yield fork(projectLoadSaga);\n  yield fork(projectNewSaga);\n  yield fork(projectRestorePreviousSaga);\n  yield fork(projectSaveSaga);\n}\n","import { SagaIterator } from \"redux-saga\";\nimport { put, select, takeEvery } from \"@redux-saga/core/effects\";\n\nimport {\n  ACTION_PAGE_NAVIGATE,\n  PageNavigateAction,\n} from \"@/actions/page-navigate\";\nimport { restorePreviousProject } from \"@/actions/project-restore-previous\";\n\nimport { projectLoadStateSelector } from \"../selectors/project\";\nimport { ProjectServiceState } from \"../state\";\n\nexport default function* pageNavigateEditorSaga() {\n  yield takeEvery(ACTION_PAGE_NAVIGATE, onPageNavigate);\n}\n\nfunction* onPageNavigate(action: PageNavigateAction): SagaIterator {\n  const { page } = action.payload;\n  if (page !== \"editor\") {\n    return;\n  }\n\n  const loadState: ProjectServiceState[\"projectLoadState\"] = yield select(\n    projectLoadStateSelector\n  );\n  if (loadState !== \"no-project\") {\n    return;\n  }\n\n  yield put(restorePreviousProject());\n}\n","import { call, select, takeEvery } from \"redux-saga/effects\";\nimport { Buffer } from \"buffer\";\nimport { deflate } from \"pako\";\n\nimport { rootUrl } from \"@/env\";\nimport history from \"@/history\";\n\nimport { AppState } from \"@/store\";\n\nimport { displayDialogSaga } from \"@/services/dialog/api\";\n\nimport { ACTION_PROJECT_EXPORT_LINK } from \"@/actions/project-export-link\";\n\nimport { createSave } from \"@/services/savedata/api\";\n\nexport default function* projectExportLinkSaga() {\n  yield takeEvery(ACTION_PROJECT_EXPORT_LINK, onExportLink);\n}\n\nfunction* onExportLink() {\n  const state: AppState = yield select();\n\n  try {\n    const save = createSave(state);\n    const saveText = JSON.stringify(save);\n    const encoded = deflate(saveText);\n\n    const encodedText = Buffer.from(encoded).toString(\"base64\");\n\n    const urlData = encodeURIComponent(encodedText);\n\n    const projectLink =\n      rootUrl +\n      history.createHref({\n        pathname: \"/import\",\n        search: `data=${urlData}`,\n      });\n\n    yield call(displayDialogSaga, \"export-project-link\", { projectLink });\n  } catch (e) {\n    // TODO: Warn user of failure\n    console.error(\"Failed to export project as link\", e);\n  }\n}\n","import fileDialog from \"file-dialog\";\nimport { SagaIterator } from \"redux-saga\";\nimport { call, put, takeEvery } from \"redux-saga/effects\";\n\nimport { elementTypeToCircuitId } from \"@/elements/definitions/integrated-circuits/utils\";\n\nimport { ACTION_PROJECT_IMPORT_CIRCUITS } from \"@/actions/project-import-circuits\";\nimport { importCircuits } from \"@/actions/circuit-import\";\n\nimport { SaveData } from \"@/services/savedata/types\";\nimport { displayDialogSaga } from \"@/services/dialog/api\";\nimport { ROOT_CIRCUIT_ID } from \"@/services/circuits/constants\";\n\nexport default function* projectImportCircuitsSaga() {\n  yield takeEvery(ACTION_PROJECT_IMPORT_CIRCUITS, handleProjectImportCircuits);\n}\n\nfunction* handleProjectImportCircuits(): SagaIterator {\n  const [file]: File[] = yield call(fileDialog, {\n    accept: \"application/json\",\n  });\n  const contents = yield call(file.text.bind(file));\n  const saveData: SaveData = JSON.parse(contents);\n\n  const result: string[] | undefined = yield call(\n    displayDialogSaga,\n    \"import-project-circuits\",\n    {\n      circuits: saveData.circuits.filter(\n        (x) => x.circuitId !== ROOT_CIRCUIT_ID\n      ),\n    }\n  );\n\n  if (!Array.isArray(result)) {\n    return;\n  }\n\n  const scanCircuitIds = result;\n  const targetCircuitIds: string[] = [];\n  // Scan through the list of circuits and import dependencies.\n  let circuitId: string | undefined;\n  while ((circuitId = scanCircuitIds.pop())) {\n    targetCircuitIds.push(circuitId);\n    for (const element of saveData.elements) {\n      const { circuitId: elementCircuitId, elementType: elementType } = element;\n      if (circuitId !== elementCircuitId) {\n        continue;\n      }\n      const elementIcCircuitId = elementTypeToCircuitId(elementType);\n      if (elementIcCircuitId == null) {\n        continue;\n      }\n      scanCircuitIds.push(elementIcCircuitId);\n    }\n  }\n\n  yield put(importCircuits(targetCircuitIds, saveData));\n}\n","import { put, takeEvery } from \"redux-saga/effects\";\nimport { Buffer } from \"buffer\";\n\nimport { inflate } from \"pako\";\n\nimport {\n  ACTION_PROJECT_IMPORT_LINK,\n  ImportProjectLinkAction,\n} from \"@/actions/project-import-link\";\n\nimport { receiveProject } from \"@/actions/project-receive\";\nimport history from \"@/history\";\n\nexport default function* projectImportLinkSaga() {\n  yield takeEvery(ACTION_PROJECT_IMPORT_LINK, onImportLink);\n}\n\nfunction* onImportLink(action: ImportProjectLinkAction) {\n  const { data } = action.payload;\n  try {\n    const dewrapped = decodeURIComponent(data);\n    const deflated = Buffer.from(dewrapped, \"base64\");\n    const saveText = inflate(deflated, { to: \"string\" });\n    const save = JSON.parse(saveText);\n\n    yield put(receiveProject(\"Linked Project\", save));\n\n    history.replace(\"/\");\n  } catch (e) {\n    console.error(\"Failed to import save from link\", e);\n  }\n}\n","import { SagaIterator } from \"redux-saga\";\nimport { call, put, takeEvery } from \"redux-saga/effects\";\nimport fileDialog from \"file-dialog\";\n\nimport history from \"@/history\";\n\nimport { ACTION_PROJECT_LOAD } from \"@/actions/project-load\";\nimport { receiveProject } from \"@/actions/project-receive\";\n\nimport { SaveData } from \"@/services/savedata/types\";\n\nexport default function* projectLoadSaga() {\n  yield takeEvery(ACTION_PROJECT_LOAD, loadProject);\n}\n\nfunction* loadProject(): SagaIterator {\n  try {\n    const [file]: File[] = yield call(fileDialog, {\n      accept: \"application/json\",\n    });\n    const contents = yield call(file.text.bind(file));\n    const saveData: SaveData = JSON.parse(contents);\n    let fileName = file.name;\n    if (fileName) {\n      fileName = fileName.substr(0, fileName.lastIndexOf(\".json\"));\n    } else {\n      fileName = \"Unnamed Project\";\n    }\n    yield put(receiveProject(fileName, saveData));\n\n    history.push(\"/editor\");\n  } catch (e) {\n    // TODO: Handle error\n    console.warn(\"Failed to load project:\", e);\n  }\n}\n","import { ACTION_PROJECT_NEW } from \"@/actions/project-new\";\nimport { takeEvery } from \"@redux-saga/core/effects\";\n\nimport history from \"@/history\";\n\nexport default function* projectNewSaga() {\n  yield takeEvery(ACTION_PROJECT_NEW, handleNewProject);\n}\n\nfunction* handleNewProject() {\n  history.push(\"/editor\");\n}\n","import { put, takeEvery } from \"@redux-saga/core/effects\";\n\nimport history from \"@/history\";\n\nimport { loadAutosave } from \"@/services/autosave/api\";\n\nimport { receiveProject } from \"@/actions/project-receive\";\nimport { ACTION_PROJECT_RESTORE_PREVIOUS } from \"@/actions/project-restore-previous\";\n\nexport default function* projectRestorePreviousSaga() {\n  yield takeEvery(\n    ACTION_PROJECT_RESTORE_PREVIOUS,\n    handleProjectRestorePrevious\n  );\n}\n\nfunction* handleProjectRestorePrevious() {\n  const previous = loadAutosave();\n  if (!previous) {\n    return;\n  }\n\n  yield put(receiveProject(\"Previous Project\", previous));\n\n  history.push(\"/editor\");\n}\n","import { SagaIterator } from \"redux-saga\";\nimport { call, put, select, takeEvery } from \"redux-saga/effects\";\nimport { saveAs } from \"file-saver\";\n\nimport { AppState } from \"@/store\";\n\nimport {\n  ACTION_PROJECT_SAVE,\n  saveProjectSuccess,\n} from \"@/actions/project-save\";\nimport { renameProject } from \"@/actions/project-rename\";\n\nimport { createSave } from \"@/services/savedata/api\";\n\nimport { projectNameSelector } from \"../selectors/project\";\n\nexport default function* projectSaveSaga() {\n  yield takeEvery(ACTION_PROJECT_SAVE, saveProject);\n}\n\nfunction* saveProject() {\n  const state: AppState = yield select();\n\n  try {\n    if (window.showSaveFilePicker) {\n      yield call(saveNativeFileApi, state);\n    } else {\n      yield call(saveLegacy, state);\n    }\n    yield put(saveProjectSuccess());\n  } catch (e) {\n    // TODO: Report error\n    console.warn(\"Failed to save project\", e);\n  }\n}\n\nfunction* saveNativeFileApi(state: AppState): SagaIterator {\n  const projectName = yield select(projectNameSelector);\n\n  const fileHandle: FileHandle | null = yield call(window.showSaveFilePicker!, {\n    // This isn't official yet, even with the not-official showSaveFilePicker\n    // https://github.com/WICG/file-system-access/blob/main/SuggestedNameAndDir.md#specifying-suggested-file-name-to-save-as\n    // It's so new, chrome does not yet support it, but it will:\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1145102\n    suggestedName: projectName,\n    types: [\n      {\n        description: \"Discrelog Project Files\",\n        accept: {\n          \"application/json\": [\".json\"],\n        },\n      },\n    ],\n  });\n\n  if (!fileHandle) {\n    return;\n  }\n\n  // Some confusion over how to get the name of the file...\n  // fileHandle.name appears in the debugger for chrome, but does not\n  // seem to be documented.\n  // getFile().name is documented by mozilla, but gives me undefined.\n  let name = fileHandle.name;\n  if (!name) {\n    name = fileHandle.getFile().name;\n  }\n  if (name) {\n    name = name.substr(0, name.lastIndexOf(\".json\"));\n    yield put(renameProject(name));\n  }\n\n  const save = createSave(state);\n\n  const writable: FileSystemWritableStream = yield call(\n    fileHandle.createWritable.bind(fileHandle)\n  );\n  yield call(writable.write.bind(writable), JSON.stringify(save, null, 2));\n  yield call(writable.close.bind(writable));\n}\n\nfunction* saveLegacy(state: AppState): SagaIterator {\n  const projectName = yield select(projectNameSelector);\n\n  const save = createSave(state);\n  const blob = new Blob([JSON.stringify(save, null, 2)], {\n    type: \"application/json;charset=utf-8\",\n  });\n\n  saveAs(blob, `${projectName}.json`);\n}\n","import { createProjectSelector } from \"../utils\";\n\nexport const projectNameSelector = createProjectSelector(\n  (state) => state.projectName\n);\n\nexport const projectModifiedSelector = createProjectSelector(\n  (state) => state.projectModified\n);\n\nexport const projectLoadStateSelector = createProjectSelector(\n  (state) => state.projectLoadState\n);\n","export interface ProjectServiceState {\n  projectLoadState: \"no-project\" | \"loading\" | \"loaded\";\n  projectName: string;\n  projectModified: boolean;\n}\n\nconst _defaultProps: ProjectServiceState = {\n  projectLoadState: \"no-project\",\n  projectName: \"New Project\",\n  projectModified: false,\n};\n\nexport const defaultProjectServiceState = Object.freeze(_defaultProps);\n","import {\n  createServiceReducerCreator,\n  createServiceSelectorCreator,\n} from \"../service-state-utils\";\n\nexport const createProjectReducer = createServiceReducerCreator(\"project\");\nexport const createProjectSelector = createServiceSelectorCreator(\"project\");\n","import { concatReducers } from \"@/store/utils\";\n\nimport circuitEditorUiDragReducer from \"./circuit-editor-drag/reducer\";\nimport circuitEditorsReducer from \"./circuit-editors/reducer\";\nimport clipboardReducer from \"./clipboard/reducer\";\nimport dialogReducer from \"./dialog/reducer\";\nimport circuitGraphReducer from \"./circuit-graph/reducer\";\nimport circuitLayoutReducer from \"./circuit-layout/reducer\";\nimport circuitPropertiesReducer from \"./circuit-properties/reducer\";\nimport circuitsReducer from \"./circuits/reducer\";\nimport projectReducer from \"./project/reducer\";\nimport selectionReducer from \"./selection/reducer\";\nimport simulatorReducer from \"./simulator/reducer\";\nimport simulatorControlReducer from \"./simulator-control/reducers\";\nimport tutorialReducer from \"./tutorial/reducer\";\nimport uiLayoutReducer from \"./ui-layout/reducer\";\nimport uiSettingsReducer from \"./ui-settings/reducer\";\n\nconst reducer = concatReducers(\n  circuitEditorUiDragReducer,\n  circuitEditorsReducer,\n  clipboardReducer,\n  dialogReducer,\n  circuitGraphReducer,\n  circuitLayoutReducer,\n  circuitPropertiesReducer,\n  circuitsReducer,\n  projectReducer,\n  selectionReducer,\n  simulatorReducer,\n  simulatorControlReducer,\n  tutorialReducer,\n  uiLayoutReducer,\n  uiSettingsReducer\n);\n\nexport default reducer;\n","import { fork } from \"redux-saga/effects\";\n\nimport autosaveSaga from \"./autosave/saga\";\nimport examplesSaga from \"./examples/saga\";\nimport projectSaga from \"./project/saga\";\nimport simulatorControlSaga from \"./simulator-control/saga\";\nimport tutorialSaga from \"./tutorial/saga\";\n\nexport default function* appSaga() {\n  yield fork(autosaveSaga);\n  yield fork(examplesSaga);\n  yield fork(projectSaga);\n  yield fork(simulatorControlSaga);\n  yield fork(tutorialSaga);\n}\n","import { isTruthy } from \"@/utils\";\n\nimport { AppState, defaultAppState } from \"@/store\";\nimport rootReducer from \"@/store/reducer\";\n\nimport { addElement } from \"@/actions/element-add\";\nimport { addCircuit } from \"@/actions/circuit-add\";\nimport { hydrateWire } from \"@/actions/wire-hydrate\";\n\nimport { circuitIdFromElementIdSelector } from \"../circuit-graph/selectors/elements\";\nimport {\n  elementIdsSelector,\n  elementFromElementIdSelector,\n} from \"../circuit-graph/selectors/elements\";\nimport { wireSegmentHasInput } from \"../circuit-graph/types\";\nimport {\n  circuitIdForWireIdSelector,\n  wireIdsSelector,\n  wireJointIdsByWireIdSelector,\n  wireSegmentByWireSegmentIdSelector,\n  wireSegmentIdsFromWireIdSelector,\n} from \"../circuit-graph/selectors/wires\";\nimport { elementPositionFromElementIdSelector } from \"../circuit-layout/selectors/element-positions\";\nimport { wireJointPositionByJointIdSelector } from \"../circuit-graph/selectors/wire-positions\";\nimport {\n  circuitIdsSelector,\n  circuitNameFromIdSelector,\n} from \"../circuit-properties/selectors/circuits\";\nimport { ROOT_CIRCUIT_ID } from \"../circuits/constants\";\n\nimport {\n  SaveCircuit,\n  SaveData,\n  SaveElement,\n  SaveWire,\n  SaveWireSegment,\n  validateSaveData,\n} from \"./types\";\n\nimport { SaveFormatError } from \"./errors\";\n\nexport function createSave(state: AppState): SaveData {\n  const jointPositionsByJointId = wireJointPositionByJointIdSelector(state);\n  return {\n    circuits: circuitIdsSelector(state).map((circuitId) => {\n      const circuitName = circuitNameFromIdSelector(state, circuitId);\n      const saveCircuit: SaveCircuit = {\n        circuitId,\n        circuitName,\n      };\n      return saveCircuit;\n    }),\n    elements: elementIdsSelector(state).map((elementId) => {\n      const element = elementFromElementIdSelector(state, elementId);\n      const position = elementPositionFromElementIdSelector(state, elementId);\n      const circuitId = circuitIdFromElementIdSelector(state, elementId);\n      const saveElement: SaveElement = {\n        elementId: elementId,\n        elementType: element.elementType,\n        elementName: element.elementName,\n        circuitId: circuitId ?? ROOT_CIRCUIT_ID,\n        x: position.x,\n        y: position.y,\n      };\n      return saveElement;\n    }),\n    wires: wireIdsSelector(state)\n      .map((wireId) => {\n        const jointIds = wireJointIdsByWireIdSelector(state, wireId);\n        const circuitId = circuitIdForWireIdSelector(state, wireId);\n        if (!circuitId) {\n          return null;\n        }\n        const saveWire: SaveWire = {\n          wireId,\n          circuitId,\n          wireSegments: wireSegmentIdsFromWireIdSelector(state, wireId).map(\n            (wireSegmentId) => {\n              const segment = wireSegmentByWireSegmentIdSelector(\n                state,\n                wireSegmentId\n              )!;\n              const saveWireSegment: SaveWireSegment = {\n                wireSegmentId,\n                ...segment,\n              };\n              return saveWireSegment;\n            }\n          ),\n          wireJoints: jointIds.map((jointId) => ({\n            jointId,\n            ...jointPositionsByJointId[jointId],\n          })),\n        };\n        return saveWire;\n      })\n      .filter(isTruthy),\n  };\n}\n\nexport function loadSave(state: AppState, save: SaveData): AppState {\n  try {\n    validateSaveData(save);\n  } catch (e) {\n    throw new SaveFormatError(e.message);\n  }\n\n  // TODO: There may be some services that want to persist data across projects.\n  state = defaultAppState;\n\n  try {\n    state = (save.circuits ?? []).reduce(\n      (state, { circuitId, circuitName }) =>\n        rootReducer(state, addCircuit({ circuitId, circuitName })),\n      state\n    );\n\n    state = (save.elements ?? []).reduce(\n      (state, element) =>\n        rootReducer(\n          state,\n          addElement(\n            element.elementType,\n            element.circuitId,\n            { x: element.x, y: element.y },\n            {\n              elementId: element.elementId,\n              elementName: element.elementName ?? undefined,\n            }\n          )\n        ),\n      state\n    );\n\n    state = (save.wires ?? []).reduce(\n      (state, wire) => rootReducer(state, hydrateWire(wire)),\n      state\n    );\n  } catch (e) {\n    console.error(\"Failed to rehydrate SaveData:\", e);\n    throw new SaveFormatError(\"Failed to load project.\");\n  }\n\n  return state;\n}\n\nexport function importCircuitsFromSave(\n  state: AppState,\n  circuitIds: string[],\n  save: SaveData\n): AppState {\n  try {\n    validateSaveData(save);\n  } catch (e) {\n    throw new SaveFormatError(e.message);\n  }\n\n  const existingCircuits = Object.keys(\n    state.services.circuitProperties.circuitNamesByCircuitId\n  );\n  const importCircuits = save.circuits.filter(\n    (c) =>\n      circuitIds.indexOf(c.circuitId) !== -1 &&\n      existingCircuits.indexOf(c.circuitId) === -1\n  );\n  if (importCircuits.length === 0) {\n    return state;\n  }\n\n  try {\n    state = importCircuits.reduce(\n      (state, { circuitId, circuitName }) =>\n        rootReducer(state, addCircuit({ circuitId, circuitName })),\n      state\n    );\n\n    const importElements = (save.elements ?? []).filter((x) =>\n      importCircuits.some(({ circuitId }) => circuitId === x.circuitId)\n    );\n    state = importElements.reduce(\n      (state, element) =>\n        rootReducer(\n          state,\n          addElement(\n            element.elementType,\n            element.circuitId,\n            { x: element.x, y: element.y },\n            {\n              elementId: element.elementId,\n              elementName: element.elementName ?? undefined,\n            }\n          )\n        ),\n      state\n    );\n\n    function isImportableWire(wire: SaveWire) {\n      return wire.wireSegments.some((segment) => {\n        if (!wireSegmentHasInput(segment)) {\n          return;\n        }\n        const { inputPin } = segment;\n        return importElements.some(\n          (element) => element.elementId === inputPin.elementId\n        );\n      });\n    }\n\n    const importWires = (save.wires ?? []).filter(isImportableWire);\n    state = importWires.reduce(\n      (state, wire) => rootReducer(state, hydrateWire(wire)),\n      state\n    );\n  } catch (e) {\n    console.error(\"Failed to import circuit from SaveData:\", e);\n    throw new SaveFormatError(\"Failed to import circuit.\");\n  }\n\n  return state;\n}\n","export class SaveFormatError extends Error {\n  code: string;\n\n  constructor(message: string) {\n    super(message);\n    this.message = message;\n    this.code = \"SAVE_FORMAT_ERROR\";\n  }\n}\n","import { Point } from \"@/geometry\";\n\nimport { WireSegment } from \"../circuit-graph/types\";\n\nexport interface SaveCircuit {\n  circuitId: string;\n  circuitName: string;\n}\n\nexport interface SaveElement {\n  elementId: string;\n  elementType: string;\n  elementName: string | null;\n  circuitId: string;\n  x: number;\n  y: number;\n}\n\nexport type SaveWireSegment = WireSegment & {\n  wireSegmentId: string;\n};\n\nexport interface SaveWireJoint extends Point {\n  jointId: string;\n}\n\nexport interface SaveWire {\n  wireId: string;\n  circuitId: string;\n  wireSegments: SaveWireSegment[];\n  wireJoints: SaveWireJoint[];\n}\n\nexport interface SaveData {\n  circuits: SaveCircuit[];\n  elements: SaveElement[];\n  wires: SaveWire[];\n}\n\nexport function validateSaveData(data: SaveData) {\n  // TODO: Validate save data\n}\n","import difference from \"lodash/difference\";\n\nimport { isDeleteElementAction } from \"@/actions/element-delete\";\n\nimport { createSelectionReducer } from \"../utils\";\n\nexport default createSelectionReducer((state, action) => {\n  if (!isDeleteElementAction(action)) {\n    return state;\n  }\n\n  const { elementIds } = action.payload;\n\n  return {\n    ...state,\n    selectedElementIds: difference(state.selectedElementIds, elementIds),\n    selectedConnectionIds: [], // Might be removing an element attached to a selected connection\n  };\n});\n","import { concatReducers } from \"@/store/utils\";\n\nimport elementDeleteReducer from \"./element-delete\";\nimport projectNewReducer from \"./project-new\";\nimport selectAllReducer from \"./select-all\";\nimport selectClearReducer from \"./select-clear\";\nimport selectElementsReducer from \"./select-elements\";\nimport selectRegionReducer from \"./select-region\";\nimport selectWireJointsReducer from \"./select-wire-joints\";\nimport selectWireSegmentsReducer from \"./select-wire-segments\";\nimport selectionAlignToGrid from \"./selection-align-to-grid\";\nimport selectionCopyReducer from \"./selection-copy\";\nimport selectionDeleteReducer from \"./selection-delete\";\nimport selectionMoveReducer from \"./selection-move\";\nimport wireJointDeleteReducer from \"./wire-joint-delete\";\n\nconst selectionReducer = concatReducers(\n  projectNewReducer,\n  elementDeleteReducer,\n  selectAllReducer,\n  selectClearReducer,\n  selectElementsReducer,\n  selectRegionReducer,\n  selectWireJointsReducer,\n  selectWireSegmentsReducer,\n  selectionAlignToGrid,\n  selectionCopyReducer,\n  selectionDeleteReducer,\n  selectionMoveReducer,\n  wireJointDeleteReducer\n);\n\nexport default selectionReducer;\n","import { isNewProjectAction } from \"@/actions/project-new\";\n\nimport { createSelectionReducer } from \"../utils\";\nimport { defaultSelectionServiceState } from \"../state\";\n\nexport default createSelectionReducer((state, action) => {\n  if (!isNewProjectAction(action)) {\n    return state;\n  }\n\n  return defaultSelectionServiceState;\n});\n","import { isSelectAllAction } from \"@/actions/select-all\";\n\nimport { elementIdsFromCircuitIdSelector } from \"@/services/circuit-graph/selectors/elements\";\nimport { activeCircuitIdSelector } from \"@/services/circuit-editors/selectors/editor\";\nimport {\n  wireJointIdsFromCircuitIdSelector,\n  wireSegmentIdsFromCircuitIdSelector,\n} from \"@/services/circuit-graph/selectors/wires\";\n\nimport { createSelectionReducer } from \"../utils\";\n\nexport default createSelectionReducer((state, action, appState) => {\n  if (!isSelectAllAction(action)) {\n    return state;\n  }\n\n  const circuitId = activeCircuitIdSelector(appState);\n  if (!circuitId) {\n    return state;\n  }\n\n  const elementIds = elementIdsFromCircuitIdSelector(appState, circuitId);\n  const jointIds = wireJointIdsFromCircuitIdSelector(appState, circuitId);\n  const segmentIds = wireSegmentIdsFromCircuitIdSelector(appState, circuitId);\n\n  return {\n    ...state,\n    selectedElementIds: elementIds,\n    selectedWireJointIds: jointIds,\n    selectedWireSegmentIds: segmentIds,\n  };\n});\n","import { isClearSelectionAction } from \"@/actions/select-clear\";\n\nimport { createSelectionReducer } from \"../utils\";\n\nexport default createSelectionReducer((state, action) => {\n  if (!isClearSelectionAction(action)) {\n    return state;\n  }\n\n  return {\n    ...state,\n    selectedElementIds: [],\n    selectedWireJointIds: [],\n    selectedWireSegmentIds: [],\n  };\n});\n","import { combineExtraniousSelection, combineSelection } from \"@/selection-mode\";\n\nimport { isSelectElementsAction } from \"@/actions/select-elements\";\n\nimport { createSelectionReducer } from \"../utils\";\n\nexport default createSelectionReducer((state, action) => {\n  if (!isSelectElementsAction(action)) {\n    return state;\n  }\n\n  const { elementIds, mode } = action.payload;\n\n  return {\n    ...state,\n    selectedElementIds: combineSelection(\n      state.selectedElementIds,\n      elementIds,\n      mode\n    ),\n    selectedWireJointIds: combineExtraniousSelection(\n      state.selectedWireJointIds,\n      mode\n    ),\n    selectedWireSegmentIds: combineExtraniousSelection(\n      state.selectedWireSegmentIds,\n      mode\n    ),\n  };\n});\n","import forOwn from \"lodash/forOwn\";\nimport pick from \"lodash/pick\";\n\nimport { rectIntersectsRect, pointIntersectsRect } from \"@/geometry\";\nimport { combineSelection } from \"@/selection-mode\";\n\nimport { isSelectRegionAction } from \"@/actions/select-region\";\n\nimport { elementIdsFromCircuitIdSelector } from \"@/services/circuit-graph/selectors/elements\";\nimport { elementRectsByIdSelector } from \"@/services/circuit-layout/selectors/element-bounds\";\nimport { wireJointPositionByJointIdSelector } from \"@/services/circuit-graph/selectors/wire-positions\";\nimport { wireJointIdsFromCircuitIdSelector } from \"@/services/circuit-graph/selectors/wires\";\n\nimport { createSelectionReducer } from \"../utils\";\n\nexport default createSelectionReducer((state, action, appState) => {\n  if (!isSelectRegionAction(action)) {\n    return state;\n  }\n\n  const { region, circuitId, mode } = action.payload;\n\n  const elementIds = elementIdsFromCircuitIdSelector(appState, circuitId);\n  const rects = pick(elementRectsByIdSelector(appState), elementIds);\n\n  const chosenElementIds: string[] = [];\n  forOwn(rects, (rect, elementId) => {\n    if (rectIntersectsRect(rect, region)) {\n      chosenElementIds.push(elementId);\n    }\n  });\n\n  const jointIds = wireJointIdsFromCircuitIdSelector(appState, circuitId);\n  const jointPositions = pick(\n    wireJointPositionByJointIdSelector(appState),\n    jointIds\n  );\n  const chosenJointIds: string[] = [];\n  forOwn(jointPositions, (p, jointId) => {\n    if (pointIntersectsRect(p, region)) {\n      chosenJointIds.push(jointId);\n    }\n  });\n\n  return {\n    ...state,\n    selectedElementIds: combineSelection(\n      state.selectedElementIds,\n      chosenElementIds,\n      mode\n    ),\n    selectedWireJointIds: combineSelection(\n      state.selectedWireJointIds,\n      chosenJointIds,\n      mode\n    ),\n  };\n});\n","import { combineExtraniousSelection, combineSelection } from \"@/selection-mode\";\n\nimport { isSelectWireJointsAction } from \"@/actions/select-wire-joints\";\n\nimport { createSelectionReducer } from \"../utils\";\n\nexport default createSelectionReducer((state, action) => {\n  if (!isSelectWireJointsAction(action)) {\n    return state;\n  }\n\n  const { jointIds, mode } = action.payload;\n\n  return {\n    ...state,\n    selectedElementIds: combineExtraniousSelection(\n      state.selectedElementIds,\n      mode\n    ),\n    selectedWireJointIds: combineSelection(\n      state.selectedWireJointIds,\n      jointIds,\n      mode\n    ),\n    selectedWireSegmentIds: combineExtraniousSelection(\n      state.selectedWireSegmentIds,\n      mode\n    ),\n  };\n});\n","import { combineExtraniousSelection, combineSelection } from \"@/selection-mode\";\n\nimport { isSelectWireSegmentsAction } from \"@/actions/select-wire-segments\";\n\nimport { createSelectionReducer } from \"../utils\";\n\nexport default createSelectionReducer((state, action) => {\n  if (!isSelectWireSegmentsAction(action)) {\n    return state;\n  }\n\n  const { segmentIds, mode } = action.payload;\n\n  return {\n    ...state,\n    selectedElementIds: combineExtraniousSelection(\n      state.selectedElementIds,\n      mode\n    ),\n    selectedWireJointIds: combineExtraniousSelection(\n      state.selectedWireJointIds,\n      mode\n    ),\n    selectedWireSegmentIds: combineSelection(\n      state.selectedWireSegmentIds,\n      segmentIds,\n      mode\n    ),\n  };\n});\n","import { AnyAction } from \"redux\";\n\nimport { AppState, defaultAppState } from \"@/store\";\nimport rootReducer from \"@/store/reducer\";\nimport { pointEquals } from \"@/geometry\";\n\nimport { isSelectionAlignToGridAction } from \"@/actions/selection-align-to-grid\";\nimport { moveElement } from \"@/actions/element-move\";\nimport { moveWireJoint } from \"@/actions/wire-joint-move\";\n\nimport { elementPositionsByElementIdSelector } from \"@/services/circuit-layout/selectors/element-positions\";\nimport {\n  applyGridElementSnapSelector,\n  applyGridJointSnapSelector,\n} from \"@/services/circuit-editor-drag/selectors/snap\";\nimport { wireJointPositionByJointIdSelector } from \"@/services/circuit-graph/selectors/wire-positions\";\n\nexport default function selectionAlignToGridReducer(\n  state: AppState = defaultAppState,\n  action: AnyAction\n): AppState {\n  if (!isSelectionAlignToGridAction(action)) {\n    return state;\n  }\n\n  const {\n    selectedElementIds,\n    selectedWireJointIds: selectedJointIds,\n  } = state.services.selection;\n\n  // Align elements.\n  const elementPositions = elementPositionsByElementIdSelector(state);\n  for (const elementId of selectedElementIds) {\n    const elementPos = elementPositions[elementId];\n    if (!elementPos) {\n      continue;\n    }\n\n    const snappedPos = applyGridElementSnapSelector(state, elementPos);\n    if (!pointEquals(elementPos, snappedPos)) {\n      state = rootReducer(state, moveElement(elementId, snappedPos));\n    }\n  }\n\n  // Align joints\n  const jointPositions = wireJointPositionByJointIdSelector(state);\n  for (const jointId of selectedJointIds) {\n    const jointPos = jointPositions[jointId];\n    if (!jointPos) {\n      continue;\n    }\n\n    const snappedPos = applyGridJointSnapSelector(state, jointPos);\n    if (!pointEquals(jointPos, snappedPos)) {\n      state = rootReducer(state, moveWireJoint(jointId, snappedPos));\n    }\n  }\n\n  return state;\n}\n","import { AnyAction } from \"redux\";\n\nimport { AppState, defaultAppState } from \"@/store\";\nimport rootReducer from \"@/store/reducer\";\n\nimport { isCopySelectionAction } from \"@/actions/selection-copy\";\nimport { copyElements } from \"@/actions/clipboard-copy-elements\";\n\nimport { selectedElementIdsSelector } from \"@/services/selection/selectors/selection\";\n\nexport default function selectionCopyReducer(\n  state: AppState = defaultAppState,\n  action: AnyAction\n): AppState {\n  if (!isCopySelectionAction(action)) {\n    return state;\n  }\n\n  const selectedElements = selectedElementIdsSelector(state);\n  if (selectedElements.length === 0) {\n    return state;\n  }\n\n  return rootReducer(state, copyElements(selectedElements));\n}\n","import { AnyAction } from \"redux\";\n\nimport { AppState, defaultAppState } from \"@/store\";\nimport rootReducer from \"@/store/reducer\";\n\nimport { isDeleteSelectionAction } from \"@/actions/selection-delete\";\nimport { deleteElement } from \"@/actions/element-delete\";\nimport { deleteWireJoint } from \"@/actions/wire-joint-delete\";\nimport { deleteWireSegment } from \"@/actions/wire-segment-delete\";\n\nexport default function selectionDeleteReducer(\n  state: AppState = defaultAppState,\n  action: AnyAction\n): AppState {\n  if (!isDeleteSelectionAction(action)) {\n    return state;\n  }\n\n  const {\n    selectedElementIds,\n    selectedWireJointIds,\n    selectedWireSegmentIds,\n  } = state.services.selection;\n\n  if (selectedElementIds.length > 0) {\n    state = rootReducer(state, deleteElement(selectedElementIds));\n  }\n\n  if (selectedWireJointIds.length > 0) {\n    state = rootReducer(state, deleteWireJoint(selectedWireJointIds));\n  }\n\n  if (selectedWireSegmentIds.length > 0) {\n    state = rootReducer(state, deleteWireSegment(selectedWireSegmentIds));\n  }\n\n  return state;\n}\n","import { AnyAction } from \"redux\";\n\nimport { Point } from \"@/geometry\";\nimport { AppState, defaultAppState } from \"@/store\";\nimport rootReducer from \"@/store/reducer\";\n\nimport { isMoveSelectionAction } from \"@/actions/selection-move\";\nimport { moveElement, ElementMoveOpts } from \"@/actions/element-move\";\nimport { moveWireJoint, JointMoveOpts } from \"@/actions/wire-joint-move\";\n\nimport {\n  selectedElementIdsSelector,\n  selectedJointIdsSelector,\n} from \"@/services/selection/selectors/selection\";\n\nexport default function selectionMoveReducer(\n  state: AppState = defaultAppState,\n  action: AnyAction\n) {\n  if (!isMoveSelectionAction(action)) {\n    return state;\n  }\n\n  const { offsetX, offsetY, snapMode } = action.payload;\n\n  const elementIds = selectedElementIdsSelector(state);\n  const jointIds = selectedJointIdsSelector(state);\n\n  const offset: Point = {\n    x: offsetX,\n    y: offsetY,\n  };\n\n  let elementSnapMode: ElementMoveOpts[\"snapMode\"] = \"none\";\n  if (snapMode === \"element\" || snapMode === \"by-type\") {\n    elementSnapMode = \"element\";\n  }\n\n  let jointSnapMode: JointMoveOpts[\"snapMode\"] = \"none\";\n  if (snapMode === \"by-type\") {\n    jointSnapMode = \"joint\";\n  } else {\n    jointSnapMode = snapMode;\n  }\n\n  state = rootReducer(\n    state,\n    moveElement(elementIds, offset, {\n      relative: true,\n      snapMode: elementSnapMode,\n    })\n  );\n\n  state = rootReducer(\n    state,\n    moveWireJoint(jointIds, offset, {\n      relative: true,\n      snapMode: jointSnapMode,\n    })\n  );\n\n  return state;\n}\n","import intersection from \"lodash/intersection\";\n\nimport { isWireJointDeleteAction } from \"@/actions/wire-joint-delete\";\n\nimport { createSelectionReducer } from \"../utils\";\nimport { PRIORITY_POST, reducerPriority } from \"@/store/priorities\";\n\nexport default reducerPriority(\n  PRIORITY_POST,\n  createSelectionReducer((state, action, rootState) => {\n    if (!isWireJointDeleteAction(action)) {\n      return state;\n    }\n\n    const {\n      wireJointPositionsByJointId,\n      wireSegmentsById,\n    } = rootState.services.circuitGraph;\n\n    return {\n      ...state,\n      selectedWireJointIds: intersection(\n        state.selectedWireJointIds,\n        Object.keys(wireJointPositionsByJointId)\n      ),\n      selectedWireSegmentIds: intersection(\n        state.selectedWireSegmentIds,\n        Object.keys(wireSegmentsById)\n      ),\n    };\n  })\n);\n","import { createSelector } from \"reselect\";\n\nimport pick from \"lodash/pick\";\n\nimport { elementsByElementIdSelector } from \"@/services/circuit-graph/selectors/elements\";\n\nimport { createSelectionSelector } from \"../utils\";\nimport { SelectionServiceState } from \"../state\";\n\nexport const selectedElementIdsSelector = createSelectionSelector(\n  (state) => state.selectedElementIds\n);\n\nexport const selectedJointIdsSelector = createSelectionSelector(\n  (state) => state.selectedWireJointIds\n);\n\nexport const isElementSelectedFromElementIdSelector = createSelectionSelector(\n  (s: SelectionServiceState, elementId: string) =>\n    s.selectedElementIds.indexOf(elementId) !== -1\n);\n\nexport const isJointSelectedFromJointIdSelector = createSelectionSelector(\n  (s: SelectionServiceState, jointId: string) =>\n    s.selectedWireJointIds.indexOf(jointId) !== -1\n);\n\nexport const isSegmentSelectedFromSegmentIdSelector = createSelectionSelector(\n  (s: SelectionServiceState, wireSegmentId: string) =>\n    s.selectedWireSegmentIds.indexOf(wireSegmentId) !== -1\n);\n\nexport const selectedElementsByIdSelector = createSelector(\n  elementsByElementIdSelector,\n  selectedElementIdsSelector,\n  (elementsById, selectedElementIds) => pick(elementsById, selectedElementIds)\n);\n","export interface SelectionServiceState {\n  selectedElementIds: string[];\n  selectedWireJointIds: string[];\n  selectedWireSegmentIds: string[];\n}\n\nconst _defaultState: SelectionServiceState = {\n  selectedElementIds: [],\n  selectedWireJointIds: [],\n  selectedWireSegmentIds: [],\n};\n\nexport const defaultSelectionServiceState = Object.freeze(_defaultState);\n","import {\n  createServiceReducerCreator,\n  createServiceSelectorCreator,\n} from \"../service-state-utils\";\n\nexport const createSelectionReducer = createServiceReducerCreator(\"selection\");\nexport const createSelectionSelector = createServiceSelectorCreator(\n  \"selection\"\n);\n","import { AnyAction, Reducer } from \"redux\";\n\nimport { AppState, defaultAppState } from \"@/store\";\nimport { fpSet } from \"@/utils\";\n\nexport type ServiceKey = keyof AppState[\"services\"];\nexport type ServiceState<\n  TServiceKey extends ServiceKey\n> = AppState[\"services\"][TServiceKey];\n\nexport interface ServiceReducer<TServiceState> {\n  (\n    state: Readonly<TServiceState>,\n    action: AnyAction,\n    appState: AppState\n  ): TServiceState;\n}\n\nexport function createServiceReducerCreator<TServiceKey extends ServiceKey>(\n  service: TServiceKey\n): (\n  reducer: ServiceReducer<AppState[\"services\"][TServiceKey]>\n) => Reducer<AppState, AnyAction> {\n  return (reducer: ServiceReducer<AppState[\"services\"][TServiceKey]>) => {\n    return (state: AppState = defaultAppState, action: AnyAction) => {\n      const newState = reducer(state.services[service], action, state);\n      if (state.services[service] != newState) {\n        return fpSet(state, \"services\", service, newState);\n      }\n      return state;\n    };\n  };\n}\n\nexport interface ServiceSelectorA0<TServiceKey extends ServiceKey, TReturn> {\n  (s: AppState): TReturn;\n  local(s: ServiceState<TServiceKey>): TReturn;\n}\n\nexport interface ServiceSelectorA1<\n  TServiceKey extends ServiceKey,\n  TA1,\n  TReturn\n> {\n  (s: AppState, a1: TA1): TReturn;\n  local(s: ServiceState<TServiceKey>, a1: TA1): TReturn;\n}\n\nexport interface ServiceSelectorA2<\n  TServiceKey extends ServiceKey,\n  TA1,\n  TA2,\n  TReturn\n> {\n  (s: AppState, a1: TA1, a2: TA2): TReturn;\n  local(s: ServiceState<TServiceKey>, a1: TA1, a2: TA2): TReturn;\n}\n\nexport interface ServiceSelectorCreator<TServiceKey extends ServiceKey> {\n  <TReturn>(\n    selector: (s: ServiceState<TServiceKey>) => TReturn\n  ): ServiceSelectorA0<TServiceKey, TReturn>;\n  <TA1, TReturn>(\n    selector: (s: ServiceState<TServiceKey>, a1: TA1) => TReturn\n  ): ServiceSelectorA1<TServiceKey, TA1, TReturn>;\n  <TA1, TA2, TReturn>(\n    selector: (s: ServiceState<TServiceKey>, a1: TA1, a2: TA2) => TReturn\n  ): ServiceSelectorA2<TServiceKey, TA1, TA2, TReturn>;\n}\n\nexport function createServiceSelectorCreator<TServiceKey extends ServiceKey>(\n  service: TServiceKey\n): ServiceSelectorCreator<TServiceKey> {\n  return <TArgs, TReturn>(\n    selector: (s: ServiceState<TServiceKey>, ...args: TArgs[]) => TReturn\n  ) => {\n    const appSelector: any = (s: AppState, ...args: TArgs[]) =>\n      selector(s.services[service], ...args);\n    appSelector.local = selector;\n    return appSelector;\n  };\n}\n","import { isProjectMutationAction } from \"@/project-mutation-actions\";\n\nimport { createSimulatorControlReducer } from \"../utils\";\n\nexport default createSimulatorControlReducer((state, action) => {\n  if (!isProjectMutationAction(action)) {\n    return state;\n  }\n\n  return {\n    ...state,\n    mode: \"edit\",\n  };\n});\n","import { concatReducers } from \"@/store/utils\";\n\nimport circuitGraphInvalidatedReducer from \"./circuit-graph-invalidated\";\nimport simPauseReducer from \"./sim-pause\";\nimport simStartReducer from \"./sim-start\";\nimport simStepReducer from \"./sim-step\";\nimport simStopReducer from \"./sim-stop\";\n\nconst simulatorReducer = concatReducers(\n  circuitGraphInvalidatedReducer,\n  simPauseReducer,\n  simStartReducer,\n  simStepReducer,\n  simStopReducer\n);\n\nexport default simulatorReducer;\n","import { isPauseSimAction } from \"@/actions/sim-pause\";\n\nimport { createSimulatorControlReducer } from \"../utils\";\nimport { isSimActiveSelector } from \"../selectors/run\";\n\nexport default createSimulatorControlReducer((state, action) => {\n  if (!isPauseSimAction(action)) {\n    return state;\n  }\n\n  const { mode } = action.payload;\n\n  if (!isSimActiveSelector.local(state)) {\n    return state;\n  }\n\n  let runMode = state.mode;\n\n  switch (mode) {\n    case true:\n      runMode = \"pause\";\n      break;\n    case false:\n      runMode = \"run\";\n      break;\n    case \"toggle\":\n      runMode = runMode == \"run\" ? \"pause\" : \"run\";\n  }\n\n  return {\n    ...state,\n    mode: runMode,\n  };\n});\n","import { isStartSimAction } from \"@/actions/sim-start\";\n\nimport { createSimulatorControlReducer } from \"../utils\";\n\nexport default createSimulatorControlReducer((state, action) => {\n  if (!isStartSimAction(action)) {\n    return state;\n  }\n\n  return {\n    ...state,\n    mode: \"run\",\n  };\n});\n","import { isStepSimAction } from \"@/actions/sim-step\";\n\nimport { createSimulatorControlReducer } from \"../utils\";\n\nexport default createSimulatorControlReducer((state, action) => {\n  if (!isStepSimAction(action)) {\n    return state;\n  }\n\n  return {\n    ...state,\n    mode: \"pause\",\n  };\n});\n","import { isStopSimAction } from \"@/actions/sim-stop\";\n\nimport { createSimulatorControlReducer } from \"../utils\";\n\nimport { defaultSimulatorControlServiceState } from \"../state\";\n\nexport default createSimulatorControlReducer((state, action) => {\n  if (!isStopSimAction(action)) {\n    return state;\n  }\n\n  // Reset the simulator but keep the ticks per second choice.\n  return {\n    ...defaultSimulatorControlServiceState,\n    ticksPerSecond: state.ticksPerSecond,\n  };\n});\n","import { fork } from \"redux-saga/effects\";\n\nimport runModeSaga from \"./mode-run\";\n\nexport default function* simulatorSaga() {\n  yield fork(runModeSaga);\n}\n","import { eventChannel, SagaIterator, buffers } from \"redux-saga\";\nimport { takeLeading, select, put, take, call } from \"redux-saga/effects\";\n\nimport { ACTION_SIM_START } from \"@/actions/sim-start\";\nimport { ACTION_SIM_PAUSE, pauseSim } from \"@/actions/sim-pause\";\nimport { ACTION_SIM_STEP } from \"@/actions/sim-step\";\n\nimport { tickSim } from \"@/actions/sim-tick\";\n\nimport { isSimRunningSelector, ticksPerSecondSelector } from \"../selectors/run\";\n\nexport default function* runModeSaga() {\n  yield takeLeading(\n    [ACTION_SIM_START, ACTION_SIM_PAUSE, ACTION_SIM_STEP],\n    handleRunSim\n  );\n}\n\nfunction* handleRunSim(): SagaIterator {\n  runSimLoop: while (true) {\n    const isRunning = yield select(isSimRunningSelector);\n    if (!isRunning) {\n      break;\n    }\n\n    try {\n      yield put(tickSim(1));\n    } catch (e) {\n      console.error(e);\n      yield put(pauseSim(true));\n      return;\n    }\n\n    const shouldContinue = yield call(waitNextTick);\n    if (!shouldContinue) {\n      break;\n    }\n  }\n}\n\nfunction* waitNextTick(): SagaIterator<boolean> {\n  const tps = yield select(ticksPerSecondSelector);\n  const timeToWait = Math.max(Math.ceil(1000 / tps), 1);\n  const endWait = performance.now() + timeToWait;\n  while (true) {\n    const timestamp = yield take(animationFrameChannel);\n    const isRunning = yield select(isSimRunningSelector);\n    if (!isRunning) {\n      return false;\n    }\n\n    if (endWait <= timestamp) {\n      return true;\n    }\n  }\n}\n\n// We cannot use redux-saga delay here, as it uses setInterval.\n// On firefox, setInterval has been broken for going on 2 years now:\n// https://bugzilla.mozilla.org/show_bug.cgi?id=1566900\n// Like most bugs submitted to open source projects, it's been marked WontFix.\n// See test here: http://mozilla.pettay.fi/moztests/setInterval16.html\n// TODO: Clean this up.  This fires channel events like mad.\n// Ideally, this would know how long to wait and only emit events when the time is hit.\nconst animationFrameChannel = eventChannel((listener) => {\n  let active = true;\n\n  function awaitAnimationFrame() {\n    if (!active) {\n      return;\n    }\n\n    requestAnimationFrame((timestamp) => {\n      if (!active) {\n        return;\n      }\n      listener(timestamp);\n      awaitAnimationFrame();\n    });\n  }\n\n  awaitAnimationFrame();\n  return () => {\n    active = false;\n  };\n}, buffers.sliding(1));\n","import { createSimulatorControlSelector } from \"../utils\";\n\nexport const isSimActiveSelector = createSimulatorControlSelector(\n  (state) => state.mode !== \"edit\"\n);\n\nexport const isSimRunningSelector = createSimulatorControlSelector(\n  (state) => state.mode === \"run\"\n);\n\nexport const isSimPausedSelector = createSimulatorControlSelector(\n  (state) => state.mode === \"pause\"\n);\n\nexport const ticksPerSecondSelector = createSimulatorControlSelector(\n  (state) => state.ticksPerSecond\n);\n","export interface SimulatorControlServiceState {\n  /**\n   * The overall application mode.\n   * Might not belong in simulator state?\n   *\n   * - edit: User is editing, no simulator is running\n   * - step: Sim is paused and only ticks on user command\n   * - run: Sim is actively running and ticking forwards on its own.\n   */\n  mode: \"edit\" | \"pause\" | \"run\";\n\n  /**\n   * Tick speed in ticks per second when running.\n   */\n  ticksPerSecond: number;\n}\n\nconst _defaultState: SimulatorControlServiceState = {\n  mode: \"edit\",\n  ticksPerSecond: 1000,\n};\n\nexport const defaultSimulatorControlServiceState = Object.freeze(_defaultState);\n","import {\n  createServiceReducerCreator,\n  createServiceSelectorCreator,\n} from \"../service-state-utils\";\n\nexport const createSimulatorControlReducer = createServiceReducerCreator(\n  \"simulatorControl\"\n);\nexport const createSimulatorControlSelector = createServiceSelectorCreator(\n  \"simulatorControl\"\n);\n","import get from \"lodash/get\";\nimport merge from \"lodash/merge\";\nimport { v4 as uuidV4 } from \"uuid\";\n\nimport {\n  CircuitSimProduction,\n  ElementSimProduction,\n  normalizeSimProduction,\n} from \"../../elements/types/element-production\";\n\nimport {\n  SimulatorGraph,\n  SimulatorGraphDependencies,\n  SimulatorEvolver,\n  EvolverIdMappingTreeItem,\n  EvolverPin,\n} from \"./types\";\n\ntype CircuitProductionResult = SimulatorGraph & {\n  inputElementPinsByCircuitPinId: Record<string, EvolverPin[]>;\n  outputElementPinsByCircuitPinId: Record<string, EvolverPin>;\n};\n\nconst EMPTY_PRODUCTION = Object.freeze<CircuitProductionResult>({\n  evolversById: {},\n  evolverIdsByElementId: {},\n  inputElementPinsByCircuitPinId: {},\n  outputElementPinsByCircuitPinId: {},\n});\n\nexport function produceCircuitGraph(\n  circuitId: string,\n  dependencies: SimulatorGraphDependencies,\n  path: string[] = []\n): CircuitProductionResult {\n  if (path.indexOf(circuitId) !== -1) {\n    throw new Error(\n      `Circuit graph encountered loop on ${path.join(\n        \" => \"\n      )} while trying to add circuit ${circuitId}`\n    );\n  }\n\n  path = [...path, circuitId];\n\n  const evolversById: Record<string, SimulatorEvolver> = {};\n  const evolverIdsByElementId: Record<string, EvolverIdMappingTreeItem> = {};\n  const inputElementPinsByCircuitPinId: Record<string, EvolverPin[]> = {};\n  const outputElementPinsByCircuitPinId: Record<string, EvolverPin> = {};\n\n  const inputElementIds: string[] = [];\n  const outputElementIds: string[] = [];\n\n  // 1. Create new elements\n  // 2. Connect elements amongst themselves.\n  // 3. Pass input and output mapping to parent.\n\n  const elementInputPinsByPinIdByElementId: Record<\n    string,\n    Record<string, EvolverPin[]>\n  > = {};\n  const elementOutputPinsByPinIdByElementId: Record<\n    string,\n    Record<string, EvolverPin>\n  > = {};\n\n  const elementIds = dependencies.elementIdsByCircuitId[circuitId] ?? [];\n  for (const elementId of elementIds) {\n    const elementType = dependencies.elementTypesByElementId[elementId];\n    if (!elementType) {\n      continue;\n    }\n\n    // If this element is a pin, remember it to calculate circuit inputs and outputs.\n    if (elementType === \"pin-input\") {\n      inputElementIds.push(elementId);\n      inputElementPinsByCircuitPinId[elementId] = [];\n      continue;\n    } else if (elementType === \"pin-output\") {\n      outputElementIds.push(elementId);\n      continue;\n    }\n\n    const productionResult = produceEvolver(elementId, dependencies, path);\n\n    // Merge the produced simulator elements.\n    merge(evolversById, productionResult.evolversById);\n\n    // Merge the mapping from circuit element to evolver.\n    merge(evolverIdsByElementId, productionResult.evolverIdsByElementId);\n\n    // Remember what these element pins translate to.\n    elementInputPinsByPinIdByElementId[elementId] =\n      productionResult.inputElementPinsByCircuitPinId;\n    elementOutputPinsByPinIdByElementId[elementId] =\n      productionResult.outputElementPinsByCircuitPinId;\n  }\n\n  for (const { inputPin, outputPin } of dependencies.connections) {\n    // We are only interested in connections within this circuit.\n    // There should not be any cross-circuit connections.\n    // It might be ok to skip this step, and rely on not finding the element mapping.\n\n    if (\n      elementIds.indexOf(inputPin.elementId) === -1 ||\n      elementIds.indexOf(outputPin.elementId) === -1\n    ) {\n      continue;\n    }\n\n    // We need to find the one output, and connect it to all inputs that match.\n    // There might be more than one input if the input was on an IC / circuit production.\n    const outputSimPin = get(elementOutputPinsByPinIdByElementId, [\n      outputPin.elementId,\n      outputPin.pinId,\n    ]);\n    const inputSimPins = get(elementInputPinsByPinIdByElementId, [\n      inputPin.elementId,\n      inputPin.pinId,\n    ]);\n\n    // If the output is one of our input elements, then the inputs\n    //  need to be saved for our circuit inputs\n    if (inputElementIds.indexOf(outputPin.elementId) !== -1 && inputSimPins) {\n      // pin id is the pin-input elementId\n      inputElementPinsByCircuitPinId[outputPin.elementId].push(...inputSimPins);\n      continue;\n    } else if (\n      outputElementIds.indexOf(inputPin.elementId) !== -1 &&\n      outputSimPin\n    ) {\n      outputElementPinsByCircuitPinId[inputPin.elementId] = outputSimPin;\n      continue;\n    }\n\n    if (!outputSimPin || !inputSimPins) {\n      continue;\n    }\n\n    const outputEvolver = evolversById[outputSimPin.evolverId];\n    let outputsByOutputPin = outputEvolver.outputsByPin[outputSimPin.pinId];\n    if (outputsByOutputPin == null) {\n      outputEvolver.outputsByPin[outputSimPin.pinId] = outputsByOutputPin = [];\n    }\n\n    // Connect up the output to all of the inputs\n    for (const inputSimPin of inputSimPins) {\n      outputsByOutputPin.push({\n        evolverId: inputSimPin.evolverId,\n        pinId: inputSimPin.pinId,\n      });\n\n      const inputNode = evolversById[inputSimPin.evolverId];\n      inputNode.inputsByPin[inputSimPin.pinId] = {\n        evolverId: outputSimPin.evolverId,\n        pinId: outputSimPin.pinId,\n      };\n    }\n  }\n\n  return {\n    evolversById,\n    evolverIdsByElementId: evolverIdsByElementId,\n    inputElementPinsByCircuitPinId,\n    outputElementPinsByCircuitPinId,\n  };\n}\n\nfunction produceEvolver(\n  elementId: string,\n  dependencies: SimulatorGraphDependencies,\n  path: string[]\n): CircuitProductionResult {\n  const elementType = dependencies.elementTypesByElementId[elementId];\n  if (!elementType) {\n    return EMPTY_PRODUCTION;\n  }\n\n  const def = dependencies.elementDefsByElementType[elementType];\n  if (!def || !def.elementProduction) {\n    return EMPTY_PRODUCTION;\n  }\n\n  const production = normalizeSimProduction(def.elementProduction);\n  switch (production.type) {\n    case \"element\":\n      return produceElementNode(elementId, production, dependencies);\n    case \"circuit\":\n      return produceCircuitNode(elementId, production, dependencies, path);\n    default:\n      throw new Error(\n        \"Unsupported production type \" + (production as any).type\n      );\n  }\n}\n\nfunction produceElementNode(\n  elementId: string,\n  production: ElementSimProduction,\n  {\n    elementTypesByElementId,\n    elementDefsByElementType,\n  }: SimulatorGraphDependencies\n): CircuitProductionResult {\n  const elementType = elementTypesByElementId[elementId];\n  const def = elementDefsByElementType[elementType];\n  if (!def) {\n    return EMPTY_PRODUCTION;\n  }\n\n  const evolversById: Record<string, SimulatorEvolver> = {};\n  const evolverIdsByElementId: Record<string, EvolverIdMappingTreeItem> = {};\n\n  const evolverId = uuidV4();\n  evolversById[evolverId] = {\n    evolverType: production.evolverType,\n    // We do not have any internal pins.\n    // These will be connected by produceCircuit as\n    // it completes is cross-circuit connections.\n    inputsByPin: {},\n    outputsByPin: {},\n  };\n\n  evolverIdsByElementId[elementId] = {\n    evolverId,\n    subElementIds: {},\n  };\n\n  const inputElementPinsByCircuitPinId: Record<string, EvolverPin[]> = {};\n  const outputElementPinsByCircuitPinId: Record<string, EvolverPin> = {};\n\n  // We have a one to one pin mapping between element and evolver\n  for (const pinId of Object.keys(def.pins)) {\n    const { direction } = def.pins[pinId];\n    if (direction === \"input\") {\n      inputElementPinsByCircuitPinId[pinId] = [\n        {\n          pinId,\n          evolverId: evolverId,\n        },\n      ];\n    } else if (direction === \"output\") {\n      outputElementPinsByCircuitPinId[pinId] = {\n        pinId,\n        evolverId: evolverId,\n      };\n    }\n  }\n\n  return {\n    evolversById,\n    evolverIdsByElementId: evolverIdsByElementId,\n    inputElementPinsByCircuitPinId,\n    outputElementPinsByCircuitPinId,\n  };\n}\n\nfunction produceCircuitNode(\n  elementId: string,\n  production: CircuitSimProduction,\n  dependencies: SimulatorGraphDependencies,\n  path: string[]\n): CircuitProductionResult {\n  const circuitProuction = produceCircuitGraph(\n    production.circuitId,\n    dependencies,\n    path\n  );\n\n  return {\n    ...circuitProuction,\n    evolverIdsByElementId: {\n      [elementId]: {\n        evolverId: null,\n        subElementIds: circuitProuction.evolverIdsByElementId,\n      },\n    },\n  };\n}\n","import values from \"lodash/values\";\nimport flatMap from \"lodash/flatMap\";\n\nimport { AppState } from \"@/store\";\n\nimport { rootCircuitGraphSelector } from \"./graph\";\nimport { EvolverPin } from \"../types\";\n\nconst EmptyIdArray = Object.freeze([] as string[]);\nconst EmptyPinInputs = Object.freeze({} as Record<string, EvolverPin>);\n\n/**\n * Gets an array of evolver ids connected to the outputs of the given element id.\n * WARN: Not react safe.  For reducer use only.\n */\nexport const outputEvolverIdsFromEvolverIdSelector = (\n  state: AppState,\n  evolverId: string\n) => {\n  const { evolversById } = rootCircuitGraphSelector(state);\n\n  const evolver = evolversById[evolverId];\n  if (!evolver) {\n    return EmptyIdArray;\n  }\n\n  return flatMap(values(evolver.outputsByPin), (pins) =>\n    pins.map((x) => x.evolverId)\n  );\n};\n\n/**\n * Gets a map of element input pins to their output sources given an element id.\n */\nexport const inputPinsByPinIdFromEvolverIdSelector = (\n  state: AppState,\n  evolverId: string\n) => {\n  const { evolversById } = rootCircuitGraphSelector(state);\n  const evolver = evolversById[evolverId];\n  if (!evolver) {\n    return EmptyPinInputs;\n  }\n\n  return evolver.inputsByPin;\n};\n","import { AppState } from \"@/store\";\nimport { EvolverDefinitionsByType } from \"@/evolvers\";\n\nimport { getEvolverIdFromElementIdPath } from \"../utils\";\n\nimport { rootCircuitGraphSelector } from \"./graph\";\n\nexport const evolverIdsByElementIdSelector = (state: AppState) =>\n  rootCircuitGraphSelector(state).evolverIdsByElementId;\n\n/**\n * Gets the evolver id for a given element id.\n */\nexport const evolverIdFromElementIdSelector = (\n  state: AppState,\n  elementIdPath: string[]\n) => {\n  const { evolverIdsByElementId } = rootCircuitGraphSelector(state);\n  return getEvolverIdFromElementIdPath(evolverIdsByElementId, elementIdPath);\n};\n\n/**\n * Get all evolver ids.\n *\n * WARN: Not react safe.\n */\nexport const evolverIdsSelector = (state: AppState) => {\n  const { evolversById } = rootCircuitGraphSelector(state);\n  return Object.keys(evolversById);\n};\n\nexport const evolverTypeFromEvolverId = (\n  state: AppState,\n  evolverId: string\n) => {\n  const { evolversById } = rootCircuitGraphSelector(state);\n  const evolver = evolversById[evolverId];\n  if (!evolver) {\n    return null;\n  }\n\n  return evolver.evolverType;\n};\n\nexport const evolverDefFromEvolverId = (state: AppState, evolverId: string) => {\n  const type = evolverTypeFromEvolverId(state, evolverId);\n  if (!type) {\n    return null;\n  }\n\n  return EvolverDefinitionsByType[type] ?? null;\n};\n","import { createSelector } from \"reselect\";\n\nimport { elementIdsByCircuitIdSelector } from \"@/services/circuit-graph/selectors/elements\";\nimport { elementTypesByElementIdSelector } from \"@/services/circuit-graph/selectors/elements\";\nimport { connectionsSelector } from \"@/services/circuit-graph/selectors/connections\";\nimport { elementDefinitionsByTypeSelector } from \"@/services/element-types/selectors/element-types\";\nimport { ROOT_CIRCUIT_ID } from \"@/services/circuits/constants\";\n\nimport { produceCircuitGraph } from \"../graph-production\";\nimport { EmptySimulatorGraph } from \"../types\";\n\nexport const rootCircuitGraphSelector = createSelector(\n  elementIdsByCircuitIdSelector,\n  elementTypesByElementIdSelector,\n  connectionsSelector,\n  elementDefinitionsByTypeSelector,\n  (\n    elementIdsByCircuitId,\n    elementTypesByElementId,\n    connections,\n    elementDefsByElementType\n  ) => {\n    try {\n      return produceCircuitGraph(ROOT_CIRCUIT_ID, {\n        elementIdsByCircuitId,\n        elementTypesByElementId,\n        connections,\n        elementDefsByElementType,\n      });\n    } catch (e) {\n      // FIXME: Display this error to the user.\n      console.error(e);\n      return EmptySimulatorGraph;\n    }\n  }\n);\n","import { EvolverType } from \"@/evolvers\";\nimport { ElementDefinition } from \"@/elements/types\";\n\nimport { ElementConnection } from \"../circuit-graph/types\";\n\nexport interface EvolverPin {\n  evolverId: string;\n  pinId: string;\n}\n\nexport interface SimulatorEvolver {\n  /**\n   * The type of this evolver.\n   */\n  evolverType: EvolverType;\n\n  /**\n   * Input source pins by input pin id.\n   *\n   * This is redundant with the opposing evolver's outputsByPin,\n   * to increase lookup speed.\n   */\n  inputsByPin: Record<string, EvolverPin>;\n\n  /**\n   * Output source pins by output pin id.\n   *\n   * This is redundant with the opposing evolver's inputsByPin,\n   * to increase lookup speed.\n   */\n  outputsByPin: Record<string, EvolverPin[]>;\n}\n\nexport interface EvolverIdMappingTreeItem {\n  evolverId: string | null;\n  subElementIds: EvolverIdToElementIdMap;\n}\n\nexport type EvolverIdToElementIdMap = Record<string, EvolverIdMappingTreeItem>;\n\nexport interface SimulatorGraphDependencies {\n  elementIdsByCircuitId: Readonly<Record<string, string[]>>;\n  elementTypesByElementId: Readonly<Record<string, string>>;\n  connections: Readonly<ElementConnection[]>;\n  elementDefsByElementType: Readonly<Record<string, ElementDefinition>>;\n}\n\nexport interface SimulatorGraph {\n  /**\n   * A map of all evolvers by their id.\n   */\n  evolversById: Record<string, SimulatorEvolver>;\n\n  /**\n   * A map of evolver ids by the element id that generated them.\n   */\n  evolverIdsByElementId: EvolverIdToElementIdMap;\n}\n\nexport const EmptySimulatorGraph: SimulatorGraph = Object.freeze({\n  evolversById: {},\n  evolverIdsByElementId: {},\n});\n","import flatMap from \"lodash/flatMap\";\nimport get from \"lodash/get\";\n\nimport { EvolverIdMappingTreeItem, EvolverIdToElementIdMap } from \"./types\";\n\nexport function walkSimulatorElementIdToCircuitElementIdMap(\n  map: EvolverIdToElementIdMap,\n  visit: (elementIdPath: string[], evolverId: string) => void,\n  elementIdPath: string[] = []\n) {\n  const elementIds = Object.keys(map);\n  for (const elementId of elementIds) {\n    const { evolverId, subElementIds: subCircuitIds } = map[elementId];\n    const currentPath = [...elementIdPath, elementId];\n    if (evolverId) {\n      visit(currentPath, evolverId);\n    }\n    walkSimulatorElementIdToCircuitElementIdMap(\n      subCircuitIds,\n      visit,\n      currentPath\n    );\n  }\n}\n\nexport function getEvolverIdFromElementIdPath(\n  map: EvolverIdToElementIdMap,\n  elementIdPath: string[]\n): string | null {\n  // Look up the path through the ic element to reach this element.\n  const evolverIdPath = flatMap(elementIdPath, (icElementId) => [\n    icElementId,\n    \"subElementIds\",\n  ]);\n\n  // Remove the last subCircuitIds\n  evolverIdPath.pop();\n\n  const evolverIdItem: EvolverIdMappingTreeItem = get(map, evolverIdPath);\n\n  if (!evolverIdItem) {\n    return null;\n  }\n\n  const { evolverId: evolverId } = evolverIdItem;\n  return evolverId ?? null;\n}\n","import { isProjectMutationAction } from \"@/project-mutation-actions\";\n\nimport { defaultSimulatorServiceState } from \"../state\";\nimport { createSimulatorReducer } from \"../utils\";\n\nexport default createSimulatorReducer((state, action) => {\n  if (!isProjectMutationAction(action)) {\n    return state;\n  }\n\n  return defaultSimulatorServiceState;\n});\n","import { EvolverDefinitionsByType } from \"@/evolvers\";\n\nimport { isInteractElementAction } from \"@/actions/element-interact\";\nimport {\n  evolverIdFromElementIdSelector,\n  evolverTypeFromEvolverId,\n} from \"@/services/simulator-graph/selectors/elements\";\n\nimport { createSimulatorReducer } from \"../utils\";\n\nimport { applyEvolutionResult } from \"./utils\";\n\nexport default createSimulatorReducer((state, action, appState) => {\n  if (!isInteractElementAction(action)) {\n    return state;\n  }\n\n  const { elementIdPath, data } = action.payload;\n  const evolverId = evolverIdFromElementIdSelector(appState, elementIdPath);\n\n  if (!evolverId) {\n    return state;\n  }\n\n  const elementType = evolverTypeFromEvolverId(appState, evolverId);\n  if (!elementType) {\n    return state;\n  }\n\n  const def = EvolverDefinitionsByType[elementType];\n  if (!def || !def.interact) {\n    return state;\n  }\n\n  const evolverState = state.evolverStatesByEvolverId[evolverId];\n  const evolutionResult = def.interact(evolverState, data);\n\n  return applyEvolutionResult(state, evolverId, evolutionResult);\n});\n","import { concatReducers } from \"@/store/utils\";\n\nimport circuitGraphInvalidatedReducer from \"./circuit-graph-invalidated\";\nimport elementInteractReducer from \"./element-interact\";\nimport simStartReducer from \"./sim-start\";\nimport simStepReducer from \"./sim-step\";\nimport simStopReducer from \"./sim-stop\";\nimport simTickReducer from \"./sim-tick\";\n\nconst simulatorReducer = concatReducers(\n  circuitGraphInvalidatedReducer,\n  elementInteractReducer,\n  simStartReducer,\n  simStepReducer,\n  simStopReducer,\n  simTickReducer\n);\n\nexport default simulatorReducer;\n","import { isStartSimAction } from \"@/actions/sim-start\";\n\nimport { createSimulatorReducer } from \"../utils\";\n\nimport { simInit } from \"./utils\";\n\nexport default createSimulatorReducer((state, action, appState) => {\n  if (!isStartSimAction(action)) {\n    return state;\n  }\n\n  return simInit(state, appState);\n});\n","import { AnyAction } from \"redux\";\n\nimport { fpSet } from \"@/utils\";\n\nimport { AppState, defaultAppState } from \"@/store\";\nimport rootReducer from \"@/store/reducer\";\n\nimport { isStepSimAction } from \"@/actions/sim-step\";\nimport { tickSim } from \"@/actions/sim-tick\";\n\nimport { simInit } from \"./utils\";\n\nexport default function (\n  state: AppState = defaultAppState,\n  action: AnyAction\n): AppState {\n  if (!isStepSimAction(action)) {\n    return state;\n  }\n\n  const { initialized } = state.services.simulator;\n  if (!initialized) {\n    state = fpSet(state, \"services\", \"simulator\", (simState) =>\n      simInit(simState, state)\n    );\n  }\n\n  // These may have changed as a result of the init process.\n  const { tick, transitionWindows } = state.services.simulator;\n  if (transitionWindows.length === 0) {\n    return state;\n  }\n\n  const windowTick = transitionWindows[0].tick;\n\n  return rootReducer(state, tickSim(windowTick - tick));\n}\n","import { isStopSimAction } from \"@/actions/sim-stop\";\n\nimport { defaultSimulatorServiceState } from \"../state\";\n\nimport { createSimulatorReducer } from \"../utils\";\n\nexport default createSimulatorReducer((state, action) => {\n  if (!isStopSimAction(action)) {\n    return state;\n  }\n\n  return defaultSimulatorServiceState;\n});\n","import { isTickSimAction } from \"@/actions/sim-tick\";\n\nimport { createSimulatorReducer } from \"../utils\";\n\nimport { simTick } from \"./utils\";\n\nexport default createSimulatorReducer((state, action, appState) => {\n  if (!isTickSimAction(action)) {\n    return state;\n  }\n\n  const { tickCount } = action.payload;\n\n  const start = performance.now();\n\n  state = simTick(state, tickCount, appState);\n\n  const end = performance.now();\n\n  const updateTime = end - start;\n  state = {\n    ...state,\n    lastTickProcessingTimeMs: updateTime,\n  };\n\n  return state;\n});\n","import binarySearch from \"binary-search\";\nimport { v4 as uuidV4 } from \"uuid\";\nimport pick from \"lodash/pick\";\nimport difference from \"lodash/difference\";\n\nimport { fpSet } from \"@/utils\";\nimport { asArray, dropIndexFp } from \"@/arrays\";\nimport { AppState } from \"@/store\";\nimport { EvolutionResult, OutputTransition } from \"@/logic\";\n\nimport {\n  inputPinsByPinIdFromEvolverIdSelector,\n  outputEvolverIdsFromEvolverIdSelector,\n} from \"@/services/simulator-graph/selectors/connections\";\nimport {\n  evolverIdsSelector,\n  evolverDefFromEvolverId,\n} from \"@/services/simulator-graph/selectors/elements\";\n\nimport { SimulatorServiceState, defaultSimulatorServiceState } from \"../state\";\nimport { SimTransitionWindow, EvolverPinTransition } from \"../types\";\n\nexport function simInit(\n  state: Readonly<SimulatorServiceState>,\n  appState: Readonly<AppState>\n): SimulatorServiceState {\n  const elementIds = evolverIdsSelector(appState);\n\n  state = defaultSimulatorServiceState;\n\n  state = elementIds.reduce(\n    (state, elementId) => initNode(state, elementId, appState),\n    state\n  );\n\n  state = elementIds.reduce(\n    (state, elementId) => collectNodeTransitions(state, elementId, appState),\n    state\n  );\n\n  return Object.assign({}, state, { initialized: true });\n}\n\nfunction initNode(\n  state: Readonly<SimulatorServiceState>,\n  elementId: string,\n  appState: Readonly<AppState>\n): SimulatorServiceState {\n  const def = evolverDefFromEvolverId(appState, elementId);\n  if (!def) {\n    return state;\n  }\n\n  const outputValues: Record<string, boolean> = {};\n  def.outputPins.forEach((output) => {\n    outputValues[output] = false;\n  });\n\n  return fpSet(\n    state,\n    \"evolverOutputValuesByEvolverId\",\n    elementId,\n    outputValues\n  );\n}\n\nexport function simTick(\n  state: Readonly<SimulatorServiceState>,\n  tickCount: number,\n  appState: Readonly<AppState>\n): SimulatorServiceState {\n  const endTick = state.tick + tickCount;\n\n  // We cannot grab the windows ahead of time, as some windows might generate more windows\n  //  for future ticks.\n\n  // Pre-clone windows as we wil be repeatedly modifying it.\n  state = Object.assign({}, state, {\n    transitionWindows: state.transitionWindows.slice(),\n  });\n\n  let saftyCount = tickCount + 1;\n  while (\n    state.transitionWindows.length > 0 &&\n    state.transitionWindows[0].tick <= endTick\n  ) {\n    if (--saftyCount === 0) {\n      // If we have seen more windows than ticks, something is creating windows for past ticks.\n      throw new Error(\n        `Maximum ticks per sim evolution exceeded.  This is an indication that windows are being generated for past ticks.`\n      );\n    }\n\n    // We can safely mutate here, as even if the array is regenerated\n    //  from a tick it will still be a fresh copy that has not yet been\n    //  consumed by redux.\n    const window = state.transitionWindows.shift()!;\n    state = tickWindow(state, window, appState);\n  }\n\n  // If we did not encounter a window on our last tick, jump ahead to that tick.\n  if (state.tick != endTick) {\n    state = Object.assign({}, state, {\n      tick: endTick,\n    });\n  }\n\n  return state;\n}\n\nfunction tickWindow(\n  readonlyState: Readonly<SimulatorServiceState>,\n  window: SimTransitionWindow,\n  appState: Readonly<AppState>\n): SimulatorServiceState {\n  if (window.transitionIds.length === 0) {\n    return readonlyState;\n  }\n\n  // Update the current tick, as it is referenced\n  //  during transition collection.\n  let state = Object.assign({}, readonlyState, {\n    tick: window.tick,\n    // pre-clone outputs for mutation below\n    evolverOutputValuesByEvolverId: Object.assign(\n      {},\n      readonlyState.evolverOutputValuesByEvolverId\n    ),\n  }) as SimulatorServiceState;\n\n  const updatedEvolverIds = new Set<string>();\n  window.transitionIds.forEach((tid) => {\n    const { elementId, valuesByOutputPin } = state.transitionsById[tid];\n\n    if (\n      !isOutputsUpdated(\n        state.evolverOutputValuesByEvolverId[elementId],\n        valuesByOutputPin\n      )\n    ) {\n      // Values are unchanged from current, evolver will not update.\n      return;\n    }\n\n    // evolverOutputValuesByEvolverId is pre-cloned\n    state.evolverOutputValuesByEvolverId[elementId] = Object.assign(\n      {},\n      state.evolverOutputValuesByEvolverId[elementId],\n      valuesByOutputPin\n    );\n\n    // Add each evolver we output to, to the output list.\n    const outputEvolverIds = outputEvolverIdsFromEvolverIdSelector(\n      appState,\n      elementId\n    );\n    outputEvolverIds.forEach((evolverId) => updatedEvolverIds.add(evolverId));\n  });\n\n  // Remove all window transitions as they have been consumed.\n  // State is cloned above\n  state.transitionsById = pick(\n    state.transitionsById,\n    difference(Object.keys(state.transitionsById), window.transitionIds)\n  );\n\n  for (const elementId of updatedEvolverIds) {\n    state = collectNodeTransitions(state, elementId, appState);\n  }\n\n  return state;\n}\n\nfunction isOutputsUpdated(\n  outputs: Record<string, boolean>,\n  updates: Record<string, boolean>\n) {\n  return Object.keys(updates).some((key) => outputs[key] !== updates[key]);\n}\n\nexport function collectNodeTransitions(\n  state: Readonly<SimulatorServiceState>,\n  elementId: string,\n  appState: Readonly<AppState>\n): SimulatorServiceState {\n  const def = evolverDefFromEvolverId(appState, elementId);\n  if (!def || !def.evolve) {\n    return state;\n  }\n\n  // Build the current input state from the connected pins.\n  const inputs = collectNodeInputs(state, elementId, appState);\n  const result = def.evolve(\n    state.evolverStatesByEvolverId[elementId],\n    inputs,\n    state.tick\n  );\n\n  return applyEvolutionResult(state, elementId, result);\n}\n\nexport function applyEvolutionResult(\n  state: Readonly<SimulatorServiceState>,\n  elementId: string,\n  evolutionResult: EvolutionResult\n) {\n  const { state: evolverState, transitions } = evolutionResult;\n\n  if (evolverState) {\n    state = fpSet(state, \"evolverStatesByEvolverId\", elementId, evolverState);\n  }\n\n  if (transitions) {\n    const transitionsArray = asArray(transitions);\n    state = transitionsArray.reduce(\n      (state, transition, i) =>\n        applyOutputTransition(\n          state,\n          elementId,\n          transition,\n          i === 0 ? \"replace\" : \"append\"\n        ),\n      state\n    );\n  }\n\n  return state;\n}\n\nfunction collectNodeInputs(\n  state: Readonly<SimulatorServiceState>,\n  elementId: string,\n  appState: Readonly<AppState>\n): Record<string, boolean> {\n  // Build the current input state from the connected pins.\n  const inputs: Record<string, boolean> = {};\n  const inputSourcesByPin = inputPinsByPinIdFromEvolverIdSelector(\n    appState,\n    elementId\n  );\n\n  Object.keys(inputSourcesByPin).forEach((inputPin) => {\n    const inputConn = inputSourcesByPin[inputPin];\n    if (!inputConn) {\n      inputs[inputPin] = false;\n      return;\n    }\n\n    const { evolverId, pinId: sourcePinId } = inputConn;\n    inputs[inputPin] =\n      state.evolverOutputValuesByEvolverId[evolverId]?.[sourcePinId] || false;\n  });\n\n  return inputs;\n}\n\nfunction applyOutputTransition(\n  state: Readonly<SimulatorServiceState>,\n  elementId: string,\n  transition: OutputTransition,\n  defaultMerger: \"replace\" | \"append\" = \"replace\"\n): SimulatorServiceState {\n  const {\n    tickOffset,\n    valuesByPin,\n    transitionMerger = defaultMerger,\n  } = transition;\n\n  // Sanity check that we are not producing transitions for the past or current tick.\n  const transitionTick = state.tick + (tickOffset > 0 ? tickOffset : 1);\n\n  // We originally removed old transitions when scheduling new transitions.\n  //  Experimenting without this.\n  if (transitionMerger === \"replace\") {\n    state = removeTransitionsByEvolverId(state, elementId);\n  }\n\n  return addTransition(state, elementId, transitionTick, valuesByPin);\n}\n\nfunction addTransition(\n  state: Readonly<SimulatorServiceState>,\n  elementId: string,\n  tick: number,\n  valuesByOutputPin: Record<string, boolean>\n): SimulatorServiceState {\n  const transitionId = uuidV4();\n\n  const newTransition: EvolverPinTransition = {\n    elementId,\n    tick,\n    valuesByOutputPin,\n  };\n\n  // Prepare the new transition window.\n  const transitionWindows = state.transitionWindows.slice();\n\n  let index = binarySearch(transitionWindows, tick, (a, b) => a.tick - b);\n  if (index < 0) {\n    // Need to create a new window\n    index = -index - 1;\n    const newWindow: SimTransitionWindow = {\n      tick,\n      transitionIds: [],\n    };\n    transitionWindows.splice(index, 0, newWindow);\n  }\n\n  const transitionIds = transitionWindows[index].transitionIds.slice();\n  transitionIds.push(transitionId);\n\n  transitionWindows[index] = Object.assign({}, transitionWindows[index], {\n    transitionIds,\n  });\n\n  const transitionsById = Object.assign({}, state.transitionsById, {\n    [transitionId]: newTransition,\n  });\n\n  return Object.assign({}, state, {\n    // Add the new transition window to the id mapping.\n    transitionsById,\n    transitionWindows,\n  });\n}\n\nfunction removeTransitionsByEvolverId(\n  state: Readonly<SimulatorServiceState>,\n  elementId: string\n): SimulatorServiceState {\n  function isElementTransition(transition: EvolverPinTransition) {\n    return transition.elementId === elementId;\n  }\n\n  const transitionIds = Object.keys(state.transitionsById).filter((id) =>\n    isElementTransition(state.transitionsById[id])\n  );\n\n  return transitionIds.reduce(\n    (state, transitionId) => removeTransitionById(state, transitionId),\n    state\n  );\n}\n\nexport function removeTransitionById(\n  state: Readonly<SimulatorServiceState>,\n  transitionId: string\n): SimulatorServiceState {\n  const transition = state.transitionsById[transitionId];\n  if (!transition) {\n    return state;\n  }\n\n  const transitionsById = pick(\n    state.transitionsById,\n    Object.keys(state.transitionsById).filter((x) => x !== transitionId)\n  );\n  let transitionWindows = state.transitionWindows;\n\n  const transitionWindowIndex = binarySearch(\n    transitionWindows,\n    transition.tick,\n    (a, b) => a.tick - b\n  );\n  if (transitionWindowIndex >= 0) {\n    const transitionWindow = transitionWindows[transitionWindowIndex];\n    const { transitionIds } = transitionWindow;\n\n    const tickWindowTransitionIndex = transitionWindow.transitionIds.indexOf(\n      transitionId\n    );\n    if (tickWindowTransitionIndex !== -1) {\n      if (transitionWindow.transitionIds.length === 1) {\n        // Only one element left, remove the window.\n        transitionWindows = dropIndexFp(\n          transitionWindows,\n          transitionWindowIndex\n        );\n      } else {\n        // Remove the transition from the tick window.\n        transitionWindows = transitionWindows.slice();\n        transitionWindows[transitionWindowIndex] = Object.assign(\n          {},\n          transitionWindows[transitionWindowIndex],\n          {\n            transitionIds: dropIndexFp(\n              transitionIds,\n              tickWindowTransitionIndex\n            ),\n          }\n        );\n      }\n    }\n  }\n\n  return Object.assign({}, state, {\n    transitionsById,\n    transitionWindows,\n  });\n}\n","import { AppState } from \"@/store\";\n\nimport { getEvolverIdFromElementIdPath } from \"@/services/simulator-graph/utils\";\nimport { rootCircuitGraphSelector } from \"@/services/simulator-graph/selectors/graph\";\n\nexport const evolverStateFromCircuitElementIdSelector = (\n  state: AppState,\n  elementIdPath: string[]\n) => {\n  const { evolverIdsByElementId } = rootCircuitGraphSelector(state);\n  const evolverStatesByEvolverId =\n    state.services.simulator.evolverStatesByEvolverId;\n\n  const evolverId = getEvolverIdFromElementIdPath(\n    evolverIdsByElementId,\n    elementIdPath\n  );\n  if (!evolverId) {\n    return undefined;\n  }\n\n  return evolverStatesByEvolverId[evolverId];\n};\n\nexport const elementOutputsFromCircuitElementIdSelector = (\n  state: AppState,\n  elementIdPath: string[]\n) => {\n  const { evolverIdsByElementId } = rootCircuitGraphSelector(state);\n  const elementOutputsBySimulatorElementId =\n    state.services.simulator.evolverOutputValuesByEvolverId;\n\n  const evolverId = getEvolverIdFromElementIdPath(\n    evolverIdsByElementId,\n    elementIdPath\n  );\n  if (!evolverId) {\n    return undefined;\n  }\n\n  return elementOutputsBySimulatorElementId[evolverId];\n};\n\nexport const elementOutputFromCircuitElementPinSelector = (\n  state: AppState,\n  elementIdPath: string[],\n  pin: string\n) => {\n  const outputs = elementOutputsFromCircuitElementIdSelector(\n    state,\n    elementIdPath\n  );\n  if (!outputs) {\n    return false;\n  }\n  return outputs[pin] ?? false;\n};\n","import { createSimulatorSelector } from \"../utils\";\n\nexport const averageMsecsPerTickSelector = createSimulatorSelector(\n  (state) => state.lastTickProcessingTimeMs\n);\n","import { EvolverPinTransition, SimTransitionWindow } from \"./types\";\n\nexport interface SimulatorServiceState {\n  /**\n   * Whether the simulator has been initialized.\n   */\n  initialized: boolean;\n\n  /**\n   * The current tick the simulator is on.\n   */\n  tick: number;\n\n  /**\n   * The time it took in milliseconds to process the last tick.\n   */\n  lastTickProcessingTimeMs: number;\n\n  /**\n   * A map of evolver states by evolver id.\n   */\n  evolverStatesByEvolverId: Record<string, any>;\n\n  /**\n   * A map of output-to-value maps by evolver id.\n   */\n  evolverOutputValuesByEvolverId: Record<string, Record<string, boolean>>;\n\n  /**\n   * A map of pending transitions by id.\n   */\n  transitionsById: Record<string, EvolverPinTransition>;\n\n  /**\n   * Transition windows in ascending order of tick.\n   */\n  transitionWindows: SimTransitionWindow[];\n}\n\nconst _defaultState: SimulatorServiceState = {\n  initialized: false,\n  tick: 0,\n  lastTickProcessingTimeMs: 0,\n  evolverStatesByEvolverId: {},\n  evolverOutputValuesByEvolverId: {},\n  transitionsById: {},\n  transitionWindows: [],\n};\n\nexport const defaultSimulatorServiceState = Object.freeze(_defaultState);\n","import {\n  createServiceReducerCreator,\n  createServiceSelectorCreator,\n} from \"../service-state-utils\";\n\nexport const createSimulatorReducer = createServiceReducerCreator(\"simulator\");\nexport const createSimulatorSelector = createServiceSelectorCreator(\n  \"simulator\"\n);\n","import {\n  CircuitEditorDragServiceState,\n  defaultCircuitEditorDragServiceState,\n} from \"./circuit-editor-drag/state\";\nimport {\n  CircuitEditorsServiceState,\n  defaultCircuitEditorServiceState,\n} from \"./circuit-editors/state\";\nimport {\n  CircuitGraphServiceState,\n  defaultCircuitGraphServiceState,\n} from \"./circuit-graph/state\";\nimport {\n  CircuitLayoutServiceState,\n  defaultCircuitLayoutServiceState,\n} from \"./circuit-layout/state\";\nimport {\n  CircuitPropertiesServiceState,\n  defaultCircuitPropertiesServiceState,\n} from \"./circuit-properties/state\";\nimport {\n  ClipboardServiceState,\n  defaultClipboardServiceState,\n} from \"./clipboard/state\";\nimport { DialogServiceState, defaultDialogServiceState } from \"./dialog/state\";\nimport {\n  ProjectServiceState,\n  defaultProjectServiceState,\n} from \"./project/state\";\nimport {\n  SelectionServiceState,\n  defaultSelectionServiceState,\n} from \"./selection/state\";\nimport {\n  SimulatorServiceState,\n  defaultSimulatorServiceState,\n} from \"./simulator/state\";\nimport {\n  SimulatorControlServiceState,\n  defaultSimulatorControlServiceState,\n} from \"./simulator-control/state\";\nimport {\n  TutorialServiceState,\n  defaultTutorialServiceState,\n} from \"./tutorial/state\";\nimport {\n  UiLayoutServiceState,\n  defaultUiLayoutServiceState,\n} from \"./ui-layout/state\";\nimport { UiSettingsState, defaultUiSettingsState } from \"./ui-settings/state\";\n\nexport interface AppServicesState {\n  circuitEditorDrag: CircuitEditorDragServiceState;\n  circuitEditors: CircuitEditorsServiceState;\n  clipboard: ClipboardServiceState;\n  dialog: DialogServiceState;\n  circuitGraph: CircuitGraphServiceState;\n  circuitLayout: CircuitLayoutServiceState;\n  circuitProperties: CircuitPropertiesServiceState;\n  project: ProjectServiceState;\n  selection: SelectionServiceState;\n  simulator: SimulatorServiceState;\n  simulatorControl: SimulatorControlServiceState;\n  tutorial: TutorialServiceState;\n  uiLayout: UiLayoutServiceState;\n  uiSettings: UiSettingsState;\n}\n\nconst _defaultServiceState: AppServicesState = {\n  circuitEditorDrag: defaultCircuitEditorDragServiceState,\n  circuitEditors: defaultCircuitEditorServiceState,\n  circuitGraph: defaultCircuitGraphServiceState,\n  circuitLayout: defaultCircuitLayoutServiceState,\n  circuitProperties: defaultCircuitPropertiesServiceState,\n  clipboard: defaultClipboardServiceState,\n  dialog: defaultDialogServiceState,\n  project: defaultProjectServiceState,\n  selection: defaultSelectionServiceState,\n  simulator: defaultSimulatorServiceState,\n  simulatorControl: defaultSimulatorControlServiceState,\n  tutorial: defaultTutorialServiceState,\n  uiLayout: defaultUiLayoutServiceState,\n  uiSettings: defaultUiSettingsState,\n};\n\nexport const defaultServicesState = Object.freeze(_defaultServiceState);\n","import { concatReducers } from \"@/store/utils\";\n\nimport tutorialAnnotateReducer from \"./tutorial-annotate\";\nimport tutorialDismissReducer from \"./tutorial-dismiss\";\nimport tutorialStartReducer from \"./tutorial-start\";\n\nexport default concatReducers(\n  tutorialAnnotateReducer,\n  tutorialDismissReducer,\n  tutorialStartReducer\n);\n","import { asArray } from \"@/arrays\";\n\nimport { isTutorialAnnotateAction } from \"@/actions/tutorial-annotate\";\n\nimport { createTutorialReducer } from \"../utils\";\n\nexport default createTutorialReducer((state, action) => {\n  if (!isTutorialAnnotateAction(action)) {\n    return state;\n  }\n\n  const { annotations } = action.payload;\n\n  return {\n    ...state,\n    annotatedElements: asArray(annotations),\n  };\n});\n","import { AnyAction } from \"redux\";\n\nimport { AppState, defaultAppState } from \"@/store\";\n\nimport { isTutorialDismissAction } from \"@/actions/tutorial-dismiss\";\n\nexport default (state: AppState = defaultAppState, action: AnyAction) => {\n  if (!isTutorialDismissAction(action)) {\n    return state;\n  }\n\n  return state.services.tutorial.preTutorialState ?? defaultAppState;\n};\n","import { AnyAction } from \"redux\";\n\nimport { fpSet } from \"@/utils\";\nimport { AppState, defaultAppState } from \"@/store\";\n\nimport { isTutorialStartAction } from \"@/actions/tutorial-start\";\n\nexport default (state: AppState = defaultAppState, action: AnyAction) => {\n  if (!isTutorialStartAction(action)) {\n    return state;\n  }\n\n  const { tutorial } = action.payload;\n\n  let { preTutorialState } = state.services.tutorial;\n  if (!preTutorialState) {\n    preTutorialState = state;\n  }\n\n  state = defaultAppState;\n\n  state = fpSet(state, \"services\", \"project\", \"projectName\", \"Tutorial\");\n\n  state = fpSet(state, \"services\", \"tutorial\", {\n    activeTutorial: tutorial,\n    annotatedElements: [],\n    preTutorialState,\n  });\n\n  return state;\n};\n","import { fork } from \"redux-saga/effects\";\n\nimport tutorialsSaga from \"./tutorials\";\n\nexport default function* tutorialSaga() {\n  yield fork(tutorialsSaga);\n}\n","import { call, takeEvery } from \"redux-saga/effects\";\n\nimport {\n  ACTION_TUTORIAL_START,\n  TutorialStartAction,\n} from \"@/actions/tutorial-start\";\n\nimport runBasicsTutorial from \"./tutorials/basic\";\nimport runCircuitsTutorial from \"./tutorials/circuits\";\n\nexport default function* startTutorial() {\n  yield takeEvery(ACTION_TUTORIAL_START, handleStartTutorial);\n}\n\nfunction* handleStartTutorial(action: TutorialStartAction) {\n  const { tutorial } = action.payload;\n  switch (tutorial) {\n    case \"basics\":\n      yield call(runBasicsTutorial);\n      return;\n    case \"circuits\":\n      yield call(runCircuitsTutorial);\n  }\n}\n","import { call, put, select, take } from \"redux-saga/effects\";\n\nimport { arrayEquals } from \"@/arrays\";\n\nimport {\n  ACTION_ELEMENT_INTERACT,\n  InteractElementAction,\n} from \"@/actions/element-interact\";\nimport { ACTION_SIM_START } from \"@/actions/sim-start\";\nimport { tutorialAnnotate } from \"@/actions/tutorial-annotate\";\nimport { tutorialDismiss } from \"@/actions/tutorial-dismiss\";\n\nimport { activeCircuitEditorIdSelector } from \"@/services/circuit-editors/selectors/editor\";\n\nimport {\n  getCircuitEditorHtmlId,\n  getElementHtmlId,\n  getElementPinHtmlId,\n} from \"@/components/CircuitEditor/ids\";\n\nimport {\n  addElementTutorialStep,\n  tutorialNextMessage,\n  waitFilterAction,\n  waitElementConnected,\n} from \"./utils\";\n\nexport default function* runBasicsTutorial() {\n  yield call(\n    tutorialNextMessage,\n    \"#element-tray\",\n    \"This is where logic elements are stored.\"\n  );\n\n  const gateId: string | null = yield call(addElementTutorialStep, \"logic-not\");\n  if (!gateId) {\n    yield put(tutorialDismiss());\n    return;\n  }\n\n  const switchId: string | null = yield call(\n    addElementTutorialStep,\n    \"interaction-momentary\"\n  );\n  if (!switchId) {\n    yield put(tutorialDismiss());\n    return;\n  }\n\n  const ledId: string | null = yield call(addElementTutorialStep, \"output-led\");\n  if (!ledId) {\n    yield put(tutorialDismiss());\n    return;\n  }\n\n  const activeEditorId: string | null = yield select(\n    activeCircuitEditorIdSelector\n  );\n  if (!activeEditorId) {\n    yield put(tutorialDismiss());\n    return;\n  }\n\n  yield put(\n    tutorialAnnotate([\n      {\n        selector: \"#\" + getElementPinHtmlId(activeEditorId, switchId, \"OUT\"),\n        message: \"This is the switch's output pin.\",\n        placement: \"top\",\n      },\n      {\n        selector: \"#\" + getElementPinHtmlId(activeEditorId, gateId, \"IN\"),\n        message: \"This is the logic gate's input pin.\",\n        placement: \"bottom\",\n      },\n      {\n        selector: \"#\" + getCircuitEditorHtmlId(activeEditorId),\n        message: \"Click and drag from one pin to another to connect them.\",\n        placement: \"top\",\n      },\n    ])\n  );\n\n  yield call(\n    waitElementConnected,\n    { elementId: switchId, pinId: \"OUT\" },\n    { elementId: gateId, pinId: \"IN\" }\n  );\n\n  yield put(\n    tutorialAnnotate([\n      {\n        selector: \"#\" + getElementPinHtmlId(activeEditorId, gateId, \"OUT\"),\n        message: \"This is the logic gate's output pin.\",\n        placement: \"top\",\n      },\n      {\n        selector: \"#\" + getElementPinHtmlId(activeEditorId, ledId, \"IN\"),\n        message: \"This is the LED's input pin.\",\n        placement: \"bottom\",\n      },\n      {\n        selector: \"#\" + getCircuitEditorHtmlId(activeEditorId),\n        message: \"Click and drag from one pin to another to connect them.\",\n        placement: \"top\",\n      },\n    ])\n  );\n\n  yield call(\n    waitElementConnected,\n    { elementId: gateId, pinId: \"OUT\" },\n    { elementId: ledId, pinId: \"IN\" }\n  );\n\n  yield put(\n    tutorialAnnotate({\n      selector: \"#simctrl-run\",\n      message: \"Click here to run the simulation.\",\n    })\n  );\n\n  yield take(ACTION_SIM_START);\n\n  yield put(\n    tutorialAnnotate([\n      // Unfortunately, since we use absolute positioning, the z-index on the element will not function unless\n      // we also raise the field\n      {\n        selector: \"#\" + getCircuitEditorHtmlId(activeEditorId),\n      },\n      {\n        selector: \"#\" + getElementHtmlId(activeEditorId, switchId),\n        message:\n          \"Click the switch to activate it.  Momentary switches need to be held.\",\n      },\n    ])\n  );\n\n  yield call(() =>\n    waitFilterAction<InteractElementAction>(\n      ACTION_ELEMENT_INTERACT,\n      ({ payload: { elementIdPath, data } }) =>\n        data === true && arrayEquals(elementIdPath, [switchId])\n    )\n  );\n\n  yield put(\n    tutorialAnnotate({\n      selector: \"#\" + getCircuitEditorHtmlId(activeEditorId),\n      placement: \"top\",\n      message: \"That's it!\",\n      action: {\n        name: \"End Tutorial\",\n        action: tutorialDismiss(),\n      },\n    })\n  );\n}\n","import { call, put, select, take } from \"redux-saga/effects\";\n\nimport { arrayEquals } from \"@/arrays\";\n\nimport { circuitIdToElementType } from \"@/elements/definitions/integrated-circuits/utils\";\n\nimport { tutorialAnnotate } from \"@/actions/tutorial-annotate\";\nimport { tutorialDismiss } from \"@/actions/tutorial-dismiss\";\nimport { ACTION_CIRCUIT_ADD, AddCircuitAction } from \"@/actions/circuit-add\";\nimport { ACTION_CIRCUIT_RENAME } from \"@/actions/circuit-rename\";\nimport { ACTION_VIEW_CIRCUIT, ViewCircuitAction } from \"@/actions/view-circuit\";\nimport {\n  ACTION_ELEMENT_INTERACT,\n  InteractElementAction,\n} from \"@/actions/element-interact\";\nimport { ACTION_SIM_START } from \"@/actions/sim-start\";\nimport {\n  ACTION_ELEMENT_RENAME,\n  RenameElementAction,\n} from \"@/actions/element-rename\";\n\nimport { activeCircuitEditorIdSelector } from \"@/services/circuit-editors/selectors/editor\";\nimport { ROOT_CIRCUIT_ID } from \"@/services/circuits/constants\";\n\nimport { getCircuitListItemHtmlId } from \"@/pages/ProjectEditorPage/windows/CircuitsTreeWindow/ids\";\n\nimport {\n  getCircuitEditorHtmlId,\n  getElementHtmlId,\n  getElementPinHtmlId,\n} from \"@/components/CircuitEditor/ids\";\n\nimport {\n  addElementTutorialStep,\n  tutorialNextMessage,\n  waitFilterAction,\n  waitElementConnected,\n} from \"./utils\";\n\nexport default function* runCircuitsTutorial() {\n  yield call(\n    tutorialNextMessage,\n    \"#circuit-list-window\",\n    \"Circuits are collections of elements that can be reused as ICs.\"\n  );\n\n  yield put(\n    tutorialAnnotate({\n      selector: \"#circuit-list\",\n      message: \"Right click on the circuit list to create a new circuit.\",\n    })\n  );\n\n  const addCircuitAction: AddCircuitAction = yield take(ACTION_CIRCUIT_ADD);\n  const { circuitId } = addCircuitAction.payload;\n\n  yield put(\n    tutorialAnnotate({\n      selector: \"#\" + getCircuitListItemHtmlId(circuitId),\n      message: \"Here is your circuit.  Double click it to rename it.\",\n    })\n  );\n\n  yield take(ACTION_CIRCUIT_RENAME);\n\n  yield put(\n    tutorialAnnotate({\n      selector: \"#\" + getCircuitListItemHtmlId(circuitId),\n      message: \"Click the circuit to view it in the active editor window.\",\n    })\n  );\n\n  yield call(() =>\n    waitFilterAction<ViewCircuitAction>(\n      ACTION_VIEW_CIRCUIT,\n      (action) => action.payload.circuitId === circuitId\n    )\n  );\n\n  const activeEditorId: string | null = yield select(\n    activeCircuitEditorIdSelector\n  );\n  if (!activeEditorId) {\n    yield put(tutorialDismiss());\n    return;\n  }\n\n  const inputPinId: string | null = yield call(\n    addElementTutorialStep,\n    \"pin-input\"\n  );\n  if (!inputPinId) {\n    yield put(tutorialDismiss());\n    return;\n  }\n\n  yield call(\n    tutorialNextMessage,\n    \"#\" + getElementHtmlId(activeEditorId, inputPinId),\n    \"Input pins take a signal from outside for use in your circuit.\",\n    { additionalSelectors: [\"#\" + getCircuitEditorHtmlId(activeEditorId)] }\n  );\n\n  yield put(\n    tutorialAnnotate([\n      {\n        selector: \"#\" + getCircuitEditorHtmlId(activeEditorId),\n      },\n      {\n        selector: \"#\" + getElementHtmlId(activeEditorId, inputPinId),\n        message:\n          \"Rename the pin by right clicking it and clicking on the bolded text.  Choose any name you like\",\n      },\n    ])\n  );\n\n  yield call(() =>\n    waitFilterAction<RenameElementAction>(\n      ACTION_ELEMENT_RENAME,\n      (action) => action.payload.elementId === inputPinId\n    )\n  );\n\n  yield call(\n    tutorialNextMessage,\n    \"#\" + getElementHtmlId(activeEditorId, inputPinId),\n    \"Pin names will appear on the body of the IC when used in other circuits.  Be sure to name your pins!\"\n  );\n\n  const outputPinId1: string | null = yield call(\n    addElementTutorialStep,\n    \"pin-output\"\n  );\n  if (!outputPinId1) {\n    yield put(tutorialDismiss());\n    return;\n  }\n\n  yield call(\n    tutorialNextMessage,\n    \"#\" + getElementHtmlId(activeEditorId, outputPinId1),\n    \"Output pins take a signal from your circuit and send it to the outside world.\"\n  );\n\n  const outputPinId2: string | null = yield call(\n    addElementTutorialStep,\n    \"pin-output\",\n    {\n      trayMessage: \"Let's take another output pin\",\n      fieldMessage:\n        \"When multiple pins are used, the pins will stack in their vertical orientation on the IC\",\n    }\n  );\n\n  if (!outputPinId2) {\n    yield put(tutorialDismiss());\n    return;\n  }\n\n  yield call(\n    tutorialNextMessage,\n    \"#\" + getCircuitEditorHtmlId(activeEditorId),\n    \"Let's put together a simple circuit.\",\n    { placement: \"top\" }\n  );\n\n  const bufferId: string | null = yield call(\n    addElementTutorialStep,\n    \"logic-buffer\"\n  );\n  if (!bufferId) {\n    yield put(tutorialDismiss());\n    return;\n  }\n\n  const notId: string | null = yield call(addElementTutorialStep, \"logic-not\");\n  if (!notId) {\n    yield put(tutorialDismiss());\n    return;\n  }\n\n  yield put(\n    tutorialAnnotate([\n      {\n        selector: \"#\" + getElementPinHtmlId(activeEditorId, inputPinId, \"OUT\"),\n        message: \"Connect the input signal pin...\",\n        placement: \"top\",\n      },\n      {\n        selector: \"#\" + getElementPinHtmlId(activeEditorId, bufferId, \"IN\"),\n        message: \"...to the buffer's input.\",\n        placement: \"bottom\",\n      },\n      {\n        selector: \"#\" + getCircuitEditorHtmlId(activeEditorId),\n        message: \"Click and drag from one pin to another to connect them.\",\n        placement: \"top\",\n      },\n    ])\n  );\n\n  yield call(\n    waitElementConnected,\n    { elementId: inputPinId, pinId: \"OUT\" },\n    { elementId: bufferId, pinId: \"IN\" }\n  );\n\n  yield put(\n    tutorialAnnotate([\n      {\n        selector: \"#\" + getElementPinHtmlId(activeEditorId, bufferId, \"OUT\"),\n        message: \"Connect the buffer's output pin...\",\n        placement: \"top\",\n      },\n      {\n        selector: \"#\" + getElementPinHtmlId(activeEditorId, outputPinId1, \"IN\"),\n        message: \"...to the IC's first output.\",\n        placement: \"bottom\",\n      },\n      {\n        selector: \"#\" + getCircuitEditorHtmlId(activeEditorId),\n        message: \"Click and drag from one pin to another to connect them.\",\n        placement: \"top\",\n      },\n    ])\n  );\n\n  yield call(\n    waitElementConnected,\n    { elementId: bufferId, pinId: \"OUT\" },\n    { elementId: outputPinId1, pinId: \"IN\" }\n  );\n\n  yield put(\n    tutorialAnnotate([\n      {\n        selector: \"#\" + getElementPinHtmlId(activeEditorId, inputPinId, \"OUT\"),\n        message: \"Connect the input signal pin...\",\n        placement: \"top\",\n      },\n      {\n        selector: \"#\" + getElementPinHtmlId(activeEditorId, notId, \"IN\"),\n        message: \"...to the NOT's input.\",\n        placement: \"bottom\",\n      },\n      {\n        selector: \"#\" + getCircuitEditorHtmlId(activeEditorId),\n        message: \"Click and drag from one pin to another to connect them.\",\n        placement: \"top\",\n      },\n    ])\n  );\n\n  yield call(\n    waitElementConnected,\n    { elementId: inputPinId, pinId: \"OUT\" },\n    { elementId: notId, pinId: \"IN\" }\n  );\n\n  yield put(\n    tutorialAnnotate([\n      {\n        selector: \"#\" + getElementPinHtmlId(activeEditorId, notId, \"OUT\"),\n        message: \"Connect the NOT's output...\",\n        placement: \"top\",\n      },\n      {\n        selector: \"#\" + getElementPinHtmlId(activeEditorId, outputPinId2, \"IN\"),\n        message: \"...to the second IC output.\",\n        placement: \"bottom\",\n      },\n      {\n        selector: \"#\" + getCircuitEditorHtmlId(activeEditorId),\n        message: \"Click and drag from one pin to another to connect them.\",\n        placement: \"top\",\n      },\n    ])\n  );\n\n  yield call(\n    waitElementConnected,\n    { elementId: notId, pinId: \"OUT\" },\n    { elementId: outputPinId2, pinId: \"IN\" }\n  );\n\n  yield put(\n    tutorialAnnotate({\n      selector: \"#\" + getCircuitListItemHtmlId(ROOT_CIRCUIT_ID),\n      message:\n        \"We now have a functional IC.  Let's go to the root project and make use of it\",\n    })\n  );\n\n  yield call(() =>\n    waitFilterAction<ViewCircuitAction>(\n      ACTION_VIEW_CIRCUIT,\n      (action) => action.payload.circuitId === ROOT_CIRCUIT_ID\n    )\n  );\n\n  const icType = circuitIdToElementType(circuitId);\n\n  const icId: string | null = yield call(addElementTutorialStep, icType);\n  if (!icId) {\n    yield put(tutorialDismiss());\n    return;\n  }\n\n  yield call(\n    tutorialNextMessage,\n    \"#\" + getCircuitEditorHtmlId(activeEditorId),\n    \"Let's connect it up to see it in action.\",\n    { placement: \"top\" }\n  );\n\n  const switchId: string | null = yield call(\n    addElementTutorialStep,\n    \"interaction-momentary\"\n  );\n  if (!switchId) {\n    yield put(tutorialDismiss());\n    return;\n  }\n\n  const led1Id: string | null = yield call(\n    addElementTutorialStep,\n    \"output-led\",\n    { trayMessage: \"Make an LED to check the status of the first pin.\" }\n  );\n  if (!led1Id) {\n    yield put(tutorialDismiss());\n    return;\n  }\n\n  const led2Id: string | null = yield call(\n    addElementTutorialStep,\n    \"output-led\",\n    { trayMessage: \"Make an LED to check the status of the second pin.\" }\n  );\n  if (!led2Id) {\n    yield put(tutorialDismiss());\n    return;\n  }\n\n  yield put(\n    tutorialAnnotate([\n      {\n        selector: \"#\" + getElementPinHtmlId(activeEditorId, switchId, \"OUT\"),\n        message: \"Connect the switch output...\",\n        placement: \"top\",\n      },\n      {\n        selector: \"#\" + getElementPinHtmlId(activeEditorId, icId, inputPinId),\n        message: \"...to the IC input.\",\n        placement: \"bottom\",\n      },\n      {\n        selector: \"#\" + getCircuitEditorHtmlId(activeEditorId),\n        message: \"Click and drag from one pin to another to connect them.\",\n        placement: \"top\",\n      },\n    ])\n  );\n\n  yield call(\n    waitElementConnected,\n    { elementId: switchId, pinId: \"OUT\" },\n    { elementId: icId, pinId: inputPinId }\n  );\n\n  yield put(\n    tutorialAnnotate([\n      {\n        selector: \"#\" + getElementPinHtmlId(activeEditorId, icId, outputPinId1),\n        message: \"Connect the first IC output...\",\n        placement: \"top\",\n      },\n      {\n        selector: \"#\" + getElementPinHtmlId(activeEditorId, led1Id, \"IN\"),\n        message: \"...to the first LED.\",\n        placement: \"bottom\",\n      },\n      {\n        selector: \"#\" + getCircuitEditorHtmlId(activeEditorId),\n        message: \"Click and drag from one pin to another to connect them.\",\n        placement: \"top\",\n      },\n    ])\n  );\n\n  yield call(\n    waitElementConnected,\n    { elementId: icId, pinId: outputPinId1 },\n    { elementId: led1Id, pinId: \"IN\" }\n  );\n\n  yield put(\n    tutorialAnnotate([\n      {\n        selector: \"#\" + getElementPinHtmlId(activeEditorId, icId, outputPinId1),\n        message: \"Connect the first IC output...\",\n        placement: \"top\",\n      },\n      {\n        selector: \"#\" + getElementPinHtmlId(activeEditorId, led1Id, \"IN\"),\n        message: \"...to the first LED.\",\n        placement: \"bottom\",\n      },\n      {\n        selector: \"#\" + getCircuitEditorHtmlId(activeEditorId),\n        message: \"Click and drag from one pin to another to connect them.\",\n        placement: \"top\",\n      },\n    ])\n  );\n\n  yield call(\n    waitElementConnected,\n    { elementId: icId, pinId: outputPinId1 },\n    { elementId: led1Id, pinId: \"IN\" }\n  );\n\n  yield put(\n    tutorialAnnotate([\n      {\n        selector: \"#\" + getElementPinHtmlId(activeEditorId, icId, outputPinId2),\n        message: \"Connect the second IC output...\",\n        placement: \"top\",\n      },\n      {\n        selector: \"#\" + getElementPinHtmlId(activeEditorId, led2Id, \"IN\"),\n        message: \"...to the second LED.\",\n        placement: \"bottom\",\n      },\n      {\n        selector: \"#\" + getCircuitEditorHtmlId(activeEditorId),\n        message: \"Click and drag from one pin to another to connect them.\",\n        placement: \"top\",\n      },\n    ])\n  );\n\n  yield call(\n    waitElementConnected,\n    { elementId: icId, pinId: outputPinId2 },\n    { elementId: led2Id, pinId: \"IN\" }\n  );\n\n  yield put(\n    tutorialAnnotate({\n      selector: \"#simctrl-run\",\n      message: \"Click here to run the simulation.\",\n    })\n  );\n\n  yield take(ACTION_SIM_START);\n\n  yield put(\n    tutorialAnnotate([\n      // Unfortunately, since we use absolute positioning, the z-index on the element will not function unless\n      // we also raise the field\n      {\n        selector: \"#\" + getCircuitEditorHtmlId(activeEditorId),\n      },\n      {\n        selector: \"#\" + getElementHtmlId(activeEditorId, switchId),\n        message:\n          \"Click the switch to activate it.  Momentary switches need to be held.\",\n      },\n    ])\n  );\n\n  yield call(() =>\n    waitFilterAction<InteractElementAction>(\n      ACTION_ELEMENT_INTERACT,\n      ({ payload: { elementIdPath, data } }) =>\n        data === true && arrayEquals(elementIdPath, [switchId])\n    )\n  );\n\n  yield put(\n    tutorialAnnotate({\n      selector: \"#\" + getCircuitEditorHtmlId(activeEditorId),\n      placement: \"top\",\n      message:\n        \"You can place as many copies of an IC as you want.  Circuits can also contain other ICs.\",\n      action: {\n        name: \"End Tutorial\",\n        action: tutorialDismiss(),\n      },\n    })\n  );\n}\n","import { AnyAction } from \"redux\";\nimport { SagaIterator } from \"redux-saga\";\nimport { call, put, select, take } from \"redux-saga/effects\";\nimport { Options } from \"@popperjs/core\";\n\nimport { ElementDefinition } from \"@/elements/types\";\n\nimport { activeCircuitEditorIdSelector } from \"@/services/circuit-editors/selectors/editor\";\nimport { elementDefinitionFromTypeSelector } from \"@/services/element-types/selectors/element-types\";\nimport {\n  ElementConnection,\n  ElementPin,\n  elementPinEquals,\n} from \"@/services/circuit-graph/types\";\nimport { connectionsSelector } from \"@/services/circuit-graph/selectors/connections\";\n\nimport { ACTION_ELEMENT_ADD, AddElementAction } from \"@/actions/element-add\";\nimport { tutorialAnnotate } from \"@/actions/tutorial-annotate\";\nimport { ACTION_CIRCUIT_EDITOR_DRAG_END } from \"@/actions/circuit-editor-drag-end\";\nimport { ACTION_TUTORIAL_NEXT, tutorialNext } from \"@/actions/tutorial-next\";\nimport { getCircuitEditorHtmlId } from \"@/components/CircuitEditor/ids\";\n\nexport interface AddElementTutorialStepOptions {\n  trayMessage?: string;\n  fieldMessage?: string;\n}\nexport function* addElementTutorialStep(\n  elementType: string,\n  opts: AddElementTutorialStepOptions = {}\n): SagaIterator<string | null> {\n  const def: ElementDefinition = yield select((state) =>\n    elementDefinitionFromTypeSelector(state, elementType)\n  );\n  if (!def) {\n    return null;\n  }\n\n  const activeEditorId: string | null = yield select(\n    activeCircuitEditorIdSelector\n  );\n  if (!activeEditorId) {\n    return null;\n  }\n\n  yield put(\n    tutorialAnnotate([\n      {\n        selector: `#element-tray--element-${elementType}`,\n        message: opts.trayMessage ?? `This is a ${def.displayName} element`,\n      },\n      {\n        selector: \"#\" + getCircuitEditorHtmlId(activeEditorId),\n        message:\n          opts.fieldMessage ??\n          `Drag the ${def.displayName} element onto the circuit field.`,\n        placement: \"top\",\n      },\n    ])\n  );\n\n  const addElementAction: AddElementAction = yield call(() =>\n    waitFilterAction(\n      ACTION_ELEMENT_ADD,\n      ({ payload: { elementType: addedElementType } }) =>\n        addedElementType === elementType\n    )\n  );\n\n  return addElementAction.payload.elementId;\n}\n\nexport function* waitElementConnected(\n  outputPin: ElementPin,\n  inputPin: ElementPin\n) {\n  while (true) {\n    const connected: boolean = yield call(isConnected, outputPin, inputPin);\n    if (connected) {\n      return;\n    }\n    // TODO: We can only detect wiring through drag end.  Might want to make drag use real actions\n    //  and wait on connect action instead.\n    yield take(ACTION_CIRCUIT_EDITOR_DRAG_END);\n  }\n}\n\nfunction* isConnected(\n  outputPin: ElementPin,\n  inputPin: ElementPin\n): SagaIterator<boolean> {\n  const connections: ElementConnection[] = yield select(connectionsSelector);\n  return connections.some(\n    ({ inputPin: connInputPin, outputPin: connOutputPin }) =>\n      elementPinEquals(connInputPin, inputPin) &&\n      elementPinEquals(connOutputPin, outputPin)\n  );\n}\n\nexport function waitFilterAction(\n  actionType: string,\n  filter: (action: AnyAction) => boolean\n): SagaIterator<AnyAction>;\nexport function waitFilterAction<T extends AnyAction>(\n  actionType: string,\n  filter: (action: T) => boolean\n): SagaIterator<T>;\nexport function* waitFilterAction(\n  actionType: string,\n  filter: (action: any) => boolean\n): SagaIterator<any> {\n  let action: AnyAction;\n  while ((action = yield take(actionType))) {\n    if (!filter(action)) {\n      continue;\n    }\n    break;\n  }\n\n  return action;\n}\n\nexport interface TutorialNextMessageOptions {\n  placement?: Options[\"placement\"];\n  additionalSelectors?: string[];\n}\nexport function* tutorialNextMessage(\n  selector: string,\n  message: string,\n  opts: TutorialNextMessageOptions = {}\n) {\n  yield put(\n    tutorialAnnotate([\n      {\n        selector,\n        message,\n        placement: opts.placement,\n        action: {\n          name: \"Next\",\n          action: tutorialNext(),\n        },\n      },\n      ...(opts.additionalSelectors ?? []).map((selector) => ({ selector })),\n    ])\n  );\n\n  yield take(ACTION_TUTORIAL_NEXT);\n}\n","import { createTutorialSelector } from \"../utils\";\n\nexport const isTutorialActiveSelector = createTutorialSelector(\n  (s) => s.activeTutorial != null\n);\n\nexport const tutorialAnnotationsSelector = createTutorialSelector(\n  (s) => s.annotatedElements\n);\n","import { AnyAction } from \"redux\";\nimport { Options } from \"@popperjs/core\";\n\nimport { MaybeArray } from \"@/arrays\";\nimport { AppState } from \"@/store\";\n\nexport interface TutorialAction {\n  name: string;\n  action: AnyAction;\n}\n\nexport interface AnnotatedElement {\n  selector: string;\n  message?: string;\n  placement?: Options[\"placement\"];\n  action?: MaybeArray<TutorialAction>;\n}\n\nexport interface TutorialServiceState {\n  activeTutorial: string | null;\n  annotatedElements: AnnotatedElement[];\n  preTutorialState: AppState | null;\n}\n\nconst _defaultState: TutorialServiceState = {\n  activeTutorial: null,\n  annotatedElements: [],\n  preTutorialState: null,\n};\n\nexport const defaultTutorialServiceState = Object.freeze(_defaultState);\n","import {\n  createServiceReducerCreator,\n  createServiceSelectorCreator,\n} from \"../service-state-utils\";\n\nexport const createTutorialReducer = createServiceReducerCreator(\"tutorial\");\nexport const createTutorialSelector = createServiceSelectorCreator(\"tutorial\");\n","import { priorityBefore, reducerPriority } from \"@/store/priorities\";\n\nimport { isDeleteCircuitAction } from \"@/actions/circuit-delete\";\n\nimport { filterTesselValues } from \"@/components/Tessel/utils\";\n\nimport { isCircuitEditorTesselWindow } from \"@/pages/ProjectEditorPage/windows/CircuitEditorWindow/tessel-window\";\n\nimport { editorIdsFromCircuitIdSelector } from \"@/services/circuit-editors/selectors/editor\";\nimport circuitEditorsCircuitDeleteReducer from \"@/services/circuit-editors/reducer/circuit-delete\";\n\nimport { createUiLayoutReducer } from \"../utils\";\n\nexport default reducerPriority(\n  priorityBefore(circuitEditorsCircuitDeleteReducer),\n  createUiLayoutReducer((state, action, appState) => {\n    if (!isDeleteCircuitAction(action)) {\n      return state;\n    }\n\n    if (!state.layout) {\n      return state;\n    }\n\n    const { circuitId } = action.payload;\n\n    const removedWindowIds = editorIdsFromCircuitIdSelector(\n      appState,\n      circuitId\n    );\n\n    const layout = filterTesselValues(state.layout, (value) => {\n      if (!isCircuitEditorTesselWindow(value)) {\n        return true;\n      }\n\n      if (removedWindowIds.indexOf(value.windowProps.editorId) !== -1) {\n        return false;\n      }\n\n      return true;\n    });\n\n    return {\n      ...state,\n      layout,\n    };\n  })\n);\n","import { concatReducers } from \"@/store/utils\";\n\nimport circuitDeleteReducer from \"./circuit-delete\";\nimport layoutRearrangeReducer from \"./layout-rearrange\";\nimport projectNewReducer from \"./project-new\";\nimport viewCircuitReducer from \"./view-circuit\";\nimport viewResetReducer from \"./view-reset\";\n\nexport default concatReducers(\n  circuitDeleteReducer,\n  layoutRearrangeReducer,\n  projectNewReducer,\n  viewCircuitReducer,\n  viewResetReducer\n);\n","import { isRearrangeLayoutAction } from \"@/actions/layout-rearrange\";\nimport { createUiLayoutReducer } from \"../utils\";\n\nexport default createUiLayoutReducer((state, action) => {\n  if (!isRearrangeLayoutAction(action)) {\n    return state;\n  }\n\n  const { layout } = action.payload;\n\n  return {\n    ...state,\n    layout,\n  };\n});\n","import { isNewProjectAction } from \"@/actions/project-new\";\nimport { defaultUiLayoutServiceState } from \"../state\";\nimport { createUiLayoutReducer } from \"../utils\";\n\nexport default createUiLayoutReducer((state, action) => {\n  if (!isNewProjectAction(action)) {\n    return state;\n  }\n\n  return defaultUiLayoutServiceState;\n});\n","import { isViewCircuitAction } from \"@/actions/view-circuit\";\n\nimport { normalizeTesselItem, TesselValue } from \"@/components/Tessel\";\nimport { findAndReplaceTesselValue } from \"@/components/Tessel/utils\";\n\nimport {\n  circuitEditorTesselWindow,\n  isCircuitEditorTesselWindow,\n} from \"@/pages/ProjectEditorPage/windows/CircuitEditorWindow/tessel-window\";\nimport { activeCircuitEditorIdSelector } from \"@/services/circuit-editors/selectors/editor\";\n\nimport { createUiLayoutReducer } from \"../utils\";\n\nexport default createUiLayoutReducer((state, action, appState) => {\n  if (!isViewCircuitAction(action)) {\n    return state;\n  }\n\n  const { newWindowId } = action.payload;\n\n  if (!newWindowId) {\n    return state;\n  }\n\n  const window = circuitEditorTesselWindow(newWindowId);\n  const activeEditorId = activeCircuitEditorIdSelector(appState);\n\n  let layout: TesselValue | null = state.layout;\n\n  if (layout == null) {\n    layout = window;\n  } else {\n    let inserted = false;\n\n    // Try inserting the window alongside the active editor.\n    layout = findAndReplaceTesselValue(layout, (value) => {\n      const normalized = normalizeTesselItem(value);\n      if (\n        isCircuitEditorTesselWindow(normalized) &&\n        normalized.windowProps.editorId === activeEditorId\n      ) {\n        inserted = true;\n        return {\n          direction: \"row\",\n          division: 50,\n          first: value,\n          second: window,\n        };\n      }\n\n      return null;\n    });\n\n    if (!inserted) {\n      layout = {\n        direction: \"row\",\n        division: 50,\n        first: layout,\n        second: window,\n      };\n    }\n  }\n\n  return {\n    ...state,\n    layout,\n  };\n});\n","import { isResetViewAction } from \"@/actions/view-reset\";\nimport { defaultUiLayoutServiceState } from \"../state\";\nimport { createUiLayoutReducer } from \"../utils\";\n\nexport default createUiLayoutReducer((state, action) => {\n  if (!isResetViewAction(action)) {\n    return state;\n  }\n\n  return defaultUiLayoutServiceState;\n});\n","import { createUiLayoutSelector } from \"../utils\";\n\nexport const layoutSelector = createUiLayoutSelector((s) => s.layout);\n","import { TesselValue } from \"@/components/Tessel\";\n\nimport { circuitEditorTesselWindow } from \"@/pages/ProjectEditorPage/windows/CircuitEditorWindow/tessel-window\";\n\nimport { DEFAULT_CIRCUIT_EDITOR_ID } from \"@/services/circuit-editors/constants\";\n\nexport interface UiLayoutServiceState {\n  /**\n   * The tessel layout.\n   */\n  layout: TesselValue | null;\n}\n\nconst _defaultState: UiLayoutServiceState = {\n  layout: {\n    direction: \"row\",\n    division: {\n      firstSize: 200,\n    },\n    first: {\n      direction: \"column\",\n      division: 30,\n      first: \"circuits-list\",\n      second: \"element-tray\",\n    },\n    second: circuitEditorTesselWindow(DEFAULT_CIRCUIT_EDITOR_ID),\n  },\n};\n\nexport const defaultUiLayoutServiceState = Object.freeze(_defaultState);\n","import {\n  createServiceReducerCreator,\n  createServiceSelectorCreator,\n} from \"../service-state-utils\";\n\nexport const createUiLayoutReducer = createServiceReducerCreator(\"uiLayout\");\nexport const createUiLayoutSelector = createServiceSelectorCreator(\"uiLayout\");\n","import { concatReducers } from \"@/store/utils\";\n\nimport viewElementNamesReducer from \"./view-element-names\";\n\nexport default concatReducers(viewElementNamesReducer);\n","import { isViewElementNamesAction } from \"@/actions/view-element-names\";\nimport { createUiSettingsReducer } from \"../utils\";\n\nexport default createUiSettingsReducer((state, action) => {\n  if (!isViewElementNamesAction(action)) {\n    return state;\n  }\n\n  const { mode } = action.payload;\n  return {\n    ...state,\n    elementNameMode: mode,\n  };\n});\n","import { AppState } from \"@/store\";\n\nimport {\n  elementNameFromElementIdSelector,\n  elementNameOrDefaultFromElementIdSelector,\n} from \"@/services/circuit-graph/selectors/elements\";\nimport { createUiSettingsSelector } from \"../utils\";\n\nexport const elementNameModeSelector = createUiSettingsSelector(\n  (s) => s.elementNameMode\n);\n\nexport const elementFieldDisplayNameFromElementId = (\n  state: AppState,\n  elementId: string\n) => {\n  const mode = state.services.uiSettings.elementNameMode;\n  switch (mode) {\n    case \"all\":\n    default:\n      return elementNameOrDefaultFromElementIdSelector(state, elementId);\n    case \"named-only\":\n      return elementNameFromElementIdSelector(state, elementId);\n    case \"none\":\n      return null;\n  }\n};\n","export interface UiSettingsState {\n  elementNameMode: \"all\" | \"named-only\" | \"none\";\n}\n\nconst _defaultState: UiSettingsState = {\n  elementNameMode: \"named-only\",\n};\n\nexport const defaultUiSettingsState = Object.freeze(_defaultState);\n","import {\n  createServiceReducerCreator,\n  createServiceSelectorCreator,\n} from \"../service-state-utils\";\n\nexport const createUiSettingsReducer = createServiceReducerCreator(\n  \"uiSettings\"\n);\nexport const createUiSettingsSelector = createServiceSelectorCreator(\n  \"uiSettings\"\n);\n","import { AnyAction } from \"redux\";\n\nimport { AppState } from \"@/store\";\n\nimport { ACTION_CIRCUIT_EDITOR_DRAG_CONTINUE } from \"@/actions/circuit-editor-drag-continue\";\nimport { ACTION_CIRCUIT_EDITOR_MOUSE_LEAVE } from \"@/actions/circuit-editor-mouse-leave\";\nimport { ACTION_SIM_TICK } from \"@/actions/sim-tick\";\n\nexport const actionsBlacklist: string[] = [\n  ACTION_CIRCUIT_EDITOR_DRAG_CONTINUE,\n  ACTION_CIRCUIT_EDITOR_MOUSE_LEAVE,\n  ACTION_SIM_TICK,\n];\n\nexport function actionSanitizer(action: AnyAction): AnyAction {\n  return action;\n}\n\nexport function stateSanitizer(state: AppState): any {\n  return state;\n}\n","export * from \"./state\";\nexport * from \"./store\";\n","import { AppReducer } from \"./types\";\n\nexport const PRIORITY_PRE = -10;\nexport const PRIORITY_POST = 10;\nexport const PRIORITY_SAVE = 50;\n\nexport function reducerPriority(\n  priority: number,\n  reducer: AppReducer\n): AppReducer {\n  reducer.weight = priority;\n  return reducer;\n}\n\nexport function priorityBefore(reducer: AppReducer) {\n  return (reducer.weight ?? 0) - 1;\n}\n","import servicesReducer from \"@/services/reducer\";\n\nimport { finalizeReducerList } from \"./utils\";\n\nconst reducer = finalizeReducerList(servicesReducer);\n\nexport default reducer;\n","import servicesSaga from \"@/services/saga\";\n\nexport default servicesSaga;\n","import { AppServicesState, defaultServicesState } from \"@/services/state\";\nimport { defaultUndoState, UndoState } from \"@/undo/state\";\n\nexport interface AppState {\n  services: AppServicesState;\n  undo: UndoState;\n}\n\nconst _defaultAppState: AppState = {\n  services: defaultServicesState,\n  undo: defaultUndoState,\n};\n\nexport const defaultAppState = Object.freeze(_defaultAppState);\n","import {\n  createStore,\n  compose,\n  applyMiddleware,\n  AnyAction,\n  Middleware,\n} from \"redux\";\nimport freeze from \"redux-freeze\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport { isTruthy } from \"@/utils\";\nimport { isDev } from \"@/env\";\n\nimport { doInit } from \"@/actions/init\";\n\nimport undoReducer from \"@/undo/reducer\";\n\nimport {\n  actionSanitizer,\n  stateSanitizer,\n  actionsBlacklist,\n} from \"./devtool-sanitizer\";\n\nimport { AppState, defaultAppState } from \"./state\";\nimport saga from \"./saga\";\nimport rootReducer from \"./reducer\";\n\nfunction finalReducer(\n  state: AppState = defaultAppState,\n  action: AnyAction\n): AppState {\n  state = undoReducer(state, action);\n  state = rootReducer(state, action);\n  return state;\n}\n\nconst composeEnhancers =\n  isDev && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        actionSanitizer,\n        stateSanitizer,\n        actionsBlacklist,\n      })\n    : compose;\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middleware: Middleware<any, any, any>[] = [\n  isDev && freeze,\n  sagaMiddleware,\n].filter(isTruthy);\n\nexport const store = createStore(\n  finalReducer,\n  composeEnhancers(applyMiddleware(...middleware))\n);\n\nsagaMiddleware.run(saga);\nstore.dispatch(doInit());\n","import { AnyAction } from \"redux\";\nimport sortBy from \"lodash/sortBy\";\n\nimport { MaybeArray } from \"@/arrays\";\n\nimport { AppState, defaultAppState } from \"./state\";\nimport { AppReducer } from \"./types\";\n\nexport function concatReducers(\n  ...reducers: MaybeArray<AppReducer>[]\n): AppReducer[] {\n  // Previously, this was reduceReducers and generated a reducer\n  //  that invokes each child reducer.\n  // However, we need to be able to order reducers across services,\n  //  so we must now aggregate a list of reducers and do a final ordering\n  //  step after all are collected.\n  return ([] as AppReducer[]).concat(...reducers);\n}\n\nexport function finalizeReducerList(reducers: AppReducer[]): AppReducer {\n  // Order the list by weight ascending.\n  const finalizedList = sortBy(reducers, (x: AppReducer) => x.weight || 0);\n\n  return (state: AppState = defaultAppState, action: AnyAction) => {\n    return finalizedList.reduce(\n      (state, reducer) => reducer(state, action),\n      state\n    );\n  };\n}\n","import \"normalize.css\";\n\nimport \"./global.css\";\nimport \"./colors.css\";\n","import { Point } from \"./geometry\";\n\n// Arc code from https://stackoverflow.com/questions/5736398/how-to-calculate-the-svg-path-for-an-arc-of-a-circle\nexport function describeArc(\n  x: number,\n  y: number,\n  radius: number,\n  startAngle: number,\n  endAngle: number\n): string {\n  const start = polarToCartesian(x, y, radius, endAngle);\n  const end = polarToCartesian(x, y, radius, startAngle);\n\n  const largeArcFlag = endAngle - startAngle <= 180 ? \"0\" : \"1\";\n\n  const d = [\n    \"M\",\n    start.x,\n    start.y,\n    \"A\",\n    radius,\n    radius,\n    0,\n    largeArcFlag,\n    0,\n    end.x,\n    end.y,\n  ].join(\" \");\n\n  return d;\n}\n\nfunction polarToCartesian(\n  centerX: number,\n  centerY: number,\n  radius: number,\n  angleInDegrees: number\n): Point {\n  const angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0;\n\n  return {\n    x: centerX + radius * Math.cos(angleInRadians),\n    y: centerY + radius * Math.sin(angleInRadians),\n  };\n}\n","import { AnyAction } from \"redux\";\n\nimport { isProjectMutationAction } from \"@/project-mutation-actions\";\nimport { AppState, defaultAppState } from \"@/store\";\nimport { fpSet } from \"@/utils\";\n\nimport { isUndoAction } from \"@/actions/undo\";\nimport { isRedoAction } from \"@/actions/redo\";\n\nimport { captureUndoState } from \"../utils\";\n\n// If this was part of the normal reducer stack, we would want to give it a very low priority\n// so it occurs after all other reducers.\n// However, in order to capture reentrant reducers, our master undo reducer wraps\n// the root reducer especially and always occurs last.\nexport default function captureUndoStateReducer(\n  state: AppState = defaultAppState,\n  action: AnyAction\n): AppState {\n  if (\n    !isProjectMutationAction(action) ||\n    isUndoAction(action) ||\n    isRedoAction(action)\n  ) {\n    return state;\n  }\n\n  return fpSet(state, \"undo\", (undoState) => {\n    const capturedUndoState = captureUndoState(state);\n\n    // Limiting undo to 25 entries, since we store the entire project every slice.\n    let { undoStack } = undoState;\n    if (undoStack.length >= 25) {\n      undoStack = [...undoStack.slice(1, 25), capturedUndoState];\n    } else {\n      undoStack = [...undoStack, capturedUndoState];\n    }\n\n    return {\n      ...undoState,\n\n      undoStack,\n      redoStack: [],\n    };\n  });\n}\n","import { AnyAction } from \"redux\";\n\nimport { AppState, defaultAppState } from \"@/store\";\n\nimport captureUndoStateReducer from \"./capture-undo-state\";\nimport redoReducer from \"./redo\";\nimport undoReducer from \"./undo\";\n\n// The undo reducer is special and returns a single reducer that is always ran outside of the primary reducer stack.\n// This is less for reducer priority and more to capture the effects of reentrant reducers like clipboard-paste.\n// FIXME: Moving this outside the services system means autosave cannot save undo/redo.  Either move autosave out\n//  as well or move undo into services.\nexport default function undoServiceReducer(\n  state: AppState = defaultAppState,\n  action: AnyAction\n): AppState {\n  state = captureUndoStateReducer(state, action);\n  state = redoReducer(state, action);\n  state = undoReducer(state, action);\n  return state;\n}\n","import { AnyAction } from \"redux\";\nimport last from \"lodash/last\";\n\nimport { AppState, defaultAppState } from \"@/store\";\nimport rootReducer from \"@/store/reducer\";\n\nimport { isRedoAction } from \"@/actions/redo\";\nimport { viewCircuit } from \"@/actions/view-circuit\";\n\nimport { captureUndoState } from \"../utils\";\n\nexport default function redoReducer(\n  state: AppState = defaultAppState,\n  action: AnyAction\n): AppState {\n  if (!isRedoAction(action)) {\n    return state;\n  }\n\n  const { undoStack, redoStack } = state.undo;\n\n  const stackItem = last(redoStack);\n  if (!stackItem) {\n    return state;\n  }\n\n  const { serviceStates, viewCircuitId } = stackItem;\n\n  state = {\n    ...state,\n    services: {\n      ...state.services,\n      ...serviceStates,\n    },\n    undo: {\n      ...state.undo,\n      undoStack: [...undoStack, captureUndoState(state)],\n      redoStack: redoStack.slice(0, redoStack.length - 1),\n    },\n  };\n\n  if (viewCircuitId) {\n    state = rootReducer(state, viewCircuit(viewCircuitId));\n  }\n\n  return state;\n}\n","import { AnyAction } from \"redux\";\nimport last from \"lodash/last\";\n\nimport { AppState, defaultAppState } from \"@/store\";\nimport rootReducer from \"@/store/reducer\";\n\nimport { isUndoAction } from \"@/actions/undo\";\nimport { viewCircuit } from \"@/actions/view-circuit\";\n\nimport { captureUndoState } from \"../utils\";\n\nexport default function undoReducer(\n  state: AppState = defaultAppState,\n  action: AnyAction\n): AppState {\n  if (!isUndoAction(action)) {\n    return state;\n  }\n\n  const { undoStack, redoStack } = state.undo;\n\n  const stackItem = last(undoStack);\n  if (!stackItem) {\n    return state;\n  }\n\n  const { serviceStates, viewCircuitId } = stackItem;\n\n  state = {\n    ...state,\n    services: {\n      ...state.services,\n      ...serviceStates,\n    },\n    undo: {\n      ...state.undo,\n      undoStack: undoStack.slice(0, undoStack.length - 1),\n      redoStack: [...redoStack, captureUndoState(state)],\n    },\n  };\n\n  if (viewCircuitId) {\n    state = rootReducer(state, viewCircuit(viewCircuitId));\n  }\n\n  return state;\n}\n","import { AppState } from \"@/store\";\n\nexport const canUndoSelector = (state: AppState) =>\n  state.undo.undoStack.length > 0;\nexport const canRedoSelector = (state: AppState) =>\n  state.undo.redoStack.length > 0;\n","import { AppServicesState } from \"@/services/state\";\n\nexport const UndoServicesStateKeys = [\n  \"circuitProperties\",\n  \"circuitGraph\",\n  \"circuitLayout\",\n] as const;\nexport type UndoServicesStates = Pick<\n  AppServicesState,\n  \"circuitProperties\" | \"circuitGraph\" | \"circuitLayout\"\n>;\n\nexport interface UndoStackState {\n  serviceStates: UndoServicesStates;\n  viewCircuitId: string | null;\n}\n\nexport interface UndoState {\n  undoStack: UndoStackState[];\n  redoStack: UndoStackState[];\n}\n\nconst _defaultState: UndoState = {\n  undoStack: [],\n  redoStack: [],\n};\n\nexport const defaultUndoState = Object.freeze(_defaultState);\n","import pick from \"lodash/pick\";\n\nimport { AppState } from \"@/store\";\n\nimport { activeCircuitEditorStateSelector } from \"@/services/circuit-editors/selectors/editor\";\n\nimport { UndoStackState, UndoServicesStateKeys } from \"./state\";\n\n// TODO: Consider using a difference engine to store the minimal difference between the states.\n//  This should let us store far more undo operations as the project gets larger.\n// Could use https://www.npmjs.com/package/deep-diff\n// Problem with this is it takes up time capturing the undo, which slows down all operations.\nexport function captureUndoState(state: AppState): UndoStackState {\n  let viewCircuitId: string | null = null;\n\n  const activeEditor = activeCircuitEditorStateSelector(state);\n  if (activeEditor) {\n    viewCircuitId = activeEditor.circuitId;\n  }\n\n  return {\n    serviceStates: pick(state.services, UndoServicesStateKeys),\n    viewCircuitId,\n  };\n}\n","export function cls(...values: (string | false | undefined)[]): string {\n  return values.filter((x) => Boolean(x) && x != \"\").join(\" \");\n}\n\nexport function typedKeys<T extends Record<string, unknown>>(\n  obj: T\n): (keyof T)[] {\n  return Object.keys(obj) as (keyof T)[];\n}\n\nexport type ValueSetter<T> = T | ((old: T) => T);\n\nexport function fpSet<\n  Target extends Record<string, any> | any[],\n  P1 extends keyof Target,\n  T extends Target[P1]\n>(target: Target, p1: P1, value: ValueSetter<T>): Target;\nexport function fpSet<\n  Target extends Record<string, any> | any[],\n  P1 extends keyof Target,\n  P2 extends keyof Target[P1],\n  T extends Target[P1][P2]\n>(target: Target, p1: P1, p2: P2, value: ValueSetter<T>): Target;\nexport function fpSet<\n  Target extends Record<string, any> | any[],\n  P1 extends keyof Target,\n  P2 extends keyof Target[P1],\n  P3 extends keyof Target[P1][P2],\n  T extends Target[P1][P2][P3]\n>(target: Target, p1: P1, p2: P2, p3: P3, value: ValueSetter<T>): Target;\nexport function fpSet(...args: any[]): any {\n  const target = args[0];\n  const path = args.slice(1, args.length - 1).map(String);\n  const value = args[args.length - 1];\n  return fpSetByArray(target, path, value);\n}\n\nexport function fpSetByArray<T extends Record<string, any>>(\n  target: T,\n  path: (string | number)[],\n  value: ValueSetter<any>\n): T {\n  if (path.length === 0) {\n    if (typeof value === \"function\") {\n      return value(target);\n    }\n    return value;\n  }\n\n  const firstPaths = path.slice(0, path.length - 1).map(String);\n  const lastPath = path[path.length - 1];\n\n  const newData = clone(target);\n\n  let rollingTarget: any = newData;\n\n  for (const seg of firstPaths) {\n    rollingTarget[seg] = clone(rollingTarget[seg]);\n    rollingTarget = rollingTarget[seg];\n  }\n\n  if (typeof value === \"function\") {\n    rollingTarget[lastPath] = value(rollingTarget[lastPath]);\n  } else {\n    rollingTarget[lastPath] = value;\n  }\n\n  return newData;\n}\n\nfunction clone<T extends Record<string, unknown> | any[]>(obj: T): T {\n  if (Array.isArray(obj)) {\n    return obj.slice() as T;\n  }\n  return Object.assign({}, obj);\n}\n\nexport function isTruthy<T>(value: T | null | undefined | false): value is T {\n  return Boolean(value);\n}\n","var map = {\n\t\"./4_bit_alu/index.ts\": 7250,\n\t\"./latches_adders/index.ts\": 62896\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 79926;"],"sourceRoot":""}