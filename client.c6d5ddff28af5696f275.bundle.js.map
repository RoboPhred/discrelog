{"version":3,"sources":["webpack:///./src/pages/CircuitEditor/components/CircuitFieldView/CircuitFieldView.module.css?848f","webpack:///./src/pages/CircuitEditor/components/CircuitFieldView/components/CircuitField/CircuitField.module.css?afa1","webpack:///./src/components/PopupMenu/PopupMenu.module.css?6172","webpack:///./src/components/SimControls/SimControls.module.css?20e5","webpack:///./src/node-defs/node-and.ts","webpack:///./src/node-defs/node-or.ts","webpack:///./src/node-defs/node-nor.ts","webpack:///./src/node-defs/node-not.ts","webpack:///./src/node-defs/node-buffer.ts","webpack:///./src/node-defs/node-led.ts","webpack:///./src/node-defs/node-toggle.ts","webpack:///./src/node-defs/node-seg7.ts","webpack:///./src/pages/CircuitEditor/CircuitEditor.module.css?cdec","webpack:///./src/geometry.ts","webpack:///./src/services/clipboard/state.ts","webpack:///./src/services/field/state.ts","webpack:///./src/services/graph/state.ts","webpack:///./src/services/selection/state.ts","webpack:///./src/services/simulator/state.ts","webpack:///./src/services/view/state.ts","webpack:///./src/pages/CircuitEditor/components/CircuitFieldView/components/CircuitField/state.ts","webpack:///./src/store/state.ts","webpack:///./src/pages/CircuitEditor/state.ts","webpack:///./src/actions/init.ts","webpack:///./src/actions/field-drag-continue.ts","webpack:///./src/actions/field-mouse-leave.ts","webpack:///./src/actions/sim-tick.ts","webpack:///./src/actions/view-zoom.ts","webpack:///./src/store/devtool-sanitizer.ts","webpack:///./src/actions/sim-start.ts","webpack:///./src/actions/sim-pause.ts","webpack:///./src/utils.ts","webpack:///./src/services/service-state-utils.ts","webpack:///./src/services/simulator/utils.ts","webpack:///./src/services/simulator/selectors/run.ts","webpack:///./src/services/simulator/saga/mode-run.ts","webpack:///./src/services/simulator/saga/index.ts","webpack:///./src/store/utils.ts","webpack:///./src/actions/clipboard-copy.ts","webpack:///./src/node-defs/index.ts","webpack:///./src/services/graph/utils.ts","webpack:///./src/services/graph/selectors/nodes.ts","webpack:///./src/services/graph/selectors/wires.ts","webpack:///./src/services/field/utils.ts","webpack:///./src/services/field/selectors/positions.ts","webpack:///./src/services/clipboard/utils.ts","webpack:///./src/services/clipboard/reducer/clipboard-copy.ts","webpack:///./src/actions/wire-attach.ts","webpack:///./src/actions/node-add.ts","webpack:///./src/actions/clipboard-paste.ts","webpack:///./src/actions/select-nodes.ts","webpack:///./src/services/clipboard/reducer/clipboard-paste.ts","webpack:///./src/services/clipboard/reducer/index.ts","webpack:///./src/services/field/reducer/drag-continue.ts","webpack:///./src/actions/field-drag-end.ts","webpack:///./src/actions/select-region.ts","webpack:///./src/actions/selection-move.ts","webpack:///./src/actions/field-drag-start-newnode.ts","webpack:///./src/services/field/reducer/drag-start-newnode.ts","webpack:///./src/actions/field-drag-start-node.ts","webpack:///./src/services/selection/utils.ts","webpack:///./src/services/selection/selectors/selection.ts","webpack:///./src/actions/field-drag-start-select.ts","webpack:///./src/services/field/reducer/drag-start-select.ts","webpack:///./src/actions/file-new.ts","webpack:///./src/services/field/reducer/file-new.ts","webpack:///./src/services/field/reducer/mouse-leave.ts","webpack:///./src/services/field/reducer/node-add.ts","webpack:///./src/actions/node-delete.ts","webpack:///./src/services/field/reducer/node-delete.ts","webpack:///./src/services/field/reducer/selection-move.ts","webpack:///./src/services/field/reducer/wire-attach.ts","webpack:///./src/actions/wire-detatch.ts","webpack:///./src/services/field/reducer/wire-detatch.ts","webpack:///./src/actions/wire-joint-add.ts","webpack:///./src/services/field/reducer/wire-joint-add.ts","webpack:///./src/actions/wire-joint-delete.ts","webpack:///./src/services/field/reducer/wire-joint-delete.ts","webpack:///./src/actions/wire-joint-move.ts","webpack:///./src/services/field/reducer/index.ts","webpack:///./src/services/field/reducer/drag-end.ts","webpack:///./src/services/field/reducer/drag-start-node.ts","webpack:///./src/services/field/reducer/wire-joint-move.ts","webpack:///./src/services/graph/reducer/file-new.ts","webpack:///./src/store/priorities.ts","webpack:///./src/services/graph/reducer/node-add.ts","webpack:///./src/services/graph/reducer/index.ts","webpack:///./src/services/graph/reducer/node-delete.ts","webpack:///./src/services/graph/reducer/wire-attach.ts","webpack:///./src/services/graph/types.ts","webpack:///./src/services/graph/reducer/wire-detatch.ts","webpack:///./src/services/field/selectors/wires.ts","webpack:///./src/services/savedata/reducer/autosave.ts","webpack:///./src/services/savedata/reducer/index.ts","webpack:///./src/services/savedata/utils.ts","webpack:///./src/services/savedata/reducer/file-new.ts","webpack:///./src/services/savedata/reducer/init.ts","webpack:///./src/services/selection/reducer/file-new.ts","webpack:///./src/services/selection/reducer/node-delete.ts","webpack:///./src/actions/select-all.ts","webpack:///./src/services/selection/reducer/select-all.ts","webpack:///./src/actions/select-clear.ts","webpack:///./src/services/selection/reducer/select-clear.ts","webpack:///./src/actions/select-wire-joints.ts","webpack:///./src/services/selection/reducer/select-joints.ts","webpack:///./src/services/selection/reducer/select-nodes.ts","webpack:///./src/node-defs/utils.ts","webpack:///./src/services/simulator/selectors/nodes.ts","webpack:///./src/services/field/selectors/bounds.ts","webpack:///./src/services/selection/reducer/select-region.ts","webpack:///./src/actions/select-wires.ts","webpack:///./src/services/selection/reducer/select-wires.ts","webpack:///./src/actions/selection-copy.ts","webpack:///./src/actions/selection-delete.ts","webpack:///./src/services/selection/reducer/index.ts","webpack:///./src/services/selection/reducer/selection-copy.ts","webpack:///./src/services/selection/reducer/selection-delete.ts","webpack:///./src/services/selection/reducer/wire-detatch.ts","webpack:///./src/services/simulator/reducer/file-new.ts","webpack:///./src/services/simulator/reducer/utils.ts","webpack:///./src/types.ts","webpack:///./src/services/simulator/reducer/node-add.ts","webpack:///./src/services/simulator/reducer/node-delete.ts","webpack:///./src/actions/node-interact.ts","webpack:///./src/services/simulator/reducer/node-interact.ts","webpack:///./src/services/simulator/reducer/sim-evolve.ts","webpack:///./src/actions/sim-fastforward.ts","webpack:///./src/services/simulator/reducer/sim-pause.ts","webpack:///./src/services/simulator/reducer/sim-start.ts","webpack:///./src/actions/sim-stop.ts","webpack:///./src/services/simulator/reducer/sim-stop.ts","webpack:///./src/services/simulator/reducer/wire-attach.ts","webpack:///./src/services/simulator/reducer/wire-detatch.ts","webpack:///./src/services/simulator/reducer/index.ts","webpack:///./src/services/simulator/reducer/sim-fastforward.ts","webpack:///./src/services/view/utils.ts","webpack:///./src/services/view/reducer/view-zoom.ts","webpack:///./src/services/view/reducer/index.ts","webpack:///./src/pages/CircuitEditor/components/CircuitFieldView/components/CircuitField/actions/select-pin.ts","webpack:///./src/pages/CircuitEditor/components/CircuitFieldView/components/CircuitField/selectors.ts","webpack:///./src/pages/CircuitEditor/components/CircuitFieldView/components/CircuitField/reducer/select-pin.ts","webpack:///./src/pages/CircuitEditor/components/CircuitFieldView/components/CircuitField/reducer/selected-nodes-changed.ts","webpack:///./src/pages/CircuitEditor/components/CircuitFieldView/components/CircuitField/reducer/utils.ts","webpack:///./src/pages/CircuitEditor/components/CircuitFieldView/components/CircuitField/reducer/index.ts","webpack:///./src/pages/CircuitEditor/reducer/index.ts","webpack:///./src/store/reducer.ts","webpack:///./src/store/store.ts","webpack:///./src/store/saga.ts","webpack:///./src/hooks/useSelector.ts","webpack:///./src/services/view/selectors/view.ts","webpack:///./src/runtime-env.ts","webpack:///./src/pages/CircuitEditor/components/CircuitFieldView/keymap.ts","webpack:///./src/pages/CircuitEditor/components/CircuitFieldView/components/CircuitField/contexts/fieldSvgElement.tsx","webpack:///./src/services/field/selectors/drag.ts","webpack:///./src/pages/CircuitEditor/components/CircuitFieldView/components/CircuitField/utils.ts","webpack:///./src/pages/CircuitEditor/components/CircuitFieldView/components/CircuitField/hooks/useMouseCoords.ts","webpack:///./src/pages/CircuitEditor/components/NodeVisual.tsx","webpack:///./src/pages/CircuitEditor/components/CircuitFieldView/components/CircuitField/components/DragNewNodeLayer.tsx","webpack:///./src/pages/CircuitEditor/components/CircuitFieldView/components/CircuitField/components/DragPreviewLayer.tsx","webpack:///./src/selection-mode.ts","webpack:///./src/hooks/useMouseTracking.ts","webpack:///./src/pages/CircuitEditor/components/CircuitFieldView/components/CircuitField/components/DragSelectLayer.tsx","webpack:///./src/pages/CircuitEditor/components/CircuitFieldView/components/CircuitField/components/CircuitNodePin/CircuitNodePin.tsx","webpack:///./src/pages/CircuitEditor/components/CircuitFieldView/components/CircuitField/components/CircuitNodePin/index.ts","webpack:///./src/pages/CircuitEditor/components/CircuitFieldView/components/CircuitField/components/CircuitNode.tsx","webpack:///./src/pages/CircuitEditor/components/CircuitFieldView/components/CircuitField/components/NodesLayer.tsx","webpack:///./src/pages/CircuitEditor/components/CircuitFieldView/components/CircuitField/components/WireSegment.tsx","webpack:///./src/pages/CircuitEditor/components/CircuitFieldView/components/CircuitField/components/WireJoint/WireJoint.tsx","webpack:///./src/pages/CircuitEditor/components/CircuitFieldView/components/CircuitField/components/WireJoint/index.ts","webpack:///./src/pages/CircuitEditor/components/CircuitFieldView/components/CircuitField/components/Wire/Wire.tsx","webpack:///./src/pages/CircuitEditor/components/CircuitFieldView/components/CircuitField/components/Wire/index.ts","webpack:///./src/services/simulator/selectors/wires.ts","webpack:///./src/pages/CircuitEditor/components/CircuitFieldView/components/CircuitField/components/WiresLayer.tsx","webpack:///./src/pages/CircuitEditor/components/CircuitFieldView/components/CircuitField/CircuitField.tsx","webpack:///./src/pages/CircuitEditor/components/CircuitFieldView/components/CircuitField/index.ts","webpack:///./src/pages/CircuitEditor/components/CircuitFieldView/CircuitFieldView.tsx","webpack:///./src/pages/CircuitEditor/components/CircuitFieldView/index.ts","webpack:///./src/hooks/useNativeEvent.ts","webpack:///./src/pages/CircuitEditor/components/ElementTray/ElementTray.tsx","webpack:///./src/pages/CircuitEditor/components/ElementTray/index.ts","webpack:///./src/pages/CircuitEditor/CircuitEditor.tsx","webpack:///./src/pages/CircuitEditor/index.ts","webpack:///./src/pages/Intro/Intro.tsx","webpack:///./src/pages/Intro/index.ts","webpack:///./README.md","webpack:///./src/components/PopupMenu/popupMenuContext.ts","webpack:///./src/components/Popper.tsx","webpack:///./src/components/PopupMenu/PopupMenu.tsx","webpack:///./src/components/PopupMenu/index.ts","webpack:///./src/components/MenuItem/MenuItem.tsx","webpack:///./src/components/MenuItem/index.ts","webpack:///./src/components/Icons/Play.tsx","webpack:///./src/components/Icons/Stop.tsx","webpack:///./src/components/Icons/Pause.tsx","webpack:///./src/components/SimControls/SimControls.tsx","webpack:///./src/components/SimControls/index.ts","webpack:///./src/components/TitleBar/TitleBar.tsx","webpack:///./src/components/TitleBar/index.ts","webpack:///./src/hooks/useAction.ts","webpack:///./src/components/App/App.tsx","webpack:///./src/components/App/index.ts","webpack:///./src/env.ts","webpack:///./src/index.tsx","webpack:///./src/pages/Intro/Intro.module.css?62f7","webpack:///./src/pages/CircuitEditor/components/CircuitFieldView/components/CircuitField/components/Wire/Wire.module.css?f640","webpack:///./src/pages/CircuitEditor/components/ElementTray/ElementTray.module.css?5ac7","webpack:///./src/components/TitleBar/TitleBar.module.css?40f1","webpack:///./src/styles/flex.module.css?5bb3","webpack:///./src/styles/sizing.module.css?e889","webpack:///./src/pages/CircuitEditor/components/CircuitFieldView/components/CircuitField/components/CircuitNodePin/CircuitNodePin.module.css?00fa","webpack:///./src/pages/CircuitEditor/components/CircuitFieldView/components/CircuitField/components/WireJoint/WireJoint.module.css?f667"],"names":["module","exports","andNodeDefinition","type","visual","hitPath","shapePath","pins","A","name","direction","x","y","B","OUT","evolve","state","inputs","tick","transitions","tickOffset","valuesByPin","orNodeDefinition","norNodeDefinition","bufferNodeDefinition","IN","genCirclePath","cx","cy","r","ledNodeDefinition","path","fill","value","defaultToggleState","toggleState","toggleSwitchNodeDefinition","interact","SCALE","OFFSET","createSeg","points","start","p","slice","seg7NodeDefinition","C","D","E","F","G","ZeroPoint","Object","freeze","normalize","m","v","Math","sqrt","normalizeRectangle","args","p1","p2","length","min","max","pointAdd","pointSubtract","defaultClipboardState","clipboardNodes","clipboardPasteOrigin","defaultFieldState","width","height","nodePositionsById","wireJointIdsByWireId","wireJointPositionsByJointId","dragMode","dragStart","dragEnd","dragNewNodeType","defaultGraphState","nodesById","wiresById","defaultSelectionState","selectedNodeIds","selectedWireIds","selectedJointIds","defaultSimulatorState","mode","ticksPerSecond","nodeStatesByNodeId","nodeOutputValuesByNodeId","transitionsById","transitionWindows","defaultViewState","scale","defaultCircuitFieldState","selectedPin","_defaultAppState","services","clipboard","field","graph","selection","simulator","view","ui","circuitEditor","circuitField","defaultAppState","ACTION_INIT","ACTION_FIELD_DRAG_CONTINUE","fieldDragContinue","payload","ACTION_FIELD_MOUSE_LEAVE","ACTION_SIM_TICK","tickSim","tickCount","ACTION_VIEW_ZOOM","actionsBlacklist","ACTION_SIM_START","ACTION_SIM_PAUSE","cls","values","filter","Boolean","join","fpSet","target","firstPaths","map","String","lastPath","newData","clone","seg","obj","Array","isArray","createServiceReducerCreator","service","reducer","action","newState","createServiceSelectorCreator","selector","appSelector","s","local","createSimulatorReducer","createSimulatorSelector","isSimActiveSelector","isSimRunningSelector","isSimPausedSelector","ticksPerSecondSelector","runModeSaga","handleRunSim","tps","timeToWait","ceil","simulatorSaga","concatReducers","reducers","concat","ACTION_COPY_NODES","nodeId","nodeIds","NodeTypes","and","default","or","nor","not","buffer","led","toggle","seg7","createGraphReducer","createGraphSelector","nodesByIdSelector","nodeIdsSelector","keys","nodeTypesByIdSelector","n","nodeDefsByIdSelector","nodeByIdSelector","nodeTypeSelector","node","nodeDefSelector","wireIdsSelector","wireByIdSelector","wireId","wiresSelector","nodePinDirectionSelector","pin","def","pinDef","pinId","nodeInputWireIdsSelector","inputPin","nodeInputConnectionsByPinSelector","_","connections","nodeDef","inputPins","inputConnections","result","connection","outputPin","nodeOutputConnectionsSelector","nodeOutputWireIdsSelector","nodeOutputConnectionsByPinSelector","outputPins","outputConnections","push","createFieldReducer","createFieldSelector","nodePositionsByIdSelector","nodePositionByIdSelector","createClipboardReducer","appState","isCopyNodesAction","copyIds","rootPosition","copyNodes","outputs","id","offset","conns","nodeIsSelected","c","ACTION_WIRE_ATTACH","attachWire","opts","joints","isAttachWireAction","ACTION_NODE_ADD","nodeType","isAddNodeAction","ACTION_PASTE","paste","ACTION_SELECT_NODES","selectNodes","CLIPBOARD_PASTE_OFFSET","isPasteAction","pastePosition","pasteIds","position","sourceId","output","targetCopyId","targetPin","targetId","isFieldDragContinueAction","ACTION_FIELD_DRAG_END","fieldDragEnd","point","selectionMode","ACTION_SELECT_REGION","selectRegion","region","ACTION_SELECTION_MOVE","moveSelection","offsetX","offsetY","ACTION_FIELD_DRAG_START_NEWNODE","isFieldDragStartNewNodeAction","ACTION_FIELD_DRAG_START_NODE","createSelectionReducer","createSelectionSelector","combineSelection","selectedIds","chosenIds","selectedNodeIdsSelector","isNodeSelectedSelector","indexOf","isWireSelectedSelector","selectedJointIdsSelector","isJointSelectedSelector","jointId","ACTION_FIELD_DRAG_START_SELECT","isFieldDragStartSelectAction","ACTION_FILE_NEW","newFile","isNewFileAction","isFieldMouseLeaveAction","ACTION_NODE_DELETE","deleteNode","isDeleteNodeAction","remainingNodeIds","removingWireIds","reduce","wireIds","removingJointIds","jointIds","remainingWireIds","remainingJointIds","isMoveSelectionAction","movedNodePositions","movedJoints","ACTION_WIRE_DETATCH","detatchWire","isDetatchWireAction","ACTION_WIRE_JOINT_ADD","isAddWireJointAction","addAfterJointId","wireJoints","insertionIndex","ACTION_WIRE_JOINT_DELETE","deleteWireJoint","isDeleteWireJointAction","wireJointsByJointId","ACTION_WIRE_JOINT_MOVE","moveWireJoint","isFieldDragEndAction","rect","moveBy","isFieldDragStartNodeAction","isMoveWireJointAction","reducerPriority","priority","weight","isRemainingConnection","conn","p1Node","p2Node","p1Def","p2Def","p1Pin","p2Pin","pinsToConnection","a","b","nodePinEquals","remainingIds","startPositionCacheByWireId","endPositionCacheByWireId","allJointIdsSelector","wireJointIdsByWireIdSelector","wireJointPositionSelector","wireJointPositionsByJointIdSelector","positionsByJointId","AUTOSAVE_TRIGGERS","save","localStorage","setItem","JSON","stringify","storeAutosave","jointPositions","nodes","wires","wire","input","createSave","removeItem","isInitAction","str","getItem","parse","loadAutosave","fallbackState","loadSave","ACTION_SELECT_CLEAR","selectAll","isSelectAllAction","isClearSelectionAction","ACTION_SELECT_WIRE_JOINTS","isSelectWireJointsAction","isSelectNodesAction","normalizeVisuals","stroke","strokeWidth","nodeStatesByIdSelector","nodeStateSelector","nodeOutputPinValue","fieldWidthSelector","fieldHeightSelector","nodeBoundsById","nodeDefsById","nodeStateById","shapePaths","nodeRectsByIdSelector","positionsById","boundsById","bounds","isSelectRegionAction","rects","chosenNodeIds","r1","r2","intersects","chosenJointIds","pointIntersects","ACTION_SELECT_WIRES","isSelectWiresAction","ACTION_SELECTION_COPY","selectionCopy","ACTION_SELECTION_DELETE","selectionDelete","isSelectionCopyAction","selectedNodes","isSelectionDeleteAction","simInit","outputsOf","outputValues","initNode","collectNodeTransitions","inputConnectionsByPin","inputConn","sourceNodeId","sourcePin","transition","transitionMerger","transitionTick","removeTransitionsByNodeId","addTransition","valuesByOutputPin","transitionId","newTransition","index","newWindow","transitionIds","splice","isNodeTransition","removeTransitionById","transitionWindowIndex","transitionWindow","tickWindowTransitionIndex","removeTransitionIds","deleteNodeById","ACTION_NODE_INTERACT","isInteractNodeAction","nodeState","isTickSimAction","endTick","saftyCount","Error","window","shift","tickWindow","updatedNodes","tid","outConn","ACTION_SIM_FASTFORWARD","fastForwardSim","isPauseSimAction","runMode","isStartSimAction","ACTION_SIM_STOP","isStopSimAction","affectedNodes","isFastForwardSimAction","nextWindowTick","createViewReducer","createViewSelector","isViewZoomAction","delta","ACTION_SELECT_PIN","selectedPinSelector","doSelectPinReducer","SELECTED_NODE_CHANGE_ACTIONS","circuitFieldReducer","isSelectPinAction","clickedPinDirection","selectedPinDirection","finalizedList","finalizeReducerList","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","actionSanitizer","stateSanitizer","sagaMiddleware","store","run","dispatch","doInit","useSelector","viewScaleSelector","keyboardIsMac","test","toString","keyboardCommandModifier","fieldSvgElementContext","ContextProvider","Provider","FieldSvgElementProvider","children","svgElement","setSvgElement","current","selectionRectSelector","dragMoveOffsetSelector","dragEndSelector","isDraggingNewNodeSelector","dragNewNodeTypeSelector","getFieldCoord","ctm","getScreenCTM","pt","createSVGPoint","translated","matrixTransform","inverse","useEventMouseCoords","fieldRef","e","pageX","pageY","colorOverride","renderPin","onClick","onMouseDown","onMouseOver","onMouseUp","onMouseLeave","this","props","console","warn","body","i","key","d","element","transform","undefined","className","getMouseCoords","isDraggingNewNode","draggingNodeType","onMouseMove","opacity","stateSelectors","selectedNodePositionsById","selectedNodeTypesById","nodeTypesById","selectedNodeStatesById","nodeStatesById","dragMoveOffset","mapStateToProps","elements","log","getModifiers","ctrlKey","altKey","shiftKey","metaKey","ctrlMetaKey","getSelectMode","modifiers","useMouseTracking","dragThreshold","onDragStart","onDragMove","onDragEnd","isTracking","setTracking","isTrackingRef","isDraggingRef","mouseDownRef","startTracking","cancelTracking","document","addEventListener","removeEventListener","abs","selectionRect","getCoords","clearSelection","fieldDragStartSelect","defaultPrevented","preventDefault","strokeDasharray","isSelected","stopPropagation","selectPin","interactNode","fieldDragStartNode","nodeElements","startJointId","endJointId","nodePosition","cacheData","inputNodeDef","inputNodePosition","outputPosition","wireStartPositionSelector","end","wireEndPositionSelector","mousePos","setMousePos","addedJointRef","addWireJoint","selectWires","onJointInsertMouseDown","insertJointPos","lineDir","scaler","dotProduct","x1","y1","x2","y2","mouseOver","setMouseOver","onJointDragMove","selectWireJoints","startMoveJointTracking","onMouseOut","mouseDown","isPowered","wireValueSelector","segmentElements","jointElements","connectorElements","svgRef","focus","fieldMouseLeave","style","tabIndex","ref","viewRef","keyHandlers","createEventDispatcher","listener","options","listenTarget","useNativeEvent","viewZoom","deltaY","passive","keyMap","handlers","mapDispatchToProps","addNode","typedKeys","Element","fieldDragStartNewNode","editor","dismiss","intro","href","source","onClose","isOpen","placement","anchorEl","contentRef","popperRef","handleClose","destroy","popperNode","preventOverflow","boundariesElement","handleOpen","contentNode","divProps","popupmenu","enabled","onClickOutside","onEscapeKey","title","childPlacement","onClosePopup","setOpen","isParentItem","count","onItemClick","item","popup","Play","Stop","Pause","isActive","isPaused","onPlayClick","startSim","onStopClick","stopSim","onPauseClick","pauseSim","onFileNew","actionCreator","useAction","titlebar","introShown","setIntroShown","onDismiss","rootEl","getElementById"],"mappings":"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","file":"client.c6d5ddff28af5696f275.bundle.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"circuit-field-view\":\"CircuitFieldView-module__circuit-field-view___2A5Yu\",\"circuit-field-zoom-container\":\"CircuitFieldView-module__circuit-field-zoom-container___2fQiO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"circuit-editor\":\"CircuitField-module__circuit-editor___Xrh6Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popupmenu\":\"PopupMenu-module__popupmenu___Z6R_G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SimControls-module__button___8i6BJ\",\"button-play\":\"SimControls-module__button-play___OQ_Wh\",\"button-stop\":\"SimControls-module__button-stop___t8jrA\",\"button-pause\":\"SimControls-module__button-pause___n1JVQ\",\"selected\":\"SimControls-module__selected___2ryhI\",\"button--disabled\":\"SimControls-module__button--disabled___3eIn8\"};","import { NodeDefinition } from \"./types\";\r\n\r\nconst andNodeDefinition: NodeDefinition = {\r\n  type: \"and\",\r\n  visual: {\r\n    hitPath: `\r\n      M30 5V45H50.47619c11.267908 0 20-9.000045 20-20s-8.732091-20-20-20H30z\r\n    `,\r\n    // https://commons.wikimedia.org/wiki/File:AND_ANSI.svg\r\n    shapePath: `\r\n      M70 25h25\r\n      M31 15H5\r\n      M32 35H5\r\n      M30 5V45H50.47619c11.267908 0 20-9.000045 20-20s-8.732091-20-20-20H30z\r\n      m2.857143 2.857143H50.47619c9.760663 0 16.666667 7.639955 16.666667 17.142857 0 9.502902-7.382195 17.142857-17.142857 17.142857H32.857143V7.857143z\r\n    `\r\n  },\r\n  pins: {\r\n    A: {\r\n      name: \"A\",\r\n      direction: \"input\",\r\n      x: 0,\r\n      y: 14.5\r\n    },\r\n    B: {\r\n      name: \"B\",\r\n      direction: \"input\",\r\n      x: 0,\r\n      y: 35\r\n    },\r\n    OUT: {\r\n      name: \"OUT\",\r\n      direction: \"output\",\r\n      x: 100,\r\n      y: 25\r\n    }\r\n  },\r\n  evolve(state, inputs, tick) {\r\n    return {\r\n      transitions: {\r\n        tickOffset: 4,\r\n        valuesByPin: { OUT: inputs.A && inputs.B }\r\n      }\r\n    };\r\n  }\r\n};\r\nexport default andNodeDefinition;\r\n","import { NodeDefinition } from \"./types\";\r\n\r\nconst orNodeDefinition: NodeDefinition = {\r\n  type: \"or\",\r\n  visual: {\r\n    hitPath: `\r\n    M24.09375 5l2 2.4375S31.75 14.437549 31.75 25s-5.65625 17.5625-5.65625 17.5625l-2 2.4375H41.25c2.408076.000001 7.689699.024514 13.625-2.40625s12.536536-7.343266 17.6875-16.875L71.25 25l1.3125-.71875C62.259387 5.21559 46.006574 5 41.25 5H24.09375z\r\n    `,\r\n    // https://commons.wikimedia.org/wiki/File:OR_ANSI.svg\r\n    shapePath: `\r\n      M70 25h25\r\n      M31 15H5\r\n      M32 35H5\r\n      M24.09375 5l2 2.4375S31.75 14.437549 31.75 25s-5.65625 17.5625-5.65625 17.5625l-2 2.4375H41.25c2.408076.000001 7.689699.024514 13.625-2.40625s12.536536-7.343266 17.6875-16.875L71.25 25l1.3125-.71875C62.259387 5.21559 46.006574 5 41.25 5H24.09375z\r\n      m5.875 3H41.25c4.684173 0 18.28685-.130207 27.96875 17C64.451964 33.429075 58.697469 37.68391 53.5 39.8125 48.139339 42.007924 43.658075 42.000001 41.25 42H30c1.873588-3.108434 4.75-9.04935 4.75-17 0-7.973354-2.908531-13.900185-4.78125-17z\r\n    `\r\n  },\r\n  pins: {\r\n    A: {\r\n      name: \"A\",\r\n      direction: \"input\",\r\n      x: 0,\r\n      y: 14.5\r\n    },\r\n    B: {\r\n      name: \"B\",\r\n      direction: \"input\",\r\n      x: 0,\r\n      y: 35\r\n    },\r\n    OUT: {\r\n      name: \"OUT\",\r\n      direction: \"output\",\r\n      x: 100,\r\n      y: 25\r\n    }\r\n  },\r\n  evolve(state, inputs, tick) {\r\n    return {\r\n      transitions: {\r\n        tickOffset: 4,\r\n        valuesByPin: { OUT: inputs.A || inputs.B }\r\n      }\r\n    };\r\n  }\r\n};\r\nexport default orNodeDefinition;\r\n","import { NodeDefinition } from \"./types\";\r\n\r\nconst norNodeDefinition: NodeDefinition = {\r\n  type: \"nor\",\r\n  visual: {\r\n    hitPath: `\r\n    M24.09375 5l2 2.4375S31.75 14.437549 31.75 25s-5.65625 17.5625-5.65625 17.5625l-2 2.4375H41.25c2.408076.000001 7.689699.024514 13.625-2.40625s12.536536-7.343266 17.6875-16.875L71.25 25l1.3125-.71875C62.259387 5.21559 46.006574 5 41.25 5H24.09375z\r\n    `,\r\n    // https://commons.wikimedia.org/wiki/File:NOR_ANSI.svg\r\n    shapePath: `\r\n      M79 25h16M31 15H5M32 35H5\r\n      \r\n      M24.09375 5l2 2.4375S31.75 14.437549 31.75 25s-5.65625 17.5625-5.65625 17.5625l-2 2.4375H41.25c2.408076.000001 7.689699.024514 13.625-2.40625s12.536536-7.343266 17.6875-16.875L71.25 25l1.3125-.71875C62.259387 5.21559 46.006574 5 41.25 5H24.09375z\r\n      m5.875 3H41.25c4.684173 0 18.28685-.130207 27.96875 17C64.451964 33.429075 58.697469 37.68391 53.5 39.8125 48.139339 42.007924 43.658075 42.000001 41.25 42H30c1.873588-3.108434 4.75-9.04935 4.75-17 0-7.973354-2.908531-13.900185-4.78125-17z\r\n      M79 25a4 4 0 1 1-8 0 4 4 0 1 1 8 0z\r\n    `\r\n  },\r\n  pins: {\r\n    A: {\r\n      name: \"A\",\r\n      direction: \"input\",\r\n      x: 0,\r\n      y: 14.5\r\n    },\r\n    B: {\r\n      name: \"B\",\r\n      direction: \"input\",\r\n      x: 0,\r\n      y: 35\r\n    },\r\n    OUT: {\r\n      name: \"OUT\",\r\n      direction: \"output\",\r\n      x: 100,\r\n      y: 25\r\n    }\r\n  },\r\n  evolve(state, inputs, tick) {\r\n    return {\r\n      transitions: {\r\n        tickOffset: 4,\r\n        valuesByPin: { OUT: !(inputs.A || inputs.B) }\r\n      }\r\n    };\r\n  }\r\n};\r\nexport default norNodeDefinition;\r\n","import { NodeDefinition } from \"./types\";\r\n\r\nconst bufferNodeDefinition: NodeDefinition = {\r\n  type: \"not\",\r\n  visual: {\r\n    hitPath: `\r\n    M28.96875 2.59375v44.8125l2.15625-1.0625 41.03125-20v-2.6875l-41.03125-20-2.15625-1.0625z\r\n    `,\r\n    // https://commons.wikimedia.org/wiki/File:NOT_ANSI.svg\r\n    shapePath: `\r\n      M79.15691 25H95\r\n      M29.043478 25h-24\r\n      M28.96875 2.59375v44.8125l2.15625-1.0625 41.03125-20v-2.6875l-41.03125-20-2.15625-1.0625z\r\n      m3 4.8125L68.09375 25l-36.125 17.59375V7.40625z\r\n      M79 25a4 4 0 1 1-8 0 4 4 0 1 1 8 0z\r\n    `\r\n  },\r\n  pins: {\r\n    IN: {\r\n      name: \"IN\",\r\n      direction: \"input\",\r\n      x: 0,\r\n      y: 25\r\n    },\r\n    OUT: {\r\n      name: \"OUT\",\r\n      direction: \"output\",\r\n      x: 100,\r\n      y: 25\r\n    }\r\n  },\r\n  evolve(state, inputs, tick) {\r\n    return {\r\n      transitions: {\r\n        tickOffset: 4,\r\n        valuesByPin: { OUT: !inputs.IN }\r\n      }\r\n    };\r\n  }\r\n};\r\nexport default bufferNodeDefinition;\r\n","import { NodeDefinition } from \"./types\";\r\n\r\nconst bufferNodeDefinition: NodeDefinition = {\r\n  type: \"buffer\",\r\n  visual: {\r\n    hitPath: `\r\n    M 28.96875,2.59375 L 28.96875,5 L 28.96875,45 L 28.96875,47.40625 L 31.125,46.34375 L 72.15625,26.34375 L 75,25 L 72.15625,23.65625 L 31.125,3.65625 L 28.96875,2.59375 z\r\n    `,\r\n    // https://commons.wikimedia.org/wiki/File:Buffer_ANSI.svg\r\n    shapePath: `\r\n      M 72,25 L 95.085706,25\r\n      M 29.043478,25 L 5.0434781,25\r\n      M 28.96875,2.59375 L 28.96875,5 L 28.96875,45 L 28.96875,47.40625 L 31.125,46.34375 L 72.15625,26.34375 L 75,25 L 72.15625,23.65625 L 31.125,3.65625 L 28.96875,2.59375 z M 31.96875,7.40625 L 68.09375,25 L 31.96875,42.59375 L 31.96875,7.40625 z\r\n    `\r\n  },\r\n  pins: {\r\n    IN: {\r\n      name: \"IN\",\r\n      direction: \"input\",\r\n      x: 0,\r\n      y: 25\r\n    },\r\n    OUT: {\r\n      name: \"OUT\",\r\n      direction: \"output\",\r\n      x: 100,\r\n      y: 25\r\n    }\r\n  },\r\n  evolve(state, inputs, tick) {\r\n    return {\r\n      transitions: {\r\n        tickOffset: 4,\r\n        valuesByPin: { OUT: inputs.IN }\r\n      }\r\n    };\r\n  }\r\n};\r\nexport default bufferNodeDefinition;\r\n","import { NodeDefinition } from \"./types\";\r\n\r\nfunction genCirclePath(cx: number, cy: number, r: number): string {\r\n  return `M ${cx - r}, ${cy}\r\n    a ${r},${r} 0 1,0 ${r * 2},0\r\n    a ${r},${r} 0 1,0 ${-(r * 2)},0`;\r\n}\r\n\r\nconst ledNodeDefinition: NodeDefinition = {\r\n  type: \"led\",\r\n  visual: {\r\n    shapePath: [\r\n      genCirclePath(25, 25, 25),\r\n      {\r\n        path: genCirclePath(25, 25, 20),\r\n        fill: state => (state.value ? \"lightgreen\" : \"darkgreen\")\r\n      }\r\n    ]\r\n  },\r\n  pins: {\r\n    IN: {\r\n      name: \"IN\",\r\n      direction: \"input\",\r\n      x: 0,\r\n      y: 25\r\n    }\r\n  },\r\n  evolve(state, inputs, tick) {\r\n    return {\r\n      state: {\r\n        value: inputs.IN\r\n      }\r\n    };\r\n  }\r\n};\r\nexport default ledNodeDefinition;\r\n","import { NodeDefinition } from \"./types\";\r\n\r\ninterface ToggleState {\r\n  toggleState: boolean;\r\n}\r\nconst defaultToggleState: ToggleState = {\r\n  toggleState: false\r\n};\r\n\r\nconst toggleSwitchNodeDefinition: NodeDefinition = {\r\n  type: \"toggle\",\r\n  visual: {\r\n    shapePath: {\r\n      path: `M0,0 L0,50 L25,50 L25,0 z`,\r\n      fill: (state: ToggleState) => (state.toggleState ? \"green\" : \"red\")\r\n    }\r\n  },\r\n  pins: {\r\n    OUT: {\r\n      name: \"OUT\",\r\n      direction: \"output\",\r\n      x: 25,\r\n      y: 25\r\n    }\r\n  },\r\n  interact(state: ToggleState = defaultToggleState) {\r\n    return {\r\n      ...state,\r\n      toggleState: !state.toggleState\r\n    };\r\n  },\r\n  evolve(state = defaultToggleState, inputs, tick) {\r\n    return {\r\n      state,\r\n      transitions: {\r\n        tickOffset: 1,\r\n        valuesByPin: { OUT: state.toggleState }\r\n      }\r\n    };\r\n  }\r\n};\r\nexport default toggleSwitchNodeDefinition;\r\n","import { NodeDefinition, NodeVisualPathDefinition } from \"./types\";\r\n\r\nconst SCALE = 3;\r\nconst OFFSET = [15, 0];\r\n\r\n/**\r\n * Produce a visual path definition of a segment given a series of polygon points.\r\n * The path definition will color itself based on the state key specified by 'name'\r\n * @param name The state key to select color based on.  The key should represent a boolean value.\r\n * @param points An array of [x,y] pairs that make up the polygon.\r\n */\r\nfunction createSeg(\r\n  name: string,\r\n  points: [number, number][]\r\n): NodeVisualPathDefinition {\r\n  const start = points[0];\r\n  let path = `M${start[0] * SCALE + OFFSET[0]},${start[1] * SCALE + OFFSET[1]}`;\r\n  for (let p of points.slice(1)) {\r\n    const [x, y] = p;\r\n    path += `L${x * SCALE + OFFSET[0]},${y * SCALE + OFFSET[1]}`;\r\n  }\r\n  path += \"z\";\r\n  return {\r\n    path,\r\n    fill: state => (state[name] ? \"red\" : \"gray\")\r\n  };\r\n}\r\n\r\nconst seg7NodeDefinition: NodeDefinition = {\r\n  type: \"seg7\",\r\n  visual: {\r\n    hitPath: `M0,0 V63 H45 V0 z`,\r\n    // https://commons.wikimedia.org/wiki/File:7-segment_abcdefg.svg\r\n    shapePath: [\r\n      createSeg(\"A\", [\r\n        [1, 1],\r\n        [2, 0],\r\n        [8, 0],\r\n        [9, 1],\r\n        [8, 2],\r\n        [2, 2]\r\n      ]),\r\n      createSeg(\"B\", [\r\n        [9, 1],\r\n        [10, 2],\r\n        [10, 8],\r\n        [9, 9],\r\n        [8, 8],\r\n        [8, 2]\r\n      ]),\r\n      createSeg(\"C\", [\r\n        [9, 9],\r\n        [10, 10],\r\n        [10, 16],\r\n        [9, 17],\r\n        [8, 16],\r\n        [8, 10]\r\n      ]),\r\n      createSeg(\"D\", [\r\n        [9, 17],\r\n        [8, 18],\r\n        [2, 18],\r\n        [1, 17],\r\n        [2, 16],\r\n        [8, 16]\r\n      ]),\r\n      createSeg(\"E\", [\r\n        [1, 17],\r\n        [0, 16],\r\n        [0, 10],\r\n        [1, 9],\r\n        [2, 10],\r\n        [2, 16]\r\n      ]),\r\n      createSeg(\"F\", [\r\n        [1, 9],\r\n        [0, 8],\r\n        [0, 2],\r\n        [1, 1],\r\n        [2, 2],\r\n        [2, 8]\r\n      ]),\r\n      createSeg(\"G\", [\r\n        [1, 9],\r\n        [2, 8],\r\n        [8, 8],\r\n        [9, 9],\r\n        [8, 10],\r\n        [2, 10]\r\n      ])\r\n    ]\r\n  },\r\n  pins: {\r\n    A: {\r\n      name: \"A\",\r\n      direction: \"input\",\r\n      x: 0,\r\n      y: 5\r\n    },\r\n    B: {\r\n      name: \"B\",\r\n      direction: \"input\",\r\n      x: 0,\r\n      y: 15\r\n    },\r\n    C: {\r\n      name: \"C\",\r\n      direction: \"input\",\r\n      x: 0,\r\n      y: 25\r\n    },\r\n    D: {\r\n      name: \"D\",\r\n      direction: \"input\",\r\n      x: 0,\r\n      y: 35\r\n    },\r\n    E: {\r\n      name: \"E\",\r\n      direction: \"input\",\r\n      x: 0,\r\n      y: 45\r\n    },\r\n    F: {\r\n      name: \"F\",\r\n      direction: \"input\",\r\n      x: 0,\r\n      y: 55\r\n    },\r\n    G: {\r\n      name: \"G\",\r\n      direction: \"input\",\r\n      x: 0,\r\n      y: 65\r\n    }\r\n  },\r\n  evolve(state, inputs, tick) {\r\n    return {\r\n      state: { ...inputs }\r\n    };\r\n  }\r\n};\r\nexport default seg7NodeDefinition;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor\":\"CircuitEditor-module__editor___UL8qT\",\"layout-rows\":\"CircuitEditor-module__layout-rows___2WG7r\",\"layout-columns\":\"CircuitEditor-module__layout-columns___1MXih\",\"fieldcontainer\":\"CircuitEditor-module__fieldcontainer___1qlAx\",\"toolwindow\":\"CircuitEditor-module__toolwindow___3jN3R\",\"toolwindow-row\":\"CircuitEditor-module__toolwindow-row___20SDp\"};","import { Point, Size, Rectangle } from \"@/types\";\r\n\r\nexport const ZeroPoint = Object.freeze({ x: 0, y: 0 });\r\n\r\nexport function magnitude(v: Point): number {\r\n  return Math.sqrt(v.x * v.x + v.y * v.y);\r\n}\r\nexport function normalize(p: Point): Point {\r\n  const m = magnitude(p);\r\n  return {\r\n    x: p.x / m,\r\n    y: p.y / m\r\n  };\r\n}\r\n\r\nexport function dotProduct(a: Point, b: Point): number {\r\n  return a.x * b.x + a.y * b.y;\r\n}\r\n\r\nexport function scale(p: Point, scaler: number) {\r\n  return { x: p.x * scaler, y: p.y * scaler };\r\n}\r\n\r\nexport function normalizeRectangle(p1: Point, p2: Point): Rectangle;\r\nexport function normalizeRectangle(r: Rectangle): Rectangle;\r\nexport function normalizeRectangle(...args: any[]): Rectangle {\r\n  let p1: Point;\r\n  let p2: Point;\r\n  if (args.length === 1) {\r\n    const r = args[0] as Rectangle;\r\n    p1 = r.p1;\r\n    p2 = r.p2;\r\n  } else {\r\n    p1 = args[0] as Point;\r\n    p2 = args[1] as Point;\r\n  }\r\n  return {\r\n    p1: {\r\n      x: Math.min(p1.x, p2.x),\r\n      y: Math.min(p1.y, p2.y)\r\n    },\r\n    p2: {\r\n      x: Math.max(p1.x, p2.x),\r\n      y: Math.max(p1.y, p2.y)\r\n    }\r\n  };\r\n}\r\n\r\nexport function pointAdd(p1: Point, p2: Point): Point {\r\n  return {\r\n    x: p1.x + p2.x,\r\n    y: p1.y + p2.y\r\n  };\r\n}\r\nexport function pointSubtract(p1: Point, p2: Point): Point {\r\n  return {\r\n    x: p1.x - p2.x,\r\n    y: p1.y - p2.y\r\n  };\r\n}\r\n\r\nexport function calcSize(r: Rectangle): Size {\r\n  r = normalizeRectangle(r);\r\n  return {\r\n    width: r.p2.x - r.p1.x,\r\n    height: r.p2.y - r.p1.y\r\n  };\r\n}\r\n\r\nexport function intersects(r1: Rectangle, r2: Rectangle): boolean {\r\n  r1 = normalizeRectangle(r1);\r\n  r2 = normalizeRectangle(r2);\r\n\r\n  // r1 starts after p2's extent, or does not reach r2's start.\r\n  if (r1.p1.x > r2.p2.x || r1.p2.x < r2.p1.x) {\r\n    return false;\r\n  }\r\n\r\n  // r1 starts after p2's extent, or does not reach r2's start.\r\n  if (r1.p1.y > r2.p2.y || r1.p2.y < r2.p1.y) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function pointIntersects(p: Point, r: Rectangle): boolean {\r\n  r = normalizeRectangle(r);\r\n\r\n  if (r.p1.x > p.x || r.p2.x < p.x) {\r\n    return false;\r\n  }\r\n\r\n  if (r.p1.y > p.y || r.p2.y < p.y) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n","import { Point } from \"@/types\";\r\nimport { ZeroPoint } from \"@/geometry\";\r\n\r\nimport { ClipboardNode } from \"./types\";\r\n\r\nexport interface ClipboardState {\r\n  clipboardNodes: ClipboardNode[];\r\n  clipboardPasteOrigin: Point;\r\n}\r\n\r\nexport const defaultClipboardState: Readonly<ClipboardState> = Object.freeze({\r\n  clipboardNodes: [],\r\n  clipboardPasteOrigin: ZeroPoint\r\n});\r\n","import { IDMap, Point } from \"@/types\";\r\nimport { NodeType } from \"@/node-defs\";\r\n\r\nexport interface FieldState {\r\n  width: number;\r\n  height: number;\r\n  nodePositionsById: IDMap<Point>;\r\n  wireJointIdsByWireId: IDMap<string[]>;\r\n  wireJointPositionsByJointId: IDMap<Point>;\r\n  dragMode: \"move\" | \"select\" | \"new-node\" | null;\r\n  dragStart: Point | null;\r\n  dragEnd: Point | null;\r\n  dragNewNodeType: NodeType | null;\r\n}\r\n\r\nconst _defaultState: FieldState = {\r\n  width: 1024,\r\n  height: 768,\r\n  nodePositionsById: {},\r\n  wireJointIdsByWireId: {},\r\n  wireJointPositionsByJointId: {},\r\n  dragMode: null,\r\n  dragStart: null,\r\n  dragEnd: null,\r\n  dragNewNodeType: null\r\n};\r\n\r\nexport const defaultFieldState: Readonly<FieldState> = Object.freeze(\r\n  _defaultState\r\n);\r\n","import { IDMap } from \"@/types\";\r\n\r\nimport { Wire, GraphNode } from \"./types\";\r\n\r\nexport interface GraphState {\r\n  /**\r\n   * A map of nodes by node id.\r\n   */\r\n  nodesById: IDMap<GraphNode>;\r\n\r\n  /**\r\n   * A map of wires connecting nodes.\r\n   */\r\n  wiresById: IDMap<Wire>;\r\n}\r\n\r\nconst _defaultState: GraphState = {\r\n  nodesById: {},\r\n  wiresById: {}\r\n};\r\n\r\nexport const defaultGraphState = Object.freeze(_defaultState);\r\n","export interface SelectionState {\r\n  selectedNodeIds: string[];\r\n  selectedWireIds: string[];\r\n  selectedJointIds: string[];\r\n}\r\n\r\nconst _defaultState: SelectionState = {\r\n  selectedNodeIds: [],\r\n  selectedWireIds: [],\r\n  selectedJointIds: []\r\n};\r\n\r\nexport const defaultSelectionState = Object.freeze(_defaultState);\r\n","import { IDMap } from \"@/types\";\r\n\r\nimport { SimNodePinTransition, SimTransitionWindow } from \"./types\";\r\n\r\nexport interface SimulatorState {\r\n  /**\r\n   * The overall application mode.\r\n   * Might not belong in simulator state?\r\n   *\r\n   * - edit: User is editing, no simulator is running\r\n   * - step: Sim is paused and only ticks on user command\r\n   * - run: Sim is actively running and ticking forwards on its own.\r\n   */\r\n  mode: \"edit\" | \"pause\" | \"run\";\r\n\r\n  /**\r\n   * Tick speed in ticks per second when running.\r\n   */\r\n  ticksPerSecond: number;\r\n\r\n  /**\r\n   * The current tick the simulator is on.\r\n   */\r\n  tick: number;\r\n\r\n  /**\r\n   * A map of node states by node id.\r\n   */\r\n  nodeStatesByNodeId: IDMap<any>;\r\n\r\n  /**\r\n   * A map of output-to-value maps by node id.\r\n   */\r\n  nodeOutputValuesByNodeId: IDMap<IDMap<boolean>>;\r\n\r\n  /**\r\n   * A map of pending transitions by id.\r\n   */\r\n  transitionsById: IDMap<SimNodePinTransition>;\r\n\r\n  /**\r\n   * Transition windows in ascending order of tick.\r\n   */\r\n  transitionWindows: SimTransitionWindow[];\r\n}\r\n\r\nconst _defaultState: SimulatorState = {\r\n  mode: \"edit\",\r\n  ticksPerSecond: 10,\r\n  tick: 0,\r\n  nodeStatesByNodeId: {},\r\n  nodeOutputValuesByNodeId: {},\r\n  transitionsById: {},\r\n  transitionWindows: []\r\n};\r\n\r\nexport const defaultSimulatorState = Object.freeze(_defaultState);\r\n","export interface ViewState {\r\n  scale: number;\r\n}\r\n\r\nconst _defaultState: ViewState = {\r\n  scale: 1\r\n};\r\n\r\nexport const defaultViewState = Object.freeze(_defaultState);\r\n","import { NodePin } from \"@/services/graph/types\";\r\n\r\nexport interface CircuitFieldState {\r\n  selectedPin: NodePin | null;\r\n}\r\n\r\nconst _defaultState: CircuitFieldState = {\r\n  selectedPin: null\r\n};\r\n\r\nexport const defaultCircuitFieldState = Object.freeze(_defaultState);\r\n","import {\r\n  ClipboardState,\r\n  defaultClipboardState\r\n} from \"@/services/clipboard/state\";\r\nimport { FieldState, defaultFieldState } from \"@/services/field/state\";\r\nimport { GraphState, defaultGraphState } from \"@/services/graph/state\";\r\nimport {\r\n  SelectionState,\r\n  defaultSelectionState\r\n} from \"@/services/selection/state\";\r\nimport {\r\n  SimulatorState,\r\n  defaultSimulatorState\r\n} from \"@/services/simulator/state\";\r\nimport { ViewState, defaultViewState } from \"@/services/view/state\";\r\n\r\nimport {\r\n  CircuitEditorState,\r\n  defaultCircuitEditorState\r\n} from \"@/pages/CircuitEditor/state\";\r\n\r\nexport interface AppState {\r\n  services: {\r\n    clipboard: ClipboardState;\r\n    field: FieldState;\r\n    graph: GraphState;\r\n    selection: SelectionState;\r\n    simulator: SimulatorState;\r\n    view: ViewState;\r\n  };\r\n  ui: {\r\n    circuitEditor: CircuitEditorState;\r\n  };\r\n}\r\n\r\nconst _defaultAppState: AppState = {\r\n  services: {\r\n    clipboard: defaultClipboardState,\r\n    field: defaultFieldState,\r\n    graph: defaultGraphState,\r\n    selection: defaultSelectionState,\r\n    simulator: defaultSimulatorState,\r\n    view: defaultViewState\r\n  },\r\n  ui: {\r\n    circuitEditor: defaultCircuitEditorState\r\n  }\r\n};\r\n\r\nexport const defaultAppState = Object.freeze(_defaultAppState);\r\n","import {\r\n  CircuitFieldState,\r\n  defaultCircuitFieldState\r\n} from \"./components/CircuitFieldView/components/CircuitField/state\";\r\n\r\nexport interface CircuitEditorState {\r\n  circuitField: CircuitFieldState;\r\n}\r\n\r\nexport const defaultCircuitEditorState: CircuitEditorState = {\r\n  circuitField: defaultCircuitFieldState\r\n};\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_INIT = \"@init\";\r\nexport const doInit = () => ({ type: ACTION_INIT });\r\nexport type InitAction = ReturnType<typeof doInit>;\r\nexport function isInitAction(action: AnyAction): action is InitAction {\r\n  return action.type === ACTION_INIT;\r\n}\r\n","import { AnyAction } from \"redux\";\r\nimport { Point } from \"@/types\";\r\n\r\nexport const ACTION_FIELD_DRAG_CONTINUE = \"@field/drag/continue\" as const;\r\nexport const fieldDragContinue = (p: Point) => ({\r\n  type: ACTION_FIELD_DRAG_CONTINUE,\r\n  payload: p\r\n});\r\nexport type FieldDragContinueAction = ReturnType<typeof fieldDragContinue>;\r\nexport function isFieldDragContinueAction(\r\n  action: AnyAction\r\n): action is FieldDragContinueAction {\r\n  return action.type === ACTION_FIELD_DRAG_CONTINUE;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_FIELD_MOUSE_LEAVE = \"@field/mouse/leave\" as const;\r\nexport const fieldMouseLeave = () => ({\r\n  type: ACTION_FIELD_MOUSE_LEAVE\r\n});\r\nexport type FieldMouseLeaveAction = ReturnType<typeof fieldMouseLeave>;\r\nexport function isFieldMouseLeaveAction(\r\n  action: AnyAction\r\n): action is FieldMouseLeaveAction {\r\n  return action.type === ACTION_FIELD_MOUSE_LEAVE;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_SIM_TICK = \"@sim/tick\" as const;\r\nexport const tickSim = (tickCount: number) => ({\r\n  type: ACTION_SIM_TICK,\r\n  payload: { tickCount }\r\n});\r\nexport type TickSimAction = ReturnType<typeof tickSim>;\r\nexport function isTickSimAction(action: AnyAction): action is TickSimAction {\r\n  return action.type === ACTION_SIM_TICK;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_VIEW_ZOOM = \"@view/zoom\" as const;\r\nexport const viewZoom = (delta: number) => ({\r\n  type: ACTION_VIEW_ZOOM,\r\n  payload: { delta }\r\n});\r\nexport type ViewZoomAction = ReturnType<typeof viewZoom>;\r\nexport function isViewZoomAction(action: AnyAction): action is ViewZoomAction {\r\n  return action.type === ACTION_VIEW_ZOOM;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { AppState } from \"@/store\";\r\n\r\nimport { ACTION_FIELD_DRAG_CONTINUE } from \"@/actions/field-drag-continue\";\r\nimport { ACTION_FIELD_MOUSE_LEAVE } from \"@/actions/field-mouse-leave\";\r\nimport { ACTION_SIM_TICK } from \"@/actions/sim-tick\";\r\nimport { ACTION_VIEW_ZOOM } from \"@/actions/view-zoom\";\r\n\r\nexport const actionsBlacklist: string[] = [\r\n  ACTION_FIELD_DRAG_CONTINUE,\r\n  ACTION_FIELD_MOUSE_LEAVE,\r\n  ACTION_SIM_TICK,\r\n  ACTION_VIEW_ZOOM\r\n];\r\n\r\nexport function actionSanitizer(action: AnyAction): AnyAction {\r\n  return action;\r\n}\r\n\r\nexport function stateSanitizer(state: AppState): any {\r\n  return state;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_SIM_START = \"@sim/start\" as const;\r\nexport const startSim = () => ({\r\n  type: ACTION_SIM_START\r\n});\r\nexport type StartSimAction = ReturnType<typeof startSim>;\r\nexport function isStartSimAction(action: AnyAction): action is StartSimAction {\r\n  return action.type === ACTION_SIM_START;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_SIM_PAUSE = \"@sim/pause\" as const;\r\nexport const pauseSim = (mode: boolean | \"toggle\") => ({\r\n  type: ACTION_SIM_PAUSE,\r\n  payload: { mode }\r\n});\r\nexport type PauseSimAction = ReturnType<typeof pauseSim>;\r\nexport function isPauseSimAction(action: AnyAction): action is PauseSimAction {\r\n  return action.type === ACTION_SIM_PAUSE;\r\n}\r\n","export function cls(...values: (string | false | undefined)[]): string {\r\n  return values.filter(x => Boolean(x) && x != \"\").join(\" \");\r\n}\r\n\r\nexport function typedKeys<T extends object>(obj: T): (keyof T)[] {\r\n  return Object.keys(obj) as (keyof T)[];\r\n}\r\n\r\nexport type ValueSetter<T> = T | ((old: T) => T);\r\n\r\nexport function fpSet<\r\n  Target extends Record<string, any> | any[],\r\n  P1 extends keyof Target,\r\n  T extends Target[P1]\r\n>(target: Target, p1: P1, value: ValueSetter<T>): Target;\r\nexport function fpSet<\r\n  Target extends Record<string, any> | any[],\r\n  P1 extends keyof Target,\r\n  P2 extends keyof Target[P1],\r\n  T extends Target[P1][P2]\r\n>(target: Target, p1: P1, p2: P2, value: ValueSetter<T>): Target;\r\nexport function fpSet<\r\n  Target extends Record<string, any> | any[],\r\n  P1 extends keyof Target,\r\n  P2 extends keyof Target[P1],\r\n  P3 extends keyof Target[P1][P2],\r\n  T extends Target[P1][P2][P3]\r\n>(target: Target, p1: P1, p2: P2, p3: P3, value: ValueSetter<T>): Target;\r\nexport function fpSet(...args: any[]) {\r\n  let target = args[0];\r\n  const firstPaths = args.slice(1, args.length - 2).map(String);\r\n  const lastPath = args[args.length - 2];\r\n  const value = args[args.length - 1];\r\n\r\n  const newData = clone(target);\r\n  target = newData;\r\n\r\n  for (const seg of firstPaths) {\r\n    target[seg] = clone(target[seg]);\r\n    target = target[seg];\r\n  }\r\n\r\n  if (typeof value === \"function\") {\r\n    target[lastPath] = value(target[lastPath]);\r\n  } else {\r\n    target[lastPath] = value;\r\n  }\r\n\r\n  return newData;\r\n}\r\n\r\nfunction clone<T extends object | any[]>(obj: T): T {\r\n  if (Array.isArray(obj)) {\r\n    return [...obj] as T;\r\n  }\r\n  return { ...obj };\r\n}\r\n","import { AnyAction, Reducer } from \"redux\";\r\n\r\nimport { AppState, defaultAppState } from \"@/store\";\r\nimport { fpSet } from \"@/utils\";\r\n\r\nexport type ServiceKey = keyof AppState[\"services\"];\r\nexport type ServiceState<\r\n  TServiceKey extends ServiceKey\r\n> = AppState[\"services\"][TServiceKey];\r\n\r\nexport interface ServiceReducer<TServiceState> {\r\n  (\r\n    state: Readonly<TServiceState>,\r\n    action: AnyAction,\r\n    appState: AppState\r\n  ): TServiceState;\r\n}\r\n\r\nexport function createServiceReducerCreator<TServiceKey extends ServiceKey>(\r\n  service: TServiceKey\r\n): (\r\n  reducer: ServiceReducer<AppState[\"services\"][TServiceKey]>\r\n) => Reducer<AppState, AnyAction> {\r\n  return (reducer: ServiceReducer<AppState[\"services\"][TServiceKey]>) => {\r\n    return (state: AppState = defaultAppState, action: AnyAction) => {\r\n      const newState = reducer(state.services[service], action, state);\r\n      if (state.services.field != newState) {\r\n        return fpSet(state, \"services\", service, newState);\r\n      }\r\n      return state;\r\n    };\r\n  };\r\n}\r\n\r\nexport interface ServiceSelectorA0<TServiceKey extends ServiceKey, TReturn> {\r\n  (s: AppState): TReturn;\r\n  local(s: ServiceState<TServiceKey>): TReturn;\r\n}\r\n\r\nexport interface ServiceSelectorA1<\r\n  TServiceKey extends ServiceKey,\r\n  TA1,\r\n  TReturn\r\n> {\r\n  (s: AppState, a1: TA1): TReturn;\r\n  local(s: ServiceState<TServiceKey>, a1: TA1): TReturn;\r\n}\r\n\r\nexport interface ServiceSelectorA2<\r\n  TServiceKey extends ServiceKey,\r\n  TA1,\r\n  TA2,\r\n  TReturn\r\n> {\r\n  (s: AppState, a1: TA1, a2: TA2): TReturn;\r\n  local(s: ServiceState<TServiceKey>, a1: TA1, a2: TA2): TReturn;\r\n}\r\n\r\nexport interface ServiceSelectorCreator<TServiceKey extends ServiceKey> {\r\n  <TReturn>(\r\n    selector: (s: ServiceState<TServiceKey>) => TReturn\r\n  ): ServiceSelectorA0<TServiceKey, TReturn>;\r\n  <TA1, TReturn>(\r\n    selector: (s: ServiceState<TServiceKey>, a1: TA1) => TReturn\r\n  ): ServiceSelectorA1<TServiceKey, TA1, TReturn>;\r\n  <TA1, TA2, TReturn>(\r\n    selector: (s: ServiceState<TServiceKey>, a1: TA1, a2: TA2) => TReturn\r\n  ): ServiceSelectorA2<TServiceKey, TA1, TA2, TReturn>;\r\n}\r\n\r\nexport function createServiceSelectorCreator<TServiceKey extends ServiceKey>(\r\n  service: TServiceKey\r\n): ServiceSelectorCreator<TServiceKey> {\r\n  return <TArgs, TReturn>(\r\n    selector: (s: ServiceState<TServiceKey>, ...args: TArgs[]) => TReturn\r\n  ) => {\r\n    const appSelector: any = (s: AppState, ...args: TArgs[]) =>\r\n      selector(s.services[service], ...args);\r\n    appSelector.local = selector;\r\n    return appSelector;\r\n  };\r\n}\r\n","import {\r\n  createServiceReducerCreator,\r\n  createServiceSelectorCreator\r\n} from \"../service-state-utils\";\r\n\r\nexport const createSimulatorReducer = createServiceReducerCreator(\"simulator\");\r\nexport const createSimulatorSelector = createServiceSelectorCreator(\r\n  \"simulator\"\r\n);\r\n","import { createSimulatorSelector } from \"../utils\";\r\n\r\nexport const isSimActiveSelector = createSimulatorSelector(\r\n  state => state.mode !== \"edit\"\r\n);\r\n\r\nexport const isSimRunningSelector = createSimulatorSelector(\r\n  state => state.mode === \"run\"\r\n);\r\n\r\nexport const isSimPausedSelector = createSimulatorSelector(\r\n  state => state.mode === \"pause\"\r\n);\r\n\r\nexport const ticksPerSecondSelector = createSimulatorSelector(\r\n  state => state.ticksPerSecond\r\n);\r\n","import { takeLeading, select, put, delay } from \"redux-saga/effects\";\r\n\r\nimport { ACTION_SIM_START } from \"@/actions/sim-start\";\r\nimport { ACTION_SIM_PAUSE } from \"@/actions/sim-pause\";\r\n\r\nimport { tickSim } from \"@/actions/sim-tick\";\r\n\r\nimport { isSimRunningSelector, ticksPerSecondSelector } from \"../selectors/run\";\r\n\r\nexport default function* runModeSaga() {\r\n  yield takeLeading([ACTION_SIM_START, ACTION_SIM_PAUSE], handleRunSim);\r\n}\r\n\r\nfunction* handleRunSim() {\r\n  while (true) {\r\n    const isRunning = yield select(isSimRunningSelector);\r\n    if (!isRunning) {\r\n      break;\r\n    }\r\n\r\n    yield put(tickSim(1));\r\n\r\n    const tps = yield select(ticksPerSecondSelector);\r\n    const timeToWait = Math.max(Math.ceil(1000 / tps), 1);\r\n    yield delay(timeToWait);\r\n  }\r\n}\r\n","import { fork } from \"redux-saga/effects\";\r\n\r\nimport runModeSaga from \"./mode-run\";\r\n\r\nexport default function* simulatorSaga() {\r\n  yield fork(runModeSaga);\r\n}\r\n","import { AnyAction } from \"redux\";\r\nimport sortBy from \"lodash/sortBy\";\r\n\r\nimport { MaybeArray } from \"@/types\";\r\n\r\nimport { AppState, defaultAppState } from \"./state\";\r\nimport { AppReducer } from \"./types\";\r\n\r\nexport function concatReducers(\r\n  ...reducers: MaybeArray<AppReducer>[]\r\n): AppReducer[] {\r\n  // Previously, this was reduceReducers and generated a reducer\r\n  //  that invokes each child reducer.\r\n  // However, we need to be able to order reducers across services,\r\n  //  so we must now aggregate a list of reducers and do a final ordering\r\n  //  step after all are collected.\r\n  return ([] as AppReducer[]).concat(...reducers);\r\n}\r\n\r\nexport function finalizeReducerList(reducers: AppReducer[]): AppReducer {\r\n  // Order the list by weight ascending.\r\n  const finalizedList = sortBy(reducers, (x: AppReducer) => x.weight || 0);\r\n\r\n  return (state: AppState = defaultAppState, action: AnyAction) => {\r\n    return finalizedList.reduce(\r\n      (state, reducer) => reducer(state, action),\r\n      state\r\n    );\r\n  };\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_COPY_NODES = \"@clipboard/copy\" as const;\r\nexport const copyNodes = (nodeId: string | string[]) => ({\r\n  type: ACTION_COPY_NODES,\r\n  payload: {\r\n    nodeIds: Array.isArray(nodeId) ? nodeId : [nodeId]\r\n  }\r\n});\r\nexport type CopyNodesAction = ReturnType<typeof copyNodes>;\r\nexport function isCopyNodesAction(\r\n  action: AnyAction\r\n): action is CopyNodesAction {\r\n  return action.type === ACTION_COPY_NODES;\r\n}\r\n","import { NodeDefinition } from \"./types\";\r\n\r\nexport * from \"./types\";\r\n\r\n// Many of these art assets used in these files are public domain and sourced from\r\n//  https://commons.wikimedia.org/wiki/Logic_gates_unified_symbols\r\n// Some assets have been modified for formatting or added functionality.\r\n// Assets that have been pulled from external sources are marked as such.\r\n\r\nexport const NodeTypes = {\r\n  and: require(\"./node-and\").default as NodeDefinition,\r\n  or: require(\"./node-or\").default as NodeDefinition,\r\n  nor: require(\"./node-nor\").default as NodeDefinition,\r\n  not: require(\"./node-not\").default as NodeDefinition,\r\n  buffer: require(\"./node-buffer\").default as NodeDefinition,\r\n  led: require(\"./node-led\").default as NodeDefinition,\r\n  toggle: require(\"./node-toggle\").default as NodeDefinition,\r\n  seg7: require(\"./node-seg7\").default as NodeDefinition\r\n};\r\nexport type NodeType = keyof typeof NodeTypes;\r\n","import find from \"lodash/find\";\r\n\r\nimport { NodeTypes } from \"@/node-defs\";\r\n\r\nimport {\r\n  createServiceReducerCreator,\r\n  createServiceSelectorCreator\r\n} from \"../service-state-utils\";\r\nimport { GraphState } from \"./state\";\r\nimport { NodePin, Connection } from \"./types\";\r\n\r\nexport const createGraphReducer = createServiceReducerCreator(\"graph\");\r\nexport const createGraphSelector = createServiceSelectorCreator(\"graph\");\r\n\r\n/**\r\n * Check two pins to see if they can form a valid connection.\r\n * Returns null if no connection can be made (both inputs or both outputs)\r\n *\r\n * Does not check to see if the pins are already connected, or other connections prevent this connection from forming.\r\n */\r\nexport function pinsToConnection(\r\n  state: GraphState,\r\n  p1: NodePin,\r\n  p2: NodePin\r\n): Connection | null {\r\n  const p1Node = state.nodesById[p1.nodeId];\r\n  const p2Node = state.nodesById[p2.nodeId];\r\n\r\n  if (!p1Node || !p2Node) {\r\n    return null;\r\n  }\r\n\r\n  const p1Def = NodeTypes[p1Node.type];\r\n  const p2Def = NodeTypes[p2Node.type];\r\n\r\n  if (!p1Def || !p2Def) {\r\n    return null;\r\n  }\r\n\r\n  const p1Pin = find(p1Def.pins, x => x.name == p1.pinId);\r\n  const p2Pin = find(p2Def.pins, x => x.name == p2.pinId);\r\n\r\n  if (!p1Pin || !p2Pin) {\r\n    return null;\r\n  }\r\n\r\n  // Pins are in same direction and cannot be connected.\r\n  if (p1Pin.direction === p2Pin.direction) {\r\n    return null;\r\n  }\r\n\r\n  const outputPin = p1Pin.direction === \"output\" ? p1 : p2;\r\n  const inputPin = p1Pin.direction === \"input\" ? p1 : p2;\r\n\r\n  return {\r\n    outputPin,\r\n    inputPin\r\n  };\r\n}\r\n","import mapValues from \"lodash/mapValues\";\r\n\r\nimport { NodeTypes } from \"@/node-defs\";\r\n\r\nimport { createGraphSelector } from \"../utils\";\r\nimport { GraphState } from \"../state\";\r\n\r\nexport const nodesByIdSelector = createGraphSelector(s => s.nodesById);\r\nexport const nodeIdsSelector = createGraphSelector(s =>\r\n  Object.keys(s.nodesById)\r\n);\r\n\r\nexport const nodeTypesByIdSelector = createGraphSelector(s =>\r\n  mapValues(nodesByIdSelector.local(s), n => n.type)\r\n);\r\n\r\nexport const nodeDefsByIdSelector = createGraphSelector(s =>\r\n  mapValues(nodeTypesByIdSelector.local(s), type => NodeTypes[type] || null)\r\n);\r\n\r\nexport const nodeByIdSelector = createGraphSelector(\r\n  (s: GraphState, nodeId: string) => s.nodesById[nodeId] || null\r\n);\r\n\r\nexport const nodeTypeSelector = createGraphSelector(\r\n  (s: GraphState, nodeId: string) => {\r\n    const node = nodeByIdSelector.local(s, nodeId);\r\n    if (!node) {\r\n      return null;\r\n    }\r\n    return node.type;\r\n  }\r\n);\r\n\r\nexport const nodeDefSelector = createGraphSelector(\r\n  (s: GraphState, nodeId: string) => {\r\n    const node = nodeByIdSelector.local(s, nodeId);\r\n    if (!node) {\r\n      return null;\r\n    }\r\n    return NodeTypes[node.type] || null;\r\n  }\r\n);\r\n","import find from \"lodash/find\";\r\nimport values from \"lodash/values\";\r\nimport { createSelector } from \"reselect\";\r\nimport createCachedSelector from \"re-reselect\";\r\n\r\nimport { NodePin } from \"../types\";\r\n\r\nimport { GraphState } from \"../state\";\r\nimport { createGraphSelector } from \"../utils\";\r\n\r\nimport { nodeDefSelector } from \"./nodes\";\r\n\r\nexport const wireIdsSelector = createGraphSelector(\r\n  createSelector(\r\n    s => s.wiresById,\r\n    wiresById => Object.keys(wiresById)\r\n  )\r\n);\r\n\r\nexport const wireByIdSelector = createGraphSelector(\r\n  (s: GraphState, wireId: string) => s.wiresById[wireId]\r\n);\r\n\r\nconst wiresSelector = createGraphSelector(\r\n  createSelector(\r\n    (state: GraphState) => state.wiresById,\r\n    wiresById => values(wiresById)\r\n  )\r\n);\r\n\r\nexport const nodePinDirectionSelector = createGraphSelector(\r\n  (s: GraphState, pin: NodePin) => {\r\n    const def = nodeDefSelector.local(s, pin.nodeId);\r\n    if (!def) {\r\n      return null;\r\n    }\r\n\r\n    const pinDef = find(def.pins, p => p.name === pin.pinId);\r\n    if (!pinDef) {\r\n      return null;\r\n    }\r\n    return pinDef.direction;\r\n  }\r\n);\r\n\r\nexport const nodeInputWireIdsSelector = createGraphSelector(\r\n  (state: GraphState, nodeId: string) =>\r\n    Object.keys(state.wiresById).filter(\r\n      wireId => state.wiresById[wireId].inputPin.nodeId === nodeId\r\n    )\r\n);\r\n\r\n/**\r\n * Gets an object mapping input pin names to their connection source pins.\r\n */\r\nexport const nodeInputConnectionsByPinSelector = createGraphSelector(\r\n  createCachedSelector(\r\n    wiresSelector.local,\r\n    (_: any, nodeId: string) => nodeId,\r\n    nodeDefSelector.local,\r\n    (connections, nodeId, nodeDef) => {\r\n      if (!nodeDef) {\r\n        return {};\r\n      }\r\n\r\n      let inputPins: string[] = [];\r\n      inputPins = Object.keys(nodeDef.pins).filter(\r\n        x => nodeDef.pins[x].direction === \"input\"\r\n      );\r\n\r\n      const inputConnections = connections.filter(\r\n        x => x.inputPin.nodeId === nodeId\r\n      );\r\n\r\n      const result: Record<string, NodePin | null> = {};\r\n      for (const pin of inputPins) {\r\n        result[pin] = null;\r\n      }\r\n\r\n      for (const connection of inputConnections) {\r\n        const { outputPin, inputPin } = connection;\r\n        result[inputPin.pinId] = outputPin;\r\n      }\r\n\r\n      return result;\r\n    }\r\n  )((_: any, nodeId: string) => nodeId)\r\n);\r\n\r\n/**\r\n * Gets an array of outgoing connections from the given node id.\r\n */\r\nexport const nodeOutputConnectionsSelector = createGraphSelector(\r\n  (state: GraphState, nodeId: string) =>\r\n    wiresSelector.local(state).filter(x => x.outputPin.nodeId === nodeId)\r\n);\r\n\r\nexport const nodeOutputWireIdsSelector = createGraphSelector(\r\n  (state: GraphState, nodeId: string) =>\r\n    Object.keys(state.wiresById).filter(\r\n      wireId => state.wiresById[wireId].outputPin.nodeId === nodeId\r\n    )\r\n);\r\n\r\n/**\r\n * Gets an object mapping output pin names to their connection target pins.\r\n */\r\nexport const nodeOutputConnectionsByPinSelector = createGraphSelector(\r\n  createCachedSelector(\r\n    wiresSelector.local,\r\n    (_: any, nodeId: string) => nodeId,\r\n    nodeDefSelector.local,\r\n    (connections, nodeId, nodeDef) => {\r\n      if (!nodeDef) {\r\n        return {};\r\n      }\r\n\r\n      let outputPins: string[] = [];\r\n      outputPins = Object.keys(nodeDef.pins).filter(\r\n        x => nodeDef.pins[x].direction === \"output\"\r\n      );\r\n\r\n      const outputConnections = connections.filter(\r\n        x => x.outputPin.nodeId === nodeId\r\n      );\r\n\r\n      const result: Record<string, NodePin[]> = {};\r\n      for (const pin of outputPins) {\r\n        result[pin] = [];\r\n      }\r\n\r\n      for (const connection of outputConnections) {\r\n        const { outputPin, inputPin } = connection;\r\n        result[outputPin.pinId].push(inputPin);\r\n      }\r\n\r\n      return result;\r\n    }\r\n  )((_: any, nodeId: string) => nodeId)\r\n);\r\n","import {\r\n  createServiceReducerCreator,\r\n  createServiceSelectorCreator\r\n} from \"../service-state-utils\";\r\n\r\nexport const createFieldReducer = createServiceReducerCreator(\"field\");\r\nexport const createFieldSelector = createServiceSelectorCreator(\"field\");\r\n","import { createFieldSelector } from \"../utils\";\r\nimport { FieldState } from \"../state\";\r\n\r\nexport const nodePositionsByIdSelector = createFieldSelector(\r\n  state => state.nodePositionsById\r\n);\r\n\r\nexport const nodePositionByIdSelector = createFieldSelector(\r\n  (state: FieldState, nodeId: string) => state.nodePositionsById[nodeId]\r\n);\r\n","import {\r\n  createServiceReducerCreator,\r\n  createServiceSelectorCreator\r\n} from \"../service-state-utils\";\r\n\r\nexport const createClipboardReducer = createServiceReducerCreator(\"clipboard\");\r\nexport const createClipboardSelector = createServiceSelectorCreator(\r\n  \"clipboard\"\r\n);\r\n","import uuidV4 from \"uuid/v4\";\r\nimport map from \"lodash/map\";\r\nimport mapValues from \"lodash/mapValues\";\r\nimport findIndex from \"lodash/findIndex\";\r\nimport zipObject from \"lodash/zipObject\";\r\n\r\nimport { pointSubtract } from \"@/geometry\";\r\n\r\nimport { isCopyNodesAction } from \"@/actions/clipboard-copy\";\r\n\r\nimport { nodeByIdSelector } from \"@/services/graph/selectors/nodes\";\r\nimport { nodeOutputConnectionsByPinSelector } from \"@/services/graph/selectors/wires\";\r\nimport { nodePositionsByIdSelector } from \"@/services/field/selectors/positions\";\r\n\r\nimport { ClipboardNode } from \"../types\";\r\nimport { createClipboardReducer } from \"../utils\";\r\n\r\nexport default createClipboardReducer((state, action, appState) => {\r\n  if (!isCopyNodesAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { nodeIds } = action.payload;\r\n  if (nodeIds.length === 0) {\r\n    return state;\r\n  }\r\n\r\n  const nodePositionsById = nodePositionsByIdSelector(appState);\r\n\r\n  const copyIds = zipObject(\r\n    nodeIds,\r\n    map(nodeIds, () => uuidV4())\r\n  );\r\n\r\n  function nodeIsSelected(id: string): boolean {\r\n    return findIndex(nodeIds, x => x === id) !== -1;\r\n  }\r\n\r\n  const rootPosition = nodePositionsById[nodeIds[0]];\r\n\r\n  const copyNodes: ClipboardNode[] = nodeIds.map(nodeId => {\r\n    const node = nodeByIdSelector(appState, nodeId);\r\n    const outputs = nodeOutputConnectionsByPinSelector(appState, nodeId);\r\n    const copyNode: ClipboardNode = {\r\n      id: copyIds[nodeId],\r\n      type: node.type,\r\n      offset: pointSubtract(nodePositionsById[nodeId], rootPosition),\r\n      outputs: mapValues(outputs, conns =>\r\n        conns\r\n          .filter(x => nodeIsSelected(x.nodeId))\r\n          .map(c => ({ nodeId: copyIds[c.nodeId], pinId: c.pinId }))\r\n      )\r\n    };\r\n    return copyNode;\r\n  });\r\n\r\n  return {\r\n    ...state,\r\n    clipboardNodes: copyNodes,\r\n    clipboardPasteOrigin: rootPosition\r\n  };\r\n});\r\n","import { AnyAction } from \"redux\";\r\nimport uuidV4 from \"uuid/v4\";\r\n\r\nimport { Point } from \"@/types\";\r\n\r\nimport { NodePin } from \"@/services/graph/types\";\r\n\r\nexport interface AttachWireOptions {\r\n  joints?: Point[];\r\n}\r\nexport const ACTION_WIRE_ATTACH = \"@wire/attach\" as const;\r\nexport const attachWire = (\r\n  p1: NodePin,\r\n  p2: NodePin,\r\n  opts?: AttachWireOptions\r\n) => ({\r\n  type: ACTION_WIRE_ATTACH,\r\n  payload: {\r\n    wireId: uuidV4(),\r\n    p1,\r\n    p2,\r\n    joints: opts?.joints || []\r\n  }\r\n});\r\nexport type AttachWireAction = ReturnType<typeof attachWire>;\r\nexport function isAttachWireAction(\r\n  action: AnyAction\r\n): action is AttachWireAction {\r\n  return action.type === ACTION_WIRE_ATTACH;\r\n}\r\n","import uuidV4 from \"uuid/v4\";\r\nimport { AnyAction } from \"redux\";\r\n\r\nimport { NodeType } from \"@/node-defs\";\r\nimport { Point } from \"@/types\";\r\n\r\nexport interface AddNodeOptions {\r\n  nodeId?: string;\r\n  position?: Point;\r\n}\r\nexport const ACTION_NODE_ADD = \"@node/add\" as const;\r\nexport const addNode = (nodeType: NodeType, opts?: AddNodeOptions) => ({\r\n  type: ACTION_NODE_ADD,\r\n  payload: { nodeId: uuidV4(), nodeType, ...(opts || {}) }\r\n});\r\nexport type AddNodeAction = ReturnType<typeof addNode>;\r\nexport function isAddNodeAction(action: AnyAction): action is AddNodeAction {\r\n  return action.type === ACTION_NODE_ADD;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_PASTE = \"@clipboard/paste\" as const;\r\nexport const paste = () => ({\r\n  type: ACTION_PASTE\r\n});\r\nexport type PasteAction = ReturnType<typeof paste>;\r\nexport function isPasteAction(action: AnyAction): action is PasteAction {\r\n  return action.type === ACTION_PASTE;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { SelectionMode } from \"@/selection-mode\";\r\n\r\nexport const ACTION_SELECT_NODES = \"@select/nodes\" as const;\r\nexport const selectNodes = (\r\n  nodeId: string | string[],\r\n  mode: SelectionMode = \"set\"\r\n) => ({\r\n  type: ACTION_SELECT_NODES,\r\n  payload: {\r\n    nodeIds: Array.isArray(nodeId) ? nodeId : [nodeId],\r\n    mode\r\n  }\r\n});\r\nexport type SelectNodesAction = ReturnType<typeof selectNodes>;\r\nexport function isSelectNodesAction(\r\n  action: AnyAction\r\n): action is SelectNodesAction {\r\n  return action.type === ACTION_SELECT_NODES;\r\n}\r\n","import { AnyAction } from \"redux\";\r\nimport zipObject from \"lodash/zipObject\";\r\nimport map from \"lodash/map\";\r\nimport values from \"lodash/values\";\r\nimport uuidV4 from \"uuid/v4\";\r\n\r\nimport { Point } from \"@/types\";\r\nimport { pointAdd, ZeroPoint } from \"@/geometry\";\r\nimport { AppState, defaultAppState } from \"@/store\";\r\nimport { fpSet } from \"@/utils\";\r\n\r\nimport rootReducer from \"@/store/reducer\";\r\n\r\nimport { attachWire } from \"@/actions/wire-attach\";\r\nimport { addNode } from \"@/actions/node-add\";\r\nimport { isPasteAction } from \"@/actions/clipboard-paste\";\r\nimport { selectNodes } from \"@/actions/select-nodes\";\r\n\r\nexport const CLIPBOARD_PASTE_OFFSET: Point = { x: 10, y: 10 };\r\n\r\nexport default function clipboardPasteReducer(\r\n  state: AppState = defaultAppState,\r\n  action: AnyAction\r\n): AppState {\r\n  if (!isPasteAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { clipboardNodes, clipboardPasteOrigin } = state.services.clipboard;\r\n  const pastePosition = pointAdd(clipboardPasteOrigin, CLIPBOARD_PASTE_OFFSET);\r\n\r\n  const pasteIds = zipObject(\r\n    clipboardNodes.map(x => x.id),\r\n    map(clipboardNodes, () => uuidV4())\r\n  );\r\n\r\n  // Two passes: Create and Wire.\r\n\r\n  // Create the nodes.\r\n  for (let node of clipboardNodes) {\r\n    const { id, type, offset } = node;\r\n    const p = pointAdd(pastePosition, offset);\r\n    state = rootReducer(\r\n      state,\r\n      addNode(type, { position: p, nodeId: pasteIds[id] })\r\n    );\r\n  }\r\n\r\n  // Wire the nodes\r\n  for (let node of clipboardNodes) {\r\n    const { id, outputs } = node;\r\n    const sourceId = pasteIds[id];\r\n    for (let outputPin of Object.keys(outputs)) {\r\n      for (let output of outputs[outputPin]) {\r\n        const { nodeId: targetCopyId, pinId: targetPin } = output;\r\n        const targetId = pasteIds[targetCopyId];\r\n        state = rootReducer(\r\n          state,\r\n          attachWire(\r\n            { nodeId: sourceId, pinId: outputPin },\r\n            { nodeId: targetId, pinId: targetPin }\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  state = fpSet(\r\n    state,\r\n    \"services\",\r\n    \"clipboard\",\r\n    \"clipboardPasteOrigin\",\r\n    pastePosition\r\n  );\r\n  state = rootReducer(state, selectNodes(values(pasteIds)));\r\n\r\n  return state;\r\n}\r\n","import { concatReducers } from \"@/store/utils\";\r\n\r\nimport clipboardCopyReducer from \"./clipboard-copy\";\r\nimport clipboardPasteReducer from \"./clipboard-paste\";\r\n\r\nconst clipboardReducer = concatReducers(\r\n  clipboardCopyReducer,\r\n  clipboardPasteReducer\r\n);\r\n\r\nexport default clipboardReducer;\r\n","import { isFieldDragContinueAction } from \"@/actions/field-drag-continue\";\r\n\r\nimport { createFieldReducer } from \"../utils\";\r\n\r\nexport default createFieldReducer((state, action) => {\r\n  if (!isFieldDragContinueAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { x, y } = action.payload;\r\n\r\n  return {\r\n    ...state,\r\n    dragEnd: {\r\n      x,\r\n      y\r\n    }\r\n  };\r\n});\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { Point } from \"@/types\";\r\nimport { SelectionMode } from \"@/selection-mode\";\r\n\r\nexport const ACTION_FIELD_DRAG_END = \"@field/drag/end\" as const;\r\nexport const fieldDragEnd = (point: Point, selectionMode: SelectionMode) => ({\r\n  type: ACTION_FIELD_DRAG_END,\r\n  payload: { ...point, selectionMode }\r\n});\r\nexport type FieldDragEndAction = ReturnType<typeof fieldDragEnd>;\r\nexport function isFieldDragEndAction(\r\n  action: AnyAction\r\n): action is FieldDragEndAction {\r\n  return action.type === ACTION_FIELD_DRAG_END;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { Rectangle } from \"@/types\";\r\nimport { SelectionMode } from \"@/selection-mode\";\r\n\r\nexport const ACTION_SELECT_REGION = \"@select/region\" as const;\r\nexport const selectRegion = (\r\n  region: Rectangle,\r\n  mode: SelectionMode = \"set\"\r\n) => ({\r\n  type: ACTION_SELECT_REGION,\r\n  payload: {\r\n    region,\r\n    mode\r\n  }\r\n});\r\nexport type SelectRegionAction = ReturnType<typeof selectRegion>;\r\nexport function isSelectRegionAction(\r\n  action: AnyAction\r\n): action is SelectRegionAction {\r\n  return action.type === ACTION_SELECT_REGION;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_SELECTION_MOVE = \"@selection/move\" as const;\r\nexport const moveSelection = (offsetX: number, offsetY: number) => ({\r\n  type: ACTION_SELECTION_MOVE,\r\n  payload: { offsetX, offsetY }\r\n});\r\nexport type MoveSelectionAction = ReturnType<typeof moveSelection>;\r\nexport function isMoveSelectionAction(\r\n  action: AnyAction\r\n): action is MoveSelectionAction {\r\n  return action.type === ACTION_SELECTION_MOVE;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { NodeType } from \"@/node-defs\";\r\n\r\nexport const ACTION_FIELD_DRAG_START_NEWNODE = \"@field/drag/start/new-node\" as const;\r\nexport const fieldDragStartNewNode = (nodeType: NodeType) => ({\r\n  type: ACTION_FIELD_DRAG_START_NEWNODE,\r\n  payload: {\r\n    nodeType\r\n  }\r\n});\r\nexport type FieldDragStartNewNodeAction = ReturnType<\r\n  typeof fieldDragStartNewNode\r\n>;\r\nexport function isFieldDragStartNewNodeAction(\r\n  action: AnyAction\r\n): action is FieldDragStartNewNodeAction {\r\n  return action.type === ACTION_FIELD_DRAG_START_NEWNODE;\r\n}\r\n","import { isFieldDragStartNewNodeAction } from \"@/actions/field-drag-start-newnode\";\r\n\r\nimport { createFieldReducer } from \"../utils\";\r\n\r\nexport default createFieldReducer((state, action) => {\r\n  if (!isFieldDragStartNewNodeAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { nodeType } = action.payload;\r\n\r\n  return {\r\n    ...state,\r\n    dragMode: \"new-node\" as const,\r\n    dragNewNodeType: nodeType\r\n  };\r\n});\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { Point } from \"@/types\";\r\nimport { SelectionMode } from \"@/selection-mode\";\r\n\r\nexport const ACTION_FIELD_DRAG_START_NODE = \"@field/drag/start/node\" as const;\r\nexport const fieldDragStartNode = (\r\n  nodeId: string,\r\n  p: Point,\r\n  selectionMode: SelectionMode\r\n) => ({\r\n  type: ACTION_FIELD_DRAG_START_NODE,\r\n  payload: {\r\n    ...p,\r\n    nodeId,\r\n    selectionMode\r\n  }\r\n});\r\nexport type FieldDragStartNodeAction = ReturnType<typeof fieldDragStartNode>;\r\nexport function isFieldDragStartNodeAction(\r\n  action: AnyAction\r\n): action is FieldDragStartNodeAction {\r\n  return action.type === ACTION_FIELD_DRAG_START_NODE;\r\n}\r\n","import union from \"lodash/union\";\r\nimport difference from \"lodash/difference\";\r\n\r\nimport { SelectionMode } from \"@/selection-mode\";\r\n\r\nimport {\r\n  createServiceReducerCreator,\r\n  createServiceSelectorCreator\r\n} from \"../service-state-utils\";\r\n\r\nexport const createSelectionReducer = createServiceReducerCreator(\"selection\");\r\nexport const createSelectionSelector = createServiceSelectorCreator(\r\n  \"selection\"\r\n);\r\n\r\nexport function combineSelection(\r\n  selectedIds: string[],\r\n  chosenIds: string[],\r\n  mode: SelectionMode\r\n) {\r\n  switch (mode) {\r\n    case \"set\":\r\n      return chosenIds;\r\n    case \"append\":\r\n      return union(selectedIds, chosenIds);\r\n    case \"remove\":\r\n      return difference(selectedIds, chosenIds);\r\n    case \"toggle\": {\r\n      return difference(selectedIds, chosenIds).concat(\r\n        difference(chosenIds, selectedIds)\r\n      );\r\n    }\r\n  }\r\n\r\n  return chosenIds;\r\n}\r\n","import { createSelector } from \"reselect\";\r\n\r\nimport pick from \"lodash/pick\";\r\n\r\nimport { nodesByIdSelector } from \"@/services/graph/selectors/nodes\";\r\n\r\nimport { createSelectionSelector } from \"../utils\";\r\nimport { SelectionState } from \"../state\";\r\n\r\nexport const selectedNodeIdsSelector = createSelectionSelector(\r\n  state => state.selectedNodeIds\r\n);\r\n\r\nexport const isNodeSelectedSelector = createSelectionSelector(\r\n  (s: SelectionState, nodeId: string) =>\r\n    s.selectedNodeIds.indexOf(nodeId) !== -1\r\n);\r\n\r\nexport const selectedNodesByIdSelector = createSelector(\r\n  nodesByIdSelector,\r\n  selectedNodeIdsSelector,\r\n  (nodesById, selectedNodeIds) => pick(nodesById, selectedNodeIds)\r\n);\r\n\r\nexport const selectedWireIdsSelector = createSelectionSelector(\r\n  state => state.selectedWireIds\r\n);\r\n\r\nexport const isWireSelectedSelector = createSelectionSelector(\r\n  (s: SelectionState, wireId: string) =>\r\n    s.selectedWireIds.indexOf(wireId) !== -1\r\n);\r\n\r\nexport const selectedJointIdsSelector = createSelectionSelector(\r\n  state => state.selectedJointIds\r\n);\r\n\r\nexport const isJointSelectedSelector = createSelectionSelector(\r\n  (s: SelectionState, jointId: string) =>\r\n    s.selectedJointIds.indexOf(jointId) !== -1\r\n);\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { Point } from \"@/types\";\r\n\r\nexport const ACTION_FIELD_DRAG_START_SELECT = \"@field/drag/start/select\" as const;\r\nexport const fieldDragStartSelect = (p: Point) => ({\r\n  type: ACTION_FIELD_DRAG_START_SELECT,\r\n  payload: {\r\n    ...p\r\n  }\r\n});\r\nexport type FieldDragStartSelectAction = ReturnType<\r\n  typeof fieldDragStartSelect\r\n>;\r\nexport function isFieldDragStartSelectAction(\r\n  action: AnyAction\r\n): action is FieldDragStartSelectAction {\r\n  return action.type === ACTION_FIELD_DRAG_START_SELECT;\r\n}\r\n","import { isFieldDragStartSelectAction } from \"@/actions/field-drag-start-select\";\r\n\r\nimport { createFieldReducer } from \"../utils\";\r\n\r\nexport default createFieldReducer((state, action) => {\r\n  if (!isFieldDragStartSelectAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { x, y } = action.payload;\r\n\r\n  return {\r\n    ...state,\r\n    dragMode: \"select\",\r\n    dragStart: {\r\n      x,\r\n      y\r\n    }\r\n  };\r\n});\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_FILE_NEW = \"@file/new\" as const;\r\nexport const newFile = () => ({\r\n  type: ACTION_FILE_NEW\r\n});\r\nexport type NewFileAction = ReturnType<typeof newFile>;\r\nexport function isNewFileAction(action: AnyAction): action is NewFileAction {\r\n  return action.type === ACTION_FILE_NEW;\r\n}\r\n","import { isNewFileAction } from \"@/actions/file-new\";\r\n\r\nimport { createFieldReducer } from \"../utils\";\r\nimport { defaultFieldState } from \"../state\";\r\n\r\nexport default createFieldReducer((state, action) => {\r\n  if (!isNewFileAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  return defaultFieldState;\r\n});\r\n","import { isFieldMouseLeaveAction } from \"@/actions/field-mouse-leave\";\r\n\r\nimport { createFieldReducer } from \"../utils\";\r\n\r\nexport default createFieldReducer((state, action) => {\r\n  if (!isFieldMouseLeaveAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  if (state.dragMode == null) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    dragEnd: null\r\n  };\r\n});\r\n","import { fpSet } from \"@/utils\";\r\n\r\nimport { ZeroPoint } from \"@/geometry\";\r\nimport { isAddNodeAction } from \"@/actions/node-add\";\r\n\r\nimport { createFieldReducer } from \"../utils\";\r\n\r\nexport default createFieldReducer((state, action) => {\r\n  if (!isAddNodeAction(action)) {\r\n    return state;\r\n  }\r\n  const { nodeId: id, position = ZeroPoint } = action.payload;\r\n\r\n  return fpSet(state, \"nodePositionsById\", id, position);\r\n});\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_NODE_DELETE = \"@node/delete\" as const;\r\nexport const deleteNode = (nodeId: string | string[]) => ({\r\n  type: ACTION_NODE_DELETE,\r\n  payload: { nodeIds: Array.isArray(nodeId) ? nodeId : [nodeId] }\r\n});\r\nexport type DeleteNodeAction = ReturnType<typeof deleteNode>;\r\nexport function isDeleteNodeAction(\r\n  action: AnyAction\r\n): action is DeleteNodeAction {\r\n  return action.type === ACTION_NODE_DELETE;\r\n}\r\n","import pick from \"lodash/pick\";\r\nimport difference from \"lodash/difference\";\r\n\r\nimport { isDeleteNodeAction } from \"@/actions/node-delete\";\r\n\r\nimport { createFieldReducer } from \"../utils\";\r\nimport {\r\n  nodeInputWireIdsSelector,\r\n  nodeOutputWireIdsSelector\r\n} from \"@/services/graph/selectors/wires\";\r\n\r\nexport default createFieldReducer((state, action, appState) => {\r\n  if (!isDeleteNodeAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { nodeIds } = action.payload;\r\n\r\n  const remainingNodeIds = difference(\r\n    Object.keys(state.nodePositionsById),\r\n    nodeIds\r\n  );\r\n\r\n  // This logic has to duplicate the wire removal procedure from\r\n  //  wire-detatch.ts.\r\n  // We might want to just call that reducer from here.\r\n\r\n  const removingWireIds = nodeIds.reduce((wireIds, nodeId) => {\r\n    const inputs = nodeInputWireIdsSelector(appState, nodeId);\r\n    wireIds.push(...inputs);\r\n\r\n    const outputs = nodeOutputWireIdsSelector(appState, nodeId);\r\n    wireIds.push(...outputs);\r\n\r\n    return wireIds;\r\n  }, [] as string[]);\r\n\r\n  const removingJointIds = removingWireIds.reduce((jointIds, wireId) => {\r\n    jointIds.push(...state.wireJointIdsByWireId[wireId]);\r\n    return jointIds;\r\n  }, [] as string[]);\r\n\r\n  const remainingWireIds = difference(\r\n    Object.keys(state.wireJointIdsByWireId),\r\n    removingWireIds\r\n  );\r\n\r\n  const remainingJointIds = difference(\r\n    Object.keys(state.wireJointPositionsByJointId),\r\n    removingJointIds\r\n  );\r\n\r\n  return {\r\n    ...state,\r\n    nodePositionsById: pick(state.nodePositionsById, remainingNodeIds),\r\n    wireJointIdsByWireId: pick(state.wireJointIdsByWireId, remainingWireIds),\r\n    wireJointPositionsByJointId: pick(\r\n      state.wireJointPositionsByJointId,\r\n      remainingJointIds\r\n    )\r\n  };\r\n});\r\n","import mapValues from \"lodash/mapValues\";\r\nimport pick from \"lodash/pick\";\r\n\r\nimport { isMoveSelectionAction } from \"@/actions/selection-move\";\r\nimport {\r\n  selectedNodeIdsSelector,\r\n  selectedJointIdsSelector\r\n} from \"@/services/selection/selectors/selection\";\r\n\r\nimport { createFieldReducer } from \"../utils\";\r\n\r\nexport default createFieldReducer((state, action, appState) => {\r\n  if (!isMoveSelectionAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { offsetX, offsetY } = action.payload;\r\n\r\n  const nodeIds = selectedNodeIdsSelector(appState);\r\n  const movedNodePositions = mapValues(\r\n    pick(state.nodePositionsById, nodeIds),\r\n    p => ({\r\n      x: p.x + offsetX,\r\n      y: p.y + offsetY\r\n    })\r\n  );\r\n\r\n  const jointIds = selectedJointIdsSelector(appState);\r\n  const movedJoints = mapValues(\r\n    pick(state.wireJointPositionsByJointId, jointIds),\r\n    p => ({\r\n      x: p.x + offsetX,\r\n      y: p.y + offsetY\r\n    })\r\n  );\r\n\r\n  return {\r\n    ...state,\r\n    nodePositionsById: {\r\n      ...state.nodePositionsById,\r\n      ...movedNodePositions\r\n    },\r\n    wireJointPositionsByJointId: {\r\n      ...state.wireJointPositionsByJointId,\r\n      ...movedJoints\r\n    }\r\n  };\r\n});\r\n","import uuidV4 from \"uuid/v4\";\r\nimport zipObject from \"lodash/zipObject\";\r\n\r\nimport { isAttachWireAction } from \"@/actions/wire-attach\";\r\nimport { fpSet } from \"@/utils\";\r\n\r\nimport { createFieldReducer } from \"../utils\";\r\n\r\nexport default createFieldReducer((state, action) => {\r\n  if (!isAttachWireAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { wireId, joints } = action.payload;\r\n\r\n  // Might want to use addWireJoint action, but field is the only thing that cares about joints.\r\n  if (joints.length > 0) {\r\n    const jointIds = joints.map(x => uuidV4());\r\n    fpSet(state, \"wireJointIdsByWireId\", wireId, jointIds);\r\n    fpSet(state, \"wireJointPositionsByJointId\", value => ({\r\n      ...value,\r\n      ...zipObject(jointIds, joints)\r\n    }));\r\n  }\r\n\r\n  return fpSet(state, \"wireJointIdsByWireId\", wireId, []);\r\n});\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_WIRE_DETATCH = \"@wire/detatch\" as const;\r\nexport const detatchWire = (wireId: string) => ({\r\n  type: ACTION_WIRE_DETATCH,\r\n  payload: {\r\n    wireId\r\n  }\r\n});\r\nexport type DetatchWireNodeAction = ReturnType<typeof detatchWire>;\r\nexport function isDetatchWireAction(\r\n  action: AnyAction\r\n): action is DetatchWireNodeAction {\r\n  return action.type === ACTION_WIRE_DETATCH;\r\n}\r\n","import pick from \"lodash/pick\";\r\nimport difference from \"lodash/difference\";\r\n\r\nimport { isDetatchWireAction } from \"@/actions/wire-detatch\";\r\nimport { createFieldReducer } from \"../utils\";\r\n\r\nexport default createFieldReducer((state, action) => {\r\n  if (!isDetatchWireAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { wireId } = action.payload;\r\n\r\n  const remainingWireIds = Object.keys(state.wireJointIdsByWireId).filter(\r\n    x => x != wireId\r\n  );\r\n\r\n  const remainingJointIds = difference(\r\n    Object.keys(state.wireJointPositionsByJointId),\r\n    state.wireJointIdsByWireId[wireId]\r\n  );\r\n\r\n  return {\r\n    ...state,\r\n    wireJointIdsByWireId: pick(state.wireJointIdsByWireId, remainingWireIds),\r\n    wireJointPositionsByJointId: pick(\r\n      state.wireJointPositionsByJointId,\r\n      remainingJointIds\r\n    )\r\n  };\r\n});\r\n","import { AnyAction } from \"redux\";\r\nimport uuidV4 from \"uuid/v4\";\r\nimport { Point } from \"@/types\";\r\n\r\nexport const ACTION_WIRE_JOINT_ADD = \"@wire/joint/add\" as const;\r\nexport const addWireJoint = (\r\n  wireId: string,\r\n  addAfterJointId: string | null,\r\n  position: Point,\r\n  jointId?: string\r\n) => ({\r\n  type: ACTION_WIRE_JOINT_ADD,\r\n  payload: {\r\n    wireId,\r\n    jointId: jointId || uuidV4(),\r\n    addAfterJointId,\r\n    position\r\n  }\r\n});\r\nexport type AddWireJointAction = ReturnType<typeof addWireJoint>;\r\nexport function isAddWireJointAction(\r\n  action: AnyAction\r\n): action is AddWireJointAction {\r\n  return action.type === ACTION_WIRE_JOINT_ADD;\r\n}\r\n","import { isAddWireJointAction } from \"@/actions/wire-joint-add\";\r\n\r\nimport { createFieldReducer } from \"../utils\";\r\n\r\nexport default createFieldReducer((state, action) => {\r\n  if (!isAddWireJointAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { wireId, addAfterJointId, position, jointId } = action.payload;\r\n  let wireJoints = state.wireJointIdsByWireId[wireId];\r\n  let insertionIndex = addAfterJointId\r\n    ? wireJoints.indexOf(addAfterJointId) + 1\r\n    : 0;\r\n\r\n  wireJoints = [\r\n    ...wireJoints.slice(0, insertionIndex),\r\n    jointId,\r\n    ...wireJoints.slice(insertionIndex)\r\n  ];\r\n\r\n  return {\r\n    ...state,\r\n    wireJointIdsByWireId: {\r\n      ...state.wireJointIdsByWireId,\r\n      [wireId]: wireJoints\r\n    },\r\n    wireJointPositionsByJointId: {\r\n      ...state.wireJointPositionsByJointId,\r\n      [jointId]: position\r\n    }\r\n  };\r\n});\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_WIRE_JOINT_DELETE = \"@wire/joint/delete\" as const;\r\nexport const deleteWireJoint = (jointId: string) => ({\r\n  type: ACTION_WIRE_JOINT_DELETE,\r\n  payload: { jointId }\r\n});\r\nexport type DeleteWireJointAction = ReturnType<typeof deleteWireJoint>;\r\nexport function isDeleteWireJointAction(\r\n  action: AnyAction\r\n): action is DeleteWireJointAction {\r\n  return action.type === ACTION_WIRE_JOINT_DELETE;\r\n}\r\n","import pick from \"lodash/pick\";\r\n\r\nimport { isDeleteWireJointAction } from \"@/actions/wire-joint-delete\";\r\n\r\nimport { createFieldReducer } from \"../utils\";\r\nimport mapValues from \"lodash/mapValues\";\r\n\r\nexport default createFieldReducer((state, action) => {\r\n  if (!isDeleteWireJointAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { jointId } = action.payload;\r\n\r\n  const remainingJointIds = Object.keys(\r\n    state.wireJointPositionsByJointId\r\n  ).filter(x => x !== jointId);\r\n\r\n  return {\r\n    ...state,\r\n    wireJointIdsByWireId: mapValues(state.wireJointIdsByWireId, wireIds =>\r\n      wireIds.filter(x => x !== jointId)\r\n    ),\r\n    wireJointsByJointId: pick(\r\n      state.wireJointPositionsByJointId,\r\n      remainingJointIds\r\n    )\r\n  };\r\n});\r\n","import { AnyAction } from \"redux\";\r\nimport { Point } from \"@/types\";\r\n\r\nexport const ACTION_WIRE_JOINT_MOVE = \"@wire/joint/move\" as const;\r\nexport const moveWireJoint = (jointId: string, position: Point) => ({\r\n  type: ACTION_WIRE_JOINT_MOVE,\r\n  payload: {\r\n    jointId,\r\n    position\r\n  }\r\n});\r\nexport type MoveWireJointAction = ReturnType<typeof moveWireJoint>;\r\nexport function isMoveWireJointAction(\r\n  action: AnyAction\r\n): action is MoveWireJointAction {\r\n  return action.type === ACTION_WIRE_JOINT_MOVE;\r\n}\r\n","import { concatReducers } from \"@/store/utils\";\r\n\r\nimport dragContinueReducer from \"./drag-continue\";\r\nimport dragEndReducer from \"./drag-end\";\r\nimport dragStartNewNodeReducer from \"./drag-start-newnode\";\r\nimport dragStartNodeReducer from \"./drag-start-node\";\r\nimport dragStartSelectReducer from \"./drag-start-select\";\r\nimport fileNewReducer from \"./file-new\";\r\nimport mouseLeaveReducer from \"./mouse-leave\";\r\nimport nodeAddReducer from \"./node-add\";\r\nimport nodeDeleteReducer from \"./node-delete\";\r\nimport nodeMoveReducer from \"./selection-move\";\r\nimport wireAttachReducer from \"./wire-attach\";\r\nimport wireDetatchReducer from \"./wire-detatch\";\r\nimport wireJointAddReducer from \"./wire-joint-add\";\r\nimport wireJointDeleteReducer from \"./wire-joint-delete\";\r\nimport wireJointMoveReducer from \"./wire-joint-move\";\r\n\r\nconst fieldReducer = concatReducers(\r\n  dragContinueReducer,\r\n  dragEndReducer,\r\n  dragStartNewNodeReducer,\r\n  dragStartNodeReducer,\r\n  dragStartSelectReducer,\r\n  fileNewReducer,\r\n  mouseLeaveReducer,\r\n  nodeAddReducer,\r\n  nodeDeleteReducer,\r\n  nodeMoveReducer,\r\n  wireAttachReducer,\r\n  wireDetatchReducer,\r\n  wireJointAddReducer,\r\n  wireJointDeleteReducer,\r\n  wireJointMoveReducer\r\n);\r\n\r\nexport default fieldReducer;\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { normalizeRectangle, pointSubtract } from \"@/geometry\";\r\n\r\nimport { fpSet } from \"@/utils\";\r\n\r\nimport { AppState, defaultAppState } from \"@/store\";\r\nimport rootReducer from \"@/store/reducer\";\r\n\r\nimport { isFieldDragEndAction } from \"@/actions/field-drag-end\";\r\nimport { selectRegion } from \"@/actions/select-region\";\r\nimport { moveSelection } from \"@/actions/selection-move\";\r\nimport { addNode } from \"@/actions/node-add\";\r\n\r\nexport default function dragEndReducer(\r\n  state: AppState = defaultAppState,\r\n  action: AnyAction\r\n) {\r\n  if (!isFieldDragEndAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { x, y, selectionMode } = action.payload;\r\n\r\n  const {\r\n    dragMode,\r\n    dragStart,\r\n    dragEnd,\r\n    dragNewNodeType\r\n  } = state.services.field;\r\n\r\n  switch (dragMode) {\r\n    case \"select\": {\r\n      if (dragStart) {\r\n        const rect = normalizeRectangle(dragStart, { x, y });\r\n        state = rootReducer(state, selectRegion(rect, selectionMode));\r\n      }\r\n      break;\r\n    }\r\n    case \"move\": {\r\n      if (dragStart) {\r\n        const moveBy = pointSubtract({ x, y }, dragStart);\r\n        state = rootReducer(state, moveSelection(moveBy.x, moveBy.y));\r\n      }\r\n      break;\r\n    }\r\n    case \"new-node\": {\r\n      if (dragEnd) {\r\n        state = rootReducer(\r\n          state,\r\n          // We need to use dragEnd, as the end event comes from ElementTray which doesn't know our coords.\r\n          addNode(dragNewNodeType!, { position: dragEnd })\r\n        );\r\n      }\r\n      break;\r\n    }\r\n  }\r\n\r\n  state = fpSet(state, \"services\", \"field\", value => ({\r\n    ...value,\r\n    dragMode: null,\r\n    dragStart: null,\r\n    dragEnd: null,\r\n    dragNewNodeType: null\r\n  }));\r\n\r\n  return state;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { fpSet } from \"@/utils\";\r\n\r\nimport { AppState, defaultAppState } from \"@/store\";\r\nimport rootReducer from \"@/store/reducer\";\r\n\r\nimport { isFieldDragStartNodeAction } from \"@/actions/field-drag-start-node\";\r\nimport { selectNodes } from \"@/actions/select-nodes\";\r\n\r\nimport { isNodeSelectedSelector } from \"@/services/selection/selectors/selection\";\r\n\r\nexport default function dragNodesStartReducer(\r\n  state: AppState = defaultAppState,\r\n  action: AnyAction\r\n) {\r\n  if (!isFieldDragStartNodeAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { nodeId, x, y, selectionMode } = action.payload;\r\n\r\n  state = fpSet(state, \"services\", \"field\", value => ({\r\n    ...value,\r\n    dragMode: \"move\" as const,\r\n    dragStart: {\r\n      x,\r\n      y\r\n    }\r\n  }));\r\n\r\n  if (!isNodeSelectedSelector(state, nodeId)) {\r\n    // Dragging a node that was not previously selected.  Perform a selection on the node.\r\n    state = rootReducer(state, selectNodes(nodeId, selectionMode));\r\n  }\r\n\r\n  return state;\r\n}\r\n","import { fpSet } from \"@/utils\";\r\nimport { isMoveWireJointAction } from \"@/actions/wire-joint-move\";\r\n\r\nimport { createFieldReducer } from \"../utils\";\r\n\r\nexport default createFieldReducer((state, action) => {\r\n  if (!isMoveWireJointAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { jointId, position } = action.payload;\r\n\r\n  return fpSet(state, \"wireJointPositionsByJointId\", jointId, position);\r\n});\r\n","import { isNewFileAction } from \"@/actions/file-new\";\r\n\r\nimport { createGraphReducer } from \"../utils\";\r\nimport { defaultGraphState } from \"../state\";\r\n\r\nexport default createGraphReducer((state, action) => {\r\n  if (!isNewFileAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  return defaultGraphState;\r\n});\r\n","import { AppReducer } from \"./types\";\r\n\r\nexport const PRIORITY_PRE = -10;\r\nexport const PRIORITY_POST = 10;\r\nexport const PRIORITY_SAVE = 50;\r\n\r\nexport function reducerPriority(\r\n  priority: number,\r\n  reducer: AppReducer\r\n): AppReducer {\r\n  reducer.weight = priority;\r\n  return reducer;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { reducerPriority, PRIORITY_PRE } from \"@/store/priorities\";\r\n\r\nimport { isAddNodeAction } from \"@/actions/node-add\";\r\n\r\nimport { createGraphReducer } from \"../utils\";\r\n\r\nexport default reducerPriority(\r\n  PRIORITY_PRE,\r\n  createGraphReducer((state, action: AnyAction) => {\r\n    if (!isAddNodeAction(action)) {\r\n      return state;\r\n    }\r\n\r\n    const { nodeId: id, nodeType: type } = action.payload;\r\n    return {\r\n      ...state,\r\n      nodesById: {\r\n        ...state.nodesById,\r\n        [id]: {\r\n          id,\r\n          type\r\n        }\r\n      }\r\n    };\r\n  })\r\n);\r\n","import { concatReducers } from \"@/store/utils\";\r\n\r\nimport fileNewReducer from \"./file-new\";\r\nimport nodeAddReducer from \"./node-add\";\r\nimport nodeDeleteReducer from \"./node-delete\";\r\nimport wireAttachReducer from \"./wire-attach\";\r\nimport wireDetatchReducer from \"./wire-detatch\";\r\n\r\nconst graphReducer = concatReducers(\r\n  fileNewReducer,\r\n  nodeAddReducer,\r\n  nodeDeleteReducer,\r\n  wireAttachReducer,\r\n  wireDetatchReducer\r\n);\r\n\r\nexport default graphReducer;\r\n","import pick from \"lodash/pick\";\r\nimport difference from \"lodash/difference\";\r\nimport { AnyAction } from \"redux\";\r\nimport pickBy from \"lodash/pickBy\";\r\n\r\nimport { fpSet } from \"@/utils\";\r\nimport { AppState, defaultAppState } from \"@/store\";\r\n\r\nimport { reducerPriority, PRIORITY_POST } from \"@/store/priorities\";\r\n\r\nimport { isDeleteNodeAction } from \"@/actions/node-delete\";\r\n\r\nimport { Connection } from \"../types\";\r\n\r\nexport default reducerPriority(\r\n  PRIORITY_POST,\r\n  (state: AppState = defaultAppState, action: AnyAction) => {\r\n    if (!isDeleteNodeAction(action)) {\r\n      return state;\r\n    }\r\n\r\n    const { nodeIds } = action.payload;\r\n\r\n    const remainingNodeIds = difference(\r\n      Object.keys(state.services.graph.nodesById),\r\n      nodeIds\r\n    );\r\n\r\n    function isRemainingConnection(c: Connection) {\r\n      return (\r\n        remainingNodeIds.indexOf(c.inputPin.nodeId) !== -1 &&\r\n        remainingNodeIds.indexOf(c.outputPin.nodeId) !== -1\r\n      );\r\n    }\r\n\r\n    state = fpSet(state, \"services\", \"graph\", value => ({\r\n      ...value,\r\n      nodesById: pick(state.services.graph.nodesById, remainingNodeIds),\r\n      wiresById: pickBy(state.services.graph.wiresById, isRemainingConnection)\r\n    }));\r\n\r\n    return state;\r\n  }\r\n);\r\n","import find from \"lodash/find\";\r\n\r\nimport { reducerPriority, PRIORITY_PRE } from \"@/store/priorities\";\r\n\r\nimport { isAttachWireAction } from \"@/actions/wire-attach\";\r\n\r\nimport { createGraphReducer, pinsToConnection } from \"../utils\";\r\nimport { nodePinEquals } from \"../types\";\r\n\r\nexport default reducerPriority(\r\n  PRIORITY_PRE,\r\n  createGraphReducer((state, action) => {\r\n    if (!isAttachWireAction(action)) {\r\n      return state;\r\n    }\r\n\r\n    const { wireId, p1, p2 } = action.payload;\r\n    const conn = pinsToConnection(state, p1, p2);\r\n    if (!conn) {\r\n      return state;\r\n    }\r\n\r\n    const { inputPin } = conn;\r\n\r\n    // Only one source per input.\r\n    if (find(state.wiresById, c => nodePinEquals(c.inputPin, inputPin))) {\r\n      return state;\r\n    }\r\n\r\n    return {\r\n      ...state,\r\n      wiresById: {\r\n        ...state.wiresById,\r\n        [wireId]: {\r\n          id: wireId,\r\n          ...conn\r\n        }\r\n      }\r\n    };\r\n  })\r\n);\r\n","import { NodeType } from \"@/node-defs\";\r\nimport { IDMap } from \"@/types\";\r\n\r\nexport interface GraphNode {\r\n  id: string;\r\n  type: NodeType;\r\n}\r\n\r\n/**\r\n * Identifies a pin on a specific node.\r\n */\r\nexport interface NodePin {\r\n  nodeId: string;\r\n  pinId: string;\r\n}\r\nexport function nodePinEquals(a: NodePin, b: NodePin) {\r\n  return a.nodeId === b.nodeId && a.pinId === b.pinId;\r\n}\r\n\r\n/**\r\n * A connection from a node input to a node output.\r\n */\r\nexport interface Connection {\r\n  outputPin: NodePin;\r\n  inputPin: NodePin;\r\n}\r\n\r\n/**\r\n * A wire connecting two nodes in the graph\r\n */\r\nexport interface Wire extends Connection {\r\n  id: string;\r\n}\r\n\r\nexport type PinValueMap = IDMap<boolean>;\r\n","import pick from \"lodash/pick\";\r\n\r\nimport { reducerPriority, PRIORITY_POST } from \"@/store/priorities\";\r\n\r\nimport { isDetatchWireAction } from \"@/actions/wire-detatch\";\r\n\r\nimport { createGraphReducer } from \"../utils\";\r\n\r\nexport default reducerPriority(\r\n  PRIORITY_POST,\r\n  createGraphReducer((state, action) => {\r\n    if (!isDetatchWireAction(action)) {\r\n      return state;\r\n    }\r\n\r\n    const { wireId } = action.payload;\r\n\r\n    const remainingIds = Object.keys(state.wiresById).filter(x => x !== wireId);\r\n\r\n    return {\r\n      ...state,\r\n      wiresById: pick(state.wiresById, remainingIds)\r\n    };\r\n  })\r\n);\r\n","import { AppState } from \"@/store\";\r\nimport { pointAdd, ZeroPoint } from \"@/geometry\";\r\nimport { NodeDefinition } from \"@/node-defs\";\r\nimport { Point } from \"@/types\";\r\n\r\nimport { nodeDefSelector } from \"@/services/graph/selectors/nodes\";\r\n\r\nimport { createFieldSelector } from \"../utils\";\r\nimport { FieldState } from \"../state\";\r\n\r\nimport { nodePositionByIdSelector } from \"./positions\";\r\n\r\ninterface PositionCache {\r\n  inputNodeDef: NodeDefinition | null;\r\n  inputNodePosition: Point;\r\n  outputPosition: Point;\r\n}\r\n\r\n// TODO: These build up forever, need to wipe it on occasion.\r\n// Probably should use LRU cache.\r\n// Not fixing it right now as we previously used re-reselect, which\r\n//  also builds up forever.\r\nconst startPositionCacheByWireId: Record<string, PositionCache> = {};\r\nconst endPositionCacheByWireId: Record<string, PositionCache> = {};\r\n\r\nexport const wireStartPositionSelector = (state: AppState, wireId: string) => {\r\n  const {\r\n    outputPin: { nodeId, pinId }\r\n  } = state.services.graph.wiresById[wireId];\r\n  const nodeDef = nodeDefSelector(state, nodeId);\r\n  const nodePosition = nodePositionByIdSelector(state, nodeId) || ZeroPoint;\r\n\r\n  // Caching is to get a consistent reference to avoid component rerenders.\r\n  //  We are not concerned about performance here.\r\n  const cacheData = startPositionCacheByWireId[wireId];\r\n  if (\r\n    cacheData &&\r\n    cacheData.inputNodeDef === nodeDef &&\r\n    cacheData.inputNodePosition === nodePosition\r\n  ) {\r\n    return cacheData.outputPosition;\r\n  }\r\n\r\n  let offset = ZeroPoint;\r\n  if (nodeDef && nodeDef.pins[pinId]) {\r\n    offset = nodeDef.pins[pinId];\r\n  }\r\n  const position = pointAdd(nodePosition, offset);\r\n  startPositionCacheByWireId[wireId] = {\r\n    inputNodeDef: nodeDef,\r\n    inputNodePosition: nodePosition,\r\n    outputPosition: position\r\n  };\r\n\r\n  return position;\r\n};\r\n\r\nexport const wireEndPositionSelector = (state: AppState, wireId: string) => {\r\n  const {\r\n    inputPin: { nodeId, pinId }\r\n  } = state.services.graph.wiresById[wireId];\r\n  const nodeDef = nodeDefSelector(state, nodeId);\r\n  const nodePosition = nodePositionByIdSelector(state, nodeId) || ZeroPoint;\r\n\r\n  // Caching is to get a consistent reference to avoid component rerenders.\r\n  //  We are not concerned about performance here.\r\n  const cacheData = endPositionCacheByWireId[wireId];\r\n  if (\r\n    cacheData &&\r\n    cacheData.inputNodeDef === nodeDef &&\r\n    cacheData.inputNodePosition === nodePosition\r\n  ) {\r\n    return cacheData.outputPosition;\r\n  }\r\n\r\n  let offset = ZeroPoint;\r\n  if (nodeDef && nodeDef.pins[pinId]) {\r\n    offset = nodeDef.pins[pinId];\r\n  }\r\n  const position = pointAdd(nodePosition, offset);\r\n  endPositionCacheByWireId[wireId] = {\r\n    inputNodeDef: nodeDef,\r\n    inputNodePosition: nodePosition,\r\n    outputPosition: position\r\n  };\r\n\r\n  return position;\r\n};\r\n\r\n// WARN: Returns new object with each invocation.  Not safe for react use.\r\n//  Currently used to get all joint ids in reducers.\r\nexport const allJointIdsSelector = createFieldSelector((state: FieldState) =>\r\n  Object.keys(state.wireJointPositionsByJointId)\r\n);\r\n\r\nexport const wireJointIdsByWireIdSelector = createFieldSelector(\r\n  (state: FieldState, wireId: string) => state.wireJointIdsByWireId[wireId]\r\n);\r\n\r\nexport const wireJointPositionSelector = createFieldSelector(\r\n  (state: FieldState, jointId: string) =>\r\n    state.wireJointPositionsByJointId[jointId]\r\n);\r\n\r\n// WARN: Returns new object with each invocation.  Not safe for react use.\r\n//  Currently used to get all joint ids in reducers.\r\nexport const wireJointPositionsByJointIdSelector = createFieldSelector(\r\n  (state: FieldState) => {\r\n    const positionsByJointId: Record<string, Point> = {};\r\n\r\n    for (const jointId of Object.keys(state.wireJointPositionsByJointId)) {\r\n      const p = state.wireJointPositionsByJointId[jointId];\r\n      positionsByJointId[jointId] = p;\r\n    }\r\n\r\n    return positionsByJointId;\r\n  }\r\n);\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { AppState, defaultAppState } from \"@/store\";\r\n\r\nimport { ACTION_NODE_ADD } from \"@/actions/node-add\";\r\nimport { ACTION_NODE_DELETE } from \"@/actions/node-delete\";\r\nimport { ACTION_SELECTION_MOVE } from \"@/actions/selection-move\";\r\nimport { ACTION_WIRE_ATTACH } from \"@/actions/wire-attach\";\r\nimport { ACTION_WIRE_DETATCH } from \"@/actions/wire-detatch\";\r\nimport { ACTION_WIRE_JOINT_ADD } from \"@/actions/wire-joint-add\";\r\nimport { ACTION_WIRE_JOINT_MOVE } from \"@/actions/wire-joint-move\";\r\n\r\nimport { createSave, storeAutosave } from \"../utils\";\r\nimport { reducerPriority, PRIORITY_SAVE } from \"@/store/priorities\";\r\n\r\nconst AUTOSAVE_TRIGGERS = [\r\n  ACTION_NODE_ADD,\r\n  ACTION_NODE_DELETE,\r\n  ACTION_SELECTION_MOVE,\r\n  ACTION_WIRE_ATTACH,\r\n  ACTION_WIRE_DETATCH,\r\n  ACTION_WIRE_JOINT_ADD,\r\n  ACTION_WIRE_JOINT_MOVE\r\n];\r\n\r\nexport default reducerPriority(\r\n  PRIORITY_SAVE,\r\n  (state: AppState = defaultAppState, action: AnyAction): AppState => {\r\n    if (AUTOSAVE_TRIGGERS.indexOf(action.type) === -1) {\r\n      return state;\r\n    }\r\n\r\n    const save = createSave(state);\r\n    storeAutosave(save);\r\n\r\n    return state;\r\n  }\r\n);\r\n","import { concatReducers } from \"@/store/utils\";\r\n\r\nimport autosaveReducer from \"./autosave\";\r\nimport fileNewReducer from \"./file-new\";\r\nimport initReducer from \"./init\";\r\n\r\nexport default concatReducers(autosaveReducer, fileNewReducer, initReducer);\r\n","import { SaveData, SaveNode, SaveWire } from \"./types\";\r\n\r\nimport { AppState } from \"@/store\";\r\nimport rootReducer from \"@/store/reducer\";\r\n\r\nimport { addNode } from \"@/actions/node-add\";\r\nimport { attachWire } from \"@/actions/wire-attach\";\r\n\r\nimport { defaultSelectionState } from \"../selection/state\";\r\nimport { defaultSimulatorState } from \"../simulator/state\";\r\nimport { defaultGraphState } from \"../graph/state\";\r\nimport { nodeIdsSelector, nodeByIdSelector } from \"../graph/selectors/nodes\";\r\nimport { wireIdsSelector, wireByIdSelector } from \"../graph/selectors/wires\";\r\nimport { nodePositionByIdSelector } from \"../field/selectors/positions\";\r\nimport {\r\n  wireJointPositionsByJointIdSelector,\r\n  wireJointIdsByWireIdSelector\r\n} from \"../field/selectors/wires\";\r\nimport { defaultFieldState } from \"../field/state\";\r\n\r\nexport function createSave(state: AppState): SaveData {\r\n  const jointPositions = wireJointPositionsByJointIdSelector(state);\r\n  return {\r\n    nodes: nodeIdsSelector(state).map(nodeId => {\r\n      const node = nodeByIdSelector(state, nodeId);\r\n      const position = nodePositionByIdSelector(state, nodeId);\r\n      const saveNode: SaveNode = {\r\n        id: node.id,\r\n        type: node.type,\r\n        x: position.x,\r\n        y: position.y\r\n      };\r\n      return saveNode;\r\n    }),\r\n    wires: wireIdsSelector(state).map(wireId => {\r\n      const wire = wireByIdSelector(state, wireId);\r\n      const jointIds = wireJointIdsByWireIdSelector(state, wireId);\r\n      const saveWire: SaveWire = {\r\n        input: wire.inputPin,\r\n        output: wire.outputPin,\r\n        joints: jointIds.map(jointId => jointPositions[jointId])\r\n      };\r\n      return saveWire;\r\n    })\r\n  };\r\n}\r\n\r\nexport function loadSave(state: AppState, save: SaveData): AppState {\r\n  state = {\r\n    ...state,\r\n    services: {\r\n      ...state.services,\r\n      field: defaultFieldState,\r\n      graph: defaultGraphState,\r\n      selection: defaultSelectionState,\r\n      simulator: defaultSimulatorState\r\n    }\r\n  };\r\n\r\n  const fallbackState = state;\r\n\r\n  try {\r\n    state = save.nodes.reduce(\r\n      (state, node) =>\r\n        rootReducer(\r\n          state,\r\n          addNode(node.type, {\r\n            nodeId: node.id,\r\n            position: { x: node.x, y: node.y }\r\n          })\r\n        ),\r\n      state\r\n    );\r\n\r\n    state = save.wires.reduce(\r\n      (state, wire) =>\r\n        rootReducer(\r\n          state,\r\n          attachWire(wire.output, wire.input, { joints: wire.joints })\r\n        ),\r\n      state\r\n    );\r\n  } catch {\r\n    // TODO: Notify user of load error.\r\n    return fallbackState;\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nexport function storeAutosave(save: SaveData): void {\r\n  localStorage.setItem(\"autosave\", JSON.stringify(save));\r\n}\r\n\r\nexport function loadAutosave(): SaveData | null {\r\n  const str = localStorage.getItem(\"autosave\");\r\n  if (!str) {\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    return JSON.parse(str);\r\n  } catch {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function deleteAutosave() {\r\n  localStorage.removeItem(\"autosave\");\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { AppState, defaultAppState } from \"@/store\";\r\nimport { isNewFileAction } from \"@/actions/file-new\";\r\n\r\nimport { deleteAutosave } from \"../utils\";\r\n\r\nexport default function fileNewReducer(\r\n  state: AppState = defaultAppState,\r\n  action: AnyAction\r\n): AppState {\r\n  if (!isNewFileAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  deleteAutosave();\r\n  return state;\r\n}\r\n","import { AnyAction } from \"redux\";\r\nimport { AppState, defaultAppState } from \"@/store\";\r\n\r\nimport { isInitAction } from \"@/actions/init\";\r\n\r\nimport { loadAutosave, loadSave } from \"../utils\";\r\n\r\nexport default function initReducer(\r\n  state: AppState = defaultAppState,\r\n  action: AnyAction\r\n): AppState {\r\n  if (!isInitAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const save = loadAutosave();\r\n  if (!save) {\r\n    return state;\r\n  }\r\n\r\n  return loadSave(state, save);\r\n}\r\n","import { isNewFileAction } from \"@/actions/file-new\";\r\n\r\nimport { createSelectionReducer } from \"../utils\";\r\nimport { defaultSelectionState } from \"../state\";\r\n\r\nexport default createSelectionReducer((state, action) => {\r\n  if (!isNewFileAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  return defaultSelectionState;\r\n});\r\n","import difference from \"lodash/difference\";\r\n\r\nimport { isDeleteNodeAction } from \"@/actions/node-delete\";\r\n\r\nimport { createSelectionReducer } from \"../utils\";\r\n\r\nexport default createSelectionReducer((state, action) => {\r\n  if (!isDeleteNodeAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { nodeIds } = action.payload;\r\n\r\n  return {\r\n    ...state,\r\n    selectedNodeIds: difference(state.selectedNodeIds, nodeIds),\r\n    selectedWireIds: [] // Might be removing a node attached to a selected wire\r\n  };\r\n});\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_SELECT_CLEAR = \"@select/all\" as const;\r\nexport const selectAll = () => ({\r\n  type: ACTION_SELECT_CLEAR\r\n});\r\nexport type SelectAllAction = ReturnType<typeof selectAll>;\r\nexport function isSelectAllAction(\r\n  action: AnyAction\r\n): action is SelectAllAction {\r\n  return action.type === ACTION_SELECT_CLEAR;\r\n}\r\n","import { isSelectAllAction } from \"@/actions/select-all\";\r\n\r\nimport { nodeIdsSelector } from \"@/services/graph/selectors/nodes\";\r\nimport { wireIdsSelector } from \"@/services/graph/selectors/wires\";\r\nimport { allJointIdsSelector } from \"@/services/field/selectors/wires\";\r\n\r\nimport { createSelectionReducer } from \"../utils\";\r\n\r\nexport default createSelectionReducer((state, action, appState) => {\r\n  if (!isSelectAllAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const nodeIds = nodeIdsSelector(appState);\r\n  const wireIds = wireIdsSelector(appState);\r\n  const jointIds = allJointIdsSelector(appState);\r\n\r\n  return {\r\n    ...state,\r\n    selectedNodeIds: nodeIds,\r\n    selectedWireIds: wireIds,\r\n    selectedJointIds: jointIds\r\n  };\r\n});\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_SELECT_CLEAR = \"@select/clear\" as const;\r\nexport const clearSelection = () => ({\r\n  type: ACTION_SELECT_CLEAR\r\n});\r\nexport type ClearSelectionAction = ReturnType<typeof clearSelection>;\r\nexport function isClearSelectionAction(\r\n  action: AnyAction\r\n): action is ClearSelectionAction {\r\n  return action.type === ACTION_SELECT_CLEAR;\r\n}\r\n","import { isClearSelectionAction } from \"@/actions/select-clear\";\r\n\r\nimport { createSelectionReducer } from \"../utils\";\r\n\r\nexport default createSelectionReducer((state, action) => {\r\n  if (!isClearSelectionAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    selectedNodeIds: [],\r\n    selectedWireIds: [],\r\n    selectedJointIds: []\r\n  };\r\n});\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { SelectionMode } from \"@/selection-mode\";\r\n\r\nexport const ACTION_SELECT_WIRE_JOINTS = \"@select/wire-joints\" as const;\r\nexport const selectWireJoints = (\r\n  jointId: string | string[],\r\n  mode: SelectionMode = \"set\"\r\n) => ({\r\n  type: ACTION_SELECT_WIRE_JOINTS,\r\n  payload: {\r\n    jointIds: Array.isArray(jointId) ? jointId : [jointId],\r\n    mode\r\n  }\r\n});\r\nexport type SelectWireJointsAction = ReturnType<typeof selectWireJoints>;\r\nexport function isSelectWireJointsAction(\r\n  action: AnyAction\r\n): action is SelectWireJointsAction {\r\n  return action.type === ACTION_SELECT_WIRE_JOINTS;\r\n}\r\n","import { isSelectWireJointsAction } from \"@/actions/select-wire-joints\";\r\nimport { createSelectionReducer, combineSelection } from \"../utils\";\r\n\r\nexport default createSelectionReducer((state, action) => {\r\n  if (!isSelectWireJointsAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { jointIds, mode } = action.payload;\r\n\r\n  return {\r\n    ...state,\r\n    selectedNodeIds: mode === \"set\" ? [] : state.selectedNodeIds,\r\n    selectedWireIds: mode === \"set\" ? [] : state.selectedWireIds,\r\n    selectedJointIds: combineSelection(state.selectedJointIds, jointIds, mode)\r\n  };\r\n});\r\n","import { isSelectNodesAction } from \"@/actions/select-nodes\";\r\n\r\nimport { combineSelection, createSelectionReducer } from \"../utils\";\r\n\r\nexport default createSelectionReducer((state, action) => {\r\n  if (!isSelectNodesAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { nodeIds, mode } = action.payload;\r\n\r\n  return {\r\n    ...state,\r\n    selectedNodeIds: combineSelection(state.selectedNodeIds, nodeIds, mode),\r\n    selectedWireIds: mode === \"set\" ? [] : state.selectedWireIds,\r\n    selectedJointIds: mode === \"set\" ? [] : state.selectedJointIds\r\n  };\r\n});\r\n","import pickBy from \"lodash/pickBy\";\r\n\r\nimport { IDMap } from \"@/types\";\r\n\r\nimport { NodeVisualPath, NodeDefinition, NodePinDefinition } from \"./types\";\r\n\r\nexport function normalizeVisuals(\r\n  v: NodeVisualPath | NodeVisualPath[],\r\n  state: any\r\n): { path: string; fill?: string; stroke?: string; strokeWidth?: number }[] {\r\n  const asArray = Array.isArray(v) ? v : [v];\r\n\r\n  return asArray.map(x => {\r\n    if (typeof x === \"string\") {\r\n      return {\r\n        path: x,\r\n        fill: \"black\",\r\n        stroke: \"black\",\r\n        strokeWidth: 2\r\n      };\r\n    }\r\n    const fill = typeof x.fill === \"function\" ? x.fill(state || {}) : x.fill;\r\n    const stroke =\r\n      typeof x.stroke === \"function\" ? x.stroke(state || {}) : x.stroke;\r\n    const strokeWidth =\r\n      typeof x.strokeWidth === \"function\"\r\n        ? x.strokeWidth(state || {})\r\n        : x.strokeWidth;\r\n    return {\r\n      path: x.path,\r\n      fill,\r\n      stroke,\r\n      strokeWidth\r\n    };\r\n  });\r\n}\r\n\r\nexport function inputsOf(def: NodeDefinition): IDMap<NodePinDefinition> {\r\n  return pickBy(def.pins, value => value.direction === \"input\") as IDMap<\r\n    NodePinDefinition\r\n  >;\r\n}\r\n\r\nexport function outputsOf(def: NodeDefinition): IDMap<NodePinDefinition> {\r\n  return pickBy(def.pins, value => value.direction === \"output\") as IDMap<\r\n    NodePinDefinition\r\n  >;\r\n}\r\n","import { createSimulatorSelector } from \"../utils\";\r\nimport { SimulatorState } from \"../state\";\r\n\r\nexport const nodeStatesByIdSelector = createSimulatorSelector(\r\n  s => s.nodeStatesByNodeId\r\n);\r\n\r\nexport const nodeStateSelector = createSimulatorSelector(\r\n  (s: SimulatorState, nodeId: string) => s.nodeStatesByNodeId[nodeId]\r\n);\r\n\r\nexport const nodeOutputPinValue = createSimulatorSelector(\r\n  (s: SimulatorState, nodeId: string, pinId: string) => {\r\n    return s.nodeOutputValuesByNodeId[nodeId]?.[pinId] || false;\r\n  }\r\n);\r\n","import { createSelector } from \"reselect\";\r\nimport getBounds from \"svg-path-bounds\";\r\n\r\nimport mapValues from \"lodash/mapValues\";\r\n\r\nimport { normalizeVisuals } from \"@/node-defs/utils\";\r\nimport { normalizeRectangle } from \"@/geometry\";\r\n\r\nimport { nodeDefsByIdSelector } from \"@/services/graph/selectors/nodes\";\r\nimport { nodeStatesByIdSelector } from \"@/services/simulator/selectors/nodes\";\r\n\r\nimport { nodePositionsByIdSelector } from \"./positions\";\r\nimport { createFieldSelector } from \"../utils\";\r\n\r\nexport const fieldWidthSelector = createFieldSelector(s => s.width);\r\nexport const fieldHeightSelector = createFieldSelector(s => s.height);\r\n\r\nexport const nodeBoundsById = createSelector(\r\n  nodeDefsByIdSelector,\r\n  nodeStatesByIdSelector,\r\n  (nodeDefsById, nodeStateById) =>\r\n    mapValues(nodeDefsById, (x, id) => {\r\n      if (x.visual.hitPath) {\r\n        return getBounds(x.visual.hitPath);\r\n      }\r\n      const shapePaths = normalizeVisuals(\r\n        x.visual.shapePath,\r\n        nodeStateById[id]\r\n      );\r\n      if (shapePaths.length > 0) {\r\n        return getBounds(shapePaths[0].path);\r\n      }\r\n      return [0, 0, 0, 0];\r\n    })\r\n);\r\n\r\nexport const nodeRectsByIdSelector = createSelector(\r\n  nodePositionsByIdSelector,\r\n  nodeBoundsById,\r\n  (positionsById, boundsById) =>\r\n    mapValues(positionsById, (p1, id) => {\r\n      const bounds = boundsById[id] || [0, 0, 0, 0];\r\n      return normalizeRectangle(\r\n        {\r\n          x: p1.x + bounds[0],\r\n          y: p1.y + bounds[1]\r\n        },\r\n        {\r\n          x: p1.x + bounds[2],\r\n          y: p1.y + bounds[3]\r\n        }\r\n      );\r\n    })\r\n);\r\n","import forOwn from \"lodash/forOwn\";\r\n\r\nimport { intersects, pointIntersects } from \"@/geometry\";\r\n\r\nimport { isSelectRegionAction } from \"@/actions/select-region\";\r\n\r\nimport { nodeRectsByIdSelector } from \"@/services/field/selectors/bounds\";\r\nimport { wireJointPositionsByJointIdSelector } from \"@/services/field/selectors/wires\";\r\n\r\nimport { combineSelection, createSelectionReducer } from \"../utils\";\r\n\r\nexport default createSelectionReducer((state, action, appState) => {\r\n  if (!isSelectRegionAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { region, mode } = action.payload;\r\n\r\n  const rects = nodeRectsByIdSelector(appState);\r\n  const chosenNodeIds: string[] = [];\r\n  forOwn(rects, (rect, id) => {\r\n    if (intersects(rect, region)) {\r\n      chosenNodeIds.push(id);\r\n    }\r\n  });\r\n\r\n  const chosenJointIds: string[] = [];\r\n  const jointPositions = wireJointPositionsByJointIdSelector(appState);\r\n  forOwn(jointPositions, (p, jointId) => {\r\n    if (pointIntersects(p, region)) {\r\n      chosenJointIds.push(jointId);\r\n    }\r\n  });\r\n\r\n  return {\r\n    ...state,\r\n    selectedNodeIds: combineSelection(\r\n      state.selectedNodeIds,\r\n      chosenNodeIds,\r\n      mode\r\n    ),\r\n    selectedWireIds: mode === \"set\" ? [] : state.selectedWireIds,\r\n    selectedJointIds: combineSelection(\r\n      state.selectedJointIds,\r\n      chosenJointIds,\r\n      mode\r\n    )\r\n  };\r\n});\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { SelectionMode } from \"@/selection-mode\";\r\n\r\nexport const ACTION_SELECT_WIRES = \"@select/wires\" as const;\r\nexport const selectWires = (\r\n  wireId: string | string[],\r\n  mode: SelectionMode = \"set\"\r\n) => ({\r\n  type: ACTION_SELECT_WIRES,\r\n  payload: {\r\n    wireIds: Array.isArray(wireId) ? wireId : [wireId],\r\n    mode\r\n  }\r\n});\r\nexport type SelectWiresAction = ReturnType<typeof selectWires>;\r\nexport function isSelectWiresAction(\r\n  action: AnyAction\r\n): action is SelectWiresAction {\r\n  return action.type === ACTION_SELECT_WIRES;\r\n}\r\n","import { isSelectWiresAction } from \"@/actions/select-wires\";\r\nimport { createSelectionReducer, combineSelection } from \"../utils\";\r\n\r\nexport default createSelectionReducer((state, action) => {\r\n  if (!isSelectWiresAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { wireIds, mode } = action.payload;\r\n\r\n  return {\r\n    ...state,\r\n    selectedNodeIds: mode === \"set\" ? [] : state.selectedNodeIds,\r\n    selectedWireIds: combineSelection(state.selectedWireIds, wireIds, mode),\r\n    selectedJointIds: mode === \"set\" ? [] : state.selectedJointIds\r\n  };\r\n});\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_SELECTION_COPY = \"@selection/copy\" as const;\r\nexport const selectionCopy = () => ({\r\n  type: ACTION_SELECTION_COPY\r\n});\r\nexport type SelectionCopyAction = ReturnType<typeof selectionCopy>;\r\nexport function isSelectionCopyAction(\r\n  action: AnyAction\r\n): action is SelectionCopyAction {\r\n  return action.type === ACTION_SELECTION_COPY;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_SELECTION_DELETE = \"@selection/delete\" as const;\r\nexport const selectionDelete = () => ({\r\n  type: ACTION_SELECTION_DELETE\r\n});\r\nexport type SelectionDeleteAction = ReturnType<typeof selectionDelete>;\r\nexport function isSelectionDeleteAction(\r\n  action: AnyAction\r\n): action is SelectionDeleteAction {\r\n  return action.type === ACTION_SELECTION_DELETE;\r\n}\r\n","import { concatReducers } from \"@/store/utils\";\r\n\r\nimport fileNewReducer from \"./file-new\";\r\nimport nodeDeleteReducer from \"./node-delete\";\r\nimport selectAllReducer from \"./select-all\";\r\nimport selectClearReducer from \"./select-clear\";\r\nimport selectJointsReducer from \"./select-joints\";\r\nimport selectNodesReducer from \"./select-nodes\";\r\nimport selectRegionReducer from \"./select-region\";\r\nimport selectWiresReducer from \"./select-wires\";\r\nimport selectionCopyReducer from \"./selection-copy\";\r\nimport selectionDeleteReducer from \"./selection-delete\";\r\nimport wireDetatchReducer from \"./wire-detatch\";\r\n\r\nconst selectionReducer = concatReducers(\r\n  fileNewReducer,\r\n  nodeDeleteReducer,\r\n  selectAllReducer,\r\n  selectClearReducer,\r\n  selectJointsReducer,\r\n  selectNodesReducer,\r\n  selectRegionReducer,\r\n  selectWiresReducer,\r\n  selectionCopyReducer,\r\n  selectionDeleteReducer,\r\n  wireDetatchReducer\r\n);\r\n\r\nexport default selectionReducer;\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { AppState, defaultAppState } from \"@/store\";\r\nimport rootReducer from \"@/store/reducer\";\r\n\r\nimport { isSelectionCopyAction } from \"@/actions/selection-copy\";\r\nimport { copyNodes } from \"@/actions/clipboard-copy\";\r\n\r\nimport { selectedNodeIdsSelector } from \"@/services/selection/selectors/selection\";\r\n\r\nexport default function selectionCopyReducer(\r\n  state: AppState = defaultAppState,\r\n  action: AnyAction\r\n): AppState {\r\n  if (!isSelectionCopyAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const selectedNodes = selectedNodeIdsSelector(state);\r\n  if (selectedNodes.length === 0) {\r\n    return state;\r\n  }\r\n\r\n  return rootReducer(state, copyNodes(selectedNodes));\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { AppState, defaultAppState } from \"@/store\";\r\nimport rootReducer from \"@/store/reducer\";\r\n\r\nimport { isSelectionDeleteAction } from \"@/actions/selection-delete\";\r\nimport { deleteNode } from \"@/actions/node-delete\";\r\nimport { detatchWire } from \"@/actions/wire-detatch\";\r\nimport { deleteWireJoint } from \"@/actions/wire-joint-delete\";\r\n\r\nexport default function selectionDeleteReducer(\r\n  state: AppState = defaultAppState,\r\n  action: AnyAction\r\n): AppState {\r\n  if (!isSelectionDeleteAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const {\r\n    selectedNodeIds,\r\n    selectedWireIds,\r\n    selectedJointIds\r\n  } = state.services.selection;\r\n\r\n  if (selectedNodeIds.length > 0) {\r\n    state = rootReducer(state, deleteNode(selectedNodeIds));\r\n  }\r\n  state = selectedWireIds.reduce(\r\n    (state, wireId) => rootReducer(state, detatchWire(wireId)),\r\n    state\r\n  );\r\n  state = selectedJointIds.reduce(\r\n    (state, jointId) => rootReducer(state, deleteWireJoint(jointId)),\r\n    state\r\n  );\r\n\r\n  return state;\r\n}\r\n","import { isDetatchWireAction } from \"@/actions/wire-detatch\";\r\n\r\nimport { createSelectionReducer } from \"../utils\";\r\n\r\nexport default createSelectionReducer((state, action) => {\r\n  if (!isDetatchWireAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { wireId } = action.payload;\r\n\r\n  return {\r\n    ...state,\r\n    selectedWireIds: state.selectedWireIds.filter(x => x !== wireId)\r\n  };\r\n});\r\n","import { isNewFileAction } from \"@/actions/file-new\";\r\n\r\nimport { createSimulatorReducer } from \"../utils\";\r\nimport { defaultSimulatorState } from \"../state\";\r\n\r\nexport default createSimulatorReducer((state, action) => {\r\n  if (!isNewFileAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  return defaultSimulatorState;\r\n});\r\n","import binarySearch from \"binary-search\";\r\nimport uuidV4 from \"uuid/v4\";\r\nimport findIndex from \"lodash/findIndex\";\r\nimport pick from \"lodash/pick\";\r\nimport mapValues from \"lodash/mapValues\";\r\n\r\nimport { fpSet } from \"@/utils\";\r\nimport { IDMap, asArray } from \"@/types\";\r\nimport { AppState } from \"@/store\";\r\nimport { OutputTransition } from \"@/node-defs\";\r\n\r\nimport { inputsOf, outputsOf } from \"@/node-defs/utils\";\r\n\r\nimport { nodeInputConnectionsByPinSelector } from \"@/services/graph/selectors/wires\";\r\nimport {\r\n  nodeDefSelector,\r\n  nodeIdsSelector\r\n} from \"@/services/graph/selectors/nodes\";\r\n\r\nimport { nodeOutputPinValue } from \"../selectors/nodes\";\r\n\r\nimport { SimulatorState, defaultSimulatorState } from \"../state\";\r\nimport {\r\n  SimTransitionWindow,\r\n  SimNodePinTransition as SimNodeTransition\r\n} from \"../types\";\r\n\r\nexport function simInit(\r\n  state: SimulatorState,\r\n  appState: AppState\r\n): SimulatorState {\r\n  // Switching away from edit mode, initialize the simulator.\r\n  const nodeIds = nodeIdsSelector(appState);\r\n\r\n  state = {\r\n    ...defaultSimulatorState,\r\n    ticksPerSecond: state.ticksPerSecond\r\n  };\r\n\r\n  state = nodeIds.reduce(\r\n    (state, nodeId) => initNode(state, nodeId, appState),\r\n    state\r\n  );\r\n\r\n  state = nodeIds.reduce(\r\n    (state, nodeId) => collectNodeTransitions(state, nodeId, appState),\r\n    state\r\n  );\r\n\r\n  return state;\r\n}\r\n\r\nfunction initNode(\r\n  state: SimulatorState,\r\n  nodeId: string,\r\n  appState: AppState\r\n): SimulatorState {\r\n  const def = nodeDefSelector(appState, nodeId);\r\n  if (!def) {\r\n    return state;\r\n  }\r\n\r\n  const outputs = outputsOf(def);\r\n  const outputValues = mapValues(outputs, () => false);\r\n  return fpSet(state, \"nodeOutputValuesByNodeId\", nodeId, outputValues);\r\n\r\n  // Old code used to collect transitions for all-false inputs and set\r\n  //  outputs immediately to transition values.\r\n\r\n  // const inputs = inputsOf(def);\r\n  // const outputs = outputsOf(def);\r\n\r\n  // const initialEvolution = def.evolve\r\n  //   ? def.evolve(\r\n  //       undefined,\r\n  //       mapValues(inputs, () => false),\r\n  //       state.tick\r\n  //     )\r\n  //   : {};\r\n\r\n  // let transitions: OutputTransition[] = [];\r\n  // if (initialEvolution.transitions) {\r\n  //   transitions = asArray(initialEvolution.transitions);\r\n  // }\r\n\r\n  // const outputValues = transitions.reduce(\r\n  //   (values, transition) => ({ ...values, ...transition.valuesByPin }),\r\n  //   mapValues(outputs, () => false)\r\n  // );\r\n\r\n  // return {\r\n  //   ...state,\r\n  //   nodeStatesByNodeId: {\r\n  //     ...state.nodeStatesByNodeId,\r\n  //     [nodeId]: initialEvolution.state\r\n  //   },\r\n  //   nodeOutputValuesByNodeId: {\r\n  //     ...state.nodeOutputValuesByNodeId,\r\n  //     [nodeId]: outputValues\r\n  //   }\r\n  // };\r\n}\r\n\r\nexport function collectNodeTransitions(\r\n  state: SimulatorState,\r\n  nodeId: string,\r\n  appState: AppState\r\n): SimulatorState {\r\n  const def = nodeDefSelector(appState, nodeId);\r\n  if (!def || !def.evolve) {\r\n    return state;\r\n  }\r\n\r\n  // Build the current input state from the connected pins.\r\n  const inputs: IDMap<boolean> = {};\r\n  const inputConnectionsByPin = nodeInputConnectionsByPinSelector(\r\n    appState,\r\n    nodeId\r\n  );\r\n\r\n  for (const inputPin of Object.keys(inputConnectionsByPin)) {\r\n    const inputConn = inputConnectionsByPin[inputPin];\r\n    if (!inputConn) {\r\n      inputs[inputPin] = false;\r\n      continue;\r\n    }\r\n    const { nodeId: sourceNodeId, pinId: sourcePin } = inputConn;\r\n\r\n    inputs[inputPin] = nodeOutputPinValue.local(state, sourceNodeId, sourcePin);\r\n  }\r\n\r\n  const result = def.evolve(\r\n    state.nodeStatesByNodeId[nodeId],\r\n    inputs,\r\n    state.tick\r\n  );\r\n\r\n  if (result.state) {\r\n    state = fpSet(state, \"nodeStatesByNodeId\", nodeId, result.state);\r\n  }\r\n\r\n  if (result.transitions) {\r\n    const transitions = asArray(result.transitions);\r\n    for (const transition of transitions) {\r\n      const {\r\n        tickOffset,\r\n        valuesByPin,\r\n        transitionMerger = \"replace\"\r\n      } = transition;\r\n\r\n      // Sanity check that we are not producing transitions for the past or current tick.\r\n      const transitionTick = state.tick + (tickOffset > 0 ? tickOffset : 1);\r\n\r\n      // We originally removed old transitions when scheduling new transitions.\r\n      //  Experimenting without this.\r\n      if (transitionMerger === \"replace\") {\r\n        state = removeTransitionsByNodeId(state, nodeId);\r\n      }\r\n\r\n      state = addTransition(state, nodeId, transitionTick, valuesByPin);\r\n    }\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nfunction addTransition(\r\n  state: Readonly<SimulatorState>,\r\n  nodeId: string,\r\n  tick: number,\r\n  valuesByOutputPin: IDMap<boolean>\r\n): SimulatorState {\r\n  const transitionId = uuidV4();\r\n\r\n  const newTransition: SimNodeTransition = {\r\n    id: transitionId,\r\n    nodeId,\r\n    tick,\r\n    valuesByOutputPin\r\n  };\r\n\r\n  // Add the transition to the state, and clone transitionWindows for mutation below.\r\n  state = {\r\n    ...state,\r\n    transitionsById: {\r\n      ...state.transitionsById,\r\n      [transitionId]: newTransition\r\n    },\r\n    transitionWindows: [...state.transitionWindows]\r\n  };\r\n\r\n  let index = binarySearch(state.transitionWindows, tick, (a, b) => a.tick - b);\r\n  if (index < 0) {\r\n    // Need to create a new window\r\n    index = -index - 1;\r\n    const newWindow: SimTransitionWindow = {\r\n      tick,\r\n      transitionIds: []\r\n    };\r\n    // Mutation is safe here as we cloned the array above.\r\n    state.transitionWindows.splice(index, 0, newWindow);\r\n  }\r\n\r\n  // Mutation is safe here as we cloned the array above.\r\n  state.transitionWindows[index] = {\r\n    ...state.transitionWindows[index],\r\n    transitionIds: [\r\n      ...state.transitionWindows[index].transitionIds,\r\n      transitionId\r\n    ]\r\n  };\r\n  return state;\r\n}\r\n\r\nfunction removeTransitionsByNodeId(\r\n  state: Readonly<SimulatorState>,\r\n  nodeId: string\r\n): SimulatorState {\r\n  function isNodeTransition(transition: SimNodeTransition) {\r\n    return transition.nodeId === nodeId;\r\n  }\r\n\r\n  const transitionIds = Object.keys(state.transitionsById).filter(id =>\r\n    isNodeTransition(state.transitionsById[id])\r\n  );\r\n\r\n  return transitionIds.reduce(\r\n    (state, transitionId) => removeTransitionById(state, transitionId),\r\n    state\r\n  );\r\n}\r\n\r\nexport function removeTransitionById(\r\n  state: Readonly<SimulatorState>,\r\n  transitionId: string\r\n): SimulatorState {\r\n  const transition = state.transitionsById[transitionId];\r\n  if (!transition) {\r\n    return state;\r\n  }\r\n\r\n  const transitionsById = pick(\r\n    state.transitionsById,\r\n    Object.keys(state.transitionsById).filter(x => x !== transitionId)\r\n  );\r\n  let transitionWindows = state.transitionWindows;\r\n\r\n  const transitionWindowIndex = findIndex(\r\n    transitionWindows,\r\n    x => x.tick === transition.tick\r\n  );\r\n  if (transitionWindowIndex !== -1) {\r\n    const transitionWindow = transitionWindows[transitionWindowIndex];\r\n\r\n    const tickWindowTransitionIndex = transitionWindow.transitionIds.indexOf(\r\n      transitionId\r\n    );\r\n    if (tickWindowTransitionIndex !== -1) {\r\n      if (transitionWindow.transitionIds.length === 1) {\r\n        // Only one element left, remove the window.\r\n        transitionWindows = [\r\n          ...transitionWindows.slice(0, transitionWindowIndex),\r\n          ...transitionWindows.slice(transitionWindowIndex + 1)\r\n        ];\r\n      } else {\r\n        // Remove the transition from the tick window.\r\n        transitionWindows = [...transitionWindows];\r\n        const transitionIds =\r\n          transitionWindows[transitionWindowIndex].transitionIds;\r\n        transitionWindows[transitionWindowIndex] = {\r\n          ...transitionWindows[transitionWindowIndex],\r\n          transitionIds: [\r\n            ...transitionIds.slice(0, tickWindowTransitionIndex),\r\n            ...transitionIds.slice(tickWindowTransitionIndex + 1)\r\n          ]\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    transitionsById,\r\n    transitionWindows\r\n  };\r\n}\r\n","export interface Point {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface Size {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport interface Rectangle {\r\n  p1: Point;\r\n  p2: Point;\r\n}\r\n\r\nexport interface IDMap<T> {\r\n  [key: string]: T;\r\n}\r\n\r\nexport type MaybeArray<T> = T | T[];\r\nexport function asArray<T>(value: MaybeArray<T>): T[] {\r\n  return Array.isArray(value) ? value : [value];\r\n}\r\n","import { isAddNodeAction } from \"@/actions/node-add\";\r\n\r\nimport { createSimulatorReducer } from \"../utils\";\r\n\r\nimport { collectNodeTransitions } from \"./utils\";\r\n\r\nexport default createSimulatorReducer((state, action, appState) => {\r\n  if (!isAddNodeAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { nodeId } = action.payload;\r\n\r\n  return collectNodeTransitions(state, nodeId, appState);\r\n\r\n  // const def = NodeTypes[type];\r\n  // if (!def) {\r\n  //   return state;\r\n  // }\r\n\r\n  // const inputs = inputsOf(def);\r\n  // const outputs = outputsOf(def);\r\n\r\n  // const result = def.evolve\r\n  //   ? def.evolve(\r\n  //       undefined,\r\n  //       mapValues(inputs, () => false),\r\n  //       state.tick\r\n  //     )\r\n  //   : {};\r\n\r\n  // const nodeState = result.state || {};\r\n\r\n  // let transitions: OutputTransition[] = [];\r\n  // if (result.transitions) {\r\n  //   transitions = asArray(result.transitions);\r\n  // }\r\n\r\n  // const outputValues = transitions.reduce(\r\n  //   (values, transition) => ({ ...values, ...transition.valuesByPin }),\r\n  //   mapValues(outputs, () => false)\r\n  // );\r\n\r\n  // return {\r\n  //   ...state,\r\n  //   nodeStatesByNodeId: {\r\n  //     ...state.nodeStatesByNodeId,\r\n  //     [id]: nodeState\r\n  //   },\r\n  //   nodeOutputValuesByNodeId: {\r\n  //     ...state.nodeOutputValuesByNodeId,\r\n  //     [id]: outputValues\r\n  //   }\r\n  // };\r\n});\r\n","import pick from \"lodash/pick\";\r\n\r\nimport { AppState } from \"@/store\";\r\nimport { nodeIdsSelector } from \"@/services/graph/selectors/nodes\";\r\nimport { isDeleteNodeAction } from \"@/actions/node-delete\";\r\n\r\nimport { SimulatorState } from \"../state\";\r\n\r\nimport { createSimulatorReducer } from \"../utils\";\r\nimport { removeTransitionById } from \"./utils\";\r\n\r\nexport default createSimulatorReducer((state, action, appState) => {\r\n  if (!isDeleteNodeAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { nodeIds } = action.payload;\r\n\r\n  return nodeIds.reduce(\r\n    (state, nodeId) => deleteNodeById(state, nodeId, appState),\r\n    state\r\n  );\r\n});\r\n\r\nfunction deleteNodeById(\r\n  state: SimulatorState,\r\n  nodeId: string,\r\n  appState: AppState\r\n): SimulatorState {\r\n  const removeTransitionIds = Object.keys(state.transitionsById).filter(\r\n    id => state.transitionsById[id].nodeId === nodeId\r\n  );\r\n\r\n  state = removeTransitionIds.reduce(\r\n    (state, transitionId) => removeTransitionById(state, transitionId),\r\n    state\r\n  );\r\n\r\n  const remainingNodeIds = nodeIdsSelector(appState).filter(x => x !== nodeId);\r\n\r\n  return {\r\n    ...state,\r\n    nodeStatesByNodeId: pick(state.nodeStatesByNodeId, remainingNodeIds),\r\n    nodeOutputValuesByNodeId: pick(\r\n      state.nodeOutputValuesByNodeId,\r\n      remainingNodeIds\r\n    )\r\n  };\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_NODE_INTERACT = \"@node/interact\" as const;\r\nexport const interactNode = (nodeId: string) => ({\r\n  type: ACTION_NODE_INTERACT,\r\n  payload: { nodeId }\r\n});\r\nexport type InteractNodeAction = ReturnType<typeof interactNode>;\r\nexport function isInteractNodeAction(\r\n  action: AnyAction\r\n): action is InteractNodeAction {\r\n  return action.type === ACTION_NODE_INTERACT;\r\n}\r\n","import { fpSet } from \"@/utils\";\r\n\r\nimport { isInteractNodeAction } from \"@/actions/node-interact\";\r\n\r\nimport { createSimulatorReducer } from \"../utils\";\r\n\r\nimport { collectNodeTransitions } from \"./utils\";\r\nimport { nodeDefSelector } from \"@/services/graph/selectors/nodes\";\r\n\r\nexport default createSimulatorReducer((state, action, appState) => {\r\n  if (!isInteractNodeAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { nodeId } = action.payload;\r\n\r\n  const def = nodeDefSelector(appState, nodeId);\r\n\r\n  if (!def || !def.interact) {\r\n    return state;\r\n  }\r\n\r\n  const nodeState = state.nodeStatesByNodeId[nodeId];\r\n  const newState = def.interact(nodeState);\r\n  state = fpSet(state, \"nodeStatesByNodeId\", nodeId, newState);\r\n\r\n  return collectNodeTransitions(state, nodeId, appState);\r\n});\r\n","import pick from \"lodash/pick\";\r\nimport difference from \"lodash/difference\";\r\n\r\nimport { AppState } from \"@/store\";\r\nimport { isTickSimAction } from \"@/actions/sim-tick\";\r\nimport { nodeOutputConnectionsSelector } from \"@/services/graph/selectors/wires\";\r\n\r\nimport { SimulatorState } from \"../state\";\r\nimport { SimTransitionWindow } from \"../types\";\r\n\r\nimport { collectNodeTransitions } from \"./utils\";\r\nimport { createSimulatorReducer } from \"../utils\";\r\n\r\nexport default createSimulatorReducer((state, action, appState) => {\r\n  if (!isTickSimAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { tickCount } = action.payload;\r\n\r\n  const endTick = state.tick + tickCount;\r\n\r\n  // We cannot grab the windows ahead of time, as some windows might generate more windows\r\n  //  for future ticks.\r\n\r\n  // Pre-clone windows as we wil be repeatedly modifying it.\r\n  state = {\r\n    ...state,\r\n    transitionWindows: [...state.transitionWindows]\r\n  };\r\n\r\n  let saftyCount = tickCount + 1;\r\n  while (\r\n    state.transitionWindows.length > 0 &&\r\n    state.transitionWindows[0].tick <= endTick\r\n  ) {\r\n    if (--saftyCount === 0) {\r\n      // If we have seen more windows than ticks, something is creating windows for past ticks.\r\n      throw new Error(\r\n        `Maximum ticks per sim evolution exceeded.  This is an indication that windows are being generated for past ticks.`\r\n      );\r\n    }\r\n\r\n    // We can safely mutate here, as even if the array is regenerated\r\n    //  from a tick it will still be a fresh copy that has not yet been\r\n    //  consumed by redux.\r\n    const window = state.transitionWindows.shift()!;\r\n    state = tickWindow(state, window, appState);\r\n  }\r\n\r\n  // If we did not encounter a window on our last tick, jump ahead to that tick.\r\n  if (state.tick != endTick) {\r\n    state = {\r\n      ...state,\r\n      tick: endTick\r\n    };\r\n  }\r\n\r\n  return state;\r\n});\r\n\r\nfunction tickWindow(\r\n  state: SimulatorState,\r\n  window: SimTransitionWindow,\r\n  appState: AppState\r\n): SimulatorState {\r\n  // Update the current tick, as it is referenced\r\n  //  during transition collection.\r\n  state = {\r\n    ...state,\r\n    tick: window.tick,\r\n    // pre-clone outputs for mutation below\r\n    nodeOutputValuesByNodeId: {\r\n      ...state.nodeOutputValuesByNodeId\r\n    }\r\n  };\r\n\r\n  let updatedNodes = [];\r\n  for (const tid of window.transitionIds) {\r\n    const { nodeId, valuesByOutputPin } = state.transitionsById[tid];\r\n\r\n    // nodeOutputValuesByNodeId is pre-cloned\r\n    state.nodeOutputValuesByNodeId[nodeId] = {\r\n      ...state.nodeOutputValuesByNodeId[nodeId],\r\n      ...valuesByOutputPin\r\n    };\r\n\r\n    // Add each node we output to, to the output list.\r\n    const outputConnections = nodeOutputConnectionsSelector(appState, nodeId);\r\n    for (const outConn of outputConnections) {\r\n      const nodeId = outConn.inputPin.nodeId;\r\n      if (updatedNodes.indexOf(nodeId) === -1) {\r\n        updatedNodes.push(nodeId);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Remove all window transitions as they have been consumed.\r\n  // State is cloned above\r\n  state.transitionsById = pick(\r\n    state.transitionsById,\r\n    difference(Object.keys(state.transitionsById), window.transitionIds)\r\n  );\r\n\r\n  for (const nodeId of updatedNodes) {\r\n    state = collectNodeTransitions(state, nodeId, appState);\r\n  }\r\n\r\n  return state;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_SIM_FASTFORWARD = \"@sim/fastforward\" as const;\r\nexport const fastForwardSim = () => ({\r\n  type: ACTION_SIM_FASTFORWARD\r\n});\r\nexport type FastForwardSimAction = ReturnType<typeof fastForwardSim>;\r\nexport function isFastForwardSimAction(\r\n  action: AnyAction\r\n): action is FastForwardSimAction {\r\n  return action.type === ACTION_SIM_FASTFORWARD;\r\n}\r\n","import { isPauseSimAction } from \"@/actions/sim-pause\";\r\n\r\nimport { createSimulatorReducer } from \"../utils\";\r\nimport { isSimActiveSelector } from \"../selectors/run\";\r\nimport { SimulatorState } from \"../state\";\r\n\r\nexport default createSimulatorReducer((state, action) => {\r\n  if (!isPauseSimAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { mode } = action.payload;\r\n\r\n  if (!isSimActiveSelector.local(state)) {\r\n    return state;\r\n  }\r\n\r\n  let runMode = state.mode;\r\n\r\n  switch (mode) {\r\n    case true:\r\n      runMode = \"pause\";\r\n      break;\r\n    case false:\r\n      runMode = \"run\";\r\n      break;\r\n    case \"toggle\":\r\n      runMode = runMode == \"run\" ? \"pause\" : \"run\";\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    mode: runMode\r\n  };\r\n});\r\n","import { isStartSimAction } from \"@/actions/sim-start\";\r\n\r\nimport { createSimulatorReducer } from \"../utils\";\r\n\r\nimport { simInit } from \"./utils\";\r\n\r\nexport default createSimulatorReducer((state, action, appState) => {\r\n  if (!isStartSimAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  state = simInit(state, appState);\r\n\r\n  return {\r\n    ...state,\r\n    mode: \"run\"\r\n  };\r\n});\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_SIM_STOP = \"@sim/stop\" as const;\r\nexport const stopSim = () => ({\r\n  type: ACTION_SIM_STOP\r\n});\r\nexport type StartSimAction = ReturnType<typeof stopSim>;\r\nexport function isStopSimAction(action: AnyAction): action is StartSimAction {\r\n  return action.type === ACTION_SIM_STOP;\r\n}\r\n","import { isStopSimAction } from \"@/actions/sim-stop\";\r\n\r\nimport { createSimulatorReducer } from \"../utils\";\r\n\r\nimport { defaultSimulatorState } from \"../state\";\r\n\r\nexport default createSimulatorReducer((state, action, appState) => {\r\n  if (!isStopSimAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  // Reset the simulator but keep the ticks per second choice.\r\n  return {\r\n    ...defaultSimulatorState,\r\n    ticksPerSecond: state.ticksPerSecond\r\n  };\r\n});\r\n","import { isAttachWireAction } from \"@/actions/wire-attach\";\r\n\r\nimport { createSimulatorReducer } from \"../utils\";\r\n\r\nimport { collectNodeTransitions } from \"./utils\";\r\n\r\nexport default createSimulatorReducer((state, action, appState) => {\r\n  if (!isAttachWireAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { p1, p2 } = action.payload;\r\n\r\n  // We only need to recalculate the input,\r\n  //  but we do not know which one that is.\r\n\r\n  state = collectNodeTransitions(state, p1.nodeId, appState);\r\n  state = collectNodeTransitions(state, p2.nodeId, appState);\r\n  return state;\r\n});\r\n","import { isDetatchWireAction } from \"@/actions/wire-detatch\";\r\n\r\nimport { createSimulatorReducer } from \"../utils\";\r\n\r\nimport { collectNodeTransitions } from \"./utils\";\r\nimport { wireByIdSelector } from \"@/services/graph/selectors/wires\";\r\n\r\nexport default createSimulatorReducer((state, action, appState) => {\r\n  if (!isDetatchWireAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { wireId } = action.payload;\r\n\r\n  const wire = wireByIdSelector(appState, wireId);\r\n  if (!wire) {\r\n    return state;\r\n  }\r\n\r\n  const affectedNodes = [wire.inputPin.nodeId, wire.outputPin.nodeId];\r\n\r\n  // For now, just collect transitions on all nodes.\r\n  for (const nodeId of affectedNodes) {\r\n    state = collectNodeTransitions(state, nodeId, appState);\r\n  }\r\n  return state;\r\n});\r\n","import { concatReducers } from \"@/store/utils\";\r\n\r\nimport fileNewReducer from \"./file-new\";\r\nimport nodeAddReducer from \"./node-add\";\r\nimport nodeDeleteReducer from \"./node-delete\";\r\nimport nodeInteractReducer from \"./node-interact\";\r\nimport simEvolveReducer from \"./sim-evolve\";\r\nimport simFastforwardReducer from \"./sim-fastforward\";\r\nimport simPauseReducer from \"./sim-pause\";\r\nimport simStartReducer from \"./sim-start\";\r\nimport simStopReducer from \"./sim-stop\";\r\nimport wireAttachReducer from \"./wire-attach\";\r\nimport wireDetatchReducer from \"./wire-detatch\";\r\n\r\nconst simulatorReducer = concatReducers(\r\n  fileNewReducer,\r\n  nodeAddReducer,\r\n  nodeDeleteReducer,\r\n  nodeInteractReducer,\r\n  simEvolveReducer,\r\n  simFastforwardReducer,\r\n  simPauseReducer,\r\n  simStartReducer,\r\n  simStopReducer,\r\n  wireAttachReducer,\r\n  wireDetatchReducer\r\n);\r\n\r\nexport default simulatorReducer;\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { AppState, defaultAppState } from \"@/store\";\r\n\r\nimport { isFastForwardSimAction } from \"@/actions/sim-fastforward\";\r\nimport { tickSim } from \"@/actions/sim-tick\";\r\n\r\nimport evolveSimReducer from \"./sim-evolve\";\r\n\r\nexport default function simFastForwardReducer(\r\n  state: AppState = defaultAppState,\r\n  action: AnyAction\r\n) {\r\n  if (!isFastForwardSimAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { tick, transitionWindows } = state.services.simulator;\r\n\r\n  if (transitionWindows.length === 0) {\r\n    return state;\r\n  }\r\n\r\n  const nextWindowTick = transitionWindows[0].tick - tick;\r\n  return evolveSimReducer(state, tickSim(nextWindowTick));\r\n}\r\n","import {\r\n  createServiceReducerCreator,\r\n  createServiceSelectorCreator\r\n} from \"../service-state-utils\";\r\n\r\nexport const createViewReducer = createServiceReducerCreator(\"view\");\r\nexport const createViewSelector = createServiceSelectorCreator(\"view\");\r\n","import { isViewZoomAction } from \"@/actions/view-zoom\";\r\nimport { createViewReducer } from \"../utils\";\r\n\r\nconst SCALE_FACTOR = 1.03;\r\n\r\nexport default createViewReducer((state, action) => {\r\n  if (!isViewZoomAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { scale } = state;\r\n  const { delta } = action.payload;\r\n\r\n  return {\r\n    ...state,\r\n    scale:\r\n      delta > 0 ? scale * delta * SCALE_FACTOR : scale / (-delta * SCALE_FACTOR)\r\n  };\r\n});\r\n","import { concatReducers } from \"@/store/utils\";\r\n\r\nimport viewZoomReducer from \"./view-zoom\";\r\n\r\nexport default concatReducers(viewZoomReducer);\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_SELECT_PIN = \"@editor/field/select-pin\" as const;\r\nexport const selectPin = (nodeId: string, pinId: string) => ({\r\n  type: ACTION_SELECT_PIN,\r\n  payload: {\r\n    nodeId,\r\n    pinId\r\n  }\r\n});\r\nexport type SelectPinAction = ReturnType<typeof selectPin>;\r\nexport function isSelectPinAction(\r\n  action: AnyAction\r\n): action is SelectPinAction {\r\n  return action.type === ACTION_SELECT_PIN;\r\n}\r\n","import { createSelector } from \"reselect\";\r\n\r\nimport { AppState } from \"@/store\";\r\n\r\nimport { CircuitFieldState } from \"./state\";\r\n\r\nexport const circuitFieldState = (state: AppState) =>\r\n  state.ui.circuitEditor.circuitField;\r\n\r\nexport const selectedPinSelector = createSelector(\r\n  circuitFieldState,\r\n  (s: CircuitFieldState) => s.selectedPin\r\n);\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { fpSet } from \"@/utils\";\r\n\r\nimport { AppState, defaultAppState } from \"@/store\";\r\nimport rootReducer from \"@/store/reducer\";\r\n\r\nimport { attachWire } from \"@/actions/wire-attach\";\r\n\r\nimport { nodePinDirectionSelector } from \"@/services/graph/selectors/wires\";\r\n\r\nimport { isSelectPinAction, SelectPinAction } from \"../actions/select-pin\";\r\n\r\nimport { selectedPinSelector } from \"../selectors\";\r\n\r\nexport default function selectPinReducer(\r\n  state: AppState = defaultAppState,\r\n  action: AnyAction\r\n) {\r\n  if (!isSelectPinAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { nodeId, pinId } = action.payload;\r\n\r\n  const clickedPinDirection = nodePinDirectionSelector(state, {\r\n    nodeId,\r\n    pinId\r\n  });\r\n  if (!clickedPinDirection) {\r\n    return state;\r\n  }\r\n\r\n  const selectedPin = selectedPinSelector(state);\r\n  if (!selectedPin) {\r\n    return doSelectPinReducer(state, action);\r\n  }\r\n\r\n  const selectedPinDirection = nodePinDirectionSelector(state, selectedPin);\r\n  if (!selectedPinDirection) {\r\n    return doSelectPinReducer(state, action);\r\n  }\r\n\r\n  if (selectedPinDirection !== clickedPinDirection) {\r\n    return rootReducer(state, attachWire(selectedPin, { nodeId, pinId }));\r\n  }\r\n\r\n  return doSelectPinReducer(state, action);\r\n}\r\n\r\nfunction doSelectPinReducer(\r\n  state: AppState,\r\n  action: SelectPinAction\r\n): AppState {\r\n  const { nodeId, pinId } = action.payload;\r\n  return fpSet(state, \"ui\", \"circuitEditor\", \"circuitField\", value => ({\r\n    ...value,\r\n    selectedPin: {\r\n      nodeId,\r\n      pinId\r\n    }\r\n  }));\r\n}\r\n","import { ACTION_SELECT_REGION } from \"@/actions/select-region\";\r\nimport { ACTION_SELECT_NODES } from \"@/actions/select-nodes\";\r\nimport { ACTION_SELECT_CLEAR } from \"@/actions/select-clear\";\r\n\r\nimport { createFieldReducer } from \"./utils\";\r\n\r\nconst SELECTED_NODE_CHANGE_ACTIONS = [\r\n  ACTION_SELECT_REGION,\r\n  ACTION_SELECT_NODES,\r\n  ACTION_SELECT_CLEAR\r\n];\r\nexport default createFieldReducer((state, action) => {\r\n  if (SELECTED_NODE_CHANGE_ACTIONS.indexOf(action.type) === -1) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    selectedPin: null\r\n  };\r\n});\r\n","import { AnyAction, Reducer } from \"redux\";\r\n\r\nimport { AppState, defaultAppState } from \"@/store\";\r\nimport { fpSet } from \"@/utils\";\r\n\r\nimport { CircuitFieldState } from \"../state\";\r\n\r\nexport interface CircuitFieldReducer {\r\n  (state: CircuitFieldState, action: AnyAction): CircuitFieldState;\r\n}\r\n\r\nexport function createFieldReducer(\r\n  reducer: CircuitFieldReducer\r\n): Reducer<AppState, AnyAction> {\r\n  return (state: AppState = defaultAppState, action: AnyAction) => {\r\n    const newState = reducer(state.ui.circuitEditor.circuitField, action);\r\n    if (state.ui.circuitEditor.circuitField != newState) {\r\n      return fpSet(state, \"ui\", \"circuitEditor\", \"circuitField\", newState);\r\n    }\r\n    return state;\r\n  };\r\n}\r\n","import { concatReducers } from \"@/store/utils\";\r\n\r\nimport selectPinReducer from \"./select-pin\";\r\nimport selectedNodesChangedReducer from \"./selected-nodes-changed\";\r\n\r\nconst circuitFieldReducer = concatReducers(\r\n  selectPinReducer,\r\n  selectedNodesChangedReducer\r\n);\r\n\r\nexport default circuitFieldReducer;\r\n","import { concatReducers } from \"@/store/utils\";\r\n\r\nimport circuitFieldReducer from \"../components/CircuitFieldView/components/CircuitField/reducer\";\r\n\r\nexport default concatReducers(circuitFieldReducer);\r\n","import clipboardReducer from \"@/services/clipboard/reducer\";\r\nimport fieldReducer from \"@/services/field/reducer\";\r\nimport graphReducer from \"@/services/graph/reducer\";\r\nimport savedataReducer from \"@/services/savedata/reducer\";\r\nimport selectionReducer from \"@/services/selection/reducer\";\r\nimport simulatorReducer from \"@/services/simulator/reducer\";\r\nimport viewReducer from \"@/services/view/reducer\";\r\n\r\nimport circuitEditorReducer from \"@/pages/CircuitEditor/reducer\";\r\n\r\nimport { concatReducers, finalizeReducerList } from \"./utils\";\r\n\r\nconst reducer = finalizeReducerList(\r\n  concatReducers(\r\n    // This reducer should run before the others.\r\n    //  Particularly simulatorReducer, which requires the graph to have been\r\n    //  updated before it\r\n    graphReducer,\r\n\r\n    clipboardReducer,\r\n    fieldReducer,\r\n    selectionReducer,\r\n    simulatorReducer,\r\n    viewReducer,\r\n\r\n    circuitEditorReducer,\r\n\r\n    // Place this last, so it always has the most up to date data.\r\n    savedataReducer\r\n  )\r\n);\r\n\r\nexport default reducer;\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport freeze from \"redux-freeze\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport { doInit } from \"@/actions/init\";\r\n\r\nimport {\r\n  actionSanitizer,\r\n  stateSanitizer,\r\n  actionsBlacklist\r\n} from \"./devtool-sanitizer\";\r\n\r\nimport saga from \"./saga\";\r\nimport reducer from \"./reducer\";\r\n\r\nconst composeEnhancers =\r\n  (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      actionSanitizer,\r\n      stateSanitizer,\r\n      actionsBlacklist\r\n    })) ||\r\n  compose;\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport const store = createStore(\r\n  reducer,\r\n  composeEnhancers(applyMiddleware(freeze, sagaMiddleware))\r\n);\r\n\r\nsagaMiddleware.run(saga);\r\nstore.dispatch(doInit());\r\n","import { fork } from \"redux-saga/effects\";\r\n\r\nimport simulatorSaga from \"@/services/simulator/saga\";\r\n\r\nexport default function* appSaga() {\r\n  yield fork(simulatorSaga);\r\n}\r\n","import { useSelector as useSelectorRedux } from \"react-redux\";\r\n\r\nimport { AppState } from \"@/store\";\r\n\r\nexport default function useSelector<T>(selector: (s: AppState) => T) {\r\n  return useSelectorRedux<AppState, T>(selector);\r\n}\r\n","import { createViewSelector } from \"../utils\";\r\n\r\nexport const viewScaleSelector = createViewSelector(s => s.scale);\r\n","import { os } from \"platform\";\r\n\r\nconst OS_MAC = /(Mac|iOS|OS\\ X)/;\r\n\r\nexport const keyboardIsMac = OS_MAC.test((os || \"undefined\").toString());\r\n\r\nexport const keyboardCommandModifier = keyboardIsMac ? \"command\" : \"ctrl\";\r\n","import { keyboardCommandModifier } from \"@/runtime-env\";\r\n\r\nexport const KEYMAP_SIM_STEP = \"keymap:CircuitEditor/SimStep\" as const;\r\nexport const KEYMAP_SIM_FASTFORWARD = \"keymap:CircuitEditor/SimFastForward\" as const;\r\nexport const KEYMAP_SELECT_ALL = \"keymap:CircuitEditor/SelectAll\" as const;\r\nexport const KEYMAP_COPY = \"keymap:CircuitEditor/Copy\" as const;\r\nexport const KEYMAP_PASTE = \"keymap:CircuitEditor/Paste\" as const;\r\nexport const KEYMAP_DELETE = \"keymap:CircuitEditor/Delete\" as const;\r\n\r\nconst keymap = {\r\n  [KEYMAP_SIM_STEP]: \"space\",\r\n  [KEYMAP_SIM_FASTFORWARD]: \"shift+space\",\r\n  [KEYMAP_SELECT_ALL]: `${keyboardCommandModifier}+a`,\r\n  [KEYMAP_COPY]: `${keyboardCommandModifier}+c`,\r\n  [KEYMAP_PASTE]: `${keyboardCommandModifier}+v`,\r\n  [KEYMAP_DELETE]: [\"backspace\", \"del\"]\r\n};\r\nexport default keymap;\r\n\r\nexport type KeymapKeys = keyof typeof keymap;\r\nexport type KeymapHandler = Record<KeymapKeys, HotkeyHandler>;\r\n","import * as React from \"react\";\r\n\r\nexport const fieldSvgElementContext = React.createContext<SVGSVGElement | null>(\r\n  null\r\n);\r\n\r\nconst ContextProvider = fieldSvgElementContext.Provider;\r\n\r\nexport const FieldSvgElementProvider: React.FC<{\r\n  value: React.RefObject<SVGSVGElement | null>;\r\n}> = ({ value, children }) => {\r\n  // Force the component to rerender when the ref changes.\r\n  const [svgElement, setSvgElement] = React.useState<SVGSVGElement | null>(\r\n    null\r\n  );\r\n  React.useEffect(() => {\r\n    setSvgElement(value.current);\r\n  }, [value.current]);\r\n\r\n  return <ContextProvider value={svgElement}>{children}</ContextProvider>;\r\n};\r\n","import { createSelector } from \"reselect\";\r\n\r\nimport { AppState } from \"@/store\";\r\nimport { pointSubtract, normalizeRectangle } from \"@/geometry\";\r\n\r\nimport { FieldState } from \"../state\";\r\nimport { createFieldSelector } from \"../utils\";\r\n\r\nexport const selectionRectSelector = createSelector(\r\n  (s: AppState) => s.services.field,\r\n  (s: FieldState) =>\r\n    s.dragMode === \"select\" && s.dragStart && s.dragEnd\r\n      ? normalizeRectangle(s.dragStart, s.dragEnd)\r\n      : null\r\n);\r\n\r\nexport const dragMoveOffsetSelector = createSelector(\r\n  (s: AppState) => s.services.field,\r\n  (s: FieldState) =>\r\n    s.dragMode === \"move\" && s.dragStart && s.dragEnd\r\n      ? pointSubtract(s.dragEnd, s.dragStart)\r\n      : null\r\n);\r\n\r\nexport const dragEndSelector = createFieldSelector(s => s.dragEnd);\r\n\r\nexport const isDraggingNewNodeSelector = createFieldSelector(\r\n  s => s.dragMode === \"new-node\"\r\n);\r\n\r\nexport const dragNewNodeTypeSelector = createFieldSelector(s =>\r\n  s.dragMode === \"new-node\" ? s.dragNewNodeType : null\r\n);\r\n","import { Point } from \"@/types\";\r\n\r\nexport function getFieldCoord(field: SVGSVGElement, p: Point) {\r\n  const ctm = field.getScreenCTM();\r\n  if (!ctm) {\r\n    return p;\r\n  }\r\n\r\n  const pt = field.createSVGPoint();\r\n  pt.x = p.x;\r\n  pt.y = p.y;\r\n  const translated = pt.matrixTransform(ctm.inverse());\r\n  return { x: translated.x, y: translated.y };\r\n}\r\n","import * as React from \"react\";\r\n\r\nimport { Point } from \"@/types\";\r\n\r\nimport { fieldSvgElementContext } from \"../contexts/fieldSvgElement\";\r\nimport { getFieldCoord } from \"../utils\";\r\nimport { pointSubtract, ZeroPoint } from \"@/geometry\";\r\n\r\nexport function useMouseCoords(): (p: Point) => Point {\r\n  const fieldRef = React.useContext(fieldSvgElementContext);\r\n  return React.useCallback(\r\n    (p: Point) => {\r\n      if (!fieldRef) {\r\n        return p;\r\n      }\r\n      return getFieldCoord(fieldRef, p);\r\n    },\r\n    [fieldRef]\r\n  );\r\n}\r\n\r\nexport function useEventMouseCoords(): (\r\n  e: MouseEvent | React.MouseEvent\r\n) => Point {\r\n  const fieldRef = React.useContext(fieldSvgElementContext);\r\n  return React.useCallback(\r\n    (e: MouseEvent | React.MouseEvent) => {\r\n      if (!fieldRef) {\r\n        return ZeroPoint;\r\n      }\r\n      const p: Point = {\r\n        x: e.pageX,\r\n        y: e.pageY\r\n      };\r\n      return getFieldCoord(fieldRef, p);\r\n    },\r\n    [fieldRef]\r\n  );\r\n}\r\n","import * as React from \"react\";\r\n\r\nimport {\r\n  NodeType,\r\n  NodeTypes,\r\n  NodePinDefinition,\r\n  NodePinDirection\r\n} from \"@/node-defs\";\r\nimport { normalizeVisuals } from \"@/node-defs/utils\";\r\n\r\nexport interface RenderPinProps extends NodePinDefinition {\r\n  id: string;\r\n  direction: NodePinDirection;\r\n}\r\nexport interface NodeVisualProps {\r\n  x?: number;\r\n  y?: number;\r\n  nodeType: NodeType;\r\n  nodeState: any;\r\n  colorOverride?: string;\r\n  renderPin?(props: RenderPinProps): React.ReactElement<any>;\r\n  onClick?(e: React.MouseEvent): void;\r\n  onMouseDown?(e: React.MouseEvent): void;\r\n  onMouseOver?(e: React.MouseEvent): void;\r\n  onMouseUp?(e: React.MouseEvent): void;\r\n  onMouseLeave?(e: React.MouseEvent): void;\r\n}\r\n\r\ntype Props = NodeVisualProps;\r\nclass NodeVisual extends React.Component<Props> {\r\n  render() {\r\n    const {\r\n      x = 0,\r\n      y = 0,\r\n      nodeType,\r\n      nodeState,\r\n      colorOverride,\r\n      renderPin,\r\n      onClick,\r\n      onMouseDown,\r\n      onMouseOver,\r\n      onMouseUp,\r\n      onMouseLeave\r\n    } = this.props;\r\n\r\n    if (!nodeType) {\r\n      console.warn(\"NodeVisual received undefined nodeType\");\r\n      return null;\r\n    }\r\n\r\n    const def = NodeTypes[nodeType];\r\n\r\n    let body: React.ReactNode;\r\n    let hitPath: string | undefined;\r\n    let pins: React.ReactNode = null;\r\n    if (!def) {\r\n      body = <rect x={x} y={y} width={50} height={50} fill=\"red\" />;\r\n    } else {\r\n      const { shapePath } = def.visual;\r\n      const visuals = normalizeVisuals(shapePath, nodeState);\r\n      body = visuals.map((v, i) => (\r\n        <path\r\n          key={i}\r\n          d={v.path}\r\n          fill={colorOverride || v.fill}\r\n          stroke={colorOverride || v.stroke}\r\n          strokeWidth={v.strokeWidth}\r\n        />\r\n      ));\r\n      hitPath = def.visual.hitPath;\r\n\r\n      if (renderPin) {\r\n        pins = Object.keys(def.pins).map(key => {\r\n          const pin = def.pins[key];\r\n          let element = renderPin({\r\n            direction: pin.direction,\r\n            id: key,\r\n            ...pin\r\n          });\r\n          return React.cloneElement(element, { key: `input-${key}` });\r\n        });\r\n      }\r\n    }\r\n\r\n    const transform = x != 0 || y != 0 ? `translate(${x}, ${y})` : undefined;\r\n    return (\r\n      <g\r\n        className=\"node-visual\"\r\n        transform={transform}\r\n        onClick={onClick}\r\n        onMouseDown={onMouseDown}\r\n        onMouseOver={onMouseOver}\r\n        onMouseUp={onMouseUp}\r\n        onMouseLeave={onMouseLeave}\r\n      >\r\n        {hitPath && <path d={hitPath} fill=\"transparent\" onClick={onClick} />}\r\n        {body}\r\n        {pins}\r\n      </g>\r\n    );\r\n  }\r\n}\r\nexport default NodeVisual;\r\n","import * as React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport useSelector from \"@/hooks/useSelector\";\r\n\r\nimport {\r\n  isDraggingNewNodeSelector,\r\n  dragNewNodeTypeSelector,\r\n  dragEndSelector\r\n} from \"@/services/field/selectors/drag\";\r\nimport {\r\n  fieldWidthSelector,\r\n  fieldHeightSelector\r\n} from \"@/services/field/selectors/bounds\";\r\n\r\nimport { fieldDragContinue } from \"@/actions/field-drag-continue\";\r\n\r\nimport { useEventMouseCoords } from \"../hooks/useMouseCoords\";\r\nimport NodeVisual from \"@/pages/CircuitEditor/components/NodeVisual\";\r\n\r\nconst DragNewNodeLayer: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const getMouseCoords = useEventMouseCoords();\r\n  const width = useSelector(state => fieldWidthSelector(state));\r\n  const height = useSelector(state => fieldHeightSelector(state));\r\n  const isDraggingNewNode = useSelector(state =>\r\n    isDraggingNewNodeSelector(state)\r\n  );\r\n  const dragEnd = useSelector(state => dragEndSelector(state));\r\n  const draggingNodeType = useSelector(state => dragNewNodeTypeSelector(state));\r\n\r\n  const onMouseMove = React.useCallback(\r\n    (e: React.MouseEvent) => {\r\n      const p = getMouseCoords(e);\r\n      dispatch(fieldDragContinue(p));\r\n    },\r\n    [getMouseCoords]\r\n  );\r\n\r\n  if (!isDraggingNewNode || !draggingNodeType) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {dragEnd && (\r\n        <g opacity={0.5}>\r\n          <NodeVisual\r\n            x={dragEnd.x}\r\n            y={dragEnd.y}\r\n            nodeType={draggingNodeType}\r\n            nodeState={{}}\r\n          />\r\n        </g>\r\n      )}\r\n      <rect\r\n        width={width}\r\n        height={height}\r\n        fill=\"transparent\"\r\n        onMouseMove={onMouseMove}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DragNewNodeLayer;\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport pick from \"lodash/pick\";\r\nimport mapValues from \"lodash/mapValues\";\r\nimport values from \"lodash/values\";\r\n\r\nimport { createStructuredSelector, createSelector } from \"reselect\";\r\n\r\nimport { AppState } from \"@/store\";\r\n\r\nimport { nodeTypesByIdSelector } from \"@/services/graph/selectors/nodes\";\r\nimport { nodeStatesByIdSelector } from \"@/services/simulator/selectors/nodes\";\r\nimport { nodePositionsByIdSelector } from \"@/services/field/selectors/positions\";\r\nimport { selectedNodeIdsSelector } from \"@/services/selection/selectors/selection\";\r\nimport { dragMoveOffsetSelector } from \"@/services/field/selectors/drag\";\r\n\r\nimport NodeVisual from \"@/pages/CircuitEditor/components/NodeVisual\";\r\n\r\nconst selectedNodePositionsById = createSelector(\r\n  selectedNodeIdsSelector,\r\n  nodePositionsByIdSelector,\r\n  (selectedNodeIds, nodePositionsById) =>\r\n    pick(nodePositionsById, selectedNodeIds)\r\n);\r\n\r\nconst selectedNodeTypesById = createSelector(\r\n  selectedNodeIdsSelector,\r\n  nodeTypesByIdSelector,\r\n  (selectedNodeIds, nodeTypesById) => pick(nodeTypesById, selectedNodeIds)\r\n);\r\n\r\nconst selectedNodeStatesById = createSelector(\r\n  selectedNodeIdsSelector,\r\n  nodeStatesByIdSelector,\r\n  (selectedNodeIds, nodeStatesById) => pick(nodeStatesById, selectedNodeIds)\r\n);\r\n\r\nconst stateSelectors = {\r\n  selectedNodePositionsById,\r\n  selectedNodeTypesById,\r\n  selectedNodeStatesById,\r\n  dragMoveOffset: dragMoveOffsetSelector\r\n};\r\ntype StateProps = ObjectValueReturnTypes<typeof stateSelectors>;\r\nconst mapStateToProps = createStructuredSelector<AppState, StateProps>(\r\n  stateSelectors\r\n);\r\n\r\ntype Props = StateProps;\r\nclass DragPreviewLayer extends React.Component<Props> {\r\n  render() {\r\n    const {\r\n      selectedNodePositionsById,\r\n      selectedNodeTypesById,\r\n      selectedNodeStatesById,\r\n      dragMoveOffset\r\n    } = this.props;\r\n\r\n    let elements: React.ReactNode | null = null;\r\n    if (dragMoveOffset) {\r\n      console.log(\"is drag\");\r\n      elements = values(\r\n        mapValues(selectedNodePositionsById, (p, nodeId) => (\r\n          <NodeVisual\r\n            key={nodeId}\r\n            nodeType={selectedNodeTypesById[nodeId]}\r\n            nodeState={selectedNodeStatesById[nodeId]}\r\n            x={p.x + dragMoveOffset.x}\r\n            y={p.y + dragMoveOffset.y}\r\n          />\r\n        ))\r\n      );\r\n    }\r\n    return (\r\n      <g id=\"drag-preview-layer\" opacity={0.3}>\r\n        {elements}\r\n      </g>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(DragPreviewLayer);\r\n","import { keyboardIsMac } from \"./runtime-env\";\r\n\r\nexport type SelectionMode = \"set\" | \"append\" | \"remove\" | \"toggle\";\r\n\r\nexport function getModifiers(e: MouseEvent): ModifierKeys {\r\n  const { ctrlKey, altKey, shiftKey, metaKey } = e;\r\n  return {\r\n    ctrlMetaKey: keyboardIsMac ? metaKey : ctrlKey,\r\n    altKey: altKey,\r\n    shiftKey\r\n  };\r\n}\r\n\r\nexport function getSelectMode(modifiers: ModifierKeys): SelectionMode {\r\n  if (modifiers.shiftKey && modifiers.ctrlMetaKey) {\r\n    return \"remove\";\r\n  }\r\n  if (modifiers.shiftKey) {\r\n    return \"append\";\r\n  }\r\n  if (modifiers.ctrlMetaKey) {\r\n    return \"toggle\";\r\n  }\r\n  return \"set\";\r\n}\r\n\r\nexport interface ModifierKeys {\r\n  ctrlMetaKey: boolean;\r\n  shiftKey: boolean;\r\n  altKey: boolean;\r\n}\r\n","import * as React from \"react\";\r\nimport { ZeroPoint, pointSubtract } from \"@/geometry\";\r\nimport { Point } from \"@/types\";\r\n\r\nexport interface UseMouseTracking {\r\n  startTracking(e: React.MouseEvent): void;\r\n  cancelTracking(): void;\r\n}\r\n\r\nexport interface MouseTrackingOptions {\r\n  dragThreshold?: number;\r\n  onClick?(e: MouseEvent): void;\r\n  onDragStart?(e: MouseEvent): void;\r\n  onDragMove?(offset: Point, e: MouseEvent): void;\r\n  onDragEnd?(offset: Point, e: MouseEvent): void;\r\n}\r\n\r\nexport default function useMouseTracking(\r\n  opts: MouseTrackingOptions\r\n): UseMouseTracking {\r\n  const {\r\n    dragThreshold = 5,\r\n    onClick,\r\n    onDragStart,\r\n    onDragMove,\r\n    onDragEnd\r\n  } = opts;\r\n\r\n  // We need both state and ref for this.\r\n  //  State lets us trigger a rerender / useEffect.\r\n  //  Ref lets us check for cancellation when handling document events.\r\n  //  We seem to get a few rogue onMouseMove events after we try to stop tracking.\r\n  const [isTracking, setTracking] = React.useState(false);\r\n  const isTrackingRef = React.useRef(false);\r\n\r\n  const isDraggingRef = React.useRef(false);\r\n  const mouseDownRef = React.useRef<Point>(ZeroPoint);\r\n\r\n  const startTracking = React.useCallback((e: React.MouseEvent) => {\r\n    if (isTrackingRef.current) {\r\n      return;\r\n    }\r\n\r\n    isTrackingRef.current = true;\r\n    setTracking(true);\r\n    mouseDownRef.current = { x: e.pageX, y: e.pageY };\r\n  }, []);\r\n\r\n  const cancelTracking = React.useCallback(() => {\r\n    isTrackingRef.current = false;\r\n    setTracking(false);\r\n    isDraggingRef.current = false;\r\n    mouseDownRef.current = ZeroPoint;\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (!isTracking) {\r\n      return;\r\n    }\r\n\r\n    function onMouseMove(e: MouseEvent) {\r\n      if (!isTrackingRef.current) {\r\n        return;\r\n      }\r\n\r\n      if (isDraggingRef.current) {\r\n        if (onDragMove) {\r\n          const offset = pointSubtract(\r\n            { x: e.pageX, y: e.pageY },\r\n            mouseDownRef.current\r\n          );\r\n          onDragMove(offset, e);\r\n        }\r\n      } else {\r\n        const d = mouseDownRef.current;\r\n        if (\r\n          Math.abs(d.x - e.pageX) >= dragThreshold ||\r\n          Math.abs(d.y - e.pageY) >= dragThreshold\r\n        ) {\r\n          isDraggingRef.current = true;\r\n          if (onDragStart) {\r\n            onDragStart(e);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    function onMouseUp(e: MouseEvent) {\r\n      if (!isTrackingRef.current) {\r\n        return;\r\n      }\r\n\r\n      if (isDraggingRef.current) {\r\n        if (onDragEnd) {\r\n          const offset = pointSubtract(\r\n            { x: e.pageX, y: e.pageY },\r\n            mouseDownRef.current\r\n          );\r\n          onDragEnd(offset, e);\r\n        }\r\n      } else {\r\n        if (onClick) {\r\n          onClick(e);\r\n        }\r\n      }\r\n\r\n      cancelTracking();\r\n    }\r\n\r\n    document.addEventListener(\"mousemove\", onMouseMove);\r\n    document.addEventListener(\"mouseup\", onMouseUp);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousemove\", onMouseMove);\r\n      document.removeEventListener(\"mouseup\", onMouseUp);\r\n    };\r\n  }, [isTracking]);\r\n\r\n  return {\r\n    startTracking,\r\n    cancelTracking\r\n  };\r\n}\r\n","import * as React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { Point } from \"@/types\";\r\nimport { getModifiers, getSelectMode } from \"@/selection-mode\";\r\n\r\nimport useMouseTracking from \"@/hooks/useMouseTracking\";\r\n\r\nimport { selectionRectSelector } from \"@/services/field/selectors/drag\";\r\n\r\nimport { clearSelection } from \"@/actions/select-clear\";\r\nimport { fieldDragStartSelect } from \"@/actions/field-drag-start-select\";\r\nimport { fieldDragContinue } from \"@/actions/field-drag-continue\";\r\nimport { fieldDragEnd } from \"@/actions/field-drag-end\";\r\n\r\nimport { useEventMouseCoords } from \"../hooks/useMouseCoords\";\r\n\r\nconst DragSelectLayer: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const selectionRect = useSelector(selectionRectSelector);\r\n\r\n  const getCoords = useEventMouseCoords();\r\n\r\n  const onClick = React.useCallback(() => {\r\n    dispatch(clearSelection());\r\n  }, []);\r\n\r\n  const onDragStart = React.useCallback(\r\n    (e: MouseEvent) => {\r\n      const p = getCoords(e);\r\n      dispatch(fieldDragStartSelect(p));\r\n    },\r\n    [getCoords]\r\n  );\r\n\r\n  const onDragMove = React.useCallback(\r\n    (offset: Point, e: MouseEvent) => {\r\n      const p = getCoords(e);\r\n      dispatch(fieldDragContinue(p));\r\n    },\r\n    [getCoords]\r\n  );\r\n\r\n  const onDragEnd = React.useCallback(\r\n    (offset: Point, e: MouseEvent) => {\r\n      const p = getCoords(e);\r\n      const modifiers = getModifiers(e);\r\n      const mode = getSelectMode(modifiers);\r\n      dispatch(fieldDragEnd(p, mode));\r\n    },\r\n    [getCoords]\r\n  );\r\n\r\n  const { startTracking } = useMouseTracking({\r\n    onClick,\r\n    onDragStart,\r\n    onDragMove,\r\n    onDragEnd\r\n  });\r\n  const onMouseDown = React.useCallback(\r\n    (e: React.MouseEvent) => {\r\n      if (e.defaultPrevented) {\r\n        return;\r\n      }\r\n      e.preventDefault();\r\n      startTracking(e);\r\n    },\r\n    [getCoords]\r\n  );\r\n\r\n  return (\r\n    <g id=\"drag-select-layer\">\r\n      <rect\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        fill=\"transparent\"\r\n        onMouseDown={onMouseDown}\r\n      />\r\n      {selectionRect && (\r\n        <g\r\n          transform={`translate(${selectionRect.p1.x}, ${selectionRect.p1.y})`}\r\n        >\r\n          <rect\r\n            width={selectionRect.p2.x - selectionRect.p1.x}\r\n            height={selectionRect.p2.y - selectionRect.p1.y}\r\n            strokeWidth=\"2\"\r\n            strokeDasharray=\"5 3\"\r\n            stroke=\"skyblue\"\r\n            fill=\"transparent\"\r\n          />\r\n        </g>\r\n      )}\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default DragSelectLayer;\r\n","import * as React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { cls } from \"@/utils\";\r\n\r\nimport { selectedPinSelector } from \"@/pages/CircuitEditor/components/CircuitFieldView/components/CircuitField/selectors\";\r\nimport useSelector from \"@/hooks/useSelector\";\r\n\r\nimport { selectPin } from \"../../actions/select-pin\";\r\n\r\nimport styles from \"./CircuitNodePin.module.css\";\r\n\r\nconst PIN_CIRCLE_RADIUS_UNSELECTED = 4;\r\nconst PIN_CIRCLE_RADIUS_SELECTED = 6;\r\n\r\nexport interface CircuitNodePinProps {\r\n  nodeId: string;\r\n  pinId: string;\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nconst CircuitNodePin: React.FC<CircuitNodePinProps> = ({\r\n  nodeId,\r\n  pinId,\r\n  x,\r\n  y\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const selectedPin = useSelector(selectedPinSelector);\r\n  const isSelected =\r\n    selectedPin != null &&\r\n    selectedPin.nodeId === nodeId &&\r\n    selectedPin.pinId === pinId;\r\n\r\n  const onMouseDown = React.useCallback(\r\n    (e: React.MouseEvent) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      dispatch(selectPin(nodeId, pinId));\r\n    },\r\n    [nodeId, pinId]\r\n  );\r\n\r\n  return (\r\n    <circle\r\n      className={cls(\r\n        styles[\"circuit-node-pin\"],\r\n        isSelected && styles[\"selected\"]\r\n      )}\r\n      cx={x}\r\n      cy={y}\r\n      r={isSelected ? PIN_CIRCLE_RADIUS_SELECTED : PIN_CIRCLE_RADIUS_UNSELECTED}\r\n      fill={isSelected ? \"yellow\" : \"blue\"}\r\n      onMouseDown={onMouseDown}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CircuitNodePin;\r\n","import CircuitNodePin from \"./CircuitNodePin\";\r\nexport default CircuitNodePin;\r\n","import * as React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { Point } from \"@/types\";\r\nimport { getModifiers, getSelectMode } from \"@/selection-mode\";\r\n\r\nimport useSelector from \"@/hooks/useSelector\";\r\nimport useMouseTracking from \"@/hooks/useMouseTracking\";\r\n\r\nimport { nodeTypeSelector } from \"@/services/graph/selectors/nodes\";\r\nimport { nodeStateSelector } from \"@/services/simulator/selectors/nodes\";\r\nimport { isNodeSelectedSelector } from \"@/services/selection/selectors/selection\";\r\n\r\nimport { fieldDragStartNode } from \"@/actions/field-drag-start-node\";\r\nimport { fieldDragContinue } from \"@/actions/field-drag-continue\";\r\nimport { fieldDragEnd } from \"@/actions/field-drag-end\";\r\nimport { interactNode } from \"@/actions/node-interact\";\r\nimport { selectNodes } from \"@/actions/select-nodes\";\r\n\r\nimport NodeVisual, {\r\n  RenderPinProps\r\n} from \"@/pages/CircuitEditor/components/NodeVisual\";\r\n\r\nimport { useEventMouseCoords } from \"../hooks/useMouseCoords\";\r\n\r\nimport CircuitNodePin from \"./CircuitNodePin\";\r\n\r\nexport interface CircuitNodeProps {\r\n  nodeId: string;\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nconst CircuitNode: React.FC<CircuitNodeProps> = ({ nodeId, x, y }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const nodeType = useSelector(s => nodeTypeSelector(s, nodeId));\r\n  const nodeState = useSelector(s => nodeStateSelector(s, nodeId));\r\n  const isSelected = useSelector(s => isNodeSelectedSelector(s, nodeId));\r\n\r\n  const getCoords = useEventMouseCoords();\r\n\r\n  const onClick = React.useCallback((e: MouseEvent) => {\r\n    const modifiers = getModifiers(e);\r\n    if (modifiers.altKey) {\r\n      dispatch(interactNode(nodeId));\r\n    } else {\r\n      const mode = getSelectMode(modifiers);\r\n      dispatch(selectNodes(nodeId, mode));\r\n    }\r\n  }, []);\r\n\r\n  const onDragStart = React.useCallback(\r\n    (e: MouseEvent) => {\r\n      const p = getCoords(e);\r\n      const modifiers = getModifiers(e);\r\n      const mode = getSelectMode(modifiers);\r\n      dispatch(fieldDragStartNode(nodeId, p, mode));\r\n    },\r\n    [nodeId, getCoords]\r\n  );\r\n\r\n  const onDragMove = React.useCallback(\r\n    (offset: Point, e: MouseEvent) => {\r\n      const p = getCoords(e);\r\n      dispatch(fieldDragContinue(p));\r\n    },\r\n    [getCoords]\r\n  );\r\n\r\n  const onDragEnd = React.useCallback(\r\n    (offset: Point, e: MouseEvent) => {\r\n      const p = getCoords(e);\r\n      const modifiers = getModifiers(e);\r\n      const mode = getSelectMode(modifiers);\r\n      dispatch(fieldDragEnd(p, mode));\r\n    },\r\n    [getCoords]\r\n  );\r\n\r\n  const { startTracking } = useMouseTracking({\r\n    onClick,\r\n    onDragStart,\r\n    onDragMove,\r\n    onDragEnd\r\n  });\r\n  const onMouseDown = React.useCallback(\r\n    (e: React.MouseEvent) => {\r\n      if (e.defaultPrevented) {\r\n        return;\r\n      }\r\n      e.preventDefault();\r\n      startTracking(e);\r\n    },\r\n    [getCoords]\r\n  );\r\n\r\n  const renderPin = React.useCallback(\r\n    (props: RenderPinProps) => {\r\n      const { id, x, y } = props;\r\n      return <CircuitNodePin key={id} nodeId={nodeId} pinId={id} x={x} y={y} />;\r\n    },\r\n    [nodeId]\r\n  );\r\n\r\n  if (!nodeType) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <NodeVisual\r\n      x={x}\r\n      y={y}\r\n      nodeType={nodeType}\r\n      nodeState={nodeState}\r\n      // TODO: Use css vars for this.  Currently cannot do so as nodes declare their own\r\n      //  stroke/fill that gets set as attributes\r\n      colorOverride={isSelected ? \"blue\" : undefined}\r\n      renderPin={renderPin}\r\n      onMouseDown={onMouseDown}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CircuitNode;\r\n","import * as React from \"react\";\r\n\r\nimport useSelector from \"@/hooks/useSelector\";\r\nimport { nodePositionsByIdSelector } from \"@/services/field/selectors/positions\";\r\n\r\nimport CircuitNode from \"./CircuitNode\";\r\n\r\nconst NodesLayer: React.FC = () => {\r\n  const nodePositionsById = useSelector(nodePositionsByIdSelector);\r\n\r\n  const nodeElements = Object.keys(nodePositionsById).map(nodeId => {\r\n    const { x, y } = nodePositionsById[nodeId];\r\n    return <CircuitNode key={nodeId} nodeId={nodeId} x={x} y={y} />;\r\n  });\r\n\r\n  return <g id=\"nodes-layer\">{nodeElements}</g>;\r\n};\r\nexport default NodesLayer;\r\n","import * as React from \"react\";\r\nimport uuidV4 from \"uuid/v4\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { Point } from \"@/types\";\r\nimport {\r\n  normalize,\r\n  pointSubtract,\r\n  dotProduct,\r\n  pointAdd,\r\n  scale\r\n} from \"@/geometry\";\r\nimport { getSelectMode, getModifiers } from \"@/selection-mode\";\r\n\r\nimport useSelector from \"@/hooks/useSelector\";\r\nimport useMouseTracking from \"@/hooks/useMouseTracking\";\r\n\r\nimport { addWireJoint } from \"@/actions/wire-joint-add\";\r\nimport { moveWireJoint } from \"@/actions/wire-joint-move\";\r\nimport { selectWires } from \"@/actions/select-wires\";\r\n\r\nimport {\r\n  wireJointPositionSelector,\r\n  wireStartPositionSelector,\r\n  wireEndPositionSelector\r\n} from \"@/services/field/selectors/wires\";\r\n\r\nimport { useEventMouseCoords } from \"../hooks/useMouseCoords\";\r\n\r\nexport interface WireSegmentProps {\r\n  wireId: string;\r\n  startJointId: string | null;\r\n  endJointId: string | null;\r\n}\r\nconst WireSegment: React.FC<WireSegmentProps> = ({\r\n  wireId,\r\n  startJointId,\r\n  endJointId\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const getMouseCoords = useEventMouseCoords();\r\n\r\n  const start = useSelector(state => {\r\n    if (startJointId == null) {\r\n      return wireStartPositionSelector(state, wireId);\r\n    }\r\n    return wireJointPositionSelector(state, startJointId);\r\n  });\r\n\r\n  const end = useSelector(state => {\r\n    if (endJointId == null) {\r\n      return wireEndPositionSelector(state, wireId);\r\n    }\r\n    return wireJointPositionSelector(state, endJointId);\r\n  });\r\n\r\n  const [mousePos, setMousePos] = React.useState<Point | null>(null);\r\n  const addedJointRef = React.useRef<string | null>(null);\r\n\r\n  const onMouseMove = React.useCallback(\r\n    (e: React.MouseEvent) => {\r\n      const p = getMouseCoords(e);\r\n      setMousePos(p);\r\n    },\r\n    [getMouseCoords]\r\n  );\r\n\r\n  const onMouseLeave = React.useCallback(() => {\r\n    setMousePos(null);\r\n  }, []);\r\n\r\n  const onDragStart = React.useCallback(\r\n    (e: MouseEvent) => {\r\n      const p = getMouseCoords(e);\r\n      const jointId = uuidV4();\r\n      addedJointRef.current = jointId;\r\n      dispatch(addWireJoint(wireId, startJointId, p, jointId));\r\n    },\r\n    [wireId, startJointId, getMouseCoords]\r\n  );\r\n\r\n  const onDragMove = React.useCallback(\r\n    (offset: Point, e: MouseEvent) => {\r\n      const jointId = addedJointRef.current;\r\n      if (!jointId) {\r\n        return;\r\n      }\r\n      const p = getMouseCoords(e);\r\n      dispatch(moveWireJoint(jointId, p));\r\n    },\r\n    [getMouseCoords]\r\n  );\r\n\r\n  const onClick = React.useCallback(\r\n    (e: MouseEvent) => {\r\n      const modifiers = getModifiers(e);\r\n      const mode = getSelectMode(modifiers);\r\n      dispatch(selectWires(wireId, mode));\r\n    },\r\n    [wireId]\r\n  );\r\n\r\n  const { startTracking } = useMouseTracking({\r\n    onClick,\r\n    onDragStart,\r\n    onDragMove\r\n  });\r\n\r\n  const onJointInsertMouseDown = React.useCallback(\r\n    (e: React.MouseEvent) => {\r\n      startTracking(e);\r\n    },\r\n    [startTracking]\r\n  );\r\n\r\n  let insertJointPos: Point | undefined;\r\n  if (mousePos) {\r\n    let lineDir = normalize(pointSubtract(end, start));\r\n    const v = pointSubtract(mousePos, start);\r\n    var d = dotProduct(v, lineDir);\r\n    insertJointPos = pointAdd(start, scale(lineDir, d));\r\n  }\r\n\r\n  return (\r\n    <g onMouseMove={onMouseMove} onMouseLeave={onMouseLeave}>\r\n      <line x1={start.x} y1={start.y} x2={end.x} y2={end.y} strokeWidth={2} />\r\n      {insertJointPos && (\r\n        <circle\r\n          cx={insertJointPos.x}\r\n          cy={insertJointPos.y}\r\n          r={3}\r\n          fill=\"red\"\r\n          onMouseDown={onJointInsertMouseDown}\r\n        />\r\n      )}\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default WireSegment;\r\n","import * as React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { Point } from \"@/types\";\r\nimport { cls } from \"@/utils\";\r\nimport { getSelectMode, getModifiers } from \"@/selection-mode\";\r\n\r\nimport useSelector from \"@/hooks/useSelector\";\r\nimport useMouseTracking from \"@/hooks/useMouseTracking\";\r\n\r\nimport { wireJointPositionSelector } from \"@/services/field/selectors/wires\";\r\nimport { isJointSelectedSelector } from \"@/services/selection/selectors/selection\";\r\n\r\nimport { moveWireJoint } from \"@/actions/wire-joint-move\";\r\nimport { selectWireJoints } from \"@/actions/select-wire-joints\";\r\n\r\nimport { useEventMouseCoords } from \"../../hooks/useMouseCoords\";\r\n\r\nimport styles from \"./WireJoint.module.css\";\r\n\r\ninterface WireJointProps {\r\n  jointId: string;\r\n}\r\n\r\nconst WireJoint: React.FC<WireJointProps> = ({ jointId }) => {\r\n  const getMouseCoords = useEventMouseCoords();\r\n  const dispatch = useDispatch();\r\n\r\n  const isSelected = useSelector(state =>\r\n    isJointSelectedSelector(state, jointId)\r\n  );\r\n\r\n  const position = useSelector(state =>\r\n    wireJointPositionSelector(state, jointId)\r\n  );\r\n  const [mouseOver, setMouseOver] = React.useState(false);\r\n\r\n  const onJointDragMove = React.useCallback(\r\n    (offset: Point, e: MouseEvent) => {\r\n      const p = getMouseCoords(e);\r\n      dispatch(moveWireJoint(jointId, p));\r\n    },\r\n    [getMouseCoords]\r\n  );\r\n\r\n  const onClick = React.useCallback(\r\n    (e: MouseEvent) => {\r\n      const modifiers = getModifiers(e);\r\n      const mode = getSelectMode(modifiers);\r\n      dispatch(selectWireJoints(jointId, mode));\r\n    },\r\n    [jointId]\r\n  );\r\n\r\n  const { startTracking: startMoveJointTracking } = useMouseTracking({\r\n    onClick,\r\n    onDragMove: onJointDragMove\r\n  });\r\n\r\n  const onMouseOver = React.useCallback(() => {\r\n    setMouseOver(true);\r\n  }, []);\r\n  const onMouseOut = React.useCallback(() => {\r\n    setMouseOver(false);\r\n  }, []);\r\n\r\n  const mouseDown = React.useCallback(\r\n    (e: React.MouseEvent) => {\r\n      startMoveJointTracking(e);\r\n    },\r\n    [startMoveJointTracking]\r\n  );\r\n\r\n  return (\r\n    <circle\r\n      className={cls(styles[\"wire-joint\"], isSelected && styles[\"selected\"])}\r\n      cx={position.x}\r\n      cy={position.y}\r\n      r={mouseOver || isSelected ? 4 : 2}\r\n      onMouseOver={onMouseOver}\r\n      onMouseOut={onMouseOut}\r\n      onMouseDown={mouseDown}\r\n    />\r\n  );\r\n};\r\n\r\nexport default WireJoint;\r\n","import WireJoint from \"./WireJoint\";\r\nexport default WireJoint;\r\n","import * as React from \"react\";\r\n\r\nimport { cls } from \"@/utils\";\r\nimport useSelector from \"@/hooks/useSelector\";\r\n\r\nimport { wireJointIdsByWireIdSelector } from \"@/services/field/selectors/wires\";\r\nimport { isWireSelectedSelector } from \"@/services/selection/selectors/selection\";\r\nimport { wireValueSelector } from \"@/services/simulator/selectors/wires\";\r\n\r\nimport WireSegment from \"../WireSegment\";\r\nimport WireJoint from \"../WireJoint\";\r\n\r\nimport styles from \"./Wire.module.css\";\r\n\r\nexport interface WireProps {\r\n  wireId: string;\r\n}\r\n\r\nconst Wire: React.FC<WireProps> = ({ wireId }) => {\r\n  const jointIds = useSelector(state =>\r\n    wireJointIdsByWireIdSelector(state, wireId)\r\n  );\r\n  const isPowered = useSelector(state => wireValueSelector(state, wireId));\r\n  const isSelected = useSelector(state =>\r\n    isWireSelectedSelector(state, wireId)\r\n  );\r\n\r\n  // We need one extra array entry for starting on the last jointId and ending at null (end of wire)\r\n  const segmentElements = [...jointIds, null].map((endJointId, index) => {\r\n    const startJointId = index > 0 ? jointIds[index - 1] : null;\r\n    return (\r\n      <WireSegment\r\n        key={index}\r\n        wireId={wireId}\r\n        startJointId={startJointId}\r\n        endJointId={endJointId}\r\n      />\r\n    );\r\n  });\r\n\r\n  const jointElements = jointIds.map(jointId => (\r\n    <WireJoint key={jointId} jointId={jointId} />\r\n  ));\r\n\r\n  return (\r\n    <g\r\n      className={cls(\r\n        styles[\"wire\"],\r\n        isPowered && styles[\"powered\"],\r\n        isSelected && styles[\"selected\"]\r\n      )}\r\n    >\r\n      {segmentElements}\r\n      {jointElements}\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default Wire;\r\n","import Wire from \"./Wire\";\r\nexport default Wire;\r\n","import { AppState } from \"@/store\";\r\n\r\nimport { nodeOutputPinValue } from \"./nodes\";\r\n\r\nexport const wireValueSelector = (state: AppState, wireId: string) => {\r\n  const {\r\n    outputPin: { nodeId, pinId }\r\n  } = state.services.graph.wiresById[wireId];\r\n\r\n  return nodeOutputPinValue(state, nodeId, pinId);\r\n};\r\n","import * as React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { wireIdsSelector } from \"@/services/graph/selectors/wires\";\r\nimport useSelector from \"@/hooks/useSelector\";\r\n\r\nimport Wire from \"./Wire\";\r\n\r\nconst WiresLayer: React.FC = () => {\r\n  const wireIds = useSelector(wireIdsSelector);\r\n  const connectorElements = wireIds.map(wireId => (\r\n    <Wire key={wireId} wireId={wireId} />\r\n  ));\r\n\r\n  return <g id=\"wires-layer\">{connectorElements}</g>;\r\n};\r\nexport default WiresLayer;\r\n","import * as React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { cls } from \"@/utils\";\r\nimport useSelector from \"@/hooks/useSelector\";\r\nimport {\r\n  fieldWidthSelector,\r\n  fieldHeightSelector\r\n} from \"@/services/field/selectors/bounds\";\r\n\r\nimport { fieldMouseLeave } from \"@/actions/field-mouse-leave\";\r\n\r\nimport { FieldSvgElementProvider } from \"./contexts/fieldSvgElement\";\r\n\r\nimport DragNewNodeLayer from \"./components/DragNewNodeLayer\";\r\nimport DragPreviewLayer from \"./components/DragPreviewLayer\";\r\nimport DragSelectLayer from \"./components/DragSelectLayer\";\r\nimport NodesLayer from \"./components/NodesLayer\";\r\nimport WiresLayer from \"./components/WiresLayer\";\r\n\r\nimport styles from \"./CircuitField.module.css\";\r\n\r\nconst CircuitField: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const width = useSelector(fieldWidthSelector);\r\n  const height = useSelector(fieldHeightSelector);\r\n  const svgRef = React.useRef<SVGSVGElement>(null);\r\n\r\n  const onMouseDown = React.useCallback(() => {\r\n    svgRef.current?.focus();\r\n  }, []);\r\n\r\n  const onMouseLeave = React.useCallback(() => {\r\n    dispatch(fieldMouseLeave());\r\n  }, []);\r\n\r\n  return (\r\n    // svg seems to have an implicit bottom margin against its parent div.\r\n    //  Wrapping it in a div of the same size fixes it.\r\n    <div\r\n      className={cls(\"circuit-field\", styles[\"circuit-editor\"])}\r\n      style={{\r\n        width: `${width}px`,\r\n        height: `${height}px`\r\n      }}\r\n    >\r\n      <svg\r\n        tabIndex={-1}\r\n        ref={svgRef}\r\n        width={width}\r\n        height={height}\r\n        onMouseDown={onMouseDown}\r\n        onMouseLeave={onMouseLeave}\r\n      >\r\n        <FieldSvgElementProvider value={svgRef}>\r\n          <DragSelectLayer />\r\n          <WiresLayer />\r\n          <NodesLayer />\r\n          <DragPreviewLayer />\r\n          <DragNewNodeLayer />\r\n        </FieldSvgElementProvider>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CircuitField;\r\n","import CircuitField from \"./CircuitField\";\r\nexport default CircuitField;\r\n","import * as React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { HotKeys } from \"react-hotkeys\";\r\n\r\nimport { cls } from \"@/utils\";\r\nimport { useNativeEvent } from \"@/hooks/useNativeEvent\";\r\nimport useSelector from \"@/hooks/useSelector\";\r\n\r\nimport { viewScaleSelector } from \"@/services/view/selectors/view\";\r\n\r\nimport { viewZoom } from \"@/actions/view-zoom\";\r\nimport { tickSim } from \"@/actions/sim-tick\";\r\nimport { fastForwardSim } from \"@/actions/sim-fastforward\";\r\nimport { paste } from \"@/actions/clipboard-paste\";\r\nimport { selectionCopy } from \"@/actions/selection-copy\";\r\nimport { selectionDelete } from \"@/actions/selection-delete\";\r\nimport { selectAll } from \"@/actions/select-all\";\r\n\r\nimport keymap, {\r\n  KeymapHandler,\r\n  KEYMAP_SIM_STEP,\r\n  KEYMAP_SIM_FASTFORWARD,\r\n  KEYMAP_COPY,\r\n  KEYMAP_PASTE,\r\n  KEYMAP_DELETE,\r\n  KEYMAP_SELECT_ALL\r\n} from \"./keymap\";\r\n\r\nimport CircuitField from \"./components/CircuitField\";\r\n\r\nimport styles from \"./CircuitFieldView.module.css\";\r\nimport { AnyAction } from \"redux\";\r\n\r\nexport interface CircuitFieldViewProps {\r\n  className?: string;\r\n}\r\n\r\nconst CircuitFieldView: React.FC<CircuitFieldViewProps> = ({ className }) => {\r\n  const viewRef = React.useRef<HTMLDivElement | null>(null);\r\n  const dispatch = useDispatch();\r\n  const scale = useSelector(viewScaleSelector);\r\n\r\n  const keyHandlers = React.useMemo(() => {\r\n    function createEventDispatcher(action: AnyAction): HotkeyHandler {\r\n      return (e?: KeyboardEvent) => {\r\n        if (e) {\r\n          if (e.defaultPrevented) {\r\n            return;\r\n          }\r\n          e.preventDefault();\r\n        }\r\n        dispatch(action);\r\n      };\r\n    }\r\n    let keyHandlers: KeymapHandler = {\r\n      [KEYMAP_SIM_STEP]: createEventDispatcher(tickSim(1)),\r\n      [KEYMAP_SIM_FASTFORWARD]: createEventDispatcher(fastForwardSim()),\r\n      [KEYMAP_SELECT_ALL]: createEventDispatcher(selectAll()),\r\n      [KEYMAP_COPY]: createEventDispatcher(selectionCopy()),\r\n      [KEYMAP_PASTE]: createEventDispatcher(paste()),\r\n      [KEYMAP_DELETE]: createEventDispatcher(selectionDelete())\r\n    };\r\n    return keyHandlers;\r\n  }, []);\r\n\r\n  const onWheel = React.useCallback((e: WheelEvent) => {\r\n    if (e.defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (e.ctrlKey) {\r\n      dispatch(viewZoom(e.deltaY > 0 ? -1 : 1));\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  }, []);\r\n\r\n  // React listens to the root listener for all events,\r\n  //  and chrome assumes the root event listener for mouse events\r\n  //  never wants to preventDefault.\r\n  // We need to take a local event listener and mark it as not passive.\r\n  // https://github.com/facebook/react/issues/14856\r\n  useNativeEvent(viewRef, \"wheel\", onWheel, { passive: false });\r\n\r\n  return (\r\n    <div\r\n      className={cls(\r\n        \"circuit-field-view\",\r\n        className,\r\n        styles[\"circuit-field-view\"]\r\n      )}\r\n      ref={viewRef}\r\n    >\r\n      <div\r\n        className={cls(\r\n          \"zoom-container\",\r\n          styles[\"circuit-field-zoom-container\"]\r\n        )}\r\n        style={{\r\n          transform: `scale(${scale})`\r\n        }}\r\n      >\r\n        <HotKeys keyMap={keymap} handlers={keyHandlers}>\r\n          <CircuitField />\r\n        </HotKeys>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CircuitFieldView;\r\n","import CircuitFieldView from \"./CircuitFieldView\";\r\nexport default CircuitFieldView;\r\n","import * as React from \"react\";\r\n\r\nexport function useNativeEvent<\r\n  T extends GlobalEventHandlers,\r\n  K extends keyof GlobalEventHandlersEventMap\r\n>(\r\n  ref: React.RefObject<T | null>,\r\n  type: K,\r\n  listener: (\r\n    this: GlobalEventHandlers,\r\n    ev: GlobalEventHandlersEventMap[K]\r\n  ) => any,\r\n  options?: boolean | AddEventListenerOptions\r\n) {\r\n  React.useEffect(() => {\r\n    if (!ref.current) {\r\n      return;\r\n    }\r\n\r\n    // De-reference the target so we remove from the right element.\r\n    const listenTarget = ref.current;\r\n\r\n    listenTarget.addEventListener(type, listener, options);\r\n    return () => {\r\n      listenTarget.removeEventListener(type, listener, options);\r\n    };\r\n  }, [ref.current, type, listener]);\r\n}\r\n","import * as React from \"react\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\n\r\nimport { typedKeys } from \"@/utils\";\r\nimport { NodeTypes, NodeType } from \"@/node-defs\";\r\n\r\nimport { addNode } from \"@/actions/node-add\";\r\n\r\nimport NodeVisual from \"../NodeVisual\";\r\n\r\nimport styles from \"./ElementTray.module.css\";\r\nimport useMouseTracking from \"@/hooks/useMouseTracking\";\r\nimport { fieldDragStartNewNode } from \"@/actions/field-drag-start-newnode\";\r\nimport { fieldDragEnd } from \"@/actions/field-drag-end\";\r\n\r\nconst mapDispatchToProps = {\r\n  addNode\r\n};\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\ntype Props = DispatchProps;\r\n\r\nconst ElementTray: React.FC<Props> = ({ addNode }) => {\r\n  const elements = typedKeys(NodeTypes).map(type => {\r\n    return <Element key={type} nodeType={type} />;\r\n  });\r\n\r\n  return (\r\n    <div className={styles[\"circuittray\"]}>\r\n      <div className={styles[\"circuittray-title\"]}>Elements</div>\r\n      <div className={styles[\"circuittray-elements\"]}>{elements}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default connect(null, mapDispatchToProps)(ElementTray);\r\n\r\ninterface ElementProps {\r\n  nodeType: NodeType;\r\n}\r\nconst Element: React.FC<ElementProps> = ({ nodeType }) => {\r\n  const dispatch = useDispatch();\r\n  const onClick = React.useCallback(\r\n    (e: MouseEvent) => {\r\n      if (e.defaultPrevented) {\r\n        return;\r\n      }\r\n      e.preventDefault();\r\n      dispatch(addNode(nodeType));\r\n    },\r\n    [nodeType]\r\n  );\r\n\r\n  const onDragStart = React.useCallback(() => {\r\n    dispatch(fieldDragStartNewNode(nodeType));\r\n  }, [nodeType]);\r\n\r\n  const onDragEnd = React.useCallback(() => {\r\n    // We do not know the point from here, and selection mode is irrelevant.\r\n    dispatch(fieldDragEnd({ x: -1, y: -1 }, \"set\"));\r\n  }, []);\r\n\r\n  const { startTracking } = useMouseTracking({\r\n    onClick,\r\n    onDragStart,\r\n    onDragEnd\r\n  });\r\n\r\n  const onMouseDown = React.useCallback((e: React.MouseEvent) => {\r\n    startTracking(e);\r\n  }, []);\r\n\r\n  return (\r\n    <div onMouseDown={onMouseDown}>\r\n      <svg width={110} height={70}>\r\n        <NodeVisual nodeType={nodeType} nodeState={{}} />\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n","import ElementTray from \"./ElementTray\";\r\nexport default ElementTray;\r\n","import * as React from \"react\";\r\n\r\nimport { cls } from \"@/utils\";\r\n\r\nimport CircuitFieldView from \"./components/CircuitFieldView\";\r\nimport ElementTray from \"./components/ElementTray\";\r\n\r\nimport styles from \"./CircuitEditor.module.css\";\r\n\r\nexport interface CircuitEditorProps {\r\n  className?: string;\r\n}\r\n\r\nconst CircuitEditor: React.FC<CircuitEditorProps> = ({ className }) => {\r\n  return (\r\n    <div className={cls(className, styles.editor)}>\r\n      <div className={styles[\"layout-columns\"]}>\r\n        <div className={styles[\"layout-rows\"]}>\r\n          <div className={cls(styles[\"toolwindow\"], styles[\"toolwindow-row\"])}>\r\n            <ElementTray />\r\n          </div>\r\n          <div className={styles[\"fieldcontainer\"]}>\r\n            <CircuitFieldView />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CircuitEditor;\r\n","import CircuitEditor from \"./CircuitEditor\";\r\nexport default CircuitEditor;\r\n","import * as React from \"react\";\r\n\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nimport readmeContent from \"@/../README.md\";\r\n\r\nimport styles from \"./Intro.module.css\";\r\n\r\nexport interface IntroProps {\r\n  dismiss(): void;\r\n}\r\ntype Props = IntroProps;\r\n\r\nconst IntroPage: React.FC<Props> = ({ dismiss }) => {\r\n  return (\r\n    <div className={styles.intro}>\r\n      <div className={styles[\"intro-content\"]}>\r\n        <div className={styles[\"intro-header\"]}>\r\n          <h3>\r\n            <b>UNDER CONSTRUCTION</b>\r\n            <p>\r\n              This is an as-yet-unfinished experiment. The user interface is\r\n              frustrating at best, and you cannot save your work. It is made\r\n              available as a playground for the current state of the project.\r\n            </p>\r\n            <p>\r\n              Scan through the readme below, and click the button at the bottom\r\n              to enter\r\n            </p>\r\n            <p>\r\n              The source can be found at{\" \"}\r\n              <a href=\"https://github.com/RoboPhred/discrelog\">\r\n                https://github.com/RoboPhred/discrelog\r\n              </a>\r\n            </p>\r\n          </h3>\r\n        </div>\r\n        <div className={styles[\"intro-markdown\"]}>\r\n          <ReactMarkdown source={readmeContent} />\r\n        </div>\r\n        <button className={styles[\"intro-dismiss\"]} onClick={dismiss}>\r\n          Let me break things\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IntroPage;\r\n","import Intro from \"./Intro\";\r\nexport default Intro;\r\n","export default \"# Discrelog / React-Logic / Working Title Logic Thing\\r\\n\\r\\nA discrete logic / circuit editor and simulator written in React and Redux.\\r\\n\\r\\n_This is a work in progress, and will be for some time. It is not suitable for use as of this time._\\r\\n\\r\\n## Live work-in-progress\\r\\n\\r\\n_The interface is very much a prototype. The current incarnation is under heavy development and is not final._\\r\\n\\r\\nhttp://robophred.github.io/discrelog\\r\\n\\r\\n### Usage:\\r\\n\\r\\nClick circuit elements on the left to create them. They will appear in the top-left corner.\\r\\nClick an element to select it. Click-drag an element to move it, and click-drag the field to select multiple elements.\\r\\n\\r\\nClick on pins to select them. While a pin is selected, click on other pins to connect them. Output pins can only connect to input pins, and that input pins can only have one connection. Output pins can connect to more than one input pin.\\r\\n\\r\\nClick+drag on wires to add wire joints, which can be used to route and organize wires. Click or drag-select joints to select them.\\r\\n\\r\\nClick on wires (not wire joints) to select the entire wire.\\r\\n\\r\\n### Controls:\\r\\n\\r\\nOn Mac, `command` replaces `ctrl` and `option` replaces `alt`.\\r\\n\\r\\n- Select item: `left-click`\\r\\n- Toggle item in current selection: `ctrl + left-click`\\r\\n- Add item to current selection: `shift + left-click`\\r\\n- Remove item from current selection: `ctrl + shift + left-click`\\r\\n- Activate Button: `alt + left-click`\\r\\n- Delete Selection: `backspace` or `delete`\\r\\n- Copy Selected: `ctrl + c`\\r\\n- Paste: `ctrl + v`\\r\\n- Select All: `ctrl + a`\\r\\n- Next tick: `spacebar`\\r\\n- Fast forward to next transition: `shift + spacebar`\\r\\n\\r\\n## Circuit structure and Simulation\\r\\n\\r\\nCircuits are built by connecting component output pins to input pins on a one-to-many relationship. A single output pin can connect to many input pins, but an input pin can only have a single output pin.\\r\\n\\r\\nConnections and pins are represented by a binary state. A connection can be active (true) or inactive (false); there is no way to simulate analog concepts such as pull-low/pull-high, resistors, voltages, or currents.\\r\\n\\r\\nWhen an output pin changes, all connected components are updated. The update process involves computing the output pin states given the input pins and the component's internal state. The component will then immediately update its state, and schedule pin changes on a future update. Changes to output pins must occur at least one tick in the future, and it is not possible to schedule more than one transition on the same output pin. This ensures that logic remains predictable even in the case of loops, and allows such constructs as vibrators, latches, and flip-flops.\\r\\n\\r\\nIt is not possible for a component to change its pin on the current tick. This ensures components function consistently and predictably through cyclic connections and regardless of the order in which they update.\\r\\n\\r\\n## Supported Logic Components\\r\\n\\r\\nAs of the time of this writing, the available logic components consist of:\\r\\n\\r\\n- Combinational logic (4 tick response)\\r\\n  - AND\\r\\n  - OR\\r\\n  - NOR\\r\\n- Negate / NOT (4 tick response)\\r\\n- Toggle Switch (1 tick response)\\r\\n- Buffer (2 tick response)\\r\\n- 7 Segment Display (immediate visual response)\\r\\n- LED (immediate visual response)\\r\\n\\r\\n_For more details on the implementation of logic components, and how to add your own, see [/node-types](https://github.com/RoboPhred/discrelog/tree/master/src/node-types)._\\r\\n\\r\\n## Upcomming features\\r\\n\\r\\nI am notorious for not getting back to things, so anything I write here would just be bad juju.\\r\\n\\r\\n## Development Philosophy\\r\\n\\r\\nWhile the inspiration for this project is a lack of high quality, easily extensible discrete logic simulators, this is a formost a learning exercise. This means progress will be slow and most of it will be rewritten many times over. Finding the best solution and gaining a deeper understanding of the underlying problem will take priority over bringing the software to a usable state. Do not expect fast progress or a user friendly editor for some time.\\r\\n\\r\\n## Technology\\r\\n\\r\\nThis application is written to be a browser-ran desktop-scale application. It has no server component, and performs all work in the client's browser.\\r\\nThe UI renderer is React, with Redux providing the backing store.\\r\\n\\r\\n## License\\r\\n\\r\\nThis project is licenced under AGPL-3.0.\\r\\n\\r\\nSome logic symbol artwork has been provided by wikimedia commons under the public domain license. These have been called out where used.\\r\\n\\r\\n## Alternatives\\r\\n\\r\\nThere are a few notable digital (and analog) circuit editors that I have come across and arbitrarily collected. Many more exist in the wild.\\r\\n\\r\\nOpen source:\\r\\n\\r\\n- http://www.cburch.com/logisim/ (desktop app, java)\\r\\n- https://github.com/willymcallister/circuit-sandbox (online, javascript, analog)\\r\\n\\r\\nClosed source:\\r\\n\\r\\n- https://www.circuitlab.com/ (online)\\r\\n- https://simulator.io/ (online)\\r\\n\";","import * as React from \"react\";\r\n\r\nexport interface PopupMenuContext {\r\n  onClose(): void;\r\n}\r\nexport default React.createContext<PopupMenuContext>({\r\n  onClose: () => {}\r\n});\r\n","import * as React from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nimport PopperJS from \"popper.js\";\r\n\r\nexport type PopperPlacement =\r\n  | \"top-start\"\r\n  | \"top\"\r\n  | \"top-end\"\r\n  | \"left-start\"\r\n  | \"left\"\r\n  | \"left-end\"\r\n  | \"right-start\"\r\n  | \"right\"\r\n  | \"right-end\"\r\n  | \"bottom-start\"\r\n  | \"bottom\"\r\n  | \"bottom-end\";\r\nexport interface PopperProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  isOpen: boolean;\r\n  placement: PopperPlacement;\r\n  anchorEl: Element | null;\r\n}\r\n\r\nconst Popper: React.FC<PopperProps> = ({\r\n  isOpen,\r\n  placement,\r\n  anchorEl,\r\n  children,\r\n  ...divProps\r\n}) => {\r\n  const contentRef = React.useRef<HTMLDivElement>(null);\r\n  const popperRef = React.useRef<PopperJS | null>(null);\r\n\r\n  const handleClose = () => {\r\n    if (!popperRef.current) {\r\n      return;\r\n    }\r\n\r\n    popperRef.current.destroy();\r\n    popperRef.current = null;\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    const popperNode = contentRef.current;\r\n    if (!popperNode || !anchorEl || !isOpen) {\r\n      return;\r\n    }\r\n\r\n    handleClose();\r\n\r\n    popperRef.current = new PopperJS(anchorEl, popperNode, {\r\n      placement,\r\n      modifiers: {\r\n        // We portal into document.body,\r\n        //  so set the boundary element to the window.\r\n        preventOverflow: {\r\n          boundariesElement: \"window\"\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // Handle open/closed transition.\r\n  React.useEffect(() => {\r\n    if (isOpen) {\r\n      handleOpen();\r\n    } else {\r\n      handleClose();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  // Destroy instance on unmount.\r\n  React.useEffect(() => {\r\n    return handleClose;\r\n  }, []);\r\n\r\n  if (!isOpen) {\r\n    return null;\r\n  }\r\n\r\n  const contentNode = (\r\n    <div ref={contentRef} {...divProps}>\r\n      {children}\r\n    </div>\r\n  );\r\n\r\n  return createPortal(contentNode, document.body);\r\n};\r\n\r\nexport default Popper;\r\n","import * as React from \"react\";\r\nimport { FocusOn } from \"react-focus-on\";\r\n\r\nimport Popper, { PopperPlacement } from \"../Popper\";\r\n\r\nimport PopupMenuContext from \"./popupMenuContext\";\r\n\r\nimport styles from \"./PopupMenu.module.css\";\r\n\r\nexport interface PopupMenuProps {\r\n  isOpen: boolean;\r\n  placement: PopperPlacement;\r\n  anchorEl: Element | null;\r\n  onClose(): void;\r\n}\r\n\r\nconst PopupMenu: React.FC<PopupMenuProps> = ({\r\n  isOpen,\r\n  placement,\r\n  anchorEl,\r\n  onClose,\r\n  children\r\n}) => {\r\n  return (\r\n    <Popper\r\n      className={styles.popupmenu}\r\n      isOpen={isOpen}\r\n      placement={placement}\r\n      anchorEl={anchorEl}\r\n    >\r\n      <PopupMenuContext.Provider value={{ onClose }}>\r\n        <FocusOn\r\n          enabled={isOpen}\r\n          onClickOutside={onClose}\r\n          onEscapeKey={onClose}\r\n        >\r\n          {children}\r\n        </FocusOn>\r\n      </PopupMenuContext.Provider>\r\n    </Popper>\r\n  );\r\n};\r\n\r\nexport default PopupMenu;\r\n","import PopupMenu from \"./PopupMenu\";\r\nexport default PopupMenu;\r\n","import * as React from \"react\";\r\n\r\nimport { cls } from \"@/utils\";\r\n\r\nimport PopupMenuContext from \"../PopupMenu/popupMenuContext\";\r\n\r\nimport PopupMenu from \"../PopupMenu\";\r\nimport { PopperPlacement } from \"../Popper\";\r\n\r\nimport \"./MenuItem.module.css\";\r\n\r\nexport interface MenuItemProps {\r\n  title: string;\r\n  className?: string;\r\n  childPlacement?: PopperPlacement;\r\n  onClick?(e: React.MouseEvent): void;\r\n}\r\n\r\nconst MenuItem: React.FC<MenuItemProps> = ({\r\n  title,\r\n  className,\r\n  childPlacement = \"right-end\",\r\n  onClick,\r\n  children\r\n}) => {\r\n  const { onClose: onClosePopup } = React.useContext(PopupMenuContext);\r\n\r\n  const [isOpen, setOpen] = React.useState(false);\r\n  const ref = React.useRef<HTMLDivElement | null>(null);\r\n\r\n  const isParentItem = React.Children.count(children) > 0;\r\n\r\n  const onItemClick = React.useCallback(\r\n    (e: React.MouseEvent) => {\r\n      if (isParentItem) {\r\n        setOpen(!isOpen);\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n      }\r\n      if (onClick) {\r\n        onClick(e);\r\n        onClosePopup();\r\n      }\r\n    },\r\n    [isOpen, isParentItem, onClick]\r\n  );\r\n\r\n  const onClose = React.useCallback(() => {\r\n    setOpen(false);\r\n  }, [isOpen]);\r\n\r\n  const item = (\r\n    <div\r\n      className={cls(\"menu-item\", className)}\r\n      ref={ref}\r\n      tabIndex={0}\r\n      onClick={onItemClick}\r\n    >\r\n      {title}\r\n    </div>\r\n  );\r\n\r\n  let popup: React.ReactNode = null;\r\n  if (isParentItem) {\r\n    popup = (\r\n      <PopupMenu\r\n        isOpen={isOpen}\r\n        anchorEl={ref.current}\r\n        placement={childPlacement}\r\n        onClose={onClose}\r\n      >\r\n        {children}\r\n      </PopupMenu>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {item}\r\n      {popup}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MenuItem;\r\n","import MenuItem from \"./MenuItem\";\r\nexport default MenuItem;\r\n","import * as React from \"react\";\r\n\r\nconst PlayIcon: React.FC<React.SVGProps<SVGSVGElement>> = props => {\r\n  return (\r\n    <svg width={16} height={16} {...props}>\r\n      <path d=\"M3,0 L13,8 L3,16 z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default PlayIcon;\r\n","import * as React from \"react\";\r\n\r\nconst StopIcon: React.FC<React.SVGProps<SVGSVGElement>> = props => {\r\n  return (\r\n    <svg width={16} height={16} {...props}>\r\n      <path d=\"M1,1 L15,1 L15,15 L1,15 z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default StopIcon;\r\n","import * as React from \"react\";\r\n\r\nconst PauseIcon: React.FC<React.SVGProps<SVGSVGElement>> = props => {\r\n  return (\r\n    <svg width={16} height={16} {...props}>\r\n      <path d=\"M2.5,1 L6.5,1 L6.5,15 L2.5,15 z M9.5,1 L13.5,1 L13.5,15 L9.5,15 z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default PauseIcon;\r\n","import * as React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { cls } from \"@/utils\";\r\n\r\nimport useSelector from \"@/hooks/useSelector\";\r\n\r\nimport {\r\n  isSimActiveSelector,\r\n  isSimPausedSelector\r\n} from \"@/services/simulator/selectors/run\";\r\n\r\nimport { startSim } from \"@/actions/sim-start\";\r\nimport { stopSim } from \"@/actions/sim-stop\";\r\nimport { pauseSim } from \"@/actions/sim-pause\";\r\n\r\nimport PlayIcon from \"../Icons/Play\";\r\n\r\nimport styles from \"./SimControls.module.css\";\r\nimport StopIcon from \"../Icons/Stop\";\r\nimport PauseIcon from \"../Icons/Pause\";\r\n\r\nconst PlayPauseButton: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const isActive = useSelector(isSimActiveSelector);\r\n  const isPaused = useSelector(isSimPausedSelector);\r\n\r\n  const onPlayClick = React.useCallback(() => {\r\n    dispatch(startSim());\r\n  }, []);\r\n\r\n  const onStopClick = React.useCallback(() => {\r\n    dispatch(stopSim());\r\n  }, []);\r\n\r\n  const onPauseClick = React.useCallback(() => {\r\n    if (isActive) {\r\n      dispatch(pauseSim(\"toggle\"));\r\n    }\r\n  }, [isActive]);\r\n\r\n  return (\r\n    <span>\r\n      {isActive ? (\r\n        <StopIcon\r\n          className={cls(styles[\"button\"], styles[\"button-stop\"])}\r\n          onClick={onStopClick}\r\n        />\r\n      ) : (\r\n        <PlayIcon\r\n          className={cls(styles[\"button\"], styles[\"button-play\"])}\r\n          onClick={onPlayClick}\r\n        />\r\n      )}\r\n      <PauseIcon\r\n        className={cls(\r\n          styles[\"button\"],\r\n          styles[\"button-pause\"],\r\n          !isActive && styles[\"button--disabled\"],\r\n          isPaused && styles[\"selected\"]\r\n        )}\r\n        onClick={onPauseClick}\r\n      />\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default PlayPauseButton;\r\n","import SimControls from \"./SimControls\";\r\nexport default SimControls;\r\n","import * as React from \"react\";\r\n\r\nimport { useAction } from \"@/hooks/useAction\";\r\nimport { newFile } from \"@/actions/file-new\";\r\n\r\nimport MenuItem from \"../MenuItem\";\r\nimport SimControls from \"../SimControls\";\r\n\r\nimport styles from \"./TitleBar.module.css\";\r\n\r\nconst TitleBar: React.FC = () => {\r\n  const onFileNew = useAction(newFile);\r\n\r\n  return (\r\n    <div className={styles.titlebar}>\r\n      <span className={styles[\"titlebar-brand\"]}>Discrelog</span>\r\n      <MenuItem title=\"File\" childPlacement=\"bottom-start\">\r\n        <MenuItem title=\"New\" onClick={onFileNew} />\r\n      </MenuItem>\r\n      <div className={styles[\"titlebar-buttons\"]}>\r\n        <SimControls />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TitleBar;\r\n","import TitleBar from \"./TitleBar\";\r\nexport default TitleBar;\r\n","import * as React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { AnyAction } from \"redux\";\r\n\r\nexport function useAction<T extends (...args: any[]) => AnyAction>(\r\n  actionCreator: T\r\n): T {\r\n  const dispatch = useDispatch();\r\n  return React.useCallback((...args: any[]) => {\r\n    dispatch(actionCreator(...args));\r\n  }, []) as any;\r\n}\r\n","import * as React from \"react\";\r\n\r\nimport { isDev } from \"@/env\";\r\n\r\nimport flex from \"@/styles/flex.module.css\";\r\nimport sizing from \"@/styles/sizing.module.css\";\r\n\r\nimport CircuitEditor from \"@/pages/CircuitEditor\";\r\nimport Intro from \"@/pages/Intro\";\r\n\r\nimport TitleBar from \"../TitleBar\";\r\nimport { cls } from \"@/utils\";\r\n\r\nconst App: React.FC = () => {\r\n  const [introShown, setIntroShown] = React.useState(isDev);\r\n  const onDismiss = React.useCallback(() => {\r\n    setIntroShown(true);\r\n  }, []);\r\n\r\n  if (!introShown) {\r\n    return <Intro dismiss={onDismiss} />;\r\n  }\r\n\r\n  return (\r\n    <div className={cls(sizing[\"fill-parent\"], flex[\"flex-column\"])}>\r\n      <TitleBar />\r\n      <CircuitEditor\r\n        className={cls(sizing[\"fill-parent\"], flex[\"flexitem-shrink\"])}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import App from \"./App\";\r\nexport default App;\r\n","export const isProd = process.env.NODE_ENV === \"production\";\r\nexport const isDev = process.env.NODE_ENV === \"development\";\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\n\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport \"./styles\";\r\n\r\nimport { store } from \"./store\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nconst rootEl = document.getElementById(\"root\");\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  rootEl\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"intro\":\"Intro-module__intro___11OUj\",\"intro-content\":\"Intro-module__intro-content___3fJQP\",\"intro-header\":\"Intro-module__intro-header___38sbJ\",\"intro-markdown\":\"Intro-module__intro-markdown___1qZ0W\",\"intro-dismiss\":\"Intro-module__intro-dismiss___2fMU7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wire\":\"Wire-module__wire___1Atow\",\"powered\":\"Wire-module__powered___afkca\",\"selected\":\"Wire-module__selected___2OYgN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"circuittray\":\"ElementTray-module__circuittray___38QqX\",\"circuittray-title\":\"ElementTray-module__circuittray-title___2yi9d\",\"circuittray-elements\":\"ElementTray-module__circuittray-elements___hNZuh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlebar\":\"TitleBar-module__titlebar___3fEaN\",\"titlebar-buttons\":\"TitleBar-module__titlebar-buttons___3h7Tw\",\"titlebar-brand\":\"TitleBar-module__titlebar-brand___34og_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex-row\":\"flex-module__flex-row___2HFWh\",\"flex-column\":\"flex-module__flex-column___3GRAs\",\"flexitem-shrink\":\"flex-module__flexitem-shrink___ixBNI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fill-parent\":\"sizing-module__fill-parent___2SiAH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"circuit-node-pin\":\"CircuitNodePin-module__circuit-node-pin___3jNOY\",\"selected\":\"CircuitNodePin-module__selected___1n6kJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wire-joint\":\"WireJoint-module__wire-joint___3lTCQ\",\"selected\":\"WireJoint-module__selected___1jPD-\"};"],"sourceRoot":""}