{"version":3,"sources":["webpack://discrelog/./src/styles/interaction.module.css?621c","webpack://discrelog/./src/actions/circuit-add.ts","webpack://discrelog/./src/actions/circuit-delete.ts","webpack://discrelog/./src/actions/circuit-rename.ts","webpack://discrelog/./src/actions/circuit-view.ts","webpack://discrelog/./src/actions/clipboard-paste.ts","webpack://discrelog/./src/actions/dialog-response-accept.ts","webpack://discrelog/./src/actions/field-drag-continue.ts","webpack://discrelog/./src/actions/field-drag-end.ts","webpack://discrelog/./src/actions/field-drag-start-joint.ts","webpack://discrelog/./src/actions/field-drag-start-newjoint.ts","webpack://discrelog/./src/actions/field-drag-start-newnode.ts","webpack://discrelog/./src/actions/field-drag-start-node.ts","webpack://discrelog/./src/actions/field-drag-start-select.ts","webpack://discrelog/./src/actions/field-drag-start-wire.ts","webpack://discrelog/./src/actions/field-mouse-leave.ts","webpack://discrelog/./src/actions/node-add.ts","webpack://discrelog/./src/actions/node-interact.ts","webpack://discrelog/./src/actions/node-rename.ts","webpack://discrelog/./src/actions/project-export-link.ts","webpack://discrelog/./src/actions/project-import-link.ts","webpack://discrelog/./src/actions/project-load.ts","webpack://discrelog/./src/actions/project-new.ts","webpack://discrelog/./src/actions/project-save.ts","webpack://discrelog/./src/actions/redo.ts","webpack://discrelog/./src/actions/select-all.ts","webpack://discrelog/./src/actions/select-clear.ts","webpack://discrelog/./src/actions/select-nodes.ts","webpack://discrelog/./src/actions/select-wire-joints.ts","webpack://discrelog/./src/actions/select-wires.ts","webpack://discrelog/./src/actions/selection-align-to-grid.ts","webpack://discrelog/./src/actions/selection-copy.ts","webpack://discrelog/./src/actions/selection-delete.ts","webpack://discrelog/./src/actions/sim-fastforward.ts","webpack://discrelog/./src/actions/sim-pause.ts","webpack://discrelog/./src/actions/sim-start.ts","webpack://discrelog/./src/actions/sim-stop.ts","webpack://discrelog/./src/actions/sim-tick.ts","webpack://discrelog/./src/actions/undo.ts","webpack://discrelog/./src/actions/view-zoom.ts","webpack://discrelog/./src/arrays.ts","webpack://discrelog/./src/elements/definitions/element-and.ts","webpack://discrelog/./src/elements/definitions/element-buffer.ts","webpack://discrelog/./src/elements/definitions/element-led.ts","webpack://discrelog/./src/elements/definitions/element-nor.ts","webpack://discrelog/./src/elements/definitions/element-not.ts","webpack://discrelog/./src/elements/definitions/element-or.ts","webpack://discrelog/./src/elements/definitions/element-seg7.ts","webpack://discrelog/./src/elements/definitions/element-toggle.ts","webpack://discrelog/./src/elements/definitions/element-xor.ts","webpack://discrelog/./src/geometry.ts","webpack://discrelog/./src/history.ts","webpack://discrelog/./src/hooks/useSelector.ts","webpack://discrelog/./src/styles/flex.module.css?f6f1","webpack://discrelog/./src/styles/sizing.module.css?9a43","webpack://discrelog/./src/components/Tessel/types.ts","webpack://discrelog/./src/hooks/useRefValue.ts","webpack://discrelog/./src/components/Tessel/Tessel.module.css?d43a","webpack://discrelog/./src/components/Tessel/TesselSplit.tsx","webpack://discrelog/./src/components/Tessel/TesselSplitFrame.tsx","webpack://discrelog/./src/components/Tessel/TesselFrame.tsx","webpack://discrelog/./src/components/Tessel/index.ts","webpack://discrelog/./src/components/Tessel/Tessel.tsx","webpack://discrelog/./src/components/Button/Button.module.css?a282","webpack://discrelog/./src/components/Button/index.ts","webpack://discrelog/./src/components/Button/Button.tsx","webpack://discrelog/./src/components/CircuitNodeBreadcrumb/CircuitNodeBreadcrumb.tsx","webpack://discrelog/./src/components/CircuitNodeBreadcrumb/index.ts","webpack://discrelog/./src/components/CircuitNodeBreadcrumb/CircuitNodeBreadcrumb.module.css?4319","webpack://discrelog/./src/services/node-layout/selectors/field.ts","webpack://discrelog/./src/services/circuit-editor-view/selectors/view.ts","webpack://discrelog/./src/components/Menus/MenuCloseContext.ts","webpack://discrelog/./src/components/Popover.tsx","webpack://discrelog/./src/hooks/useOutsideEvent.ts","webpack://discrelog/./src/components/ContextMenu.tsx","webpack://discrelog/./src/components/CircuitField/contexts/fieldSvgElement.tsx","webpack://discrelog/./src/components/CircuitField/hooks/useMouseCoords.ts","webpack://discrelog/./src/components/CircuitField/utils.ts","webpack://discrelog/./src/components/CircuitField/components/NodeVisual.tsx","webpack://discrelog/./src/components/CircuitField/components/DragNewNodeLayer.tsx","webpack://discrelog/./src/components/CircuitField/components/DragNodePreviewLayer.tsx","webpack://discrelog/./src/components/CircuitField/components/WireJointVisual/WireJointVisual.tsx","webpack://discrelog/./src/components/CircuitField/components/WireJointVisual/index.ts","webpack://discrelog/./src/components/CircuitField/components/WireJointVisual/WireJointVisual.module.css?4582","webpack://discrelog/./src/components/CircuitField/components/DragJointPreviewLayer.tsx","webpack://discrelog/./src/hooks/useMouseTracking.ts","webpack://discrelog/./src/components/CircuitField/components/DragSelectLayer.tsx","webpack://discrelog/./src/components/CircuitField/components/GridBackground.tsx","webpack://discrelog/./src/components/Menus/Menus.module.css?27a7","webpack://discrelog/./src/components/Menus/Menu.tsx","webpack://discrelog/./src/components/Menus/MenuItem.tsx","webpack://discrelog/./src/components/Menus/MenuDivider.tsx","webpack://discrelog/./src/components/AtomicTextInput.tsx","webpack://discrelog/./src/components/EditableText.tsx","webpack://discrelog/./src/components/Menus/MenuEditableText.tsx","webpack://discrelog/./src/components/CircuitField/components/NodeContextMenu.tsx","webpack://discrelog/./src/components/CircuitField/components/Node/Node.tsx","webpack://discrelog/./src/services/simulator/selectors/nodes.ts","webpack://discrelog/./src/components/CircuitField/components/Node/index.ts","webpack://discrelog/./src/components/CircuitField/components/NodesLayer.tsx","webpack://discrelog/./src/services/simulator/selectors/wires.ts","webpack://discrelog/./src/components/CircuitField/components/WireSegment.tsx","webpack://discrelog/./src/components/CircuitField/components/WireJoint.tsx","webpack://discrelog/./src/components/CircuitField/components/Wire/index.ts","webpack://discrelog/./src/components/CircuitField/components/Wire/Wire.tsx","webpack://discrelog/./src/components/CircuitField/components/Wire/Wire.module.css?d69f","webpack://discrelog/./src/components/CircuitField/components/WiresLayer.tsx","webpack://discrelog/./src/components/CircuitField/components/NodePin/NodePin.module.css?2ccc","webpack://discrelog/./src/components/CircuitField/components/NodePin/NodePin.tsx","webpack://discrelog/./src/components/CircuitField/components/NodePin/index.ts","webpack://discrelog/./src/components/CircuitField/components/NodePins.tsx","webpack://discrelog/./src/components/CircuitField/components/NodePinsLayer.tsx","webpack://discrelog/./src/components/CircuitField/components/DragAttachWirePreviewLayer.tsx","webpack://discrelog/./src/components/CircuitField/components/FieldContextMenu.tsx","webpack://discrelog/./src/components/CircuitField/index.ts","webpack://discrelog/./src/components/CircuitField/CircuitField.tsx","webpack://discrelog/./src/hooks/useNativeEvent.ts","webpack://discrelog/./src/components/CircuitField/CircuitField.module.css?4e6b","webpack://discrelog/./src/pages/CircuitEditorPage/windows/CircuitFieldWindow/keymap.ts","webpack://discrelog/./src/pages/CircuitEditorPage/windows/CircuitFieldWindow/CircuitFieldWindow.tsx","webpack://discrelog/./src/components/SelectionList/SelectionList.module.css?89a4","webpack://discrelog/./src/components/SelectionList/SelectionList.tsx","webpack://discrelog/./src/components/SelectionList/index.ts","webpack://discrelog/./src/pages/CircuitEditorPage/windows/CircuitsTreeWindow/CircuitsTreeWindow.tsx","webpack://discrelog/./src/pages/CircuitEditorPage/windows/CircuitsTreeWindow/index.ts","webpack://discrelog/./src/pages/CircuitEditorPage/windows/CircuitsTreeWindow/CircuitsTreeWindow.module.css?897d","webpack://discrelog/./src/pages/CircuitEditorPage/windows/NodeTrayWindow/NodeTrayWindow.module.css?4e22","webpack://discrelog/./src/pages/CircuitEditorPage/windows/NodeTrayWindow/NodeTrayWindow.tsx","webpack://discrelog/./src/pages/CircuitEditorPage/CircuitEditorPage.tsx","webpack://discrelog/./src/pages/CircuitEditorPage/index.ts","webpack://discrelog/./src/pages/ProjectImporterPage/ProjectImporterPage.tsx","webpack://discrelog/./src/pages/ProjectImporterPage/index.ts","webpack://discrelog/./src/router.tsx","webpack://discrelog/./src/components/AutoPopover.tsx","webpack://discrelog/./src/hooks/useAction.ts","webpack://discrelog/./src/components/FileMenu.tsx","webpack://discrelog/./src/undo/selectors.ts","webpack://discrelog/./src/components/EditMenu.tsx","webpack://discrelog/./src/services/simulator/selectors/performance.ts","webpack://discrelog/./src/components/Icons/Play.tsx","webpack://discrelog/./src/components/Icons/Stop.tsx","webpack://discrelog/./src/components/Icons/Pause.tsx","webpack://discrelog/./src/components/SimControls/SimControls.module.css?8dc8","webpack://discrelog/./src/components/SimControls/index.ts","webpack://discrelog/./src/components/SimControls/SimControls.tsx","webpack://discrelog/./src/components/TitleBar/index.ts","webpack://discrelog/./src/components/TitleBar/TitleBar.tsx","webpack://discrelog/./src/components/TitleBar/TitleBar.module.css?c6e3","webpack://discrelog/./src/services/dialog/selectors/dialog.ts","webpack://discrelog/./src/components/Modal/Modal.module.css?d409","webpack://discrelog/./src/components/Modal/index.ts","webpack://discrelog/./src/components/Modal/Modal.tsx","webpack://discrelog/./src/components/Dialog/index.ts","webpack://discrelog/./src/components/Dialog/Dialog.tsx","webpack://discrelog/./src/components/Dialog/Dialog.module.css?a332","webpack://discrelog/./src/components/DialogManager/dialogs/ExportLinkDialog.tsx","webpack://discrelog/./src/components/DialogManager/dialogs/ExportLinkDialog.module.css?17f2","webpack://discrelog/./src/components/DialogManager/index.ts","webpack://discrelog/./src/components/DialogManager/DialogManager.tsx","webpack://discrelog/./src/index.tsx","webpack://discrelog/./src/components/App/App.tsx","webpack://discrelog/./src/modifier-keys.ts","webpack://discrelog/./src/runtime-env.ts","webpack://discrelog/./src/selection-mode.ts","webpack://discrelog/./src/services/circuit-editor-ui/selectors/drag.ts","webpack://discrelog/./src/services/circuit-editor-ui/selectors/snap.ts","webpack://discrelog/./src/services/circuit-editor-ui/utils.ts","webpack://discrelog/./src/services/circuit-editor-view/selectors/circuit.ts","webpack://discrelog/./src/services/circuits/selectors/connections.ts","webpack://discrelog/./src/services/circuit-editor-view/selectors/nodes.ts","webpack://discrelog/./src/services/circuit-editor-view/utils.ts","webpack://discrelog/./src/services/circuits/constants.ts","webpack://discrelog/./src/services/circuits/selectors/circuits.ts","webpack://discrelog/./src/services/circuits/selectors/nodes.ts","webpack://discrelog/./src/services/circuits/utils.ts","webpack://discrelog/./src/services/dialog/utils.ts","webpack://discrelog/./src/services/node-graph/selectors/connections.ts","webpack://discrelog/./src/services/node-graph/selectors/node-def.ts","webpack://discrelog/./src/services/node-graph/selectors/nodes.ts","webpack://discrelog/./src/services/node-graph/selectors/pins.ts","webpack://discrelog/./src/services/node-graph/utils.ts","webpack://discrelog/./src/services/node-layout/selectors/node-bounds.ts","webpack://discrelog/./src/services/node-layout/selectors/node-pin-positions.ts","webpack://discrelog/./src/services/node-layout/selectors/node-positions.ts","webpack://discrelog/./src/services/node-layout/selectors/wires.ts","webpack://discrelog/./src/services/node-layout/utils.ts","webpack://discrelog/./src/services/node-types/components/ShapePathNode.tsx","webpack://discrelog/./src/services/node-types/definition-sources/integrated-circuits/utils.ts","webpack://discrelog/./src/services/node-types/definition-sources/interaction/toggle.ts","webpack://discrelog/./src/services/node-types/definition-sources/logic/and.tsx","webpack://discrelog/./src/services/node-types/definition-sources/logic/buffer.tsx","webpack://discrelog/./src/services/node-types/definition-sources/logic/nor.tsx","webpack://discrelog/./src/services/node-types/definition-sources/logic/not.tsx","webpack://discrelog/./src/services/node-types/definition-sources/logic/or.tsx","webpack://discrelog/./src/services/node-types/definition-sources/logic/xor.tsx","webpack://discrelog/./src/services/node-types/definition-sources/output/led.ts","webpack://discrelog/./src/services/node-types/definition-sources/output/seg7.ts","webpack://discrelog/./src/services/node-types/definition-sources/pins/input.tsx","webpack://discrelog/./src/services/node-types/definition-sources/pins/output.tsx","webpack://discrelog/./src/services/node-types/definition-sources/integrated-circuits/IntegratedCircuitVisual.tsx","webpack://discrelog/./src/services/node-types/definition-sources/integrated-circuits/index.tsx","webpack://discrelog/./src/services/node-types/definition-sources/index.ts","webpack://discrelog/./src/services/node-types/definition-sources/interaction/index.ts","webpack://discrelog/./src/services/node-types/definition-sources/logic/index.ts","webpack://discrelog/./src/services/node-types/definition-sources/output/index.ts","webpack://discrelog/./src/services/node-types/definition-sources/pins/index.ts","webpack://discrelog/./src/services/node-types/selectors/node-types.ts","webpack://discrelog/./src/services/selection/selectors/selection.ts","webpack://discrelog/./src/services/selection/utils.ts","webpack://discrelog/./src/services/service-state-utils.ts","webpack://discrelog/./src/services/simulator-control/selectors/run.ts","webpack://discrelog/./src/services/simulator-control/utils.ts","webpack://discrelog/./src/services/simulator-graph/utils.ts","webpack://discrelog/./src/services/simulator/utils.ts","webpack://discrelog/./src/services/circuit-editor-ui/state.ts","webpack://discrelog/./src/services/circuit-editor-view/state.ts","webpack://discrelog/./src/services/circuits/state.ts","webpack://discrelog/./src/services/clipboard/state.ts","webpack://discrelog/./src/services/dialog/state.ts","webpack://discrelog/./src/services/node-graph/state.ts","webpack://discrelog/./src/services/node-layout/state.ts","webpack://discrelog/./src/services/selection/state.ts","webpack://discrelog/./src/services/simulator/state.ts","webpack://discrelog/./src/services/simulator-control/state.ts","webpack://discrelog/./src/services/simulator-graph/state.ts","webpack://discrelog/./src/services/state.ts","webpack://discrelog/./src/undo/state.ts","webpack://discrelog/./src/store/state.ts","webpack://discrelog/./src/actions/init.ts","webpack://discrelog/./src/actions/node-delete.ts","webpack://discrelog/./src/actions/selection-move.ts","webpack://discrelog/./src/actions/wire-attach.ts","webpack://discrelog/./src/actions/wire-detatch.ts","webpack://discrelog/./src/actions/wire-joint-add.ts","webpack://discrelog/./src/actions/wire-joint-move.ts","webpack://discrelog/./src/actions/wire-joint-delete.ts","webpack://discrelog/./src/actions/project-receive.ts","webpack://discrelog/./src/project-mutation-actions.ts","webpack://discrelog/./src/undo/utils.ts","webpack://discrelog/./src/store/devtool-sanitizer.ts","webpack://discrelog/./src/actions/dialog-show.ts","webpack://discrelog/./src/actions/dialog-response-cancel.ts","webpack://discrelog/./src/services/dialog/api.ts","webpack://discrelog/./src/services/node-graph/types.ts","webpack://discrelog/./src/services/savedata/types.ts","webpack://discrelog/./src/store/utils.ts","webpack://discrelog/./src/services/circuit-editor-ui/reducer/drag-continue.ts","webpack://discrelog/./src/actions/select-region.ts","webpack://discrelog/./src/services/circuit-editor-ui/reducer/drag-start-newjoint.ts","webpack://discrelog/./src/services/circuit-editor-ui/reducer/drag-start-newnode.ts","webpack://discrelog/./src/services/circuit-editor-ui/reducer/drag-start-select.ts","webpack://discrelog/./src/services/circuit-editor-ui/reducer/drag-start-wire.ts","webpack://discrelog/./src/services/circuit-editor-ui/reducer/index.ts","webpack://discrelog/./src/services/circuit-editor-ui/reducer/drag-end.ts","webpack://discrelog/./src/services/circuit-editor-ui/reducer/drag-start-joint.ts","webpack://discrelog/./src/services/circuit-editor-ui/reducer/drag-start-node.ts","webpack://discrelog/./src/services/circuit-editor-ui/reducer/mouse-leave.ts","webpack://discrelog/./src/services/circuit-editor-view/reducer/circuit-delete.ts","webpack://discrelog/./src/services/circuit-editor-view/reducer/circuit-new.ts","webpack://discrelog/./src/services/circuit-editor-view/reducer/circuit-view.ts","webpack://discrelog/./src/services/circuit-editor-view/reducer/index.ts","webpack://discrelog/./src/services/circuit-editor-view/reducer/view-zoom.ts","webpack://discrelog/./src/services/circuits/reducer/circuit-add.ts","webpack://discrelog/./src/services/circuits/reducer/circuit-delete.ts","webpack://discrelog/./src/services/circuits/reducer/circuit-rename.ts","webpack://discrelog/./src/services/circuits/reducer/node-add.ts","webpack://discrelog/./src/services/circuits/reducer/node-delete.ts","webpack://discrelog/./src/services/circuits/reducer/index.ts","webpack://discrelog/./src/services/circuits/reducer/project-new.ts","webpack://discrelog/./src/actions/clipboard-copy.ts","webpack://discrelog/./src/services/clipboard/utils.ts","webpack://discrelog/./src/services/clipboard/reducer/clipboard-copy.ts","webpack://discrelog/./src/services/clipboard/reducer/index.ts","webpack://discrelog/./src/services/clipboard/reducer/clipboard-paste.ts","webpack://discrelog/./src/services/dialog/reducer/dialog-response-accept.ts","webpack://discrelog/./src/services/dialog/reducer/index.ts","webpack://discrelog/./src/services/dialog/reducer/dialog-response-cancel.ts","webpack://discrelog/./src/services/dialog/reducer/dialog-show.ts","webpack://discrelog/./src/store/priorities.ts","webpack://discrelog/./src/services/node-graph/reducer/operations/node-delete.ts","webpack://discrelog/./src/services/node-graph/reducer/circuit-delete.ts","webpack://discrelog/./src/services/node-graph/reducer/node-add.ts","webpack://discrelog/./src/services/node-graph/reducer/node-delete.ts","webpack://discrelog/./src/services/node-graph/reducer/node-rename.ts","webpack://discrelog/./src/services/node-graph/reducer/project-new.ts","webpack://discrelog/./src/services/node-graph/reducer/wire-detatch.ts","webpack://discrelog/./src/services/node-graph/reducer/index.ts","webpack://discrelog/./src/services/node-graph/reducer/wire-attach.ts","webpack://discrelog/./src/services/node-layout/reducer/operations/node-delete.ts","webpack://discrelog/./src/services/node-layout/reducer/circuit-delete.ts","webpack://discrelog/./src/services/node-layout/reducer/node-add.ts","webpack://discrelog/./src/services/node-layout/reducer/node-delete.ts","webpack://discrelog/./src/actions/node-move.ts","webpack://discrelog/./src/services/node-layout/reducer/node-move.ts","webpack://discrelog/./src/services/node-layout/reducer/index.ts","webpack://discrelog/./src/services/node-layout/reducer/project-new.ts","webpack://discrelog/./src/services/node-layout/reducer/wire-attach.ts","webpack://discrelog/./src/services/node-layout/reducer/wire-detatch.ts","webpack://discrelog/./src/services/node-layout/reducer/wire-joint-add.ts","webpack://discrelog/./src/services/node-layout/reducer/wire-joint-delete.ts","webpack://discrelog/./src/services/node-layout/reducer/wire-joint-move.ts","webpack://discrelog/./src/services/savedata/reducer/index.ts","webpack://discrelog/./src/services/savedata/reducer/autosave.ts","webpack://discrelog/./src/services/savedata/utils.ts","webpack://discrelog/./src/services/savedata/reducer/project-new.ts","webpack://discrelog/./src/services/savedata/reducer/init.ts","webpack://discrelog/./src/services/savedata/reducer/project-receive.ts","webpack://discrelog/./src/services/selection/reducer/node-delete.ts","webpack://discrelog/./src/services/selection/reducer/project-new.ts","webpack://discrelog/./src/services/selection/reducer/select-all.ts","webpack://discrelog/./src/services/selection/reducer/select-clear.ts","webpack://discrelog/./src/services/selection/reducer/select-joints.ts","webpack://discrelog/./src/services/selection/reducer/select-nodes.ts","webpack://discrelog/./src/services/selection/reducer/select-region.ts","webpack://discrelog/./src/services/selection/reducer/select-wires.ts","webpack://discrelog/./src/services/selection/reducer/wire-detatch.ts","webpack://discrelog/./src/services/selection/reducer/index.ts","webpack://discrelog/./src/services/selection/reducer/selection-align-to-grid.ts","webpack://discrelog/./src/services/selection/reducer/selection-copy.ts","webpack://discrelog/./src/services/selection/reducer/selection-delete.ts","webpack://discrelog/./src/services/selection/reducer/selection-move.ts","webpack://discrelog/./src/services/simulator/reducer/element-graph-invalidated.ts","webpack://discrelog/./src/elements/definitions/index.ts","webpack://discrelog/./src/services/simulator-graph/selectors/nodes.ts","webpack://discrelog/./src/services/simulator-graph/selectors/connections.ts","webpack://discrelog/./src/services/simulator/reducer/utils.ts","webpack://discrelog/./src/services/simulator/reducer/node-interact.ts","webpack://discrelog/./src/services/simulator/reducer/sim-fastforward.ts","webpack://discrelog/./src/services/simulator/reducer/sim-start.ts","webpack://discrelog/./src/services/simulator/reducer/index.ts","webpack://discrelog/./src/services/simulator/reducer/sim-tick.ts","webpack://discrelog/./src/services/simulator-control/reducers/element-graph-invalidated.ts","webpack://discrelog/./src/services/simulator-control/reducers/sim-pause.ts","webpack://discrelog/./src/services/simulator-control/reducers/sim-start.ts","webpack://discrelog/./src/services/simulator-control/reducers/sim-stop.ts","webpack://discrelog/./src/services/simulator-control/reducers/index.ts","webpack://discrelog/./src/services/simulator-graph/reducer/sim-start.ts","webpack://discrelog/./src/services/simulator-graph/reducer/sim-stop.ts","webpack://discrelog/./src/services/simulator-graph/reducer/index.ts","webpack://discrelog/./src/store/reducer.ts","webpack://discrelog/./src/services/reducer.ts","webpack://discrelog/./src/services/savedata/errors.ts","webpack://discrelog/./src/services/savedata/saga/project-export-link.ts","webpack://discrelog/./src/services/savedata/saga/project-import-link.ts","webpack://discrelog/./src/services/savedata/saga/project-load.ts","webpack://discrelog/./src/services/savedata/saga/project-save.ts","webpack://discrelog/./src/services/savedata/saga/index.ts","webpack://discrelog/./src/services/simulator-control/saga/mode-run.ts","webpack://discrelog/./src/services/simulator-control/saga/index.ts","webpack://discrelog/./src/store/saga.ts","webpack://discrelog/./src/store/store.ts","webpack://discrelog/./src/undo/reducer/index.ts","webpack://discrelog/./src/undo/reducer/undo.ts","webpack://discrelog/./src/undo/reducer/redo.ts","webpack://discrelog/./src/undo/reducer/capture-undo-state.ts","webpack://discrelog/./src/services/saga.ts","webpack://discrelog/./src/utils.ts"],"names":["ACTION_CIRCUIT_ADD","addCircuit","circuitName","circuitId","edit","type","payload","isAddCircuitAction","action","ACTION_CIRCUIT_DELETE","deleteCircuit","isDeleteCircuitAction","ACTION_CIRCUIT_RENAME","renameCircuit","isRenameCircuitAction","ACTION_CIRCUIT_VIEW","viewCircuit","circuitNodeIdPath","isViewCircuitAction","ACTION_PASTE","paste","isPasteAction","ACTION_DIALOG_RESPONSE_ACCEPT","acceptDialog","result","isAcceptDialogAction","ACTION_FIELD_DRAG_CONTINUE","fieldDragContinue","p","modifierKeys","dragPos","isFieldDragContinueAction","ACTION_FIELD_DRAG_END","fieldDragEnd","point","isFieldDragEndAction","ACTION_FIELD_DRAG_START_JOINT","fieldDragStartJoint","jointId","isFieldDragStartJointAction","ACTION_FIELD_DRAG_START_NEWJOINT","fieldDragStartNewJoint","connectionId","addAfterJointId","isFieldDragStartNewJointAction","ACTION_FIELD_DRAG_START_NEWNODE","fieldDragStartNewNode","nodeType","isFieldDragStartNewNodeAction","ACTION_FIELD_DRAG_START_NODE","fieldDragStartNode","nodeId","isFieldDragStartNodeAction","ACTION_FIELD_DRAG_START_SELECT","fieldDragStartSelect","isFieldDragStartSelectAction","ACTION_FIELD_DRAG_START_WIRE","fieldDragStartWire","dragStart","pin","isFieldDragStartWireAction","ACTION_FIELD_MOUSE_LEAVE","fieldMouseLeave","isFieldMouseLeaveAction","ACTION_NODE_ADD","addNode","opts","isAddNodeAction","ACTION_NODE_INTERACT","interactNode","isInteractNodeAction","ACTION_NODE_RENAME","renameNode","nodeName","isRenameNodeAction","ACTION_PROJECT_EXPORT_LINK","exportProjectLink","ACTION_PROJECT_IMPORT_LINK","importProjectLink","data","ACTION_PROJECT_LOAD","loadProject","ACTION_PROJECT_NEW","newProject","isNewProjectAction","ACTION_PROJECT_SAVE","saveProject","ACTION_REDO","redo","isRedoAction","ACTION_SELECT_CLEAR","selectAll","isSelectAllAction","clearSelection","isClearSelectionAction","ACTION_SELECT_NODES","selectNodes","mode","nodeIds","Array","isArray","isSelectNodesAction","ACTION_SELECT_WIRE_JOINTS","selectWireJoints","jointIds","isSelectWireJointsAction","ACTION_SELECT_WIRES","selectWires","connectionIds","isSelectWiresAction","ACTION_SELECTION_ALIGN_TO_GRID","selectionAlignToGrid","isSelectionAlignToGridAction","ACTION_SELECTION_COPY","copySelection","isCopySelectionAction","ACTION_SELECTION_DELETE","deleteSelection","isDeleteSelectionAction","ACTION_SIM_FASTFORWARD","fastForwardSim","isFastForwardSimAction","ACTION_SIM_PAUSE","pauseSim","isPauseSimAction","ACTION_SIM_START","startSim","isStartSimAction","ACTION_SIM_STOP","stopSim","isStopSimAction","ACTION_SIM_TICK","tickSim","tickCount","isTickSimAction","ACTION_UNDO","undo","isUndoAction","ACTION_VIEW_ZOOM","viewZoom","delta","isViewZoomAction","asArray","value","inputPins","outputPins","evolve","_","inputs","transitions","tickOffset","valuesByPin","OUT","A","B","IN","state","defaultToggleState","toggleState","interact","pointSchema","shape","x","required","y","ZeroPoint","Object","freeze","magnitude","v","Math","sqrt","normalize","m","dotProduct","a","b","scale","scaler","normalizeRectangle","args","p1","p2","length","r","min","max","pointAdd","pointSubtract","pointEquals","pointIntersects","calcSize","width","height","union","r1","r2","intersects","useSelector","selector","normalizeTesselDivision","firstPercent","isTesselPercentDivision","isTesselFixedDivision","useRefValue","ref","current","ZeroRect","top","left","bottom","right","toJSON","direction","onChangePercentage","pointerCaptureRef","directionRef","onChangePercentageRef","onHandlePointerMove","e","parentRect","parentElement","getBoundingClientRect","percentage","position","pageX","isNaN","pageY","leading","onPointerMove","persist","onPointerDown","defaultPrevented","preventDefault","setPointerCapture","pointerId","onPointerUp","releasePointerCapture","className","applyDivisionChange","division","percent","absolute","secondSize","firstSize","item","renderWindow","onLayoutChange","first","second","divisionValue","sizeDirection","onFirstLayoutChange","onSecondLayoutChange","firstFix","secondFix","firstSizeDiv","secondSizeDiv","style","windowId","normalizeTesselItem","isTesselWindow","isTesselSplit","rootItem","props","children","CircuitNodeBreadcrumbRootItem","dispatch","rootCircuitName","editingCircuitName","onClick","CircuitNodeBreadcrumbItem","circuitNodeId","elements","map","index","elementPath","slice","key","MinFieldRect","fieldRectSelector","createSelector","nodeRectsById","wireJointsById","reduce","viewScaleSelector","s","viewScale","MenuCloseContext","useMenuCloseContext","MenuCloseContextProvider","Provider","isOpen","anchorEl","placement","onRequestClose","popoverRef","setPopoverRef","attributes","styles","usePopper","element","onOutsideEvent","onEvent","contains","target","document","addEventListener","removeEventListener","useOutsideEvent","createPortal","popper","body","ContextMenu","open","useContextMenu","ctxPos","setCtxPos","openContextMenu","onCloseContextMenu","renderContextMenu","content","nullRef","svgRef","scalerRef","ContextProvider","FieldSvgElementProvider","context","useEventMouseCoords","field","ctm","getScreenCTM","pt","createSVGPoint","translated","matrixTransform","inverse","nodeState","isSelected","onMouseDown","onMouseOver","onMouseUp","onMouseLeave","onContextMenu","def","component","ElementComponent","visual","elementState","fill","transform","undefined","getMouseCoords","isDraggingNewNode","dragEnd","drag","draggingNodeType","onMouseMove","opacity","selectedNodePositionsByIdSelector","selectedNodeIds","nodePositionsById","selectedNodeTypesByIdSelector","nodeTypesById","selectedNodePositionsById","selectedNodeTypesById","dragMoveOffset","id","interactable","selected","mouseOver","setMouseOver","onMouseOut","cx","cy","selectedJointPositionsByIdSelector","selectedJointIds","jointPositionsById","newJointPosition","newJointElement","useMouseTracking","dragThreshold","onDragStart","onDragMove","onDragEnd","isTracking","setTracking","isTrackingRef","isDraggingRef","mouseDownRef","startTracking","cancelTracking","offset","d","abs","selectionRect","counterScale","getCoords","button","modifiers","ctrlMetaKey","shiftKey","strokeWidth","strokeDasharray","stroke","gridSize","xmlns","patternUnits","disabled","secondary","requestMenuClose","onItemClick","autoFocus","defaultValue","onChange","onBeginEdit","onCommit","onCancel","onBlur","onKeyUp","editValue","setEditValue","onInputChange","onInputKeyUp","onInputBlur","textClassname","inputClassname","label","isEditing","onRequestEdit","inputRef","onSpanDoubleClick","select","onDoubleClick","onEditableCommit","isRenaming","setIsRenaming","onRename","onRenameCancel","onRenameCommit","onAlignToGrid","onDelete","fontWeight","MenuDivider","Node","isSimActive","editCircuitIdPath","simulatorNodeIdsByCircuitNodeId","services","simulatorGraph","nodeStatesBySimulatorNodeId","simulator","nodeStatesByNodeId","simulatorNodeId","nodeStateFromCircuitNodeIdSelector","selectionMode","bounds","hitPath","NodeName","textScale","textYOffset","fontSize","textAnchor","nodeElements","wireValueFromConnectionIdSelector","icNodePath","nodeGraph","connectionsById","nodeOutputValuesByNodeId","wire","outputVauesByNodeId","outputPin","pinId","join","startJointId","endJointId","start","end","mousePos","setMousePos","onJointInsertMouseDown","insertJointPos","lineDir","x1","y1","x2","y2","onJointDragStart","onJointDragMove","onJointDragEnd","startMoveJointTracking","mouseDown","isPowered","segmentElements","jointElements","connectorElements","describeArc","radius","startAngle","endAngle","polarToCartesian","largeArcFlag","centerX","centerY","angleInDegrees","angleInRadians","PI","cos","sin","dragTargetPin","stopPropagation","isDragTarget","pinVisual","pins","keys","dragMode","sizeRef","componentWidth","componentHeight","fieldRect","fieldWidth","fieldHeight","focus","onWheel","ctrlKey","deltaY","listener","options","passive","listenTarget","tabIndex","KEYMAP_SIM_STEP","KEYMAP_SIM_FASTFORWARD","KEYMAP_SELECT_ALL","KEYMAP_COPY","KEYMAP_PASTE","KEYMAP_DELETE","KEYMAP_UNDO","KEYMAP_REDO","FillParent","SelectionListItemNode","onItemSelected","items","CircuitTreeNodeCircuitLabel","onRequestRename","onCancelRename","newName","CircuitTreeContextMenu","onNewCircuit","editingCircuitId","circuitNamesById","onCircuitSelected","listItems","TrayNode","NodeTrayComponent","displayName","viewBox","trayComponent","Component","WindowsById","nodes","keyHandlers","createEventDispatcher","HotKeys","keyMap","handlers","window","windowProps","tesselItems","setTesselItems","location","importError","setImportError","searchParams","URLSearchParams","search","get","exact","path","setOpen","onClose","useAction","actionCreator","preBind","onNewProject","onSaveProject","onLoadProject","onExportLink","canUndoSelector","undoStack","canRedoSelector","redoStack","canUndo","onUndo","canRedo","onRedo","averageMsecsPerTickSelector","lastTickProcessingTimeMs","isActive","isPaused","avgMsecsPerTick","onPlayClick","onStopClick","onPauseClick","toFixed","Stop","Play","Pause","dialogTypeSelector","dialogType","dialogDataSelector","onClickOutside","onEscapeKey","AutoFocusInside","acceptText","cancelText","onAccept","footer","onCloseDialog","dialogData","projectLink","onCopy","navigator","clipboard","writeText","catch","dialogFooter","rootEl","getElementById","history","store","MODIFIER_KEYS_NONE","getModifiers","altKey","metaKey","keyboardIsMac","test","os","toString","keyboardCommandModifier","rootUrlBuilder","URL","host","pathname","rootUrl","getSelectMode","defaultMode","combineSelection","selectedIds","chosenIds","every","chosen","indexOf","concat","dragModeSelector","dragStartSelector","dragEndSelector","dragModifierKeysSelector","dragModifierKeys","selectionRectSelector","local","dragMoveOffsetSelector","nodeSnap","jointSnap","gridSnap","round","dragNewJointPositionSelector","isDraggingNewNodeSelector","dragNewNodeTypeSelector","dragNewNodeType","dragWireTargetPinSelector","nodeIdsForEditingCircuit","pinPositionsByPinIdByNodeId","pinPositionsByPinId","pinIds","pinPosition","gridNodeSnapSelector","gridJointSnapSelector","applyGridNodeSnapSelector","snap","applyGridJointSnapSelector","createCircuitEditorUiReducer","createCircuitEditorUiSelector","editingCircuitIdSelector","editingCircuitNodeIdPathSelector","editingCircuitNodeIdPath","editingCircuitNameSelector","connectionIdsByCircuitIdSelector","filter","inputPin","includes","nodeIdsForEditingCircuitSelector","connectionIdsForEditingCircuitSelector","createCircuitEditorViewReducer","createCircuitEditorViewSelector","ROOT_CIRCUIT_ID","circuitIdsSelector","circuitNamesByCircuitId","circuitNamesByIdSelector","circuitNameFromIdSelector","nodeIdsByCircuitIdSelector","nodeIdsByCircuitId","nodeIdsFromCircuitIdSelector","circuitIdFromNodeIdSelector","createCircuitsReducer","createCircuitsSelector","createDialogReducer","createDialogSelector","connectionsByIdSelector","connectionIdsSelector","connectionFromConnectionIdSelector","connectionsSelector","nodeInputConnectionIdsFromNodeIdSelector","nodeOutputConnectionIdsFromNodeIdSelector","nodeDefFromNodeIdSelector","nodesByNodeIdSelector","nodesById","nodeIdsSelector","nodeTypesByNodeIdSelector","nodeFromNodeIdSelector","nodeIdsFromTypeSelector","desiredType","push","nodeTypeFromNodeIdSelector","node","nodeNameFromNodeIdSelector","substr","pinDirectionFromNodePinSelector","pinDef","nodeOutputSourcesByPinIdFromNodeIdSelector","connections","nodeDef","outputConnections","connection","nodePinsFromPinNodeSelector","icNodeType","icNodeId","createNodeGraphReducer","createNodeGraphSelector","nodeBoundsByIdSelector","nodeDefsByType","elementTypesByNodeId","elementType","nodeRectsByIdSelector","positionsById","boundsById","nodePinPositionsByPinIdByNodeIdSelector","nodePositionsByNodeId","nodeTypesByNodeId","nodePinPositionsByPinIdByNodeId","nodePinPositionsByPinId","nodePosition","relPinPosition","nodePinPositionFromNodePinSelector","nodePinPositions","nodePositionsByNodeIdSelector","nodePositionFromNodeIdSelector","startPositionCacheByConnectionId","endPositionCacheByConnectionId","wireStartPositionFromConnectionIdSelector","cacheData","inputNodeDef","inputNodePosition","outputPosition","wireEndPositionFromConnectionIdSelector","wireJointIdsByConnectionIdSelector","wireJointPositionsByJointId","wireJointIdsByConnectionId","wireJointIdsFromConnectionIdSelector","wireJointPositionFromJointIdSelector","wireJointPositionsByJointIdSelector","createNodeLayoutReducer","createNodeLayoutSelector","ShapePathNode","shapePath","i","createShapePathVisual","circuitIdToNodeType","nodeTypeToCircuitId","startsWith","elementProduction","fillRule","OFFSET","createSeg","name","points","C","D","E","F","G","getBorderPath","inputPinCount","outputPinCount","IntegratedCircuitVisual","borderPath","onViewCircuit","IntegratedCircuitTrayVisual","circuitToNodeVisual","icProps","circuitPinPosition","pinIndex","circuitNodeIds","pinNodeIds","pinNodeId","cachedNodeDefinitionsSelector","nodeDefinitionsSelector","nodeDefinitions","source","resolved","resolveSources","nodeDefinitionsByTypeSelector","defs","defsByType","nodeDefinitionFromTypeSelector","definitions","selectedNodeIdsSelector","isNodeSelectedFromNodeIdSelector","isWireSelectedFromConnectionIdSelector","selectedConnectionIds","selectedJointIdsSelector","isJointSelectedFromJointIdSelector","createSelectionReducer","createSelectionSelector","createServiceReducerCreator","service","reducer","newState","createServiceSelectorCreator","appSelector","isSimActiveSelector","isSimRunningSelector","isSimPausedSelector","ticksPerSecondSelector","ticksPerSecond","createSimulatorControlReducer","createSimulatorControlSelector","createSimulatorGraphReducer","createSimulatorGraphSelector","getSimulatorNodeIdFromCircuitNodeIdPath","simulatorNodeIdPath","pop","simulatorNodeIdItem","createSimulatorReducer","createSimulatorSelector","defaultCircuitEditorUiServiceState","dragNewJointConnectionId","dragNewJointAfterJointId","dragWireSource","defaultCircuitEditorViewServiceState","defaultCircuitsServiceState","defaultClipboardServiceState","clipboardNodes","clipboardPasteOrigin","defaultDialogServiceState","defaultNodeGraphServiceState","defaultNodeLayoutServiceState","defaultSelectionServiceState","defaultSimulatorServiceState","tick","transitionsById","transitionWindows","defaultSimulatorControlServiceState","defaultSimulatorGraphServiceState","simulatorNodesById","_defaultServiceState","circuitEditorUi","circuitEditorView","nodeLayout","circuits","dialog","selection","simulatorControl","defaultServicesState","UndoServicesStateKeys","_defaultAppState","defaultAppState","ACTION_INIT","ACTION_NODE_DELETE","isDeleteNodeAction","ACTION_SELECTION_MOVE","ACTION_WIRE_ATTACH","attachWire","joints","isAttachWireAction","ACTION_WIRE_DETATCH","isDetatchWireAction","ACTION_WIRE_JOINT_ADD","ACTION_WIRE_JOINT_MOVE","moveWireJoint","relative","snapMode","ACTION_WIRE_JOINT_DELETE","ACTION_PROJECT_RECEIVE","receiveProject","saveData","PROJECT_MUTATION_ACTIONS","isProjectMutationAction","captureUndoState","actionsBlacklist","ACTION_DIALOG_SHOW","ACTION_DIALOG_RESPONSE_CANCEL","displayDialogSaga","showDialog","response","nodePinSchema","nodePinEquals","saveCircuitSchema","saveNodeSchema","nullable","saveWireSchema","output","input","of","saveDataSchema","wires","concatReducers","reducers","ACTION_SELECT_REGION","rect","region","selectRegion","moveBy","hasNodes","offsetX","offsetY","moveSelection","addWireJoint","endPin","appState","rootState","remainingCircuitIds","circuitTypeNodeIds","trimmedName","trim","targetCircuitId","ACTION_COPY_NODES","createClipboardReducer","isCopyNodesAction","copyIds","rootPosition","copyNodes","outputs","conns","nodeIsSelected","c","pastePosition","pasteIds","sourceId","targetCopyId","targetPin","targetId","isCancelDialogAction","isShowDialogAction","reducerPriority","priority","weight","priorityBefore","nodeDelete","remainingNodeIds","removedIcPins","some","conn","p1Node","p2Node","p1Def","p2Def","p1Pin","p2Pin","pinsToConnection","remainingIds","removingNodeConnectionIds","removingPinConnectionIds","removedPin","removingJointIds","remainingConnectionIds","remainingJointIds","ACTION_NODE_MOVE","moveNode","isMoveNodeAction","movedNodePositions","movedP","isAddWireJointAction","wireJoints","insertionIndex","isDeleteWireJointAction","isMoveWireJointAction","movedJoints","save","createSave","localStorage","setItem","JSON","stringify","removeItem","isInitAction","str","getItem","parse","loadAutosave","loadSave","isReceiveProjectAction","console","error","wireJointIdsFromConnectionId","connId","isSelectRegionAction","rects","chosenNodeIds","chosenJointIds","jointPositions","nodePositions","nodePos","snappedPos","jointPos","selectedNodes","detatchWire","deleteWireJoint","isMoveSelectionAction","nodeSnapMode","jointSnapMode","ElementDefinitionsByType","and","or","nor","not","buffer","led","toggle","seg7","xor","simulatorNodeIdFromCircuitNodeIdSelector","simulatorNodeIdsSelector","elementTypeFromSimulatorNodeId","simulatorNode","outputSimulatorNodeIdsFromSimulatorNodeIdSelector","outputsByPin","inputPinsByPinIdFromSimulatorNodeIdSelector","inputsByPin","simTick","endTick","saftyCount","Error","shift","tickWindow","updatedNodes","tid","transitionIds","valuesByOutputPin","outputNodeIds","collectNodeTransitions","inputSourcesByPin","inputConn","sourceNodeId","sourcePinId","transition","transitionMerger","transitionTick","removeTransitionsByNodeId","addTransition","transitionId","newTransition","newTransitionWindows","newWindow","splice","transitionWindowIndex","transitionWindow","tickWindowTransitionIndex","removeTransitionById","outputValues","initNode","simInit","performance","now","updateTime","runMode","produceCircuit","EMPTY_PRODUCTION","inputElementPinsByCircuitPinId","outputElementPinsByCircuitPinId","inputCircuitNodeIds","outputCircuitNodeIds","circuitNodeInputPinsByPinIdByNodeId","circuitNodeOutputPinsByPinIdByNodeId","productionResult","produceNode","circuitConnectionsById","outputSimPin","inputSimPins","outputSimNode","outputsByOutputPin","inputSimPin","production","subCircuitIds","produceElementNode","circuitProuction","produceCircuitNode","finalizedList","finalizeReducerList","SaveFormatError","message","super","this","code","validateSync","projectExportLinkSaga","saveText","encoded","encodedText","urlData","encodeURIComponent","projectImportLinkSaga","onImportLink","dewrapped","decodeURIComponent","deflated","to","projectLoadSaga","file","accept","contents","text","bind","warn","projectSaveSaga","showSaveFilePicker","saveNativeFileApi","saveLegacy","fileHandle","types","description","writable","createWritable","write","close","blob","Blob","saveAs","saveDataSaga","runModeSaga","handleRunSim","tps","timeToWait","ceil","simulatorSaga","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","actionSanitizer","stateSanitizer","sagaMiddleware","snapshot","undoReducer","redoReducer","undoState","captureUndoStateReducer","run","cls","values","Boolean","fpSet","firstPaths","String","lastPath","newData","clone","seg","obj"],"mappings":"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","file":"client.307571880b8a74b5a90a.bundle.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"text-unselectable\":\"text-unselectable--2tvXe\"};","import { AnyAction } from \"redux\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\n\r\nexport const ACTION_CIRCUIT_ADD = \"@circuit/add\" as const;\r\nexport interface NewCircuitOpts {\r\n  circuitName?: string;\r\n  circuitId?: string;\r\n  edit?: boolean;\r\n}\r\nexport const addCircuit = ({\r\n  circuitName,\r\n  circuitId,\r\n  edit,\r\n}: NewCircuitOpts = {}) => ({\r\n  type: ACTION_CIRCUIT_ADD,\r\n  payload: { circuitId: circuitId ?? uuidV4(), circuitName, edit },\r\n});\r\nexport type AddCircuitAction = ReturnType<typeof addCircuit>;\r\nexport function isAddCircuitAction(\r\n  action: AnyAction\r\n): action is AddCircuitAction {\r\n  return action.type === ACTION_CIRCUIT_ADD;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_CIRCUIT_DELETE = \"@circuit/delete\" as const;\r\nexport const deleteCircuit = (circuitId: string) => ({\r\n  type: ACTION_CIRCUIT_DELETE,\r\n  payload: { circuitId },\r\n});\r\nexport type DeleteCircuitAction = ReturnType<typeof deleteCircuit>;\r\nexport function isDeleteCircuitAction(\r\n  action: AnyAction\r\n): action is DeleteCircuitAction {\r\n  return action.type === ACTION_CIRCUIT_DELETE;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_CIRCUIT_RENAME = \"@circuit/rename\" as const;\r\nexport const renameCircuit = (circuitId: string, circuitName: string) => ({\r\n  type: ACTION_CIRCUIT_RENAME,\r\n  payload: { circuitId, circuitName },\r\n});\r\nexport type RenameCircuitAction = ReturnType<typeof renameCircuit>;\r\nexport function isRenameCircuitAction(\r\n  action: AnyAction\r\n): action is RenameCircuitAction {\r\n  return action.type === ACTION_CIRCUIT_RENAME;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_CIRCUIT_VIEW = \"@circuit/view\" as const;\r\nexport const viewCircuit = (\r\n  circuitId: string,\r\n  circuitNodeIdPath: string[] | null = null\r\n) => ({\r\n  type: ACTION_CIRCUIT_VIEW,\r\n  payload: { circuitId, circuitNodeIdPath },\r\n});\r\nexport type ViewCircuitAction = ReturnType<typeof viewCircuit>;\r\nexport function isViewCircuitAction(\r\n  action: AnyAction\r\n): action is ViewCircuitAction {\r\n  return action.type === ACTION_CIRCUIT_VIEW;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_PASTE = \"@clipboard/paste\" as const;\r\nexport const paste = () => ({\r\n  type: ACTION_PASTE,\r\n});\r\nexport type PasteAction = ReturnType<typeof paste>;\r\nexport function isPasteAction(action: AnyAction): action is PasteAction {\r\n  return action.type === ACTION_PASTE;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_DIALOG_RESPONSE_ACCEPT = \"@dialog/response/accept\" as const;\r\nexport const acceptDialog = (result: any) => ({\r\n  type: ACTION_DIALOG_RESPONSE_ACCEPT,\r\n  payload: { result },\r\n});\r\nexport type AcceptDialogAction = ReturnType<typeof acceptDialog>;\r\nexport function isAcceptDialogAction(\r\n  action: AnyAction\r\n): action is AcceptDialogAction {\r\n  return action.type === ACTION_DIALOG_RESPONSE_ACCEPT;\r\n}\r\n","import { AnyAction } from \"redux\";\r\nimport { Point } from \"@/geometry\";\r\nimport { ModifierKeys } from \"@/modifier-keys\";\r\n\r\nexport const ACTION_FIELD_DRAG_CONTINUE = \"@field/drag/continue\" as const;\r\nexport const fieldDragContinue = (p: Point, modifierKeys: ModifierKeys) => ({\r\n  type: ACTION_FIELD_DRAG_CONTINUE,\r\n  payload: { dragPos: p, modifierKeys },\r\n});\r\nexport type FieldDragContinueAction = ReturnType<typeof fieldDragContinue>;\r\nexport function isFieldDragContinueAction(\r\n  action: AnyAction\r\n): action is FieldDragContinueAction {\r\n  return action.type === ACTION_FIELD_DRAG_CONTINUE;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { Point } from \"@/geometry\";\r\nimport { ModifierKeys } from \"@/modifier-keys\";\r\n\r\nexport const ACTION_FIELD_DRAG_END = \"@field/drag/end\" as const;\r\nexport const fieldDragEnd = (point: Point, modifierKeys: ModifierKeys) => ({\r\n  type: ACTION_FIELD_DRAG_END,\r\n  payload: { ...point, modifierKeys },\r\n});\r\nexport type FieldDragEndAction = ReturnType<typeof fieldDragEnd>;\r\nexport function isFieldDragEndAction(\r\n  action: AnyAction\r\n): action is FieldDragEndAction {\r\n  return action.type === ACTION_FIELD_DRAG_END;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { Point } from \"@/geometry\";\r\nimport { ModifierKeys } from \"@/modifier-keys\";\r\n\r\nexport const ACTION_FIELD_DRAG_START_JOINT = \"@field/drag/start/joint\" as const;\r\nexport const fieldDragStartJoint = (\r\n  jointId: string,\r\n  p: Point,\r\n  modifierKeys: ModifierKeys\r\n) => ({\r\n  type: ACTION_FIELD_DRAG_START_JOINT,\r\n  payload: {\r\n    ...p,\r\n    jointId,\r\n    modifierKeys,\r\n  },\r\n});\r\nexport type FieldDragStartJointAction = ReturnType<typeof fieldDragStartJoint>;\r\nexport function isFieldDragStartJointAction(\r\n  action: AnyAction\r\n): action is FieldDragStartJointAction {\r\n  return action.type === ACTION_FIELD_DRAG_START_JOINT;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { Point } from \"@/geometry\";\r\nimport { ModifierKeys } from \"@/modifier-keys\";\r\n\r\nexport const ACTION_FIELD_DRAG_START_NEWJOINT = \"@field/drag/start/new-joint\" as const;\r\nexport const fieldDragStartNewJoint = (\r\n  connectionId: string,\r\n  addAfterJointId: string | null,\r\n  p: Point,\r\n  modifierKeys: ModifierKeys\r\n) => ({\r\n  type: ACTION_FIELD_DRAG_START_NEWJOINT,\r\n  payload: {\r\n    ...p,\r\n    connectionId,\r\n    addAfterJointId,\r\n    modifierKeys,\r\n  },\r\n});\r\nexport type FieldDragStartNewJointAction = ReturnType<\r\n  typeof fieldDragStartNewJoint\r\n>;\r\nexport function isFieldDragStartNewJointAction(\r\n  action: AnyAction\r\n): action is FieldDragStartNewJointAction {\r\n  return action.type === ACTION_FIELD_DRAG_START_NEWJOINT;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_FIELD_DRAG_START_NEWNODE = \"@field/drag/start/new-element\" as const;\r\nexport const fieldDragStartNewNode = (nodeType: string) => ({\r\n  type: ACTION_FIELD_DRAG_START_NEWNODE,\r\n  payload: {\r\n    nodeType,\r\n  },\r\n});\r\nexport type FieldDragStartNewNodeAction = ReturnType<\r\n  typeof fieldDragStartNewNode\r\n>;\r\nexport function isFieldDragStartNewNodeAction(\r\n  action: AnyAction\r\n): action is FieldDragStartNewNodeAction {\r\n  return action.type === ACTION_FIELD_DRAG_START_NEWNODE;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { Point } from \"@/geometry\";\r\nimport { ModifierKeys } from \"@/modifier-keys\";\r\n\r\nexport const ACTION_FIELD_DRAG_START_NODE = \"@field/drag/start/node\" as const;\r\nexport const fieldDragStartNode = (\r\n  nodeId: string,\r\n  p: Point,\r\n  modifierKeys: ModifierKeys\r\n) => ({\r\n  type: ACTION_FIELD_DRAG_START_NODE,\r\n  payload: {\r\n    ...p,\r\n    nodeId,\r\n    modifierKeys,\r\n  },\r\n});\r\nexport type FieldDragStartNodeAction = ReturnType<typeof fieldDragStartNode>;\r\nexport function isFieldDragStartNodeAction(\r\n  action: AnyAction\r\n): action is FieldDragStartNodeAction {\r\n  return action.type === ACTION_FIELD_DRAG_START_NODE;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { Point } from \"@/geometry\";\r\n\r\nexport const ACTION_FIELD_DRAG_START_SELECT = \"@field/drag/start/select\" as const;\r\nexport const fieldDragStartSelect = (p: Point) => ({\r\n  type: ACTION_FIELD_DRAG_START_SELECT,\r\n  payload: {\r\n    ...p,\r\n  },\r\n});\r\nexport type FieldDragStartSelectAction = ReturnType<\r\n  typeof fieldDragStartSelect\r\n>;\r\nexport function isFieldDragStartSelectAction(\r\n  action: AnyAction\r\n): action is FieldDragStartSelectAction {\r\n  return action.type === ACTION_FIELD_DRAG_START_SELECT;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { Point } from \"@/geometry\";\r\nimport { NodePin } from \"@/services/node-graph/types\";\r\n\r\nexport const ACTION_FIELD_DRAG_START_WIRE = \"@field/drag/start/wire\" as const;\r\nexport const fieldDragStartWire = (dragStart: Point, pin: NodePin) => ({\r\n  type: ACTION_FIELD_DRAG_START_WIRE,\r\n  payload: {\r\n    dragStart,\r\n    pin,\r\n  },\r\n});\r\nexport type FieldDragStartWireAction = ReturnType<typeof fieldDragStartWire>;\r\nexport function isFieldDragStartWireAction(\r\n  action: AnyAction\r\n): action is FieldDragStartWireAction {\r\n  return action.type === ACTION_FIELD_DRAG_START_WIRE;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_FIELD_MOUSE_LEAVE = \"@field/mouse/leave\" as const;\r\nexport const fieldMouseLeave = () => ({\r\n  type: ACTION_FIELD_MOUSE_LEAVE,\r\n});\r\nexport type FieldMouseLeaveAction = ReturnType<typeof fieldMouseLeave>;\r\nexport function isFieldMouseLeaveAction(\r\n  action: AnyAction\r\n): action is FieldMouseLeaveAction {\r\n  return action.type === ACTION_FIELD_MOUSE_LEAVE;\r\n}\r\n","import { v4 as uuidV4 } from \"uuid\";\r\nimport { AnyAction } from \"redux\";\r\n\r\nimport { Point } from \"@/geometry\";\r\n\r\nexport interface AddNodeOptions {\r\n  nodeId?: string;\r\n  nodeName?: string;\r\n  circuitId?: string;\r\n  position?: Point;\r\n}\r\nexport const ACTION_NODE_ADD = \"@node/add\" as const;\r\nexport const addNode = (nodeType: string, opts?: AddNodeOptions) => ({\r\n  type: ACTION_NODE_ADD,\r\n  payload: { nodeId: uuidV4(), nodeType, ...(opts || {}) },\r\n});\r\nexport type AddNodeAction = ReturnType<typeof addNode>;\r\nexport function isAddNodeAction(action: AnyAction): action is AddNodeAction {\r\n  return action.type === ACTION_NODE_ADD;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_NODE_INTERACT = \"@node/interact\" as const;\r\nexport const interactNode = (circuitNodeIdPath: string[]) => ({\r\n  type: ACTION_NODE_INTERACT,\r\n  payload: { circuitNodeIdPath },\r\n});\r\nexport type InteractNodeAction = ReturnType<typeof interactNode>;\r\nexport function isInteractNodeAction(\r\n  action: AnyAction\r\n): action is InteractNodeAction {\r\n  return action.type === ACTION_NODE_INTERACT;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_NODE_RENAME = \"@node/rename\" as const;\r\nexport const renameNode = (nodeId: string, nodeName: string) => ({\r\n  type: ACTION_NODE_RENAME,\r\n  payload: { nodeId, nodeName },\r\n});\r\nexport type RenameNodeAction = ReturnType<typeof renameNode>;\r\nexport function isRenameNodeAction(\r\n  action: AnyAction\r\n): action is RenameNodeAction {\r\n  return action.type === ACTION_NODE_RENAME;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_PROJECT_EXPORT_LINK = \"@project/export-link\" as const;\r\nexport const exportProjectLink = () => ({\r\n  type: ACTION_PROJECT_EXPORT_LINK,\r\n});\r\nexport type ExportProjectLinkAction = ReturnType<typeof exportProjectLink>;\r\nexport function isExportProjectLinkAction(\r\n  action: AnyAction\r\n): action is ExportProjectLinkAction {\r\n  return action.type === ACTION_PROJECT_EXPORT_LINK;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_PROJECT_IMPORT_LINK = \"@project/import-link\" as const;\r\nexport const importProjectLink = (data: string) => ({\r\n  type: ACTION_PROJECT_IMPORT_LINK,\r\n  payload: { data },\r\n});\r\nexport type ImportProjectLinkAction = ReturnType<typeof importProjectLink>;\r\nexport function isImportProjectLinkAction(\r\n  action: AnyAction\r\n): action is ImportProjectLinkAction {\r\n  return action.type === ACTION_PROJECT_IMPORT_LINK;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_PROJECT_LOAD = \"@project/load\" as const;\r\nexport const loadProject = () => ({\r\n  type: ACTION_PROJECT_LOAD,\r\n});\r\nexport type LoadProjectAction = ReturnType<typeof loadProject>;\r\nexport function isLoadProjectAction(\r\n  action: AnyAction\r\n): action is LoadProjectAction {\r\n  return action.type === ACTION_PROJECT_LOAD;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_PROJECT_NEW = \"@project/new\" as const;\r\nexport const newProject = () => ({\r\n  type: ACTION_PROJECT_NEW,\r\n});\r\nexport type NewProjectAction = ReturnType<typeof newProject>;\r\nexport function isNewProjectAction(\r\n  action: AnyAction\r\n): action is NewProjectAction {\r\n  return action.type === ACTION_PROJECT_NEW;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_PROJECT_SAVE = \"@project/save\" as const;\r\nexport const saveProject = () => ({\r\n  type: ACTION_PROJECT_SAVE,\r\n});\r\nexport type SaveProjectAction = ReturnType<typeof saveProject>;\r\nexport function isSaveProjectAction(\r\n  action: AnyAction\r\n): action is SaveProjectAction {\r\n  return action.type === ACTION_PROJECT_SAVE;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_REDO = \"@undo/redo\" as const;\r\nexport const redo = () => ({\r\n  type: ACTION_REDO,\r\n});\r\nexport function isRedoAction(action: AnyAction) {\r\n  return action.type === ACTION_REDO;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_SELECT_CLEAR = \"@select/all\" as const;\r\nexport const selectAll = () => ({\r\n  type: ACTION_SELECT_CLEAR,\r\n});\r\nexport type SelectAllAction = ReturnType<typeof selectAll>;\r\nexport function isSelectAllAction(\r\n  action: AnyAction\r\n): action is SelectAllAction {\r\n  return action.type === ACTION_SELECT_CLEAR;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_SELECT_CLEAR = \"@select/clear\" as const;\r\nexport const clearSelection = () => ({\r\n  type: ACTION_SELECT_CLEAR,\r\n});\r\nexport type ClearSelectionAction = ReturnType<typeof clearSelection>;\r\nexport function isClearSelectionAction(\r\n  action: AnyAction\r\n): action is ClearSelectionAction {\r\n  return action.type === ACTION_SELECT_CLEAR;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { SelectionMode } from \"@/selection-mode\";\r\n\r\nexport const ACTION_SELECT_NODES = \"@select/nodes\" as const;\r\nexport const selectNodes = (\r\n  nodeId: string | string[],\r\n  mode: SelectionMode = \"set\"\r\n) => ({\r\n  type: ACTION_SELECT_NODES,\r\n  payload: {\r\n    nodeIds: Array.isArray(nodeId) ? nodeId : [nodeId],\r\n    mode,\r\n  },\r\n});\r\nexport type SelectNodesAction = ReturnType<typeof selectNodes>;\r\nexport function isSelectNodesAction(\r\n  action: AnyAction\r\n): action is SelectNodesAction {\r\n  return action.type === ACTION_SELECT_NODES;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { SelectionMode } from \"@/selection-mode\";\r\n\r\nexport const ACTION_SELECT_WIRE_JOINTS = \"@select/wire-joints\" as const;\r\nexport const selectWireJoints = (\r\n  jointId: string | string[],\r\n  mode: SelectionMode = \"set\"\r\n) => ({\r\n  type: ACTION_SELECT_WIRE_JOINTS,\r\n  payload: {\r\n    jointIds: Array.isArray(jointId) ? jointId : [jointId],\r\n    mode,\r\n  },\r\n});\r\nexport type SelectWireJointsAction = ReturnType<typeof selectWireJoints>;\r\nexport function isSelectWireJointsAction(\r\n  action: AnyAction\r\n): action is SelectWireJointsAction {\r\n  return action.type === ACTION_SELECT_WIRE_JOINTS;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { SelectionMode } from \"@/selection-mode\";\r\n\r\nexport const ACTION_SELECT_WIRES = \"@select/wires\" as const;\r\nexport const selectWires = (\r\n  connectionId: string | string[],\r\n  mode: SelectionMode = \"set\"\r\n) => ({\r\n  type: ACTION_SELECT_WIRES,\r\n  payload: {\r\n    connectionIds: Array.isArray(connectionId) ? connectionId : [connectionId],\r\n    mode,\r\n  },\r\n});\r\nexport type SelectWiresAction = ReturnType<typeof selectWires>;\r\nexport function isSelectWiresAction(\r\n  action: AnyAction\r\n): action is SelectWiresAction {\r\n  return action.type === ACTION_SELECT_WIRES;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_SELECTION_ALIGN_TO_GRID = \"@selection/align-to-grid\" as const;\r\nexport const selectionAlignToGrid = () => ({\r\n  type: ACTION_SELECTION_ALIGN_TO_GRID,\r\n});\r\nexport function isSelectionAlignToGridAction(action: AnyAction): boolean {\r\n  return action.type === ACTION_SELECTION_ALIGN_TO_GRID;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_SELECTION_COPY = \"@selection/copy\" as const;\r\nexport const copySelection = () => ({\r\n  type: ACTION_SELECTION_COPY,\r\n});\r\nexport type CopySelectionAction = ReturnType<typeof copySelection>;\r\nexport function isCopySelectionAction(\r\n  action: AnyAction\r\n): action is CopySelectionAction {\r\n  return action.type === ACTION_SELECTION_COPY;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_SELECTION_DELETE = \"@selection/delete\" as const;\r\nexport const deleteSelection = () => ({\r\n  type: ACTION_SELECTION_DELETE,\r\n});\r\nexport type DeleteSelectionAction = ReturnType<typeof deleteSelection>;\r\nexport function isDeleteSelectionAction(\r\n  action: AnyAction\r\n): action is DeleteSelectionAction {\r\n  return action.type === ACTION_SELECTION_DELETE;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_SIM_FASTFORWARD = \"@sim/fastforward\" as const;\r\nexport const fastForwardSim = () => ({\r\n  type: ACTION_SIM_FASTFORWARD,\r\n});\r\nexport type FastForwardSimAction = ReturnType<typeof fastForwardSim>;\r\nexport function isFastForwardSimAction(\r\n  action: AnyAction\r\n): action is FastForwardSimAction {\r\n  return action.type === ACTION_SIM_FASTFORWARD;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_SIM_PAUSE = \"@sim/pause\" as const;\r\nexport const pauseSim = (mode: boolean | \"toggle\") => ({\r\n  type: ACTION_SIM_PAUSE,\r\n  payload: { mode },\r\n});\r\nexport type PauseSimAction = ReturnType<typeof pauseSim>;\r\nexport function isPauseSimAction(action: AnyAction): action is PauseSimAction {\r\n  return action.type === ACTION_SIM_PAUSE;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_SIM_START = \"@sim/start\" as const;\r\nexport const startSim = () => ({\r\n  type: ACTION_SIM_START,\r\n});\r\nexport type StartSimAction = ReturnType<typeof startSim>;\r\nexport function isStartSimAction(action: AnyAction): action is StartSimAction {\r\n  return action.type === ACTION_SIM_START;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_SIM_STOP = \"@sim/stop\" as const;\r\nexport const stopSim = () => ({\r\n  type: ACTION_SIM_STOP,\r\n});\r\nexport type StartSimAction = ReturnType<typeof stopSim>;\r\nexport function isStopSimAction(action: AnyAction): action is StartSimAction {\r\n  return action.type === ACTION_SIM_STOP;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_SIM_TICK = \"@sim/tick\" as const;\r\nexport const tickSim = (tickCount: number) => ({\r\n  type: ACTION_SIM_TICK,\r\n  payload: { tickCount },\r\n});\r\nexport type TickSimAction = ReturnType<typeof tickSim>;\r\nexport function isTickSimAction(action: AnyAction): action is TickSimAction {\r\n  return action.type === ACTION_SIM_TICK;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_UNDO = \"@undo/undo\" as const;\r\nexport const undo = () => ({\r\n  type: ACTION_UNDO,\r\n});\r\nexport function isUndoAction(action: AnyAction) {\r\n  return action.type === ACTION_UNDO;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_VIEW_ZOOM = \"@view/zoom\" as const;\r\nexport const viewZoom = (delta: number) => ({\r\n  type: ACTION_VIEW_ZOOM,\r\n  payload: { delta },\r\n});\r\nexport type ViewZoomAction = ReturnType<typeof viewZoom>;\r\nexport function isViewZoomAction(action: AnyAction): action is ViewZoomAction {\r\n  return action.type === ACTION_VIEW_ZOOM;\r\n}\r\n","export type MaybeArray<T> = T | T[];\r\nexport function asArray<T>(value: MaybeArray<T>): T[] {\r\n  return Array.isArray(value) ? value : [value];\r\n}\r\n","import { ElementDefinition } from \"../types\";\r\n\r\nconst andElementDefinition: ElementDefinition = {\r\n  inputPins: [\"A\", \"B\"],\r\n  outputPins: [\"OUT\"],\r\n  evolve(_, inputs) {\r\n    return {\r\n      transitions: {\r\n        tickOffset: 4,\r\n        valuesByPin: { OUT: inputs.A && inputs.B },\r\n      },\r\n    };\r\n  },\r\n};\r\nexport default andElementDefinition;\r\n","import { ElementDefinition } from \"../types\";\r\n\r\nconst bufferElementDefinition: ElementDefinition = {\r\n  inputPins: [\"IN\"],\r\n  outputPins: [\"OUT\"],\r\n  evolve(_, inputs) {\r\n    return {\r\n      transitions: {\r\n        tickOffset: 4,\r\n        valuesByPin: { OUT: inputs.IN },\r\n      },\r\n    };\r\n  },\r\n};\r\nexport default bufferElementDefinition;\r\n","import { ElementDefinition } from \"../types\";\r\n\r\nexport interface LedElementState {\r\n  value: boolean;\r\n}\r\n\r\nconst ledElementDefinition: ElementDefinition = {\r\n  inputPins: [\"IN\"],\r\n  outputPins: [],\r\n  evolve(_, inputs) {\r\n    return {\r\n      state: {\r\n        value: inputs.IN,\r\n      },\r\n    };\r\n  },\r\n};\r\nexport default ledElementDefinition;\r\n","import { ElementDefinition } from \"../types\";\r\n\r\nconst norElementDefinition: ElementDefinition = {\r\n  inputPins: [\"A\", \"B\"],\r\n  outputPins: [\"OUT\"],\r\n  evolve(_, inputs) {\r\n    return {\r\n      transitions: {\r\n        tickOffset: 4,\r\n        valuesByPin: { OUT: !(inputs.A || inputs.B) },\r\n      },\r\n    };\r\n  },\r\n};\r\nexport default norElementDefinition;\r\n","import { ElementDefinition } from \"../types\";\r\n\r\nconst notElementDefinition: ElementDefinition = {\r\n  inputPins: [\"IN\"],\r\n  outputPins: [\"OUT\"],\r\n  evolve(_, inputs) {\r\n    return {\r\n      transitions: {\r\n        tickOffset: 4,\r\n        valuesByPin: { OUT: !inputs.IN },\r\n      },\r\n    };\r\n  },\r\n};\r\nexport default notElementDefinition;\r\n","import { ElementDefinition } from \"../types\";\r\n\r\nconst orElementDefinition: ElementDefinition = {\r\n  inputPins: [\"A\", \"B\"],\r\n  outputPins: [\"OUT\"],\r\n  evolve(_, inputs) {\r\n    return {\r\n      transitions: {\r\n        tickOffset: 4,\r\n        valuesByPin: { OUT: inputs.A || inputs.B },\r\n      },\r\n    };\r\n  },\r\n};\r\nexport default orElementDefinition;\r\n","import { ElementDefinition } from \"../types\";\r\n\r\nconst seg7ElementDefinition: ElementDefinition = {\r\n  inputPins: [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\"],\r\n  outputPins: [],\r\n  evolve(_, inputs) {\r\n    return {\r\n      state: { ...inputs },\r\n    };\r\n  },\r\n};\r\nexport default seg7ElementDefinition;\r\n","import { ElementDefinition } from \"../types\";\r\n\r\nexport interface ToggleElementState {\r\n  toggleState: boolean;\r\n}\r\nconst defaultToggleState: ToggleElementState = {\r\n  toggleState: false,\r\n};\r\n\r\nconst toggleElementDefinition: ElementDefinition = {\r\n  inputPins: [],\r\n  outputPins: [\"OUT\"],\r\n  interact(state: ToggleElementState = defaultToggleState) {\r\n    return {\r\n      ...state,\r\n      toggleState: !state.toggleState,\r\n    };\r\n  },\r\n  evolve(state = defaultToggleState) {\r\n    return {\r\n      state,\r\n      transitions: {\r\n        tickOffset: 1,\r\n        valuesByPin: { OUT: state.toggleState },\r\n      },\r\n    };\r\n  },\r\n};\r\nexport default toggleElementDefinition;\r\n","import { ElementDefinition } from \"../types\";\r\n\r\nconst xorElementDefinition: ElementDefinition = {\r\n  inputPins: [\"A\", \"B\"],\r\n  outputPins: [\"OUT\"],\r\n  evolve(_, inputs) {\r\n    return {\r\n      transitions: {\r\n        tickOffset: 4,\r\n        valuesByPin: { OUT: (inputs.A || inputs.B) && inputs.A != inputs.B },\r\n      },\r\n    };\r\n  },\r\n};\r\nexport default xorElementDefinition;\r\n","import * as yup from \"yup\";\r\n\r\nexport interface Point {\r\n  x: number;\r\n  y: number;\r\n}\r\nexport const pointSchema = yup.object().shape({\r\n  x: yup.number().required(),\r\n  y: yup.number().required(),\r\n});\r\n\r\nexport interface Size {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport interface Rectangle {\r\n  p1: Point;\r\n  p2: Point;\r\n}\r\n\r\nexport const ZeroPoint = Object.freeze({ x: 0, y: 0 });\r\nexport const ZeroRect = Object.freeze({ p1: ZeroPoint, p2: ZeroPoint });\r\n\r\nexport function magnitude(v: Point): number {\r\n  return Math.sqrt(v.x * v.x + v.y * v.y);\r\n}\r\nexport function normalize(p: Point): Point {\r\n  const m = magnitude(p);\r\n  return {\r\n    x: p.x / m,\r\n    y: p.y / m,\r\n  };\r\n}\r\n\r\nexport function dotProduct(a: Point, b: Point): number {\r\n  return a.x * b.x + a.y * b.y;\r\n}\r\n\r\nexport function scale(p: Point, scaler: number) {\r\n  return { x: p.x * scaler, y: p.y * scaler };\r\n}\r\n\r\nexport function normalizeRectangle(p1: Point, p2: Point): Rectangle;\r\nexport function normalizeRectangle(r: Rectangle): Rectangle;\r\nexport function normalizeRectangle(...args: any[]): Rectangle {\r\n  let p1: Point;\r\n  let p2: Point;\r\n  if (args.length === 1) {\r\n    const r = args[0] as Rectangle;\r\n    p1 = r.p1;\r\n    p2 = r.p2;\r\n  } else {\r\n    p1 = args[0] as Point;\r\n    p2 = args[1] as Point;\r\n  }\r\n  return {\r\n    p1: {\r\n      x: Math.min(p1.x, p2.x),\r\n      y: Math.min(p1.y, p2.y),\r\n    },\r\n    p2: {\r\n      x: Math.max(p1.x, p2.x),\r\n      y: Math.max(p1.y, p2.y),\r\n    },\r\n  };\r\n}\r\n\r\nexport function pointAdd(p1: Point, p2: Point): Point {\r\n  return {\r\n    x: p1.x + p2.x,\r\n    y: p1.y + p2.y,\r\n  };\r\n}\r\nexport function pointSubtract(p1: Point, p2: Point): Point {\r\n  return {\r\n    x: p1.x - p2.x,\r\n    y: p1.y - p2.y,\r\n  };\r\n}\r\nexport function pointEquals(p1: Point, p2: Point): boolean {\r\n  return p1.x === p2.x && p1.y === p2.y;\r\n}\r\n\r\nexport function pointIntersects(p: Point, r: Rectangle): boolean {\r\n  r = normalizeRectangle(r);\r\n\r\n  if (r.p1.x > p.x || r.p2.x < p.x) {\r\n    return false;\r\n  }\r\n\r\n  if (r.p1.y > p.y || r.p2.y < p.y) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function calcSize(r: Rectangle): Size {\r\n  r = normalizeRectangle(r);\r\n  return {\r\n    width: r.p2.x - r.p1.x,\r\n    height: r.p2.y - r.p1.y,\r\n  };\r\n}\r\n\r\nexport function union(r1: Rectangle, r2: Rectangle): Rectangle {\r\n  r1 = normalizeRectangle(r1);\r\n  r2 = normalizeRectangle(r2);\r\n  return {\r\n    p1: {\r\n      x: Math.min(r1.p1.x, r2.p1.x),\r\n      y: Math.min(r1.p1.y, r2.p1.y),\r\n    },\r\n    p2: {\r\n      x: Math.max(r1.p2.x, r2.p2.x),\r\n      y: Math.max(r1.p2.y, r2.p2.y),\r\n    },\r\n  };\r\n}\r\n\r\nexport function intersects(r1: Rectangle, r2: Rectangle): boolean {\r\n  r1 = normalizeRectangle(r1);\r\n  r2 = normalizeRectangle(r2);\r\n\r\n  // r1 starts after p2's extent, or does not reach r2's start.\r\n  if (r1.p1.x > r2.p2.x || r1.p2.x < r2.p1.x) {\r\n    return false;\r\n  }\r\n\r\n  // r1 starts after p2's extent, or does not reach r2's start.\r\n  if (r1.p1.y > r2.p2.y || r1.p2.y < r2.p1.y) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n","import { createHashHistory } from \"history\";\r\n\r\nconst history = createHashHistory();\r\n\r\nexport default history;\r\n","import { useSelector as useSelectorRedux } from \"react-redux\";\r\n\r\nimport { AppState } from \"@/store\";\r\n\r\nexport default function useSelector<T>(selector: (s: AppState) => T) {\r\n  return useSelectorRedux<AppState, T>(selector);\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"flex-row\":\"flex-row--sHjOY\",\"flex-column\":\"flex-column--2LT64\",\"flex-reverse\":\"flex-reverse--2Vn7L\",\"flexitem-shrink\":\"flexitem-shrink--2U9EV\",\"flexitem-fix\":\"flexitem-fix--1ARxk\"};","// extracted by mini-css-extract-plugin\nexport default {\"fill-parent\":\"fill-parent--3pw6U\"};","import has from \"lodash/has\";\r\n\r\nexport type TesselWindowRenderer = (\r\n  window: TesselWindowItem\r\n) => React.ReactElement | null;\r\n\r\nexport interface TesselWindowItem {\r\n  windowId: string;\r\n  windowProps?: Record<string, any>;\r\n}\r\n\r\nexport type TesselDirection = \"row\" | \"column\";\r\n\r\nexport interface TesselPercentDivision {\r\n  firstPercent: number;\r\n}\r\nexport interface TesselFixedDivision {\r\n  firstSize?: number;\r\n  secondSize?: number;\r\n}\r\nexport type TesselDivision = TesselPercentDivision | TesselFixedDivision;\r\nexport type TesselDivisionValue = number | TesselDivision;\r\n\r\nexport interface TesselSplitItem {\r\n  first: TesselValue;\r\n  second: TesselValue;\r\n  direction: TesselDirection;\r\n  division: TesselDivisionValue;\r\n}\r\n\r\nexport type TesselItem = TesselWindowItem | TesselSplitItem;\r\nexport type TesselValue = string | TesselItem;\r\n\r\nexport function normalizeTesselItem(value: TesselValue): TesselItem {\r\n  if (typeof value === \"string\") {\r\n    return {\r\n      windowId: value,\r\n    };\r\n  }\r\n\r\n  return value;\r\n}\r\n\r\nexport function isTesselWindow(item: TesselItem): item is TesselWindowItem {\r\n  return has(item, \"windowId\");\r\n}\r\n\r\nexport function isTesselSplit(item: TesselItem): item is TesselSplitItem {\r\n  return has(item, \"first\") && has(item, \"second\") && has(item, \"direction\");\r\n}\r\n\r\nexport function normalizeTesselDivision(\r\n  value: TesselDivisionValue\r\n): TesselDivision {\r\n  if (typeof value === \"number\") {\r\n    return {\r\n      firstPercent: value,\r\n    };\r\n  }\r\n\r\n  return value;\r\n}\r\n\r\nexport function isTesselPercentDivision(\r\n  value: TesselDivision\r\n): value is TesselPercentDivision {\r\n  return has(value, \"firstPercent\");\r\n}\r\n\r\nexport function isTesselFixedDivision(\r\n  value: TesselDivision\r\n): value is TesselFixedDivision {\r\n  return has(value, \"firstSize\") || has(value, \"secondSize\");\r\n}\r\n","import * as React from \"react\";\r\n\r\nexport function useRefValue<T>(value: T): React.RefObject<T> {\r\n  const ref = React.useRef(value);\r\n  React.useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n\r\n  return ref;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"tessel\":\"tessel--2Q3Xd\",\"tessel-split\":\"tessel-split--2gDs5\",\"tessel-split--row\":\"tessel-split--row--2fC6o\",\"tessel-split--column\":\"tessel-split--column--1Hl4C\"};","import { cls } from \"@/utils\";\r\nimport * as React from \"react\";\r\nimport throttle from \"lodash/throttle\";\r\n\r\nimport { useRefValue } from \"@/hooks/useRefValue\";\r\n\r\nimport { TesselDirection } from \"./types\";\r\n\r\nimport styles from \"./Tessel.module.css\";\r\n\r\nexport interface TesselSplitProps {\r\n  direction: TesselDirection;\r\n  onChangePercentage(percent: number, position: number): void;\r\n}\r\n\r\nconst ZeroRect: DOMRect = Object.freeze({\r\n  top: 0,\r\n  left: 0,\r\n  bottom: 0,\r\n  right: 0,\r\n  x: 0,\r\n  y: 0,\r\n  height: 0,\r\n  width: 0,\r\n  toJSON: () => ({}),\r\n});\r\n\r\nconst TesselSplit: React.FC<TesselSplitProps> = ({\r\n  direction,\r\n  onChangePercentage,\r\n}) => {\r\n  const ref = React.useRef<HTMLDivElement | null>(null);\r\n\r\n  const pointerCaptureRef = React.useRef<number | null>(null);\r\n\r\n  // Ref these up so we can continue using the same throttle across rerenders.\r\n  const directionRef = useRefValue(direction);\r\n  const onChangePercentageRef = useRefValue(onChangePercentage);\r\n\r\n  const onHandlePointerMove = React.useMemo(\r\n    () =>\r\n      throttle(\r\n        (e: React.PointerEvent<HTMLDivElement>) => {\r\n          if (pointerCaptureRef.current == null || ref.current == null) {\r\n            return;\r\n          }\r\n\r\n          const parentRect =\r\n            ref.current.parentElement?.getBoundingClientRect() ?? ZeroRect;\r\n\r\n          let percentage = 0;\r\n          let position = 0;\r\n          if (directionRef.current === \"row\") {\r\n            position = e.pageX - parentRect.left;\r\n            percentage = position / parentRect.width;\r\n            if (isNaN(percentage)) {\r\n              percentage = 0;\r\n              position = parentRect.left;\r\n            } else if (percentage > 1) {\r\n              percentage = 1;\r\n              position = parentRect.right;\r\n            }\r\n          } else {\r\n            position = e.pageY - parentRect.top;\r\n            percentage = position / parentRect.height;\r\n            if (isNaN(percentage)) {\r\n              percentage = 0;\r\n              position = parentRect.top;\r\n            } else if (percentage > 1) {\r\n              percentage = 1;\r\n              position = parentRect.bottom;\r\n            }\r\n          }\r\n\r\n          onChangePercentageRef.current!(percentage * 100, position);\r\n        },\r\n        1000 / 60,\r\n        { leading: true }\r\n      ),\r\n    [directionRef, onChangePercentageRef]\r\n  );\r\n\r\n  const onPointerMove = React.useCallback(\r\n    (e: React.PointerEvent<HTMLDivElement>) => {\r\n      e.persist();\r\n      onHandlePointerMove(e);\r\n    },\r\n    [onHandlePointerMove]\r\n  );\r\n\r\n  const onPointerDown = React.useCallback(\r\n    (e: React.PointerEvent<HTMLDivElement>) => {\r\n      if (e.defaultPrevented || !ref.current) {\r\n        return;\r\n      }\r\n\r\n      if (pointerCaptureRef.current) {\r\n        return;\r\n      }\r\n\r\n      e.preventDefault();\r\n\r\n      // We use pointer capture over the useMouseTracking\r\n      // hook because pointer capture will capture our mouse icon.\r\n      ref.current.setPointerCapture(e.pointerId);\r\n      pointerCaptureRef.current = e.pointerId;\r\n    },\r\n    []\r\n  );\r\n\r\n  const onPointerUp = React.useCallback(() => {\r\n    if (ref.current && pointerCaptureRef.current) {\r\n      ref.current.releasePointerCapture(pointerCaptureRef.current);\r\n      pointerCaptureRef.current = null;\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={cls(\r\n        \"tessel-split\",\r\n        styles[\"tessel-split\"],\r\n        styles[\r\n          direction === \"row\" ? \"tessel-split--row\" : \"tessel-split--column\"\r\n        ]\r\n      )}\r\n      onPointerDown={onPointerDown}\r\n      onPointerMove={onPointerMove}\r\n      onPointerUp={onPointerUp}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TesselSplit;\r\n","import * as React from \"react\";\r\n\r\nimport { cls } from \"@/utils\";\r\n\r\nimport sizing from \"@/styles/sizing.module.css\";\r\nimport flex from \"@/styles/flex.module.css\";\r\n\r\nimport {\r\n  isTesselFixedDivision,\r\n  isTesselPercentDivision,\r\n  normalizeTesselDivision,\r\n  TesselDivision,\r\n  TesselItem,\r\n  TesselSplitItem,\r\n  TesselValue,\r\n  TesselWindowRenderer,\r\n} from \"./types\";\r\n\r\nimport TesselSplit from \"./TesselSplit\";\r\nimport TesselFrame from \"./TesselFrame\";\r\n\r\nexport interface TesselSplitFrameProps {\r\n  item: TesselSplitItem;\r\n  renderWindow: TesselWindowRenderer;\r\n  onLayoutChange(relativeRoot: TesselItem): void;\r\n}\r\n\r\nconst TesselSplitFrame: React.FC<TesselSplitFrameProps> = ({\r\n  item,\r\n  renderWindow,\r\n  onLayoutChange,\r\n}) => {\r\n  const { direction, first, second, division: divisionValue } = item;\r\n  const sizeDirection = direction === \"row\" ? \"width\" : \"height\";\r\n\r\n  const onChangePercentage = React.useCallback(\r\n    (percentage: number, absolute: number) => {\r\n      const division = normalizeTesselDivision(item.division);\r\n      onLayoutChange({\r\n        ...item,\r\n        division: applyDivisionChange(division, percentage, absolute),\r\n      });\r\n    },\r\n    [item, onLayoutChange]\r\n  );\r\n\r\n  const onFirstLayoutChange = React.useCallback(\r\n    (value: TesselValue) => {\r\n      onLayoutChange({\r\n        ...item,\r\n        first: value,\r\n      });\r\n    },\r\n    [item, onLayoutChange]\r\n  );\r\n\r\n  const onSecondLayoutChange = React.useCallback(\r\n    (value: TesselValue) => {\r\n      onLayoutChange({\r\n        ...item,\r\n        second: value,\r\n      });\r\n    },\r\n    [item, onLayoutChange]\r\n  );\r\n\r\n  const division = normalizeTesselDivision(divisionValue);\r\n  let firstSize = \"50%\";\r\n  let secondSize = \"50%\";\r\n  let firstFix = false;\r\n  let secondFix = false;\r\n  if (isTesselPercentDivision(division)) {\r\n    const { firstPercent } = division;\r\n    firstSize = `${firstPercent}%`;\r\n    secondSize = `${100 - firstPercent}%`;\r\n  } else if (isTesselFixedDivision(division)) {\r\n    const { firstSize: firstSizeDiv, secondSize: secondSizeDiv } = division;\r\n    // Only support one of firstSize or secondSize\r\n    if (firstSizeDiv) {\r\n      firstSize = `${firstSizeDiv}px`;\r\n      firstFix = true;\r\n      secondSize = \"100%\";\r\n    } else {\r\n      firstSize = \"100%\";\r\n      secondSize = `${secondSizeDiv}px`;\r\n      secondFix = true;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={cls(\r\n        sizing[\"fill-parent\"],\r\n        flex[direction === \"row\" ? \"flex-row\" : \"flex-column\"]\r\n      )}\r\n    >\r\n      <div\r\n        className={cls(\r\n          firstFix ? flex[\"flexitem-fix\"] : flex[\"flexitem-shrink\"]\r\n        )}\r\n        style={{ [sizeDirection]: firstSize }}\r\n      >\r\n        <TesselFrame\r\n          value={first}\r\n          renderWindow={renderWindow}\r\n          onLayoutChange={onFirstLayoutChange}\r\n        />\r\n      </div>\r\n      <TesselSplit\r\n        direction={direction}\r\n        onChangePercentage={onChangePercentage}\r\n      />\r\n      <div\r\n        className={cls(\r\n          secondFix ? flex[\"flexitem-fix\"] : flex[\"flexitem-shrink\"]\r\n        )}\r\n        style={{ [sizeDirection]: secondSize }}\r\n      >\r\n        <TesselFrame\r\n          value={second}\r\n          renderWindow={renderWindow}\r\n          onLayoutChange={onSecondLayoutChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction applyDivisionChange(\r\n  division: TesselDivision,\r\n  percent: number,\r\n  absolute: number\r\n): TesselDivision {\r\n  if (isTesselPercentDivision(division)) {\r\n    return {\r\n      firstPercent: percent,\r\n    };\r\n  } else if (isTesselFixedDivision(division)) {\r\n    if (typeof division.secondSize === \"number\") {\r\n      return {\r\n        secondSize: absolute,\r\n      };\r\n    }\r\n\r\n    return {\r\n      firstSize: absolute,\r\n    };\r\n  }\r\n\r\n  return division;\r\n}\r\n\r\nexport default TesselSplitFrame;\r\n","import * as React from \"react\";\r\nimport TesselSplitFrame from \"./TesselSplitFrame\";\r\n\r\nimport {\r\n  isTesselSplit,\r\n  isTesselWindow,\r\n  normalizeTesselItem,\r\n  TesselValue,\r\n  TesselWindowRenderer,\r\n} from \"./types\";\r\n\r\nexport interface TesselFrameProps {\r\n  value: TesselValue;\r\n  renderWindow: TesselWindowRenderer;\r\n  onLayoutChange(value: TesselValue): void;\r\n}\r\n\r\nconst TesselFrame: React.FC<TesselFrameProps> = ({\r\n  value,\r\n  renderWindow,\r\n  onLayoutChange,\r\n}) => {\r\n  const item = normalizeTesselItem(value);\r\n  if (isTesselWindow(item)) {\r\n    return renderWindow(item);\r\n  } else if (isTesselSplit(item)) {\r\n    return (\r\n      <TesselSplitFrame\r\n        item={item}\r\n        renderWindow={renderWindow}\r\n        onLayoutChange={onLayoutChange}\r\n      />\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default TesselFrame;\r\n","export * from \"./Tessel\";\r\nexport * from \"./types\";\r\n\r\nimport Tessel from \"./Tessel\";\r\nexport default Tessel;\r\nexport { Tessel };\r\n","import * as React from \"react\";\r\n\r\nimport { cls } from \"@/utils\";\r\n\r\nimport { TesselValue, TesselWindowRenderer } from \"./types\";\r\n\r\nimport TesselFrame from \"./TesselFrame\";\r\n\r\nimport styles from \"./Tessel.module.css\";\r\n\r\nexport interface TesselProps {\r\n  className?: string;\r\n  rootItem: TesselValue;\r\n  renderWindow: TesselWindowRenderer;\r\n  onLayoutChange(rootItem: TesselValue): void;\r\n}\r\n\r\nconst Tessel: React.FC<TesselProps> = ({\r\n  className,\r\n  rootItem,\r\n  renderWindow,\r\n  onLayoutChange,\r\n}) => {\r\n  return (\r\n    <div className={cls(\"tessel\", styles[\"tessel\"], className)}>\r\n      <TesselFrame\r\n        value={rootItem}\r\n        renderWindow={renderWindow}\r\n        onLayoutChange={onLayoutChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tessel;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"button--Ui3Hp\"};","import Button from \"./Button\";\r\nexport default Button;\r\n","import * as React from \"react\";\r\n\r\nexport type ButtonProps = React.HTMLAttributes<HTMLButtonElement>;\r\n\r\nimport styles from \"./Button.module.css\";\r\n\r\nconst Button: React.FC<ButtonProps> = (props) => {\r\n  return (\r\n    <button className={styles[\"button\"]} type=\"button\" {...props}>\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import * as React from \"react\";\r\nimport last from \"lodash/last\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { cls } from \"@/utils\";\r\nimport useSelector from \"@/hooks/useSelector\";\r\n\r\nimport { viewCircuit } from \"@/actions/circuit-view\";\r\n\r\nimport {\r\n  editingCircuitNameSelector,\r\n  editingCircuitNodeIdPathSelector,\r\n} from \"@/services/circuit-editor-view/selectors/circuit\";\r\nimport {\r\n  nodeNameFromNodeIdSelector,\r\n  nodeTypeFromNodeIdSelector,\r\n} from \"@/services/node-graph/selectors/nodes\";\r\nimport { nodeTypeToCircuitId } from \"@/services/node-types/definition-sources/integrated-circuits/utils\";\r\n\r\nimport styles from \"./CircuitNodeBreadcrumb.module.css\";\r\nimport { ROOT_CIRCUIT_ID } from \"@/services/circuits/constants\";\r\nimport Button from \"../Button\";\r\nimport { circuitNameFromIdSelector } from \"@/services/circuits/selectors/circuits\";\r\n\r\nconst CircuitNodeBreadcrumb: React.FC = () => {\r\n  const circuitNodeIdPath = useSelector(editingCircuitNodeIdPathSelector);\r\n\r\n  const elements: JSX.Element[] = circuitNodeIdPath.map(\r\n    (circuitNodeId, index) => {\r\n      const elementPath = circuitNodeIdPath.slice(0, index + 1);\r\n      return (\r\n        <React.Fragment key={circuitNodeId}>\r\n          <span>&gt;</span>\r\n          <CircuitNodeBreadcrumbItem circuitNodeIdPath={elementPath} />\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className={cls(\r\n        \"circuit-node-breadcrumb\",\r\n        styles[\"circuit-node-breadcrumb\"]\r\n      )}\r\n    >\r\n      <CircuitNodeBreadcrumbRootItem />\r\n      {elements}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CircuitNodeBreadcrumb;\r\n\r\nconst CircuitNodeBreadcrumbRootItem: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const circuitNodeIdPath = useSelector(editingCircuitNodeIdPathSelector);\r\n  const rootCircuitName = useSelector((state) =>\r\n    circuitNameFromIdSelector(state, ROOT_CIRCUIT_ID)\r\n  );\r\n  const editingCircuitName = useSelector(editingCircuitNameSelector);\r\n\r\n  const onClick = React.useCallback(\r\n    (e: React.MouseEvent) => {\r\n      e.preventDefault();\r\n      dispatch(viewCircuit(ROOT_CIRCUIT_ID, []));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <Button onClick={onClick}>\r\n      {circuitNodeIdPath.length === 0 ? editingCircuitName : rootCircuitName}\r\n    </Button>\r\n  );\r\n};\r\n\r\ninterface CircuitNodeBreadcrumbItemProps {\r\n  circuitNodeIdPath: string[];\r\n}\r\n\r\nconst CircuitNodeBreadcrumbItem: React.FC<CircuitNodeBreadcrumbItemProps> = ({\r\n  circuitNodeIdPath,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const circuitNodeId = last(circuitNodeIdPath)!;\r\n\r\n  const nodeType = useSelector((state) =>\r\n    nodeTypeFromNodeIdSelector(state, circuitNodeId)\r\n  );\r\n  const nodeName = useSelector((state) =>\r\n    nodeNameFromNodeIdSelector(state, circuitNodeId)\r\n  );\r\n\r\n  const circuitId = nodeType ? nodeTypeToCircuitId(nodeType) : null;\r\n  const circuitName = useSelector((state) =>\r\n    circuitId ? circuitNameFromIdSelector(state, circuitId) : null\r\n  );\r\n\r\n  const onClick = React.useCallback(\r\n    (e: React.MouseEvent) => {\r\n      e.preventDefault();\r\n      if (!circuitId) {\r\n        return;\r\n      }\r\n      dispatch(viewCircuit(circuitId, circuitNodeIdPath));\r\n    },\r\n    [circuitId, circuitNodeIdPath, dispatch]\r\n  );\r\n\r\n  return (\r\n    <Button onClick={onClick}>\r\n      {nodeName} [{circuitName}]\r\n    </Button>\r\n  );\r\n};\r\n","import CircuitNodeBreadcrumb from \"./CircuitNodeBreadcrumb\";\r\nexport default CircuitNodeBreadcrumb;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"circuit-node-breadcrumb\":\"circuit-node-breadcrumb--3Rx3N\"};","import { createSelector } from \"reselect\";\r\nimport values from \"lodash/values\";\r\n\r\nimport { Rectangle, union } from \"@/geometry\";\r\n\r\nimport { nodeRectsByIdSelector } from \"./node-bounds\";\r\nimport { wireJointPositionsByJointIdSelector } from \"./wires\";\r\n\r\nconst MinFieldRect: Readonly<Rectangle> = Object.freeze({\r\n  p1: {\r\n    x: -100,\r\n    y: -100,\r\n  },\r\n  p2: {\r\n    x: 100,\r\n    y: 100,\r\n  },\r\n});\r\n\r\nexport const fieldRectSelector = createSelector(\r\n  nodeRectsByIdSelector,\r\n  wireJointPositionsByJointIdSelector,\r\n  (nodeRectsById, wireJointsById) => {\r\n    const nodeRects = values(nodeRectsById);\r\n    const jointRects = values(wireJointsById).map((p) => ({ p1: p, p2: p }));\r\n\r\n    return [...nodeRects, ...jointRects].reduce(union, MinFieldRect);\r\n  }\r\n);\r\n","import { createCircuitEditorViewSelector } from \"../utils\";\r\n\r\nexport const viewScaleSelector = createCircuitEditorViewSelector(\r\n  (s) => s.viewScale\r\n);\r\n","import * as React from \"react\";\r\n\r\nfunction noop() {\r\n  /* Do nothing */\r\n}\r\n\r\nconst MenuCloseContext = React.createContext<() => void>(noop);\r\n\r\nexport function useMenuCloseContext() {\r\n  return React.useContext(MenuCloseContext);\r\n}\r\n\r\nexport const MenuCloseContextProvider = MenuCloseContext.Provider;\r\n","import * as React from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nimport { Options, VirtualElement } from \"@popperjs/core\";\r\nimport { usePopper } from \"react-popper\";\r\nimport { useOutsideEvent } from \"@/hooks/useOutsideEvent\";\r\n\r\nexport interface PopoverProps {\r\n  anchorEl: Element | VirtualElement | null;\r\n  placement?: Options[\"placement\"];\r\n  isOpen: boolean;\r\n  onRequestClose(): void;\r\n}\r\n\r\nconst Popover: React.FC<PopoverProps> = ({\r\n  isOpen,\r\n  anchorEl,\r\n  placement = \"auto\",\r\n  onRequestClose,\r\n  children,\r\n}) => {\r\n  const [popoverRef, setPopoverRef] = React.useState<HTMLDivElement | null>(\r\n    null\r\n  );\r\n  const { attributes, styles } = usePopper(\r\n    isOpen ? anchorEl : null,\r\n    popoverRef,\r\n    {\r\n      placement,\r\n    }\r\n  );\r\n\r\n  // Originally used FocusOn here, but that consumes the click.\r\n  //  We want outside clicks to still function.\r\n  useOutsideEvent(popoverRef, onRequestClose);\r\n\r\n  if (!isOpen) {\r\n    return null;\r\n  }\r\n\r\n  return createPortal(\r\n    <div ref={setPopoverRef} style={styles.popper} {...attributes.popper}>\r\n      {children}\r\n    </div>,\r\n    document.body\r\n  );\r\n};\r\n\r\nexport default Popover;\r\n","import * as React from \"react\";\r\n\r\nexport function useOutsideEvent(\r\n  element: HTMLElement | null,\r\n  onOutsideEvent: () => void\r\n) {\r\n  const onEvent = React.useCallback(\r\n    (e: MouseEvent | TouchEvent) => {\r\n      if (!element) {\r\n        return;\r\n      }\r\n\r\n      if (!element.contains(e.target as any)) {\r\n        onOutsideEvent();\r\n      }\r\n    },\r\n    [element, onOutsideEvent]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    document.addEventListener(\"mousedown\", onEvent);\r\n    document.addEventListener(\"touchstart\", onEvent);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", onEvent);\r\n      document.removeEventListener(\"touchstart\", onEvent);\r\n    };\r\n  }, [onEvent]);\r\n}\r\n","import * as React from \"react\";\r\nimport { VirtualElement } from \"@popperjs/core\";\r\n\r\nimport { Point } from \"@/geometry\";\r\n\r\nimport { MenuCloseContextProvider } from \"./Menus/MenuCloseContext\";\r\n\r\nimport Popover from \"./Popover\";\r\n\r\nexport interface ContextMenuProps {\r\n  x: number;\r\n  y: number;\r\n  open: boolean;\r\n  onRequestClose(): void;\r\n}\r\n\r\nconst ContextMenu: React.FC<ContextMenuProps> = ({\r\n  x,\r\n  y,\r\n  open,\r\n  onRequestClose,\r\n  children,\r\n}) => {\r\n  const anchorEl = React.useMemo<VirtualElement>(\r\n    () => ({\r\n      getBoundingClientRect: () => ({\r\n        left: x,\r\n        top: y,\r\n        right: x,\r\n        bottom: y,\r\n        width: 0,\r\n        height: 0,\r\n        x,\r\n        y,\r\n      }),\r\n    }),\r\n    [x, y]\r\n  );\r\n\r\n  return (\r\n    <MenuCloseContextProvider value={onRequestClose}>\r\n      <Popover\r\n        isOpen={open}\r\n        onRequestClose={onRequestClose}\r\n        anchorEl={anchorEl}\r\n        placement=\"bottom-start\"\r\n      >\r\n        {children}\r\n      </Popover>\r\n    </MenuCloseContextProvider>\r\n  );\r\n};\r\n\r\nexport default ContextMenu;\r\n\r\nexport interface UseContextMenu {\r\n  renderContextMenu(content: React.ReactNode): React.ReactNode;\r\n  openContextMenu(e: React.MouseEvent): void;\r\n}\r\nexport function useContextMenu(): UseContextMenu {\r\n  const [ctxPos, setCtxPos] = React.useState<Point | null>(null);\r\n\r\n  const openContextMenu = React.useCallback((e: React.MouseEvent) => {\r\n    setCtxPos({ x: e.pageX, y: e.pageY });\r\n  }, []);\r\n\r\n  const onCloseContextMenu = React.useCallback(() => {\r\n    setCtxPos(null);\r\n  }, []);\r\n\r\n  const renderContextMenu = React.useCallback(\r\n    (content: JSX.Element) => {\r\n      if (!ctxPos) {\r\n        return null;\r\n      }\r\n\r\n      return (\r\n        <ContextMenu\r\n          open\r\n          onRequestClose={onCloseContextMenu}\r\n          x={ctxPos.x}\r\n          y={ctxPos.y}\r\n        >\r\n          {content}\r\n        </ContextMenu>\r\n      );\r\n    },\r\n    [ctxPos, onCloseContextMenu]\r\n  );\r\n\r\n  return {\r\n    openContextMenu,\r\n    renderContextMenu,\r\n  };\r\n}\r\n","import * as React from \"react\";\r\n\r\nexport interface FieldSvgElementContext {\r\n  svgRef: React.RefObject<SVGSVGElement | null>;\r\n  scalerRef: React.RefObject<SVGGraphicsElement | null>;\r\n}\r\nconst nullRef = { current: null };\r\nexport const fieldSvgElementContext = React.createContext<\r\n  FieldSvgElementContext\r\n>({ svgRef: nullRef, scalerRef: nullRef });\r\n\r\nconst ContextProvider = fieldSvgElementContext.Provider;\r\n\r\nexport const FieldSvgElementProvider: React.FC<{\r\n  svgRef: React.RefObject<SVGSVGElement | null>;\r\n  scalerRef: React.RefObject<SVGGraphicsElement | null>;\r\n}> = ({ svgRef, scalerRef, children }) => {\r\n  const context = React.useMemo(\r\n    () => ({\r\n      svgRef,\r\n      scalerRef,\r\n    }),\r\n    [svgRef, scalerRef]\r\n  );\r\n  return <ContextProvider value={context}>{children}</ContextProvider>;\r\n};\r\n","import * as React from \"react\";\r\n\r\nimport { Point, ZeroPoint } from \"@/geometry\";\r\n\r\nimport { fieldSvgElementContext } from \"../contexts/fieldSvgElement\";\r\nimport { getFieldCoord } from \"../utils\";\r\n\r\nexport function useMouseCoords(): (p: Point) => Point {\r\n  const { svgRef, scalerRef } = React.useContext(fieldSvgElementContext);\r\n  return React.useCallback(\r\n    (p: Point) => {\r\n      if (!svgRef.current || !scalerRef.current) {\r\n        return p;\r\n      }\r\n      return getFieldCoord(svgRef.current, scalerRef.current, p);\r\n    },\r\n    [svgRef, scalerRef]\r\n  );\r\n}\r\n\r\nexport function useEventMouseCoords(): (\r\n  e: MouseEvent | React.MouseEvent\r\n) => Point {\r\n  const { svgRef, scalerRef } = React.useContext(fieldSvgElementContext);\r\n  return React.useCallback(\r\n    (e: MouseEvent | React.MouseEvent) => {\r\n      if (!svgRef.current || !scalerRef.current) {\r\n        return ZeroPoint;\r\n      }\r\n      const p: Point = {\r\n        x: e.pageX,\r\n        y: e.pageY,\r\n      };\r\n      return getFieldCoord(svgRef.current, scalerRef.current, p);\r\n    },\r\n    [svgRef, scalerRef]\r\n  );\r\n}\r\n","import { Point } from \"@/geometry\";\r\n\r\nexport function getFieldCoord(\r\n  field: SVGSVGElement,\r\n  scaler: SVGGraphicsElement,\r\n  p: Point\r\n) {\r\n  const ctm = scaler.getScreenCTM();\r\n  if (!ctm) {\r\n    return p;\r\n  }\r\n\r\n  const pt = field.createSVGPoint();\r\n  pt.x = p.x;\r\n  pt.y = p.y;\r\n  const translated = pt.matrixTransform(ctm.inverse());\r\n  return { x: translated.x, y: translated.y };\r\n}\r\n","import * as React from \"react\";\r\n\r\nimport { cls } from \"@/utils\";\r\n\r\nimport useSelector from \"@/hooks/useSelector\";\r\n\r\nimport { nodeDefinitionFromTypeSelector } from \"@/services/node-types/selectors/node-types\";\r\n\r\n// TODO: This component does a whole lot of nothing.  Remove it.\r\n\r\nexport interface NodeVisualProps {\r\n  className?: string;\r\n  circuitNodeId?: string;\r\n  x?: number;\r\n  y?: number;\r\n  nodeType: string;\r\n  nodeState: any;\r\n  isSelected?: boolean;\r\n  onClick?(e: React.MouseEvent): void;\r\n  onMouseDown?(e: React.MouseEvent): void;\r\n  onMouseOver?(e: React.MouseEvent): void;\r\n  onMouseUp?(e: React.MouseEvent): void;\r\n  onMouseLeave?(e: React.MouseEvent): void;\r\n  onContextMenu?(e: React.MouseEvent): void;\r\n}\r\n\r\nconst NodeVisual: React.FC<NodeVisualProps> = React.memo(function NodeVisual({\r\n  className,\r\n  circuitNodeId,\r\n  x = 0,\r\n  y = 0,\r\n  nodeType,\r\n  nodeState,\r\n  isSelected = false,\r\n  onClick,\r\n  onMouseDown,\r\n  onMouseOver,\r\n  onMouseUp,\r\n  onMouseLeave,\r\n  onContextMenu,\r\n}) {\r\n  const def = useSelector((state) =>\r\n    nodeDefinitionFromTypeSelector(state, nodeType)\r\n  );\r\n\r\n  let body: React.ReactNode;\r\n  if (!def) {\r\n    body = (\r\n      <rect\r\n        x={x}\r\n        y={y}\r\n        width={50}\r\n        height={50}\r\n        fill={isSelected ? \"goldenrod\" : \"red\"}\r\n      />\r\n    );\r\n  } else {\r\n    const { component: ElementComponent } = def.visual;\r\n    body = (\r\n      <ElementComponent\r\n        circuitNodeId={circuitNodeId}\r\n        isSelected={isSelected}\r\n        elementState={nodeState}\r\n      />\r\n    );\r\n  }\r\n\r\n  const transform = x != 0 || y != 0 ? `translate(${x}, ${y})` : undefined;\r\n  return (\r\n    <g\r\n      className={cls(className, \"node-visual\", isSelected && \"node-selected\")}\r\n      transform={transform}\r\n      onClick={onClick}\r\n      onMouseDown={onMouseDown}\r\n      onMouseOver={onMouseOver}\r\n      onMouseUp={onMouseUp}\r\n      onMouseLeave={onMouseLeave}\r\n      onContextMenu={onContextMenu}\r\n    >\r\n      {body}\r\n    </g>\r\n  );\r\n});\r\n\r\nexport default NodeVisual;\r\n","import * as React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { getModifiers } from \"@/modifier-keys\";\r\n\r\nimport useSelector from \"@/hooks/useSelector\";\r\n\r\nimport {\r\n  isDraggingNewNodeSelector,\r\n  dragNewNodeTypeSelector,\r\n  dragEndSelector,\r\n} from \"@/services/circuit-editor-ui/selectors/drag\";\r\n\r\nimport { fieldDragContinue } from \"@/actions/field-drag-continue\";\r\n\r\nimport { useEventMouseCoords } from \"../hooks/useMouseCoords\";\r\n\r\nimport NodeVisual from \"./NodeVisual\";\r\n\r\nconst DragNewNodeLayer: React.FC = React.memo(function DragNewNodeLayer() {\r\n  const dispatch = useDispatch();\r\n  const getMouseCoords = useEventMouseCoords();\r\n  const isDraggingNewNode = useSelector(isDraggingNewNodeSelector);\r\n  // FIXME: Apply snap if ctrl-meta not held\r\n  const dragEnd = useSelector(dragEndSelector);\r\n  const draggingNodeType = useSelector(dragNewNodeTypeSelector);\r\n\r\n  // New node drags start on the tray, so we need to be responsible for\r\n  // continuing the drag.\r\n  const onMouseMove = React.useCallback(\r\n    (e) => {\r\n      const p = getMouseCoords(e);\r\n      const modifierKeys = getModifiers(e);\r\n      dispatch(fieldDragContinue(p, modifierKeys));\r\n    },\r\n    [getMouseCoords, dispatch]\r\n  );\r\n\r\n  if (!isDraggingNewNode || !draggingNodeType) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {dragEnd && (\r\n        <g opacity={0.5}>\r\n          <NodeVisual\r\n            x={dragEnd.x}\r\n            y={dragEnd.y}\r\n            nodeType={draggingNodeType}\r\n            nodeState={{}}\r\n          />\r\n        </g>\r\n      )}\r\n      <rect\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        fill=\"transparent\"\r\n        onMouseMove={onMouseMove}\r\n      />\r\n    </>\r\n  );\r\n});\r\n\r\nexport default DragNewNodeLayer;\r\n","import * as React from \"react\";\r\n\r\nimport pick from \"lodash/pick\";\r\nimport mapValues from \"lodash/mapValues\";\r\nimport values from \"lodash/values\";\r\n\r\nimport { createSelector } from \"reselect\";\r\n\r\nimport { nodeTypesByNodeIdSelector } from \"@/services/node-graph/selectors/nodes\";\r\nimport { nodePositionsByNodeIdSelector } from \"@/services/node-layout/selectors/node-positions\";\r\nimport { selectedNodeIdsSelector } from \"@/services/selection/selectors/selection\";\r\nimport { dragMoveOffsetSelector } from \"@/services/circuit-editor-ui/selectors/drag\";\r\n\r\nimport useSelector from \"@/hooks/useSelector\";\r\n\r\nimport NodeVisual from \"./NodeVisual\";\r\n\r\nconst selectedNodePositionsByIdSelector = createSelector(\r\n  selectedNodeIdsSelector,\r\n  nodePositionsByNodeIdSelector,\r\n  (selectedNodeIds, nodePositionsById) =>\r\n    pick(nodePositionsById, selectedNodeIds)\r\n);\r\n\r\nconst selectedNodeTypesByIdSelector = createSelector(\r\n  selectedNodeIdsSelector,\r\n  nodeTypesByNodeIdSelector,\r\n  (selectedNodeIds, nodeTypesById) => pick(nodeTypesById, selectedNodeIds)\r\n);\r\n\r\nconst DragNodePreviewLayer: React.FC = React.memo(\r\n  function DragNodePreviewLayer() {\r\n    const selectedNodePositionsById = useSelector(\r\n      selectedNodePositionsByIdSelector\r\n    );\r\n    const selectedNodeTypesById = useSelector(selectedNodeTypesByIdSelector);\r\n    const dragMoveOffset = useSelector(dragMoveOffsetSelector);\r\n\r\n    let elements: React.ReactNode | null = null;\r\n    if (dragMoveOffset) {\r\n      elements = values(\r\n        mapValues(selectedNodePositionsById, (p, nodeId) => (\r\n          <NodeVisual\r\n            key={nodeId}\r\n            nodeType={selectedNodeTypesById[nodeId]}\r\n            nodeState={{}}\r\n            x={p.x + dragMoveOffset.x}\r\n            y={p.y + dragMoveOffset.y}\r\n          />\r\n        ))\r\n      );\r\n    }\r\n    return (\r\n      <g id=\"drag-node-preview-layer\" opacity={0.3}>\r\n        {elements}\r\n      </g>\r\n    );\r\n  }\r\n);\r\n\r\nexport default DragNodePreviewLayer;\r\n","import * as React from \"react\";\r\n\r\nimport { cls } from \"@/utils\";\r\n\r\nimport styles from \"./WireJointVisual.module.css\";\r\n\r\ninterface WireJointVisualProps extends React.SVGProps<SVGCircleElement> {\r\n  x: number;\r\n  y: number;\r\n  interactable?: boolean;\r\n  selected?: boolean;\r\n}\r\n\r\nconst WireJointVisual: React.FC<WireJointVisualProps> = ({\r\n  x,\r\n  y,\r\n  interactable = true,\r\n  selected = false,\r\n  ...props\r\n}) => {\r\n  const [mouseOver, setMouseOver] = React.useState(false);\r\n\r\n  const onMouseOver = React.useCallback(() => {\r\n    if (!interactable) {\r\n      return;\r\n    }\r\n    setMouseOver(true);\r\n  }, [interactable]);\r\n\r\n  const onMouseOut = React.useCallback(() => {\r\n    setMouseOver(false);\r\n  }, []);\r\n\r\n  return (\r\n    <circle\r\n      className={cls(styles[\"wire-joint\"], selected && styles[\"selected\"])}\r\n      cx={x}\r\n      cy={y}\r\n      r={(interactable && mouseOver) || selected ? 4 : 2}\r\n      onMouseOver={onMouseOver}\r\n      onMouseOut={onMouseOut}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default WireJointVisual;\r\n","import WireJointVisual from \"./WireJointVisual\";\r\nexport default WireJointVisual;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wire-joint\":\"wire-joint--DrAWT\",\"selected\":\"selected--1I6Un\"};","import * as React from \"react\";\r\nimport { createSelector } from \"reselect\";\r\nimport pick from \"lodash/pick\";\r\nimport values from \"lodash/values\";\r\n\r\nimport useSelector from \"@/hooks/useSelector\";\r\n\r\nimport {\r\n  dragMoveOffsetSelector,\r\n  dragNewJointPositionSelector,\r\n} from \"@/services/circuit-editor-ui/selectors/drag\";\r\nimport { selectedJointIdsSelector } from \"@/services/selection/selectors/selection\";\r\nimport { wireJointPositionsByJointIdSelector } from \"@/services/node-layout/selectors/wires\";\r\n\r\nimport WireJointVisual from \"./WireJointVisual\";\r\n\r\nconst selectedJointPositionsByIdSelector = createSelector(\r\n  selectedJointIdsSelector,\r\n  wireJointPositionsByJointIdSelector,\r\n  (selectedJointIds, jointPositionsById) =>\r\n    pick(jointPositionsById, selectedJointIds)\r\n);\r\n\r\nconst DragJointPreviewLayer: React.FC = React.memo(\r\n  function DragJointPreviewLayer() {\r\n    const dragMoveOffset = useSelector(dragMoveOffsetSelector);\r\n    const selectedNodePositionsById = useSelector(\r\n      selectedJointPositionsByIdSelector\r\n    );\r\n\r\n    const newJointPosition = useSelector(dragNewJointPositionSelector);\r\n\r\n    let elements: React.ReactNode | null = null;\r\n    if (dragMoveOffset) {\r\n      elements = values(selectedNodePositionsById).map((p, index) => (\r\n        <WireJointVisual\r\n          key={index}\r\n          interactable={false}\r\n          x={p.x + dragMoveOffset.x}\r\n          y={p.y + dragMoveOffset.y}\r\n          opacity={0.5}\r\n        />\r\n      ));\r\n    }\r\n\r\n    let newJointElement: React.ReactNode | null = null;\r\n    if (newJointPosition) {\r\n      newJointElement = (\r\n        <WireJointVisual\r\n          interactable={false}\r\n          x={newJointPosition.x}\r\n          y={newJointPosition.y}\r\n          opacity={0.5}\r\n        />\r\n      );\r\n    }\r\n\r\n    // TODO: Draw transparent lines connecting the joint.\r\n\r\n    return (\r\n      <g id=\"drag-joint-preview-layer\" opacity={0.3}>\r\n        {elements}\r\n        {newJointElement}\r\n      </g>\r\n    );\r\n  }\r\n);\r\n\r\nexport default DragJointPreviewLayer;\r\n","import * as React from \"react\";\r\nimport { Point, ZeroPoint, pointSubtract } from \"@/geometry\";\r\n\r\nexport interface UseMouseTracking {\r\n  startTracking(e: React.MouseEvent): void;\r\n  cancelTracking(): void;\r\n}\r\n\r\nexport interface MouseTrackingOptions {\r\n  dragThreshold?: number;\r\n  onClick?(e: MouseEvent): void;\r\n  onDragStart?(e: MouseEvent): void;\r\n  onDragMove?(offset: Point, e: MouseEvent): void;\r\n  onDragEnd?(offset: Point, e: MouseEvent): void;\r\n}\r\n\r\nexport default function useMouseTracking(\r\n  opts: MouseTrackingOptions\r\n): UseMouseTracking {\r\n  const {\r\n    dragThreshold = 5,\r\n    onClick,\r\n    onDragStart,\r\n    onDragMove,\r\n    onDragEnd,\r\n  } = opts;\r\n\r\n  // We need both state and ref for this.\r\n  //  State lets us trigger a rerender / useEffect.\r\n  //  Ref lets us check for cancellation when handling document events.\r\n  //  We seem to get a few rogue onMouseMove events after we try to stop tracking.\r\n  const [isTracking, setTracking] = React.useState(false);\r\n  const isTrackingRef = React.useRef(false);\r\n\r\n  const isDraggingRef = React.useRef(false);\r\n  const mouseDownRef = React.useRef<Point>(ZeroPoint);\r\n\r\n  const startTracking = React.useCallback((e: React.MouseEvent) => {\r\n    if (isTrackingRef.current) {\r\n      return;\r\n    }\r\n\r\n    isTrackingRef.current = true;\r\n    setTracking(true);\r\n    mouseDownRef.current = { x: e.pageX, y: e.pageY };\r\n  }, []);\r\n\r\n  const cancelTracking = React.useCallback(() => {\r\n    isTrackingRef.current = false;\r\n    setTracking(false);\r\n    isDraggingRef.current = false;\r\n    mouseDownRef.current = ZeroPoint;\r\n  }, []);\r\n\r\n  const onMouseMove = React.useCallback(\r\n    (e: MouseEvent) => {\r\n      if (!isTrackingRef.current) {\r\n        return;\r\n      }\r\n\r\n      if (isDraggingRef.current) {\r\n        if (onDragMove) {\r\n          const offset = pointSubtract(\r\n            { x: e.pageX, y: e.pageY },\r\n            mouseDownRef.current\r\n          );\r\n          onDragMove(offset, e);\r\n        }\r\n      } else {\r\n        const d = mouseDownRef.current;\r\n        if (\r\n          Math.abs(d.x - e.pageX) >= dragThreshold ||\r\n          Math.abs(d.y - e.pageY) >= dragThreshold\r\n        ) {\r\n          isDraggingRef.current = true;\r\n          if (onDragStart) {\r\n            onDragStart(e);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [dragThreshold, onDragMove, onDragStart]\r\n  );\r\n\r\n  const onMouseUp = React.useCallback(\r\n    (e: MouseEvent) => {\r\n      if (!isTrackingRef.current) {\r\n        return;\r\n      }\r\n\r\n      if (isDraggingRef.current) {\r\n        if (onDragEnd) {\r\n          const offset = pointSubtract(\r\n            { x: e.pageX, y: e.pageY },\r\n            mouseDownRef.current\r\n          );\r\n          onDragEnd(offset, e);\r\n        }\r\n      } else {\r\n        if (onClick) {\r\n          onClick(e);\r\n        }\r\n      }\r\n\r\n      cancelTracking();\r\n    },\r\n    [cancelTracking, onClick, onDragEnd]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (!isTracking) {\r\n      return;\r\n    }\r\n\r\n    document.addEventListener(\"mousemove\", onMouseMove);\r\n    document.addEventListener(\"mouseup\", onMouseUp);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousemove\", onMouseMove);\r\n      document.removeEventListener(\"mouseup\", onMouseUp);\r\n    };\r\n  }, [isTracking, onMouseMove, onMouseUp]);\r\n\r\n  return {\r\n    startTracking,\r\n    cancelTracking,\r\n  };\r\n}\r\n","import * as React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { Point } from \"@/geometry\";\r\nimport { getModifiers } from \"@/modifier-keys\";\r\n\r\nimport useMouseTracking from \"@/hooks/useMouseTracking\";\r\n\r\nimport { selectionRectSelector } from \"@/services/circuit-editor-ui/selectors/drag\";\r\nimport { viewScaleSelector } from \"@/services/circuit-editor-view/selectors/view\";\r\n\r\nimport { clearSelection } from \"@/actions/select-clear\";\r\nimport { fieldDragStartSelect } from \"@/actions/field-drag-start-select\";\r\nimport { fieldDragContinue } from \"@/actions/field-drag-continue\";\r\nimport { fieldDragEnd } from \"@/actions/field-drag-end\";\r\n\r\nimport { useEventMouseCoords } from \"../hooks/useMouseCoords\";\r\n\r\nconst DragSelectLayer: React.FC = React.memo(function DragSelectLayer() {\r\n  const dispatch = useDispatch();\r\n  const selectionRect = useSelector(selectionRectSelector);\r\n\r\n  const scale = useSelector(viewScaleSelector);\r\n  function counterScale(value: number) {\r\n    return value * (1 / scale);\r\n  }\r\n\r\n  const getCoords = useEventMouseCoords();\r\n\r\n  const onClick = React.useCallback(\r\n    (e: MouseEvent) => {\r\n      if (e.button !== 0) {\r\n        return;\r\n      }\r\n      const modifiers = getModifiers(e);\r\n      if (!modifiers.ctrlMetaKey && !modifiers.shiftKey) {\r\n        dispatch(clearSelection());\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const onDragStart = React.useCallback(\r\n    (e: MouseEvent) => {\r\n      const p = getCoords(e);\r\n      dispatch(fieldDragStartSelect(p));\r\n    },\r\n    [dispatch, getCoords]\r\n  );\r\n\r\n  const onDragMove = React.useCallback(\r\n    (offset: Point, e: MouseEvent) => {\r\n      const p = getCoords(e);\r\n      const modifierKeys = getModifiers(e);\r\n      dispatch(fieldDragContinue(p, modifierKeys));\r\n    },\r\n    [dispatch, getCoords]\r\n  );\r\n\r\n  const onDragEnd = React.useCallback(\r\n    (offset: Point, e: MouseEvent) => {\r\n      const p = getCoords(e);\r\n      const modifiers = getModifiers(e);\r\n      dispatch(fieldDragEnd(p, modifiers));\r\n    },\r\n    [dispatch, getCoords]\r\n  );\r\n\r\n  const { startTracking } = useMouseTracking({\r\n    onClick,\r\n    onDragStart,\r\n    onDragMove,\r\n    onDragEnd,\r\n  });\r\n  const onMouseDown = React.useCallback(\r\n    (e: React.MouseEvent) => {\r\n      if (e.defaultPrevented) {\r\n        return;\r\n      }\r\n      e.preventDefault();\r\n      startTracking(e);\r\n    },\r\n    [startTracking]\r\n  );\r\n\r\n  return (\r\n    <g id=\"drag-select-layer\">\r\n      <rect\r\n        /*\r\n         Our width and height get scaled by the parent scaler.\r\n         We have to be inside the parent scaler to make our mouse coordinate values match up.\r\n         Scale us back out so we continue to cover the whole screen.\r\n         */\r\n        width={`${counterScale(1) * 100}%`}\r\n        height={`${counterScale(1) * 100}%`}\r\n        fill=\"transparent\"\r\n        onMouseDown={onMouseDown}\r\n      />\r\n      {selectionRect && (\r\n        <g\r\n          transform={`translate(${selectionRect.p1.x}, ${selectionRect.p1.y})`}\r\n        >\r\n          <rect\r\n            width={selectionRect.p2.x - selectionRect.p1.x}\r\n            height={selectionRect.p2.y - selectionRect.p1.y}\r\n            strokeWidth={counterScale(2)}\r\n            strokeDasharray={`${counterScale(5)} ${counterScale(3)}`}\r\n            stroke=\"skyblue\"\r\n            fill=\"transparent\"\r\n          />\r\n        </g>\r\n      )}\r\n    </g>\r\n  );\r\n});\r\n\r\nexport default DragSelectLayer;\r\n","import * as React from \"react\";\r\n\r\nimport useSelector from \"@/hooks/useSelector\";\r\n\r\nimport { viewScaleSelector } from \"@/services/circuit-editor-view/selectors/view\";\r\n\r\nconst GridBackground: React.FC = React.memo(function GridBackground() {\r\n  const scale = useSelector(viewScaleSelector);\r\n\r\n  const gridSize = 50 * scale;\r\n\r\n  return (\r\n    <svg width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <defs>\r\n        <pattern\r\n          id=\"grid\"\r\n          width={gridSize}\r\n          height={gridSize}\r\n          patternUnits=\"userSpaceOnUse\"\r\n        >\r\n          <path\r\n            d={`M ${gridSize} 0 L 0 0 0 ${gridSize}`}\r\n            fill=\"none\"\r\n            stroke=\"gray\"\r\n            strokeWidth={0.5}\r\n          />\r\n        </pattern>\r\n      </defs>\r\n\r\n      <rect width=\"100%\" height=\"100%\" fill=\"url(#grid)\" />\r\n    </svg>\r\n  );\r\n});\r\n\r\nexport default GridBackground;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"menu--3E86w\",\"menu-item\":\"menu-item--2dcyN\",\"menu-item--disabled\":\"menu-item--disabled--RJJTK\",\"menu-item-content\":\"menu-item-content--3s1DG\",\"menu-item-text\":\"menu-item-text--1F41V\",\"menu-item-secondary\":\"menu-item-secondary--2PJLF\",\"menu-divider\":\"menu-divider--1QPGp\"};","import * as React from \"react\";\r\n\r\nimport styles from \"./Menus.module.css\";\r\n\r\nconst Menu: React.FC = ({ children }) => {\r\n  return <ul className={styles[\"menu\"]}>{children}</ul>;\r\n};\r\n\r\nexport default Menu;\r\n","import * as React from \"react\";\r\n\r\nimport { cls } from \"@/utils\";\r\n\r\nimport styles from \"./Menus.module.css\";\r\nimport { useMenuCloseContext } from \"./MenuCloseContext\";\r\n\r\nexport interface MenuItemProps {\r\n  disabled?: boolean;\r\n  secondary?: string;\r\n  onClick?(e: React.MouseEvent<HTMLElement>): void;\r\n}\r\nconst MenuItem: React.FC<MenuItemProps> = ({\r\n  disabled,\r\n  onClick,\r\n  secondary,\r\n  children,\r\n}) => {\r\n  const requestMenuClose = useMenuCloseContext();\r\n  const onItemClick = React.useCallback(\r\n    (e: React.MouseEvent<HTMLAnchorElement>) => {\r\n      if (onClick) {\r\n        onClick(e);\r\n      }\r\n      requestMenuClose();\r\n    },\r\n    [requestMenuClose, onClick]\r\n  );\r\n  return (\r\n    <li\r\n      className={cls(\r\n        styles[\"menu-item\"],\r\n        disabled && styles[\"menu-item--disabled\"]\r\n      )}\r\n    >\r\n      <a className={styles[\"menu-item-content\"]} onClick={onItemClick}>\r\n        <span className={styles[\"menu-item-text\"]}>{children}</span>\r\n        {secondary && (\r\n          <span className={styles[\"menu-item-secondary\"]}>{secondary}</span>\r\n        )}\r\n      </a>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MenuItem;\r\n","import * as React from \"react\";\r\n\r\nimport styles from \"./Menus.module.css\";\r\n\r\nconst MenuItem: React.FC = () => {\r\n  return <div className={styles[\"menu-divider\"]} />;\r\n};\r\n\r\nexport default MenuItem;\r\n","import * as React from \"react\";\r\n\r\nexport interface AtomicTextInputProps {\r\n  className?: string;\r\n  autoFocus?: boolean;\r\n  defaultValue?: string;\r\n  value?: string;\r\n  onChange?(e: React.ChangeEvent<HTMLInputElement>): void;\r\n  onBeginEdit?(): void;\r\n  onCommit?(value: string): void;\r\n  onCancel?(): void;\r\n  onKeyUp?(e: React.KeyboardEvent<HTMLInputElement>): void;\r\n  onBlur?(e: React.FocusEvent<HTMLInputElement>): void;\r\n}\r\n\r\nconst AtomicTextInput = React.forwardRef<\r\n  HTMLInputElement,\r\n  AtomicTextInputProps\r\n>(\r\n  (\r\n    {\r\n      className,\r\n      autoFocus,\r\n      defaultValue,\r\n      value,\r\n      onChange,\r\n      onBeginEdit,\r\n      onCommit,\r\n      onCancel,\r\n      onBlur,\r\n      onKeyUp,\r\n    },\r\n    ref\r\n  ) => {\r\n    const [editValue, setEditValue] = React.useState<string | null>(null);\r\n\r\n    const onInputChange = React.useCallback(\r\n      (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (editValue == null && onBeginEdit) {\r\n          onBeginEdit();\r\n        }\r\n\r\n        setEditValue(e.target.value);\r\n\r\n        if (onChange) {\r\n          onChange(e);\r\n        }\r\n      },\r\n      [editValue, onBeginEdit, onChange]\r\n    );\r\n\r\n    const onInputKeyUp = React.useCallback(\r\n      (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (onKeyUp) {\r\n          onKeyUp(e);\r\n        }\r\n        if (e.defaultPrevented) {\r\n          return;\r\n        }\r\n\r\n        if (editValue == null) {\r\n          return;\r\n        }\r\n\r\n        if (e.key === \"Escape\") {\r\n          e.preventDefault();\r\n          if (onCancel) {\r\n            onCancel();\r\n          }\r\n        } else if (e.key === \"Enter\") {\r\n          e.preventDefault();\r\n          if (onCommit) {\r\n            onCommit(editValue);\r\n          }\r\n        }\r\n      },\r\n      [onKeyUp, editValue, onCancel, onCommit]\r\n    );\r\n\r\n    const onInputBlur = React.useCallback(\r\n      (e: React.FocusEvent<HTMLInputElement>) => {\r\n        if (onBlur) {\r\n          onBlur(e);\r\n        }\r\n\r\n        if (editValue != null && onCommit) {\r\n          onCommit(editValue);\r\n        }\r\n      },\r\n      [onBlur, editValue, onCommit]\r\n    );\r\n\r\n    return (\r\n      <input\r\n        ref={ref}\r\n        className={className}\r\n        autoFocus={autoFocus}\r\n        defaultValue={defaultValue}\r\n        value={value}\r\n        type=\"text\"\r\n        onChange={onInputChange}\r\n        onKeyUp={onInputKeyUp}\r\n        onBlur={onInputBlur}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default AtomicTextInput;\r\n","import { cls } from \"@/utils\";\r\nimport * as React from \"react\";\r\nimport AtomicTextInput from \"./AtomicTextInput\";\r\n\r\nexport interface EditableTextProps {\r\n  className?: string;\r\n  textClassname?: string;\r\n  inputClassname?: string;\r\n  label?: JSX.Element;\r\n  defaultValue: string;\r\n  isEditing: boolean;\r\n  onRequestEdit?(): void;\r\n  onCommit(value: string): void;\r\n  onCancel(): void;\r\n}\r\n\r\nconst EditableText: React.FC<EditableTextProps> = ({\r\n  className,\r\n  textClassname,\r\n  inputClassname,\r\n  label,\r\n  defaultValue,\r\n  isEditing,\r\n  onRequestEdit,\r\n  onCommit,\r\n  onCancel,\r\n}) => {\r\n  const inputRef = React.useRef<HTMLInputElement | null>(null);\r\n\r\n  const onSpanDoubleClick = React.useCallback(\r\n    (e: React.MouseEvent) => {\r\n      if (!onRequestEdit) {\r\n        return;\r\n      }\r\n      if (e.defaultPrevented) {\r\n        return;\r\n      }\r\n      e.preventDefault();\r\n      onRequestEdit();\r\n    },\r\n    [onRequestEdit]\r\n  );\r\n\r\n  // AtomicTextInput enters editing mode when the user changes something.\r\n  // It will not call cancel on blur.\r\n  // We want to exit when blurred\r\n  const onKeyUp = React.useCallback(\r\n    (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n      if (e.key === \"Escape\" && isEditing) {\r\n        onCancel();\r\n      }\r\n    },\r\n    [isEditing, onCancel]\r\n  );\r\n\r\n  const onBlur = React.useCallback(() => {\r\n    if (isEditing) {\r\n      onCancel();\r\n    }\r\n  }, [isEditing, onCancel]);\r\n\r\n  React.useEffect(() => {\r\n    if (isEditing && inputRef.current) {\r\n      inputRef.current.select();\r\n    }\r\n  }, [isEditing]);\r\n\r\n  if (!isEditing) {\r\n    return (\r\n      <span\r\n        className={cls(className, textClassname)}\r\n        onDoubleClick={onSpanDoubleClick}\r\n      >\r\n        {label ?? defaultValue}\r\n      </span>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AtomicTextInput\r\n      ref={inputRef}\r\n      className={cls(className, inputClassname)}\r\n      autoFocus\r\n      defaultValue={defaultValue}\r\n      onBlur={onBlur}\r\n      onKeyUp={onKeyUp}\r\n      onCommit={onCommit}\r\n      onCancel={onCancel}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EditableText;\r\n","import * as React from \"react\";\r\n\r\nimport EditableText, { EditableTextProps } from \"../EditableText\";\r\n\r\nimport { useMenuCloseContext } from \"./MenuCloseContext\";\r\n\r\nimport styles from \"./Menus.module.css\";\r\n\r\nexport type MenuEditableTextProps = EditableTextProps;\r\nconst MenuEditableText: React.FC<MenuEditableTextProps> = (props) => {\r\n  const { onRequestEdit, onCommit } = props;\r\n\r\n  const requestMenuClose = useMenuCloseContext();\r\n\r\n  const onClick = React.useCallback(() => {\r\n    if (onRequestEdit) {\r\n      onRequestEdit();\r\n    }\r\n  }, [onRequestEdit]);\r\n\r\n  const onEditableCommit = React.useCallback(\r\n    (value: string) => {\r\n      onCommit(value);\r\n      requestMenuClose();\r\n    },\r\n    [onCommit, requestMenuClose]\r\n  );\r\n\r\n  return (\r\n    <li className={styles[\"menu-item\"]} onClick={onClick}>\r\n      <EditableText {...props} onCommit={onEditableCommit} />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MenuEditableText;\r\n","import * as React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport useSelector from \"@/hooks/useSelector\";\r\n\r\nimport { selectionAlignToGrid } from \"@/actions/selection-align-to-grid\";\r\nimport { deleteSelection } from \"@/actions/selection-delete\";\r\n\r\nimport { nodeNameFromNodeIdSelector } from \"@/services/node-graph/selectors/nodes\";\r\n\r\nimport Menu from \"@/components/Menus/Menu\";\r\nimport MenuItem from \"@/components/Menus/MenuItem\";\r\nimport MenuDivider from \"@/components/Menus/MenuDivider\";\r\nimport MenuEditableText from \"@/components/Menus/MenuEditableText\";\r\nimport { renameNode } from \"@/actions/node-rename\";\r\n\r\nexport interface NodeContextMenuProps {\r\n  nodeId: string;\r\n}\r\n\r\nconst NodeContextMenu: React.FC<NodeContextMenuProps> = ({ nodeId }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const nodeName = useSelector((state) =>\r\n    nodeNameFromNodeIdSelector(state, nodeId)\r\n  );\r\n  const [isRenaming, setIsRenaming] = React.useState(false);\r\n  const onRename = React.useCallback(() => {\r\n    setIsRenaming(true);\r\n  }, []);\r\n  const onRenameCancel = React.useCallback(() => {\r\n    setIsRenaming(false);\r\n  }, []);\r\n  const onRenameCommit = React.useCallback(\r\n    (value: string) => {\r\n      setIsRenaming(false);\r\n      dispatch(renameNode(nodeId, value));\r\n    },\r\n    [dispatch, nodeId]\r\n  );\r\n\r\n  const onAlignToGrid = React.useCallback(() => {\r\n    dispatch(selectionAlignToGrid());\r\n  }, [dispatch]);\r\n  const onDelete = React.useCallback(() => {\r\n    dispatch(deleteSelection());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Menu>\r\n      <MenuEditableText\r\n        defaultValue={nodeName ?? \"<unknown>\"}\r\n        label={<span style={{ fontWeight: \"bold\" }}>{nodeName}</span>}\r\n        isEditing={isRenaming}\r\n        onRequestEdit={onRename}\r\n        onCommit={onRenameCommit}\r\n        onCancel={onRenameCancel}\r\n      />\r\n      <MenuDivider />\r\n      <MenuItem onClick={onAlignToGrid}>Align Selection To Grid</MenuItem>\r\n      <MenuDivider />\r\n      <MenuItem onClick={onDelete}>Delete Selected</MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default NodeContextMenu;\r\n","import * as React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport getBounds from \"svg-path-bounds\";\r\n\r\nimport { cls } from \"@/utils\";\r\nimport { Point } from \"@/geometry\";\r\nimport { getModifiers } from \"@/modifier-keys\";\r\nimport { getSelectMode } from \"@/selection-mode\";\r\n\r\nimport interaction from \"@/styles/interaction.module.css\";\r\n\r\nimport useSelector from \"@/hooks/useSelector\";\r\nimport useMouseTracking from \"@/hooks/useMouseTracking\";\r\n\r\nimport { nodeNameFromNodeIdSelector } from \"@/services/node-graph/selectors/nodes\";\r\nimport { nodeStateFromCircuitNodeIdSelector } from \"@/services/simulator/selectors/nodes\";\r\nimport { isNodeSelectedFromNodeIdSelector } from \"@/services/selection/selectors/selection\";\r\nimport { nodePositionFromNodeIdSelector } from \"@/services/node-layout/selectors/node-positions\";\r\nimport { isSimActiveSelector } from \"@/services/simulator-control/selectors/run\";\r\nimport { editingCircuitNodeIdPathSelector } from \"@/services/circuit-editor-view/selectors/circuit\";\r\nimport { nodeDefFromNodeIdSelector } from \"@/services/node-graph/selectors/node-def\";\r\nimport { viewScaleSelector } from \"@/services/circuit-editor-view/selectors/view\";\r\n\r\nimport { fieldDragStartNode } from \"@/actions/field-drag-start-node\";\r\nimport { fieldDragContinue } from \"@/actions/field-drag-continue\";\r\nimport { fieldDragEnd } from \"@/actions/field-drag-end\";\r\nimport { selectNodes } from \"@/actions/select-nodes\";\r\n\r\nimport { useContextMenu } from \"@/components/ContextMenu\";\r\n\r\nimport { useEventMouseCoords } from \"../../hooks/useMouseCoords\";\r\n\r\nimport NodeContextMenu from \"../NodeContextMenu\";\r\n\r\nimport \"./Node.module.css\";\r\n\r\nexport interface NodeProps {\r\n  nodeId: string;\r\n}\r\n\r\nconst Node: React.FC<NodeProps> = React.memo(function Node({ nodeId }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const isSimActive = useSelector(isSimActiveSelector);\r\n  const editCircuitIdPath = useSelector(editingCircuitNodeIdPathSelector);\r\n\r\n  const { openContextMenu, renderContextMenu } = useContextMenu();\r\n\r\n  const def = useSelector((state) => nodeDefFromNodeIdSelector(state, nodeId));\r\n  const { x, y } = useSelector((s) =>\r\n    nodePositionFromNodeIdSelector(s, nodeId)\r\n  );\r\n  const nodeState = useSelector((s) =>\r\n    nodeStateFromCircuitNodeIdSelector(s, [...editCircuitIdPath, nodeId])\r\n  );\r\n  const isSelected = useSelector((s) =>\r\n    isNodeSelectedFromNodeIdSelector(s, nodeId)\r\n  );\r\n\r\n  const getCoords = useEventMouseCoords();\r\n\r\n  const onClick = React.useCallback(\r\n    (e: MouseEvent) => {\r\n      if (isSimActive) {\r\n        return;\r\n      }\r\n\r\n      if (e.defaultPrevented) {\r\n        return;\r\n      }\r\n\r\n      if (e.button !== 0) {\r\n        return;\r\n      }\r\n\r\n      e.preventDefault();\r\n\r\n      const modifiers = getModifiers(e);\r\n      const selectionMode = getSelectMode(modifiers);\r\n      dispatch(selectNodes(nodeId, selectionMode));\r\n    },\r\n    [dispatch, isSimActive, nodeId]\r\n  );\r\n\r\n  const onContextMenu = React.useCallback(\r\n    (e: React.MouseEvent) => {\r\n      if (e.defaultPrevented) {\r\n        return;\r\n      }\r\n      e.preventDefault();\r\n\r\n      const modifiers = getModifiers(e);\r\n      const selectionMode = getSelectMode(modifiers, \"set-if-unselected\");\r\n      dispatch(selectNodes(nodeId, selectionMode));\r\n      openContextMenu(e);\r\n    },\r\n    [dispatch, nodeId, openContextMenu]\r\n  );\r\n\r\n  const onDragStart = React.useCallback(\r\n    (e: MouseEvent) => {\r\n      const p = getCoords(e);\r\n      const modifiers = getModifiers(e);\r\n      dispatch(fieldDragStartNode(nodeId, p, modifiers));\r\n    },\r\n    [getCoords, dispatch, nodeId]\r\n  );\r\n\r\n  const onDragMove = React.useCallback(\r\n    (offset: Point, e: MouseEvent) => {\r\n      const p = getCoords(e);\r\n      const modifierKeys = getModifiers(e);\r\n      dispatch(fieldDragContinue(p, modifierKeys));\r\n    },\r\n    [dispatch, getCoords]\r\n  );\r\n\r\n  const onDragEnd = React.useCallback(\r\n    (offset: Point, e: MouseEvent) => {\r\n      const p = getCoords(e);\r\n      const modifiers = getModifiers(e);\r\n      dispatch(fieldDragEnd(p, modifiers));\r\n    },\r\n    [dispatch, getCoords]\r\n  );\r\n\r\n  const { startTracking } = useMouseTracking({\r\n    onClick,\r\n    onDragStart,\r\n    onDragMove,\r\n    onDragEnd,\r\n  });\r\n  const onMouseDown = React.useCallback(\r\n    (e: React.MouseEvent) => {\r\n      if (e.button !== 0) {\r\n        return;\r\n      }\r\n\r\n      if (e.defaultPrevented) {\r\n        return;\r\n      }\r\n      e.preventDefault();\r\n\r\n      startTracking(e);\r\n    },\r\n    [startTracking]\r\n  );\r\n\r\n  if (!def) {\r\n    return null;\r\n  }\r\n\r\n  let body: React.ReactNode;\r\n  let bounds: [number, number, number, number];\r\n  if (!def) {\r\n    body = (\r\n      <rect\r\n        x={x}\r\n        y={y}\r\n        width={50}\r\n        height={50}\r\n        fill={isSelected ? \"goldenrod\" : \"red\"}\r\n      />\r\n    );\r\n    bounds = [0, 0, 50, 50];\r\n  } else {\r\n    const { component: ElementComponent, hitPath } = def.visual;\r\n    body = (\r\n      <ElementComponent\r\n        circuitNodeId={nodeId}\r\n        isSelected={isSelected}\r\n        elementState={nodeState}\r\n      />\r\n    );\r\n    bounds = getBounds(hitPath);\r\n  }\r\n\r\n  const transform = x != 0 || y != 0 ? `translate(${x}, ${y})` : undefined;\r\n  return (\r\n    <g transform={transform}>\r\n      <g\r\n        className={cls(\"circuit-field-node\", isSelected && \"node-selected\")}\r\n        onMouseDown={onMouseDown}\r\n        onContextMenu={onContextMenu}\r\n      >\r\n        {body}\r\n      </g>\r\n      <NodeName nodeId={nodeId} bounds={bounds} />\r\n      {renderContextMenu(<NodeContextMenu nodeId={nodeId} />)}\r\n    </g>\r\n  );\r\n});\r\n\r\ninterface NodeNameProps extends NodeProps {\r\n  bounds: [number, number, number, number];\r\n}\r\nconst NodeName: React.FC<NodeNameProps> = React.memo(function NodeName({\r\n  nodeId,\r\n  bounds,\r\n}) {\r\n  const scale = useSelector(viewScaleSelector);\r\n  const nodeName = useSelector((s) => nodeNameFromNodeIdSelector(s, nodeId));\r\n\r\n  // FIXME: This is really rough, especially the y offset.\r\n  // There is a noticable jump in position between >1 and >1 scale.\r\n  const textScale = Math.max(0.7, scale);\r\n  let textYOffset = 15;\r\n  if (textScale > 1) {\r\n    textYOffset -= textScale * 2;\r\n  } else {\r\n    textYOffset += (1 / textScale) * 7;\r\n  }\r\n\r\n  if (!nodeName) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <text\r\n      fontSize={`${1.2 / textScale}em`}\r\n      className={interaction[\"text-unselectable\"]}\r\n      textAnchor=\"middle\"\r\n      x={bounds[0] + (bounds[2] - bounds[0]) / 2}\r\n      y={bounds[3] + textYOffset}\r\n    >\r\n      {nodeName}\r\n    </text>\r\n  );\r\n});\r\n\r\nexport default Node;\r\n","import { AppState } from \"@/store\";\r\n\r\nimport { getSimulatorNodeIdFromCircuitNodeIdPath } from \"@/services/simulator-graph/utils\";\r\n\r\nexport const nodeStateFromCircuitNodeIdSelector = (\r\n  state: AppState,\r\n  circuitNodeIdPath: string[]\r\n) => {\r\n  const simulatorNodeIdsByCircuitNodeId =\r\n    state.services.simulatorGraph.simulatorNodeIdsByCircuitNodeId;\r\n  const nodeStatesBySimulatorNodeId =\r\n    state.services.simulator.nodeStatesByNodeId;\r\n\r\n  const simulatorNodeId = getSimulatorNodeIdFromCircuitNodeIdPath(\r\n    simulatorNodeIdsByCircuitNodeId,\r\n    circuitNodeIdPath\r\n  );\r\n  if (!simulatorNodeId) {\r\n    return {};\r\n  }\r\n\r\n  return nodeStatesBySimulatorNodeId[simulatorNodeId];\r\n};\r\n","import Node from \"./Node\";\r\nexport * from \"./Node\";\r\nexport default Node;\r\n","import * as React from \"react\";\r\n\r\nimport useSelector from \"@/hooks/useSelector\";\r\n\r\nimport { nodeIdsForEditingCircuitSelector } from \"@/services/circuit-editor-view/selectors/nodes\";\r\n\r\nimport Node from \"./Node\";\r\n\r\nconst NodesLayer: React.FC = React.memo(function NodesLayer() {\r\n  const nodeIds = useSelector(nodeIdsForEditingCircuitSelector);\r\n\r\n  const nodeElements = nodeIds.map((nodeId) => {\r\n    return <Node key={nodeId} nodeId={nodeId} />;\r\n  });\r\n\r\n  return <g id=\"nodes-layer\">{nodeElements}</g>;\r\n});\r\nexport default NodesLayer;\r\n","import createCachedSelector from \"re-reselect\";\r\nimport flatMap from \"lodash/flatMap\";\r\nimport get from \"lodash/get\";\r\n\r\nimport { AppState } from \"@/store\";\r\n\r\nimport { Connection } from \"@/services/node-graph/types\";\r\nimport { SimulatorNodeIdMappingTreeItem } from \"@/services/simulator-graph/state\";\r\nimport { getSimulatorNodeIdFromCircuitNodeIdPath } from \"@/services/simulator-graph/utils\";\r\n\r\nexport const wireValueFromConnectionIdSelector = createCachedSelector(\r\n  (state: AppState, icNodePath: string[], connectionId: string) =>\r\n    state.services.nodeGraph.connectionsById[connectionId],\r\n  (state: AppState, icNodePath: string[]) => icNodePath,\r\n  (state: AppState) =>\r\n    state.services.simulatorGraph.simulatorNodeIdsByCircuitNodeId,\r\n  (state: AppState) => state.services.simulator.nodeOutputValuesByNodeId,\r\n  (\r\n    wire: Connection,\r\n    icNodePath: string[],\r\n    simulatorNodeIdsByCircuitNodeId: Record<\r\n      string,\r\n      SimulatorNodeIdMappingTreeItem\r\n    >,\r\n    outputVauesByNodeId: Record<string, Record<string, boolean>>\r\n  ) => {\r\n    if (!wire) {\r\n      return false;\r\n    }\r\n\r\n    const {\r\n      outputPin: { nodeId, pinId },\r\n    } = wire;\r\n\r\n    const simulatorNodeId = getSimulatorNodeIdFromCircuitNodeIdPath(\r\n      simulatorNodeIdsByCircuitNodeId,\r\n      [...icNodePath, nodeId]\r\n    );\r\n    if (!simulatorNodeId) {\r\n      return false;\r\n    }\r\n\r\n    return outputVauesByNodeId[simulatorNodeId]?.[pinId] || false;\r\n  }\r\n)(\r\n  (_: any, icNodePath: string[], connectionId: string) =>\r\n    icNodePath.join(\".\") + \"::\" + connectionId\r\n);\r\n","import * as React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  Point,\r\n  normalize,\r\n  pointSubtract,\r\n  dotProduct,\r\n  pointAdd,\r\n  scale,\r\n} from \"@/geometry\";\r\nimport { getModifiers } from \"@/modifier-keys\";\r\nimport { getSelectMode } from \"@/selection-mode\";\r\n\r\nimport useSelector from \"@/hooks/useSelector\";\r\nimport useMouseTracking from \"@/hooks/useMouseTracking\";\r\n\r\nimport { fieldDragStartNewJoint } from \"@/actions/field-drag-start-newjoint\";\r\nimport { fieldDragContinue } from \"@/actions/field-drag-continue\";\r\nimport { fieldDragEnd } from \"@/actions/field-drag-end\";\r\nimport { selectWires } from \"@/actions/select-wires\";\r\n\r\nimport {\r\n  wireJointPositionFromJointIdSelector,\r\n  wireStartPositionFromConnectionIdSelector,\r\n  wireEndPositionFromConnectionIdSelector,\r\n} from \"@/services/node-layout/selectors/wires\";\r\n\r\nimport { useEventMouseCoords } from \"../hooks/useMouseCoords\";\r\n\r\nexport interface WireSegmentProps {\r\n  connectionId: string;\r\n  startJointId: string | null;\r\n  endJointId: string | null;\r\n}\r\nconst WireSegment: React.FC<WireSegmentProps> = React.memo(\r\n  function WireSegment({ connectionId, startJointId, endJointId }) {\r\n    const dispatch = useDispatch();\r\n    const getMouseCoords = useEventMouseCoords();\r\n\r\n    const start = useSelector((state) => {\r\n      if (startJointId == null) {\r\n        return wireStartPositionFromConnectionIdSelector(state, connectionId);\r\n      }\r\n      return wireJointPositionFromJointIdSelector(state, startJointId);\r\n    });\r\n\r\n    const end = useSelector((state) => {\r\n      if (endJointId == null) {\r\n        return wireEndPositionFromConnectionIdSelector(state, connectionId);\r\n      }\r\n      return wireJointPositionFromJointIdSelector(state, endJointId);\r\n    });\r\n\r\n    const [mousePos, setMousePos] = React.useState<Point | null>(null);\r\n\r\n    const onMouseMove = React.useCallback(\r\n      (e: React.MouseEvent) => {\r\n        const p = getMouseCoords(e);\r\n        setMousePos(p);\r\n      },\r\n      [getMouseCoords]\r\n    );\r\n\r\n    const onMouseLeave = React.useCallback(() => {\r\n      setMousePos(null);\r\n    }, []);\r\n\r\n    const onDragStart = React.useCallback(\r\n      (e: MouseEvent) => {\r\n        const p = getMouseCoords(e);\r\n        const modifiers = getModifiers(e);\r\n        dispatch(\r\n          fieldDragStartNewJoint(connectionId, startJointId, p, modifiers)\r\n        );\r\n      },\r\n      [getMouseCoords, dispatch, connectionId, startJointId]\r\n    );\r\n\r\n    const onDragMove = React.useCallback(\r\n      (offset: Point, e: MouseEvent) => {\r\n        const p = getMouseCoords(e);\r\n        const modifiers = getModifiers(e);\r\n        dispatch(fieldDragContinue(p, modifiers));\r\n      },\r\n      [dispatch, getMouseCoords]\r\n    );\r\n\r\n    const onDragEnd = React.useCallback(\r\n      (e: MouseEvent) => {\r\n        const p = getMouseCoords(e);\r\n        const modifiers = getModifiers(e);\r\n        dispatch(fieldDragEnd(p, modifiers));\r\n      },\r\n      [dispatch, getMouseCoords]\r\n    );\r\n\r\n    const onClick = React.useCallback(\r\n      (e: MouseEvent) => {\r\n        const modifiers = getModifiers(e);\r\n        const mode = getSelectMode(modifiers);\r\n        dispatch(selectWires(connectionId, mode));\r\n      },\r\n      [connectionId, dispatch]\r\n    );\r\n\r\n    const { startTracking } = useMouseTracking({\r\n      onClick,\r\n      onDragStart,\r\n      onDragMove,\r\n      onDragEnd,\r\n    });\r\n\r\n    const onJointInsertMouseDown = React.useCallback(\r\n      (e: React.MouseEvent) => {\r\n        e.preventDefault();\r\n        startTracking(e);\r\n      },\r\n      [startTracking]\r\n    );\r\n\r\n    let insertJointPos: Point | undefined;\r\n    if (mousePos) {\r\n      const lineDir = normalize(pointSubtract(end, start));\r\n      const v = pointSubtract(mousePos, start);\r\n      const d = dotProduct(v, lineDir);\r\n      insertJointPos = pointAdd(start, scale(lineDir, d));\r\n    }\r\n\r\n    return (\r\n      <g onMouseMove={onMouseMove} onMouseLeave={onMouseLeave}>\r\n        <line x1={start.x} y1={start.y} x2={end.x} y2={end.y} strokeWidth={2} />\r\n        {insertJointPos && (\r\n          <circle\r\n            cx={insertJointPos.x}\r\n            cy={insertJointPos.y}\r\n            r={3}\r\n            stroke=\"none\"\r\n            fill=\"red\"\r\n            onMouseDown={onJointInsertMouseDown}\r\n          />\r\n        )}\r\n      </g>\r\n    );\r\n  }\r\n);\r\n\r\nexport default WireSegment;\r\n","import * as React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { Point } from \"@/geometry\";\r\nimport { getModifiers } from \"@/modifier-keys\";\r\nimport { getSelectMode } from \"@/selection-mode\";\r\n\r\nimport useSelector from \"@/hooks/useSelector\";\r\nimport useMouseTracking from \"@/hooks/useMouseTracking\";\r\n\r\nimport { wireJointPositionFromJointIdSelector } from \"@/services/node-layout/selectors/wires\";\r\nimport { isJointSelectedFromJointIdSelector } from \"@/services/selection/selectors/selection\";\r\n\r\nimport { selectWireJoints } from \"@/actions/select-wire-joints\";\r\nimport { fieldDragStartJoint } from \"@/actions/field-drag-start-joint\";\r\nimport { fieldDragEnd } from \"@/actions/field-drag-end\";\r\nimport { fieldDragContinue } from \"@/actions/field-drag-continue\";\r\n\r\nimport { useEventMouseCoords } from \"../hooks/useMouseCoords\";\r\n\r\nimport WireJointVisual from \"./WireJointVisual\";\r\n\r\ninterface WireJointProps {\r\n  jointId: string;\r\n}\r\n\r\nconst WireJoint: React.FC<WireJointProps> = React.memo(function WireJoint({\r\n  jointId,\r\n}) {\r\n  const getMouseCoords = useEventMouseCoords();\r\n  const dispatch = useDispatch();\r\n\r\n  const isSelected = useSelector((state) =>\r\n    isJointSelectedFromJointIdSelector(state, jointId)\r\n  );\r\n\r\n  const position = useSelector((state) =>\r\n    wireJointPositionFromJointIdSelector(state, jointId)\r\n  );\r\n  const onJointDragStart = React.useCallback(\r\n    (e: MouseEvent) => {\r\n      const p = getMouseCoords(e);\r\n      const modifiers = getModifiers(e);\r\n      dispatch(fieldDragStartJoint(jointId, p, modifiers));\r\n    },\r\n    [dispatch, getMouseCoords, jointId]\r\n  );\r\n\r\n  const onJointDragMove = React.useCallback(\r\n    (offset: Point, e: MouseEvent) => {\r\n      const p = getMouseCoords(e);\r\n      const modifiers = getModifiers(e);\r\n      dispatch(fieldDragContinue(p, modifiers));\r\n    },\r\n    [dispatch, getMouseCoords]\r\n  );\r\n\r\n  const onJointDragEnd = React.useCallback(\r\n    (offset: Point, e: MouseEvent) => {\r\n      const p = getMouseCoords(e);\r\n      const modifiers = getModifiers(e);\r\n      dispatch(fieldDragEnd(p, modifiers));\r\n    },\r\n    [dispatch, getMouseCoords]\r\n  );\r\n\r\n  const onClick = React.useCallback(\r\n    (e: MouseEvent) => {\r\n      const modifiers = getModifiers(e);\r\n      const mode = getSelectMode(modifiers);\r\n      dispatch(selectWireJoints(jointId, mode));\r\n    },\r\n    [dispatch, jointId]\r\n  );\r\n\r\n  const { startTracking: startMoveJointTracking } = useMouseTracking({\r\n    onClick,\r\n    onDragStart: onJointDragStart,\r\n    onDragMove: onJointDragMove,\r\n    onDragEnd: onJointDragEnd,\r\n  });\r\n\r\n  const mouseDown = React.useCallback(\r\n    (e: React.MouseEvent) => {\r\n      e.preventDefault();\r\n      startMoveJointTracking(e);\r\n    },\r\n    [startMoveJointTracking]\r\n  );\r\n\r\n  return (\r\n    <WireJointVisual\r\n      selected={isSelected}\r\n      x={position.x}\r\n      y={position.y}\r\n      onMouseDown={mouseDown}\r\n    />\r\n  );\r\n});\r\n\r\nexport default WireJoint;\r\n","import Wire from \"./Wire\";\r\nexport default Wire;\r\n","import * as React from \"react\";\r\n\r\nimport { cls } from \"@/utils\";\r\nimport useSelector from \"@/hooks/useSelector\";\r\n\r\nimport { wireJointIdsFromConnectionIdSelector } from \"@/services/node-layout/selectors/wires\";\r\nimport { isWireSelectedFromConnectionIdSelector } from \"@/services/selection/selectors/selection\";\r\nimport { wireValueFromConnectionIdSelector } from \"@/services/simulator/selectors/wires\";\r\nimport { editingCircuitNodeIdPathSelector } from \"@/services/circuit-editor-view/selectors/circuit\";\r\n\r\nimport WireSegment from \"../WireSegment\";\r\nimport WireJoint from \"../WireJoint\";\r\n\r\nimport styles from \"./Wire.module.css\";\r\n\r\nexport interface WireProps {\r\n  connectionId: string;\r\n}\r\n\r\nconst Wire: React.FC<WireProps> = React.memo(function Wire({ connectionId }) {\r\n  const editCircuitIdPath = useSelector(editingCircuitNodeIdPathSelector);\r\n\r\n  const jointIds = useSelector((state) =>\r\n    wireJointIdsFromConnectionIdSelector(state, connectionId)\r\n  );\r\n  const isPowered = useSelector((state) =>\r\n    wireValueFromConnectionIdSelector(state, editCircuitIdPath, connectionId)\r\n  );\r\n  const isSelected = useSelector((state) =>\r\n    isWireSelectedFromConnectionIdSelector(state, connectionId)\r\n  );\r\n\r\n  // We need one extra array entry for starting on the last jointId and ending at null (end of wire)\r\n  const segmentElements = [...jointIds, null].map((endJointId, index) => {\r\n    const startJointId = index > 0 ? jointIds[index - 1] : null;\r\n    return (\r\n      <WireSegment\r\n        key={index}\r\n        connectionId={connectionId}\r\n        startJointId={startJointId}\r\n        endJointId={endJointId}\r\n      />\r\n    );\r\n  });\r\n\r\n  const jointElements = jointIds.map((jointId) => (\r\n    <WireJoint key={jointId} jointId={jointId} />\r\n  ));\r\n\r\n  return (\r\n    <g\r\n      className={cls(\r\n        styles[\"wire\"],\r\n        isPowered && styles[\"powered\"],\r\n        isSelected && styles[\"selected\"]\r\n      )}\r\n    >\r\n      {segmentElements}\r\n      {jointElements}\r\n    </g>\r\n  );\r\n});\r\n\r\nexport default Wire;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wire\":\"wire--3TtqK\",\"powered\":\"powered--3lHhu\",\"selected\":\"selected--3qbV0\"};","import * as React from \"react\";\r\n\r\nimport useSelector from \"@/hooks/useSelector\";\r\n\r\nimport { connectionIdsForEditingCircuitSelector } from \"@/services/circuit-editor-view/selectors/nodes\";\r\n\r\nimport Wire from \"./Wire\";\r\n\r\nconst WiresLayer: React.FC = React.memo(function WiresLayer() {\r\n  const connectionIds = useSelector(connectionIdsForEditingCircuitSelector);\r\n  const connectorElements = connectionIds.map((connectionId) => (\r\n    <Wire key={connectionId} connectionId={connectionId} />\r\n  ));\r\n\r\n  return <g id=\"wires-layer\">{connectorElements}</g>;\r\n});\r\nexport default WiresLayer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"node-pin-output\":\"node-pin-output--Okd03\",\"is-drag-target\":\"is-drag-target--1_8nq\",\"node-pin-input\":\"node-pin-input--2bnnb\"};","import * as React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { cls } from \"@/utils\";\r\nimport { Point } from \"@/geometry\";\r\nimport { getModifiers } from \"@/modifier-keys\";\r\n\r\nimport useSelector from \"@/hooks/useSelector\";\r\nimport useMouseTracking from \"@/hooks/useMouseTracking\";\r\n\r\nimport { nodePinPositionFromNodePinSelector } from \"@/services/node-layout/selectors/node-pin-positions\";\r\nimport { pinDirectionFromNodePinSelector } from \"@/services/node-graph/selectors/pins\";\r\nimport { dragWireTargetPinSelector } from \"@/services/circuit-editor-ui/selectors/drag\";\r\n\r\nimport { fieldDragStartWire } from \"@/actions/field-drag-start-wire\";\r\nimport { fieldDragEnd } from \"@/actions/field-drag-end\";\r\nimport { fieldDragContinue } from \"@/actions/field-drag-continue\";\r\n\r\nimport { useEventMouseCoords } from \"../../hooks/useMouseCoords\";\r\n\r\nimport styles from \"./NodePin.module.css\";\r\n\r\nexport interface NodePinProps {\r\n  nodeId: string;\r\n  pinId: string;\r\n}\r\n\r\nconst NodePin: React.FC<NodePinProps> = React.memo(function NodePin({\r\n  nodeId,\r\n  pinId,\r\n}) {\r\n  const getMouseCoords = useEventMouseCoords();\r\n  const dispatch = useDispatch();\r\n\r\n  const position = useSelector((s) =>\r\n    nodePinPositionFromNodePinSelector(s, nodeId, pinId)\r\n  );\r\n  const direction = useSelector((s) =>\r\n    pinDirectionFromNodePinSelector(s, nodeId, pinId)\r\n  );\r\n\r\n  const dragTargetPin = useSelector(dragWireTargetPinSelector);\r\n\r\n  const onDragStart = React.useCallback(\r\n    (e) => {\r\n      const p = getMouseCoords(e);\r\n      dispatch(fieldDragStartWire(p, { nodeId, pinId }));\r\n    },\r\n    [dispatch, getMouseCoords, nodeId, pinId]\r\n  );\r\n\r\n  const onDragMove = React.useCallback(\r\n    (offset: Point, e: MouseEvent) => {\r\n      const p = getMouseCoords(e);\r\n      const modifierKeys = getModifiers(e);\r\n      dispatch(fieldDragContinue(p, modifierKeys));\r\n    },\r\n    [dispatch, getMouseCoords]\r\n  );\r\n\r\n  const onDragEnd = React.useCallback(\r\n    (offset: Point, e: MouseEvent) => {\r\n      const p = getMouseCoords(e);\r\n      const modifiers = getModifiers(e);\r\n      dispatch(fieldDragEnd(p, modifiers));\r\n    },\r\n    [dispatch, getMouseCoords]\r\n  );\r\n\r\n  const { startTracking } = useMouseTracking({\r\n    onDragStart,\r\n    onDragMove,\r\n    onDragEnd,\r\n  });\r\n\r\n  const onMouseDown = React.useCallback(\r\n    (e: React.MouseEvent) => {\r\n      if (e.button !== 0) {\r\n        return;\r\n      }\r\n\r\n      if (e.defaultPrevented) {\r\n        return;\r\n      }\r\n      e.preventDefault();\r\n\r\n      e.stopPropagation();\r\n\r\n      startTracking(e);\r\n    },\r\n    [startTracking]\r\n  );\r\n\r\n  if (!position) {\r\n    return null;\r\n  }\r\n\r\n  const isDragTarget =\r\n    dragTargetPin != null &&\r\n    dragTargetPin.nodeId === nodeId &&\r\n    dragTargetPin.pinId === pinId;\r\n\r\n  const { x, y } = position;\r\n\r\n  let pinVisual: JSX.Element;\r\n\r\n  if (direction === \"input\") {\r\n    pinVisual = (\r\n      <path\r\n        d={describeArc(x, y, 3, -45, 225)}\r\n        className={cls(\r\n          styles[\"node-pin-input\"],\r\n          isDragTarget && styles[\"is-drag-target\"]\r\n        )}\r\n      />\r\n    );\r\n  } else {\r\n    pinVisual = (\r\n      <circle\r\n        className={cls(\r\n          styles[\"node-pin-output\"],\r\n          isDragTarget && styles[\"is-drag-target\"]\r\n        )}\r\n        cx={x}\r\n        cy={y}\r\n        r={3}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <g>\r\n      {pinVisual}\r\n      <circle\r\n        stroke=\"none\"\r\n        fill=\"transparent\"\r\n        cx={x}\r\n        cy={y}\r\n        r={3}\r\n        onMouseDown={onMouseDown}\r\n      />\r\n    </g>\r\n  );\r\n});\r\n\r\nexport default NodePin;\r\n\r\n// Arc code from https://stackoverflow.com/questions/5736398/how-to-calculate-the-svg-path-for-an-arc-of-a-circle\r\nfunction describeArc(\r\n  x: number,\r\n  y: number,\r\n  radius: number,\r\n  startAngle: number,\r\n  endAngle: number\r\n): string {\r\n  const start = polarToCartesian(x, y, radius, endAngle);\r\n  const end = polarToCartesian(x, y, radius, startAngle);\r\n\r\n  const largeArcFlag = endAngle - startAngle <= 180 ? \"0\" : \"1\";\r\n\r\n  const d = [\r\n    \"M\",\r\n    start.x,\r\n    start.y,\r\n    \"A\",\r\n    radius,\r\n    radius,\r\n    0,\r\n    largeArcFlag,\r\n    0,\r\n    end.x,\r\n    end.y,\r\n  ].join(\" \");\r\n\r\n  return d;\r\n}\r\n\r\nfunction polarToCartesian(\r\n  centerX: number,\r\n  centerY: number,\r\n  radius: number,\r\n  angleInDegrees: number\r\n): Point {\r\n  const angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0;\r\n\r\n  return {\r\n    x: centerX + radius * Math.cos(angleInRadians),\r\n    y: centerY + radius * Math.sin(angleInRadians),\r\n  };\r\n}\r\n","import NodePin from \"./NodePin\";\r\nexport default NodePin;\r\n","import * as React from \"react\";\r\n\r\nimport useSelector from \"@/hooks/useSelector\";\r\n\r\nimport { nodeDefFromNodeIdSelector } from \"@/services/node-graph/selectors/node-def\";\r\n\r\nimport NodePin from \"./NodePin\";\r\n\r\nexport interface NodePinsProps {\r\n  nodeId: string;\r\n}\r\n\r\nconst NodePins: React.FC<NodePinsProps> = React.memo(function NodePins({\r\n  nodeId,\r\n}) {\r\n  const def = useSelector((state) => nodeDefFromNodeIdSelector(state, nodeId));\r\n\r\n  const pins = def?.pins ?? {};\r\n\r\n  const elements = Object.keys(pins).map((pinId) => (\r\n    <NodePin key={pinId} nodeId={nodeId} pinId={pinId} />\r\n  ));\r\n\r\n  return <>{elements}</>;\r\n});\r\n\r\nexport default NodePins;\r\n","import * as React from \"react\";\r\n\r\nimport useSelector from \"@/hooks/useSelector\";\r\n\r\nimport { nodeIdsForEditingCircuitSelector } from \"@/services/circuit-editor-view/selectors/nodes\";\r\n\r\nimport NodePins from \"./NodePins\";\r\n\r\nconst NodePinsLayer: React.FC = React.memo(function NodePinsLayer() {\r\n  const nodeIds = useSelector(nodeIdsForEditingCircuitSelector);\r\n\r\n  const elements = nodeIds.map((nodeId) => (\r\n    <NodePins key={nodeId} nodeId={nodeId} />\r\n  ));\r\n\r\n  return <g id=\"node-pins-layer\">{elements}</g>;\r\n});\r\n\r\nexport default NodePinsLayer;\r\n","import * as React from \"react\";\r\n\r\nimport useSelector from \"@/hooks/useSelector\";\r\n\r\nimport {\r\n  dragEndSelector,\r\n  dragModeSelector,\r\n  dragStartSelector,\r\n} from \"@/services/circuit-editor-ui/selectors/drag\";\r\n\r\nconst DragAttachWirePreviewLayer: React.FC = React.memo(\r\n  function DragAttachWirePreviewLayer() {\r\n    const dragMode = useSelector(dragModeSelector);\r\n    const dragStart = useSelector(dragStartSelector);\r\n    const dragEnd = useSelector(dragEndSelector);\r\n\r\n    if (dragMode != \"wire\" || !dragStart || !dragEnd) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <line\r\n        x1={dragStart.x}\r\n        y1={dragStart.y}\r\n        x2={dragEnd.x}\r\n        y2={dragEnd.y}\r\n        stroke=\"black\"\r\n        strokeWidth={1}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default DragAttachWirePreviewLayer;\r\n","import * as React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport Menu from \"@/components/Menus/Menu\";\r\nimport MenuItem from \"@/components/Menus/MenuItem\";\r\nimport MenuDivider from \"@/components/Menus/MenuDivider\";\r\n\r\nimport { selectionAlignToGrid } from \"@/actions/selection-align-to-grid\";\r\nimport { deleteSelection } from \"@/actions/selection-delete\";\r\n\r\nconst FieldContextMenu: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onAlignToGrid = React.useCallback(() => {\r\n    dispatch(selectionAlignToGrid());\r\n  }, [dispatch]);\r\n  const onDelete = React.useCallback(() => {\r\n    dispatch(deleteSelection());\r\n  }, [dispatch]);\r\n  return (\r\n    <Menu>\r\n      <MenuItem onClick={onAlignToGrid}>Align Selection To Grid</MenuItem>\r\n      <MenuDivider />\r\n      <MenuItem onClick={onDelete}>Delete Selected</MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default FieldContextMenu;\r\n","import CircuitField from \"./CircuitField\";\r\nexport default CircuitField;\r\n","import * as React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport useComponentSize from \"@rehooks/component-size\";\r\n\r\nimport { cls } from \"@/utils\";\r\nimport { calcSize } from \"@/geometry\";\r\n\r\nimport useSelector from \"@/hooks/useSelector\";\r\nimport { useNativeEvent } from \"@/hooks/useNativeEvent\";\r\n\r\nimport { fieldRectSelector } from \"@/services/node-layout/selectors/field\";\r\nimport { viewScaleSelector } from \"@/services/circuit-editor-view/selectors/view\";\r\n\r\nimport { fieldMouseLeave } from \"@/actions/field-mouse-leave\";\r\nimport { viewZoom } from \"@/actions/view-zoom\";\r\n\r\nimport { useContextMenu } from \"@/components/ContextMenu\";\r\n\r\nimport { FieldSvgElementProvider } from \"./contexts/fieldSvgElement\";\r\n\r\nimport DragNewNodeLayer from \"./components/DragNewNodeLayer\";\r\nimport DragNodePreviewLayer from \"./components/DragNodePreviewLayer\";\r\nimport DragJointPreviewLayer from \"./components/DragJointPreviewLayer\";\r\nimport DragSelectLayer from \"./components/DragSelectLayer\";\r\nimport GridBackground from \"./components/GridBackground\";\r\nimport NodesLayer from \"./components/NodesLayer\";\r\nimport WiresLayer from \"./components/WiresLayer\";\r\nimport NodePinsLayer from \"./components/NodePinsLayer\";\r\nimport DragAttachWirePreviewLayer from \"./components/DragAttachWirePreviewLayer\";\r\nimport FieldContextMenu from \"./components/FieldContextMenu\";\r\n\r\nimport styles from \"./CircuitField.module.css\";\r\n\r\nexport interface CircuitFieldProps {\r\n  className?: string;\r\n}\r\n\r\nconst CircuitField: React.FC<CircuitFieldProps> = ({ className }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const sizeRef = React.useRef<HTMLDivElement | null>(null);\r\n  const svgRef = React.useRef<SVGSVGElement>(null);\r\n  const scalerRef = React.useRef<SVGGElement>(null);\r\n\r\n  const { openContextMenu, renderContextMenu } = useContextMenu();\r\n\r\n  const { width: componentWidth, height: componentHeight } = useComponentSize(\r\n    sizeRef\r\n  );\r\n\r\n  const fieldRect = useSelector(fieldRectSelector);\r\n  const { width: fieldWidth, height: fieldHeight } = calcSize(fieldRect);\r\n\r\n  const viewScale = useSelector(viewScaleSelector);\r\n\r\n  const width = Math.max(componentWidth, fieldWidth * viewScale);\r\n  const height = Math.max(componentHeight, fieldHeight * viewScale);\r\n\r\n  const onMouseDown = React.useCallback(() => {\r\n    svgRef.current?.focus();\r\n  }, []);\r\n\r\n  const onMouseLeave = React.useCallback(() => {\r\n    dispatch(fieldMouseLeave());\r\n  }, [dispatch]);\r\n\r\n  const onContextMenu = React.useCallback(\r\n    (e: React.MouseEvent) => {\r\n      if (e.defaultPrevented) {\r\n        return;\r\n      }\r\n      e.preventDefault();\r\n      openContextMenu(e);\r\n    },\r\n    [openContextMenu]\r\n  );\r\n\r\n  const onWheel = React.useCallback(\r\n    (e: WheelEvent) => {\r\n      if (e.defaultPrevented) {\r\n        return;\r\n      }\r\n\r\n      if (e.ctrlKey) {\r\n        dispatch(viewZoom(e.deltaY > 0 ? -1 : 1));\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  // React listens to the root listener for all events,\r\n  //  and chrome assumes the root event listener for mouse events\r\n  //  never wants to preventDefault.\r\n  // We need to take a local event listener and mark it as not passive.\r\n  // https://github.com/facebook/react/issues/14856\r\n  useNativeEvent(sizeRef, \"wheel\", onWheel, { passive: false });\r\n\r\n  return (\r\n    // svg seems to have an implicit bottom margin against its parent div.\r\n    //  Wrapping it in a div of the same size fixes it.\r\n    <div className={cls(\"circuit-field\", styles[\"circuit-field\"], className)}>\r\n      <div className={styles[\"circuit-field-scrollarea\"]}>\r\n        <div ref={sizeRef} style={{ width: \"100%\", height: \"100%\" }}>\r\n          <svg\r\n            tabIndex={-1}\r\n            ref={svgRef}\r\n            width={width}\r\n            height={height}\r\n            onMouseDown={onMouseDown}\r\n            onMouseLeave={onMouseLeave}\r\n            onContextMenu={onContextMenu}\r\n          >\r\n            <GridBackground />\r\n            <g\r\n              ref={scalerRef}\r\n              transform-origin=\"0 0\"\r\n              transform={`scale(${viewScale})`}\r\n            >\r\n              <FieldSvgElementProvider svgRef={svgRef} scalerRef={scalerRef}>\r\n                <DragSelectLayer />\r\n                <NodesLayer />\r\n                <WiresLayer />\r\n                <NodePinsLayer />\r\n                <DragAttachWirePreviewLayer />\r\n                <DragNodePreviewLayer />\r\n                <DragJointPreviewLayer />\r\n                <DragNewNodeLayer />\r\n              </FieldSvgElementProvider>\r\n            </g>\r\n          </svg>\r\n        </div>\r\n      </div>\r\n      {renderContextMenu(<FieldContextMenu />)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CircuitField;\r\n","import * as React from \"react\";\r\n\r\nexport function useNativeEvent<\r\n  T extends GlobalEventHandlers,\r\n  K extends keyof GlobalEventHandlersEventMap\r\n>(\r\n  ref: React.RefObject<T | null>,\r\n  type: K,\r\n  listener: (\r\n    this: GlobalEventHandlers,\r\n    ev: GlobalEventHandlersEventMap[K]\r\n  ) => any,\r\n  options?: boolean | AddEventListenerOptions\r\n) {\r\n  React.useEffect(() => {\r\n    if (!ref.current) {\r\n      return;\r\n    }\r\n\r\n    // De-reference the target so we remove from the right element.\r\n    const listenTarget = ref.current;\r\n\r\n    listenTarget.addEventListener(type, listener, options);\r\n    return () => {\r\n      listenTarget.removeEventListener(type, listener, options);\r\n    };\r\n  }, [type, listener, ref, options]);\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"circuit-field\":\"circuit-field--3PQBN\",\"circuit-field-scrollarea\":\"circuit-field-scrollarea--vyu82\"};","import { keyboardCommandModifier } from \"@/runtime-env\";\r\n\r\nexport const KEYMAP_SIM_STEP = \"keymap:CircuitEditor/SimStep\" as const;\r\nexport const KEYMAP_SIM_FASTFORWARD = \"keymap:CircuitEditor/SimFastForward\" as const;\r\nexport const KEYMAP_SELECT_ALL = \"keymap:CircuitEditor/SelectAll\" as const;\r\nexport const KEYMAP_COPY = \"keymap:CircuitEditor/Copy\" as const;\r\nexport const KEYMAP_PASTE = \"keymap:CircuitEditor/Paste\" as const;\r\nexport const KEYMAP_DELETE = \"keymap:CircuitEditor/Delete\" as const;\r\nexport const KEYMAP_UNDO = \"keymap:CircuitEditor/Undo\" as const;\r\nexport const KEYMAP_REDO = \"keymap:CircuitEditor/Redo\" as const;\r\n\r\nconst keymap = {\r\n  [KEYMAP_SIM_STEP]: \"space\",\r\n  [KEYMAP_SIM_FASTFORWARD]: \"shift+space\",\r\n  [KEYMAP_SELECT_ALL]: `${keyboardCommandModifier}+a`,\r\n  [KEYMAP_COPY]: `${keyboardCommandModifier}+c`,\r\n  [KEYMAP_PASTE]: `${keyboardCommandModifier}+v`,\r\n  [KEYMAP_DELETE]: [\"backspace\", \"del\"],\r\n  [KEYMAP_UNDO]: `${keyboardCommandModifier}+z`,\r\n  [KEYMAP_REDO]: [\r\n    `${keyboardCommandModifier}+y`,\r\n    `${keyboardCommandModifier}+shift+z`,\r\n  ],\r\n};\r\nexport default keymap;\r\n\r\nexport type KeymapKeys = keyof typeof keymap;\r\nexport type KeymapHandler = Record<KeymapKeys, HotkeyHandler>;\r\n","import * as React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { HotKeys } from \"react-hotkeys\";\r\nimport { AnyAction } from \"redux\";\r\n\r\nimport { cls } from \"@/utils\";\r\n\r\nimport sizing from \"@/styles/sizing.module.css\";\r\nimport flex from \"@/styles/flex.module.css\";\r\n\r\nimport { tickSim } from \"@/actions/sim-tick\";\r\nimport { fastForwardSim } from \"@/actions/sim-fastforward\";\r\nimport { paste } from \"@/actions/clipboard-paste\";\r\nimport { copySelection } from \"@/actions/selection-copy\";\r\nimport { deleteSelection } from \"@/actions/selection-delete\";\r\nimport { selectAll } from \"@/actions/select-all\";\r\nimport { undo } from \"@/actions/undo\";\r\nimport { redo } from \"@/actions/redo\";\r\n\r\nimport CircuitNodeBreadcrumb from \"@/components/CircuitNodeBreadcrumb\";\r\nimport CircuitField from \"@/components/CircuitField\";\r\n\r\nimport keymap, {\r\n  KeymapHandler,\r\n  KEYMAP_SIM_STEP,\r\n  KEYMAP_SIM_FASTFORWARD,\r\n  KEYMAP_COPY,\r\n  KEYMAP_PASTE,\r\n  KEYMAP_DELETE,\r\n  KEYMAP_SELECT_ALL,\r\n  KEYMAP_UNDO,\r\n  KEYMAP_REDO,\r\n} from \"./keymap\";\r\n\r\nimport { WindowProps } from \"../window-props\";\r\n\r\nconst CircuitFieldWindow: React.FC<WindowProps> = ({ className }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const keyHandlers = React.useMemo(() => {\r\n    function createEventDispatcher(action: AnyAction): HotkeyHandler {\r\n      return (e?: KeyboardEvent) => {\r\n        if (e) {\r\n          if (e.defaultPrevented) {\r\n            return;\r\n          }\r\n          e.preventDefault();\r\n        }\r\n        dispatch(action);\r\n      };\r\n    }\r\n    const keyHandlers: KeymapHandler = {\r\n      [KEYMAP_SIM_STEP]: createEventDispatcher(tickSim(1)),\r\n      [KEYMAP_SIM_FASTFORWARD]: createEventDispatcher(fastForwardSim()),\r\n      [KEYMAP_SELECT_ALL]: createEventDispatcher(selectAll()),\r\n      [KEYMAP_COPY]: createEventDispatcher(copySelection()),\r\n      [KEYMAP_PASTE]: createEventDispatcher(paste()),\r\n      [KEYMAP_DELETE]: createEventDispatcher(deleteSelection()),\r\n      [KEYMAP_UNDO]: createEventDispatcher(undo()),\r\n      [KEYMAP_REDO]: createEventDispatcher(redo()),\r\n    };\r\n    return keyHandlers;\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <HotKeys keyMap={keymap} handlers={keyHandlers} component={FillParent}>\r\n      <div\r\n        className={cls(\r\n          \"circuit-field-view\",\r\n          sizing[\"fill-parent\"],\r\n          flex[\"flex-column\"],\r\n          className\r\n        )}\r\n      >\r\n        <CircuitNodeBreadcrumb />\r\n        <CircuitField\r\n          className={cls(sizing[\"fill-parent\"], flex[\"flexitem-shrink\"])}\r\n        />\r\n      </div>\r\n    </HotKeys>\r\n  );\r\n};\r\n\r\nconst FillParent: React.FC = ({ children, ...props }) => {\r\n  return (\r\n    <div {...props} className={sizing[\"fill-parent\"]}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CircuitFieldWindow;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"selection-list\":\"selection-list--3yujH\",\"selection-list-item\":\"selection-list-item--errDr\",\"selection-list-item--selected\":\"selection-list-item--selected--3MkqB\",\"selection-list-item-content\":\"selection-list-item-content--321YU\"};","import * as React from \"react\";\r\n\r\nimport { cls } from \"@/utils\";\r\n\r\nimport interaction from \"@/styles/interaction.module.css\";\r\n\r\nimport styles from \"./SelectionList.module.css\";\r\n\r\nexport interface SelectionListItem {\r\n  value: string;\r\n  label: React.ReactNode;\r\n  isSelected?: boolean;\r\n}\r\n\r\nexport interface SelectionListProps {\r\n  className?: string;\r\n  items: SelectionListItem[];\r\n  onItemSelected(value: string): void;\r\n}\r\n\r\nconst SelectionList: React.FC<SelectionListProps> = ({\r\n  className,\r\n  items,\r\n  onItemSelected,\r\n}) => {\r\n  return (\r\n    <ul className={cls(\"selection-list\", styles[\"selection-list\"], className)}>\r\n      {items.map((item) => (\r\n        <SelectionListItemNode\r\n          key={item.value}\r\n          {...item}\r\n          onItemSelected={onItemSelected}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SelectionList;\r\n\r\ninterface SelectionListItemNodeProps extends SelectionListItem {\r\n  onItemSelected(value: string): void;\r\n}\r\n\r\nconst SelectionListItemNode: React.FC<SelectionListItemNodeProps> = ({\r\n  value,\r\n  label,\r\n  isSelected,\r\n  onItemSelected,\r\n}) => {\r\n  const onClick = React.useCallback(\r\n    (e: React.MouseEvent) => {\r\n      if (e.defaultPrevented) {\r\n        return;\r\n      }\r\n\r\n      e.preventDefault();\r\n      onItemSelected(value);\r\n    },\r\n    [onItemSelected, value]\r\n  );\r\n\r\n  return (\r\n    <li\r\n      className={cls(\r\n        \"selection-list-item\",\r\n        styles[\"selection-list-item\"],\r\n        isSelected && styles[\"selection-list-item--selected\"]\r\n      )}\r\n      onClick={onClick}\r\n    >\r\n      <div\r\n        className={cls(\r\n          styles[\"selection-list-item-content\"],\r\n          interaction[\"text-unselectable\"]\r\n        )}\r\n      >\r\n        {label}\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n","import SelectionList from \"./SelectionList\";\r\nexport * from \"./SelectionList\";\r\nexport default SelectionList;\r\n","import * as React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { cls } from \"@/utils\";\r\n\r\nimport sizing from \"@/styles/sizing.module.css\";\r\n\r\nimport useSelector from \"@/hooks/useSelector\";\r\n\r\nimport { deleteCircuit } from \"@/actions/circuit-delete\";\r\nimport { viewCircuit } from \"@/actions/circuit-view\";\r\nimport { addCircuit } from \"@/actions/circuit-add\";\r\nimport { renameCircuit } from \"@/actions/circuit-rename\";\r\n\r\nimport { editingCircuitIdSelector } from \"@/services/circuit-editor-view/selectors/circuit\";\r\nimport {\r\n  circuitNameFromIdSelector,\r\n  circuitNamesByIdSelector,\r\n} from \"@/services/circuits/selectors/circuits\";\r\nimport { ROOT_CIRCUIT_ID } from \"@/services/circuits/constants\";\r\n\r\nimport { useContextMenu } from \"@/components/ContextMenu\";\r\nimport Menu from \"@/components/Menus/Menu\";\r\nimport MenuItem from \"@/components/Menus/MenuItem\";\r\nimport MenuDivider from \"@/components/Menus/MenuDivider\";\r\nimport SelectionList, { SelectionListItem } from \"@/components/SelectionList\";\r\nimport AtomicTextInput from \"@/components/AtomicTextInput\";\r\n\r\nimport { WindowProps } from \"../window-props\";\r\n\r\nimport styles from \"./CircuitsTreeWindow.module.css\";\r\nimport EditableText from \"@/components/EditableText\";\r\n\r\nconst CircuitsTreeWindow: React.FC<WindowProps> = ({ className }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const editingCircuitId = useSelector(editingCircuitIdSelector);\r\n  const circuitNamesById = useSelector(circuitNamesByIdSelector);\r\n\r\n  const { openContextMenu, renderContextMenu } = useContextMenu();\r\n\r\n  const onCircuitSelected = React.useCallback(\r\n    (circuitId: string) => {\r\n      dispatch(viewCircuit(circuitId));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const onContextMenu = React.useCallback(\r\n    (e: React.MouseEvent<HTMLDivElement>) => {\r\n      e.preventDefault();\r\n      openContextMenu(e);\r\n    },\r\n    [openContextMenu]\r\n  );\r\n\r\n  const listItems: SelectionListItem[] = React.useMemo(\r\n    () =>\r\n      Object.keys(circuitNamesById).map((circuitId) => {\r\n        return {\r\n          value: circuitId,\r\n          label: <CircuitTreeNodeCircuitLabel circuitId={circuitId} />,\r\n          isSelected: circuitId === editingCircuitId,\r\n        };\r\n      }),\r\n    [circuitNamesById, editingCircuitId]\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className={cls(styles.circuitstree, className)}\r\n      onContextMenu={onContextMenu}\r\n    >\r\n      <SelectionList\r\n        className={sizing[\"fill-parent\"]}\r\n        items={listItems}\r\n        onItemSelected={onCircuitSelected}\r\n      />\r\n      {renderContextMenu(<CircuitTreeContextMenu />)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CircuitsTreeWindow;\r\n\r\ninterface CircuitTreeNodeLabelProps {\r\n  circuitId: string;\r\n}\r\n\r\nconst CircuitTreeNodeCircuitLabel: React.FC<CircuitTreeNodeLabelProps> = ({\r\n  circuitId,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const circuitName = useSelector((state) =>\r\n    circuitNameFromIdSelector(state, circuitId)\r\n  );\r\n  const [isRenaming, setIsRenaming] = React.useState(false);\r\n\r\n  const { openContextMenu, renderContextMenu } = useContextMenu();\r\n\r\n  const onRequestRename = React.useCallback(() => {\r\n    if (circuitId === ROOT_CIRCUIT_ID) {\r\n      return;\r\n    }\r\n    setIsRenaming(true);\r\n  }, [circuitId]);\r\n\r\n  const onCancelRename = React.useCallback(() => {\r\n    setIsRenaming(false);\r\n  }, []);\r\n\r\n  const onRename = React.useCallback(\r\n    (newName) => {\r\n      dispatch(renameCircuit(circuitId, newName));\r\n      setIsRenaming(false);\r\n    },\r\n    [circuitId, dispatch]\r\n  );\r\n\r\n  const onDelete = React.useCallback(\r\n    (e: React.MouseEvent) => {\r\n      e.preventDefault();\r\n      dispatch(deleteCircuit(circuitId));\r\n    },\r\n    [dispatch, circuitId]\r\n  );\r\n\r\n  const onContextMenu = React.useCallback(\r\n    (e: React.MouseEvent<HTMLElement>) => {\r\n      if (circuitId === ROOT_CIRCUIT_ID) {\r\n        return;\r\n      }\r\n\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      openContextMenu(e);\r\n    },\r\n    [circuitId, openContextMenu]\r\n  );\r\n\r\n  return (\r\n    <div\r\n      style={{ width: \"100%\" }}\r\n      onContextMenu={onContextMenu}\r\n      onDoubleClick={onRequestRename}\r\n    >\r\n      <EditableText\r\n        defaultValue={circuitName}\r\n        isEditing={isRenaming}\r\n        onRequestEdit={onRequestRename}\r\n        onCommit={onRename}\r\n        onCancel={onCancelRename}\r\n      />\r\n      {renderContextMenu(\r\n        <Menu>\r\n          <MenuItem onClick={onRequestRename}>Rename Circuit</MenuItem>\r\n          <MenuDivider />\r\n          <MenuItem onClick={onDelete}>Delete Circuit</MenuItem>\r\n        </Menu>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CircuitTreeContextMenu: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const onNewCircuit = React.useCallback(() => {\r\n    dispatch(addCircuit());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Menu>\r\n      <MenuItem onClick={onNewCircuit}>New Circuit</MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n","import CircuitsTreeWindow from \"./CircuitsTreeWindow\";\r\nexport default CircuitsTreeWindow;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"circuitstree\":\"circuitstree--1eZ0Q\"};","// extracted by mini-css-extract-plugin\nexport default {\"node-tray\":\"node-tray--1uIvj\",\"node-tray-elements\":\"node-tray-elements--KiJGM\",\"node-tray-item\":\"node-tray-item--2_AyH\",\"node-tray-item-preview\":\"node-tray-item-preview--2QFhF\"};","import * as React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport getBounds from \"svg-path-bounds\";\r\n\r\nimport { cls } from \"@/utils\";\r\n\r\nimport interaction from \"@/styles/interaction.module.css\";\r\n\r\nimport { MODIFIER_KEYS_NONE } from \"@/modifier-keys\";\r\n\r\nimport useMouseTracking from \"@/hooks/useMouseTracking\";\r\nimport useSelector from \"@/hooks/useSelector\";\r\n\r\nimport {\r\n  nodeDefinitionFromTypeSelector,\r\n  nodeDefinitionsSelector,\r\n} from \"@/services/node-types/selectors/node-types\";\r\n\r\nimport { addNode } from \"@/actions/node-add\";\r\nimport { fieldDragStartNewNode } from \"@/actions/field-drag-start-newnode\";\r\nimport { fieldDragEnd } from \"@/actions/field-drag-end\";\r\n\r\nimport { WindowProps } from \"../window-props\";\r\n\r\nimport styles from \"./NodeTrayWindow.module.css\";\r\n\r\nconst NodeTrayWindow: React.FC<WindowProps> = ({ className }) => {\r\n  const nodeDefinitions = useSelector(nodeDefinitionsSelector);\r\n  const nodes = nodeDefinitions.map((def) => {\r\n    return <TrayNode key={def.type} nodeType={def.type} />;\r\n  });\r\n\r\n  return (\r\n    <div className={cls(styles[\"node-tray\"], className)}>\r\n      <ul className={styles[\"node-tray-elements\"]}>{nodes}</ul>\r\n    </div>\r\n  );\r\n};\r\nexport default NodeTrayWindow;\r\n\r\ninterface TrayNodeProps {\r\n  nodeType: string;\r\n}\r\nconst TrayNode: React.FC<TrayNodeProps> = ({ nodeType }) => {\r\n  const dispatch = useDispatch();\r\n  const onClick = React.useCallback(\r\n    (e: MouseEvent) => {\r\n      if (e.defaultPrevented) {\r\n        return;\r\n      }\r\n      e.preventDefault();\r\n      dispatch(addNode(nodeType));\r\n    },\r\n    [dispatch, nodeType]\r\n  );\r\n\r\n  const onDragStart = React.useCallback(() => {\r\n    dispatch(fieldDragStartNewNode(nodeType));\r\n  }, [dispatch, nodeType]);\r\n\r\n  const onDragEnd = React.useCallback(() => {\r\n    // We do not know the point from here, and selection mode is irrelevant.\r\n    dispatch(fieldDragEnd({ x: -1, y: -1 }, MODIFIER_KEYS_NONE));\r\n  }, [dispatch]);\r\n\r\n  const { startTracking } = useMouseTracking({\r\n    onClick,\r\n    onDragStart,\r\n    onDragEnd,\r\n  });\r\n\r\n  const onMouseDown = React.useCallback(\r\n    (e: React.MouseEvent) => {\r\n      if (e.defaultPrevented) {\r\n        return;\r\n      }\r\n\r\n      e.preventDefault();\r\n      startTracking(e);\r\n    },\r\n    [startTracking]\r\n  );\r\n\r\n  const def = useSelector((state) =>\r\n    nodeDefinitionFromTypeSelector(state, nodeType)\r\n  );\r\n\r\n  let NodeTrayComponent: React.ComponentType;\r\n  let displayName = nodeType;\r\n  let viewBox = \"0 0 50 50\";\r\n  if (def) {\r\n    const { trayComponent, component, hitPath } = def.visual;\r\n    if (trayComponent) {\r\n      NodeTrayComponent = trayComponent;\r\n    } else {\r\n      NodeTrayComponent = () => {\r\n        const Component = component;\r\n        return <Component elementState={{}} />;\r\n      };\r\n      const bounds = getBounds(hitPath);\r\n      viewBox = bounds.join(\" \");\r\n    }\r\n    displayName = def.displayName;\r\n  } else {\r\n    NodeTrayComponent = () => <rect fill=\"red\" x1={0} y1={0} x2={50} y2={50} />;\r\n  }\r\n\r\n  /* FIXME: Settle on a decent size and shrink overly large nodes to fit */\r\n  return (\r\n    <li className={styles[\"node-tray-item\"]} onMouseDown={onMouseDown}>\r\n      <span className={styles[\"node-tray-item-preview\"]}>\r\n        <svg width={30} height={30} viewBox={viewBox}>\r\n          <NodeTrayComponent />\r\n        </svg>\r\n      </span>\r\n      <span className={interaction[\"text-unselectable\"]}>{displayName}</span>\r\n    </li>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\n\r\nimport { cls } from \"@/utils\";\r\n\r\nimport sizing from \"@/styles/sizing.module.css\";\r\n\r\nimport Tessel, { TesselValue, TesselWindowItem } from \"@/components/Tessel\";\r\n\r\nimport CircuitFieldWindow from \"./windows/CircuitFieldWindow\";\r\nimport CircuitsTreeWindow from \"./windows/CircuitsTreeWindow\";\r\nimport NodeTrayWindow from \"./windows/NodeTrayWindow\";\r\n\r\nconst WindowsById: Record<string, React.ComponentType> = {\r\n  \"node-tray\": NodeTrayWindow,\r\n  \"circuit-field\": CircuitFieldWindow,\r\n  \"circuits-list\": CircuitsTreeWindow,\r\n};\r\n\r\nfunction renderWindow(window: TesselWindowItem): React.ReactElement | null {\r\n  const Component = WindowsById[window.windowId];\r\n  if (!Component) {\r\n    return null;\r\n  }\r\n  return <Component {...window.windowProps} />;\r\n}\r\n\r\nconst CircuitEditorPage: React.FC = () => {\r\n  const [tesselItems, setTesselItems] = React.useState<TesselValue>({\r\n    direction: \"row\",\r\n    division: {\r\n      firstSize: 200,\r\n    },\r\n    first: {\r\n      direction: \"column\",\r\n      division: 30,\r\n      first: \"circuits-list\",\r\n      second: \"node-tray\",\r\n    },\r\n    second: \"circuit-field\",\r\n  });\r\n\r\n  return (\r\n    <Tessel\r\n      className={cls(\"circuit-editor\", sizing[\"fill-parent\"])}\r\n      rootItem={tesselItems}\r\n      onLayoutChange={setTesselItems}\r\n      renderWindow={renderWindow}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CircuitEditorPage;\r\n","import CircuitEditorPage from \"./CircuitEditorPage\";\r\nexport default CircuitEditorPage;\r\n","import { importProjectLink } from \"@/actions/project-import-link\";\r\nimport * as React from \"react\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { RouteChildrenProps } from \"react-router-dom\";\r\n\r\nconst ProjectImporterPage: React.FC<RouteChildrenProps> = ({ location }) => {\r\n  const dispatch = useDispatch();\r\n  const [importError, setImportError] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    let searchParams: URLSearchParams;\r\n    try {\r\n      searchParams = new URLSearchParams(location.search);\r\n    } catch (e) {\r\n      setImportError(true);\r\n      return;\r\n    }\r\n\r\n    const data = searchParams.get(\"data\");\r\n    if (!data) {\r\n      setImportError(true);\r\n      return;\r\n    }\r\n\r\n    dispatch(importProjectLink(data));\r\n\r\n    // This is an effect, these are not dependencies.  Stop warning me about this.\r\n    // We only want to run on page load.\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // TODO: better styling.\r\n\r\n  if (importError) {\r\n    // TODO: Better error message\r\n    return <div>Failed to import project</div>;\r\n  }\r\n\r\n  return <div>Importing Project...</div>;\r\n};\r\n\r\nexport default ProjectImporterPage;\r\n","import ProjectImporterPage from \"./ProjectImporterPage\";\r\nexport default ProjectImporterPage;\r\n","import * as React from \"react\";\r\n\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport CircuitEditorPage from \"@/pages/CircuitEditorPage\";\r\nimport ProjectImporterPage from \"@/pages/ProjectImporterPage\";\r\n\r\nconst Routes: React.FC = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={CircuitEditorPage} />\r\n      <Route exact path=\"/import\" component={ProjectImporterPage} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import * as React from \"react\";\r\nimport { Options } from \"@popperjs/core\";\r\n\r\nimport Popover from \"./Popover\";\r\nimport { MenuCloseContextProvider } from \"./Menus/MenuCloseContext\";\r\n\r\nexport interface AutoPopoverProps {\r\n  content: JSX.Element;\r\n  placement?: Options[\"placement\"];\r\n}\r\n\r\nconst AutoPopover: React.FC<AutoPopoverProps> = ({\r\n  content,\r\n  placement,\r\n  children,\r\n}) => {\r\n  const anchorEl = React.useRef<HTMLDivElement | null>(null);\r\n  const [open, setOpen] = React.useState(false);\r\n  const onClick = React.useCallback(() => {\r\n    setOpen(true);\r\n  }, []);\r\n  const onClose = React.useCallback(() => {\r\n    setOpen(false);\r\n  }, []);\r\n\r\n  return (\r\n    <MenuCloseContextProvider value={onClose}>\r\n      <div ref={anchorEl} onClick={onClick}>\r\n        {children}\r\n      </div>\r\n      <Popover\r\n        anchorEl={anchorEl.current}\r\n        isOpen={open}\r\n        placement={placement}\r\n        onRequestClose={onClose}\r\n      >\r\n        {open && content}\r\n      </Popover>\r\n    </MenuCloseContextProvider>\r\n  );\r\n};\r\n\r\nexport default AutoPopover;\r\n","import * as React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { AnyAction } from \"redux\";\r\n\r\nexport function useAction(actionCreator: () => AnyAction): () => AnyAction;\r\nexport function useAction<Args>(\r\n  actionCreator: (...args: Args[]) => AnyAction\r\n): (...args: Args[]) => AnyAction;\r\nexport function useAction<A0, Args>(\r\n  actionCreator: (a0: A0, ...args: Args[]) => AnyAction,\r\n  a0: A0\r\n): (...args: Args[]) => AnyAction;\r\nexport function useAction(\r\n  actionCreator: (...args: any[]) => AnyAction,\r\n  ...preBind: any[]\r\n): (...args: any[]) => AnyAction {\r\n  const dispatch = useDispatch();\r\n  return React.useCallback(\r\n    (...args: any[]) => {\r\n      const action = actionCreator(...[...preBind, ...args]);\r\n      if (action) {\r\n        dispatch(action);\r\n      }\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [dispatch, actionCreator, ...preBind]\r\n  ) as any;\r\n}\r\n","import * as React from \"react\";\r\n\r\nimport { useAction } from \"@/hooks/useAction\";\r\nimport { newProject } from \"@/actions/project-new\";\r\nimport { saveProject } from \"@/actions/project-save\";\r\nimport { loadProject } from \"@/actions/project-load\";\r\nimport { exportProjectLink } from \"@/actions/project-export-link\";\r\n\r\nimport Menu from \"./Menus/Menu\";\r\nimport MenuItem from \"./Menus/MenuItem\";\r\nimport MenuDivider from \"./Menus/MenuDivider\";\r\n\r\nconst FileMenu: React.FC = () => {\r\n  const onNewProject = useAction(newProject);\r\n  const onSaveProject = useAction(saveProject);\r\n  const onLoadProject = useAction(loadProject);\r\n  const onExportLink = useAction(exportProjectLink);\r\n\r\n  return (\r\n    <Menu>\r\n      <MenuItem onClick={onNewProject}>New</MenuItem>\r\n      <MenuDivider />\r\n      <MenuItem onClick={onLoadProject}>Load</MenuItem>\r\n      <MenuItem onClick={onSaveProject}>Save</MenuItem>\r\n      <MenuDivider />\r\n      <MenuItem onClick={onExportLink}>Export Link</MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default FileMenu;\r\n","import { AppState } from \"@/store\";\r\n\r\nexport const canUndoSelector = (state: AppState) =>\r\n  state.undo.undoStack.length > 0;\r\nexport const canRedoSelector = (state: AppState) =>\r\n  state.undo.redoStack.length > 0;\r\n","import * as React from \"react\";\r\n\r\nimport { keyboardCommandModifier } from \"@/runtime-env\";\r\n\r\nimport { useAction } from \"@/hooks/useAction\";\r\nimport useSelector from \"@/hooks/useSelector\";\r\n\r\nimport { canRedoSelector, canUndoSelector } from \"@/undo/selectors\";\r\n\r\nimport { undo } from \"@/actions/undo\";\r\nimport { redo } from \"@/actions/redo\";\r\n\r\nimport Menu from \"./Menus/Menu\";\r\nimport MenuItem from \"./Menus/MenuItem\";\r\n\r\nconst EditMenu: React.FC = () => {\r\n  const canUndo = useSelector(canUndoSelector);\r\n  const onUndo = useAction(undo);\r\n  const canRedo = useSelector(canRedoSelector);\r\n  const onRedo = useAction(redo);\r\n\r\n  return (\r\n    <Menu>\r\n      <MenuItem\r\n        disabled={!canUndo}\r\n        secondary={`${keyboardCommandModifier}+z`}\r\n        onClick={onUndo}\r\n      >\r\n        Undo\r\n      </MenuItem>\r\n      <MenuItem\r\n        disabled={!canRedo}\r\n        secondary={`${keyboardCommandModifier}+shift+z`}\r\n        onClick={onRedo}\r\n      >\r\n        Redo\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default EditMenu;\r\n","import { createSimulatorSelector } from \"../utils\";\r\n\r\nexport const averageMsecsPerTickSelector = createSimulatorSelector(\r\n  (state) => state.lastTickProcessingTimeMs\r\n);\r\n","import * as React from \"react\";\r\n\r\nconst PlayIcon: React.FC<React.SVGProps<SVGSVGElement>> = (props) => {\r\n  return (\r\n    <svg width={16} height={16} {...props}>\r\n      <path d=\"M3,0 L13,8 L3,16 z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default PlayIcon;\r\n","import * as React from \"react\";\r\n\r\nconst StopIcon: React.FC<React.SVGProps<SVGSVGElement>> = (props) => {\r\n  return (\r\n    <svg width={16} height={16} {...props}>\r\n      <path d=\"M1,1 L15,1 L15,15 L1,15 z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default StopIcon;\r\n","import * as React from \"react\";\r\n\r\nconst PauseIcon: React.FC<React.SVGProps<SVGSVGElement>> = (props) => {\r\n  return (\r\n    <svg width={16} height={16} {...props}>\r\n      <path d=\"M2.5,1 L6.5,1 L6.5,15 L2.5,15 z M9.5,1 L13.5,1 L13.5,15 L9.5,15 z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default PauseIcon;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"button--1Syge\",\"button-play\":\"button-play--3gVDD\",\"button-stop\":\"button-stop--264bH\",\"button-pause\":\"button-pause--YWEL8\",\"selected\":\"selected--QetqX\",\"button--disabled\":\"button--disabled--2BVJb\",\"simrate\":\"simrate--1LNMp\"};","import SimControls from \"./SimControls\";\r\nexport default SimControls;\r\n","import * as React from \"react\";\r\n\r\nimport { cls } from \"@/utils\";\r\n\r\nimport useSelector from \"@/hooks/useSelector\";\r\n\r\nimport { startSim } from \"@/actions/sim-start\";\r\nimport { stopSim } from \"@/actions/sim-stop\";\r\nimport { pauseSim } from \"@/actions/sim-pause\";\r\nimport { useAction } from \"@/hooks/useAction\";\r\n\r\nimport {\r\n  isSimActiveSelector,\r\n  isSimPausedSelector,\r\n} from \"@/services/simulator-control/selectors/run\";\r\nimport { averageMsecsPerTickSelector } from \"@/services/simulator/selectors/performance\";\r\n\r\nimport PlayIcon from \"../Icons/Play\";\r\nimport StopIcon from \"../Icons/Stop\";\r\nimport PauseIcon from \"../Icons/Pause\";\r\n\r\nimport styles from \"./SimControls.module.css\";\r\n\r\nconst PlayPauseButton: React.FC = () => {\r\n  const isActive = useSelector(isSimActiveSelector);\r\n  const isPaused = useSelector(isSimPausedSelector);\r\n\r\n  const avgMsecsPerTick = useSelector(averageMsecsPerTickSelector);\r\n\r\n  const onPlayClick = useAction(startSim);\r\n  const onStopClick = useAction(stopSim);\r\n  const onPauseClick = useAction(pauseSim, \"toggle\");\r\n\r\n  return (\r\n    <span>\r\n      {isActive && (\r\n        <span className={styles[\"simrate\"]}>\r\n          {avgMsecsPerTick.toFixed(2)} ms\r\n        </span>\r\n      )}\r\n      {isActive ? (\r\n        <StopIcon\r\n          className={cls(styles[\"button\"], styles[\"button-stop\"])}\r\n          onClick={onStopClick}\r\n        />\r\n      ) : (\r\n        <PlayIcon\r\n          className={cls(styles[\"button\"], styles[\"button-play\"])}\r\n          onClick={onPlayClick}\r\n        />\r\n      )}\r\n      <PauseIcon\r\n        className={cls(\r\n          styles[\"button\"],\r\n          styles[\"button-pause\"],\r\n          !isActive && styles[\"button--disabled\"],\r\n          isPaused && styles[\"selected\"]\r\n        )}\r\n        onClick={onPauseClick}\r\n      />\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default PlayPauseButton;\r\n","import TitleBar from \"./TitleBar\";\r\nexport default TitleBar;\r\n","import * as React from \"react\";\r\n\r\nimport { cls } from \"@/utils\";\r\n\r\nimport AutoPopover from \"../AutoPopover\";\r\nimport Button from \"../Button\";\r\nimport FileMenu from \"../FileMenu\";\r\nimport EditMenu from \"../EditMenu\";\r\nimport SimControls from \"../SimControls\";\r\n\r\nimport styles from \"./TitleBar.module.css\";\r\n\r\nexport interface TitleBarProps {\r\n  className?: string;\r\n}\r\nconst TitleBar: React.FC<TitleBarProps> = ({ className }) => {\r\n  return (\r\n    <div className={cls(styles.titlebar, className)}>\r\n      <span className={styles[\"titlebar-heading\"]}>Discrelog</span>\r\n      <div className={styles[\"titlebar-divider\"]} />\r\n      <AutoPopover content={<FileMenu />} placement=\"bottom-start\">\r\n        <Button>File</Button>\r\n      </AutoPopover>\r\n      <AutoPopover content={<EditMenu />} placement=\"bottom-start\">\r\n        <Button>Edit</Button>\r\n      </AutoPopover>\r\n\r\n      <div className={styles[\"titlebar-controls\"]}>\r\n        <SimControls />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TitleBar;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"titlebar\":\"titlebar--3-TCE\",\"titlebar-heading\":\"titlebar-heading--3RAl1\",\"titlebar-divider\":\"titlebar-divider--Wl_27\",\"titlebar-controls\":\"titlebar-controls--1R_l6\"};","import { createDialogSelector } from \"../utils\";\r\n\r\nexport const dialogTypeSelector = createDialogSelector((s) => s.dialogType);\r\nexport const dialogDataSelector = createDialogSelector((s) => s.data);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"modal--25LBN\",\"modal-content\":\"modal-content--1H0T_\"};","export * from \"./Modal\";\r\nimport Modal from \"./Modal\";\r\nexport default Modal;\r\n","import { cls } from \"@/utils\";\r\nimport * as React from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { FocusOn, AutoFocusInside } from \"react-focus-on\";\r\n\r\nimport sizing from \"@/styles/sizing.module.css\";\r\n\r\nimport styles from \"./Modal.module.css\";\r\n\r\nexport interface ModalProps {\r\n  className?: string;\r\n  isOpen: boolean;\r\n  onRequestClose?(): void;\r\n}\r\n\r\nconst Modal: React.FC<ModalProps> = ({\r\n  className,\r\n  isOpen,\r\n  onRequestClose,\r\n  children,\r\n}) => {\r\n  if (!isOpen) {\r\n    return null;\r\n  }\r\n\r\n  return createPortal(\r\n    <div className={cls(\"modal\", styles[\"modal\"])}>\r\n      <FocusOn onClickOutside={onRequestClose} onEscapeKey={onRequestClose}>\r\n        <div className={cls(styles[\"modal-content\"], className)}>\r\n          <AutoFocusInside className={sizing[\"fill-parent\"]}>\r\n            {children}\r\n          </AutoFocusInside>\r\n        </div>\r\n      </FocusOn>\r\n    </div>,\r\n    document.body\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","export * from \"./Dialog\";\r\nimport Dialog from \"./Dialog\";\r\nexport default Dialog;\r\n","import * as React from \"react\";\r\n\r\nimport Button from \"@/components/Button\";\r\nimport Modal from \"@/components/Modal\";\r\n\r\nimport styles from \"./Dialog.module.css\";\r\n\r\nexport interface DialogProps {\r\n  isOpen: boolean;\r\n  acceptText?: string;\r\n  cancelText?: string;\r\n  footer?: React.ReactNode;\r\n  onAccept?(): void;\r\n  onCancel?(): void;\r\n}\r\n\r\nconst Dialog: React.FC<DialogProps> = ({\r\n  isOpen,\r\n  acceptText,\r\n  cancelText,\r\n  onAccept,\r\n  onCancel,\r\n  footer,\r\n  children,\r\n}) => {\r\n  return (\r\n    <Modal\r\n      className={styles[\"dialog\"]}\r\n      isOpen={isOpen}\r\n      onRequestClose={onCancel}\r\n    >\r\n      <div>{children}</div>\r\n      <div className={styles[\"dialog-footer\"]}>\r\n        {footer}\r\n        {onCancel && (\r\n          <Button onClick={onCancel}>{cancelText ?? \"Cancel\"}</Button>\r\n        )}\r\n        {onAccept && (\r\n          <Button onClick={onAccept}>{acceptText ?? \"Accept\"}</Button>\r\n        )}\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Dialog;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"dialog--1eQi6\",\"dialog-footer\":\"dialog-footer--2hYdr\"};","import * as React from \"react\";\r\n\r\nimport useSelector from \"@/hooks/useSelector\";\r\nimport { useAction } from \"@/hooks/useAction\";\r\n\r\nimport { acceptDialog } from \"@/actions/dialog-response-accept\";\r\n\r\nimport { dialogDataSelector } from \"@/services/dialog/selectors/dialog\";\r\nimport { ExportProjectLinkDialogData } from \"@/services/dialog/state\";\r\n\r\nimport Button from \"@/components/Button\";\r\nimport Dialog from \"@/components/Dialog\";\r\n\r\nimport styles from \"./ExportLinkDialog.module.css\";\r\n\r\nconst ExportProjectLinkDialog: React.FC = () => {\r\n  const onCloseDialog = useAction(acceptDialog);\r\n  const dialogData: ExportProjectLinkDialogData | null = useSelector(\r\n    dialogDataSelector\r\n  );\r\n\r\n  const projectLink = dialogData?.projectLink;\r\n\r\n  const onCopy = React.useCallback(() => {\r\n    if (!projectLink) {\r\n      return;\r\n    }\r\n    // TODO: Show link in dialog on failure\r\n    navigator.clipboard.writeText(projectLink).catch(() => {\r\n      /* do nothing */\r\n    });\r\n  }, [projectLink]);\r\n\r\n  if (!projectLink) {\r\n    return null;\r\n  }\r\n\r\n  const dialogFooter = <Button onClick={onCopy}>Copy to Clipboard</Button>;\r\n\r\n  return (\r\n    <Dialog\r\n      isOpen={true}\r\n      cancelText=\"Close\"\r\n      onCancel={onCloseDialog}\r\n      footer={dialogFooter}\r\n    >\r\n      <div className={styles[\"export-link-dialog-link-container\"]}>\r\n        <code className={styles[\"export-link-dialog-link\"]}>{projectLink}</code>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ExportProjectLinkDialog;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"export-link-dialog-link-container\":\"export-link-dialog-link-container--Zas2L\",\"export-link-dialog-link\":\"export-link-dialog-link--7r7uE\"};","import DialogManager from \"./DialogManager\";\r\nexport default DialogManager;\r\n","import * as React from \"react\";\r\n\r\nimport useSelector from \"@/hooks/useSelector\";\r\nimport { dialogTypeSelector } from \"@/services/dialog/selectors/dialog\";\r\n\r\nimport ExportProjectLinkDialog from \"./dialogs/ExportLinkDialog\";\r\n\r\nconst DialogManager: React.FC = () => {\r\n  const dialogType = useSelector(dialogTypeSelector);\r\n\r\n  switch (dialogType) {\r\n    default:\r\n      return null;\r\n    case \"export-project-link\":\r\n      return <ExportProjectLinkDialog />;\r\n  }\r\n};\r\n\r\nexport default DialogManager;\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport \"resize-observer-polyfill\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { Router } from \"react-router-dom\";\r\n\r\nimport history from \"./history\";\r\nimport \"./styles\";\r\n\r\nimport { store } from \"./store\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nconst rootEl = document.getElementById(\"root\");\r\n\r\nReactDOM.render(\r\n  <Router history={history}>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </Router>,\r\n  rootEl\r\n);\r\n","import * as React from \"react\";\r\n\r\nimport { cls } from \"@/utils\";\r\n\r\nimport flex from \"@/styles/flex.module.css\";\r\nimport sizing from \"@/styles/sizing.module.css\";\r\n\r\nimport Routes from \"@/router\";\r\n\r\nimport TitleBar from \"../TitleBar\";\r\nimport DialogManager from \"../DialogManager\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className={cls(sizing[\"fill-parent\"], flex[\"flex-column\"])}>\r\n      <TitleBar className={flex[\"flexitem-fix\"]} />\r\n      <div className={cls(sizing[\"fill-parent\"], flex[\"flexitem-shrink\"])}>\r\n        <Routes />\r\n      </div>\r\n      <DialogManager />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { keyboardIsMac } from \"./runtime-env\";\r\n\r\nexport const MODIFIER_KEYS_NONE = Object.freeze<ModifierKeys>({});\r\n\r\nexport interface ModifierKeys {\r\n  ctrlMetaKey?: boolean;\r\n  shiftKey?: boolean;\r\n  altKey?: boolean;\r\n}\r\n\r\nexport interface MouseEventModifierKeys {\r\n  ctrlKey: boolean;\r\n  altKey: boolean;\r\n  shiftKey: boolean;\r\n  metaKey: boolean;\r\n}\r\nexport function getModifiers(e: MouseEventModifierKeys): ModifierKeys {\r\n  const { ctrlKey, altKey, shiftKey, metaKey } = e;\r\n  return {\r\n    // Mac reserves ctrl for system use, apps use meta.\r\n    ctrlMetaKey: keyboardIsMac ? metaKey : ctrlKey,\r\n    altKey,\r\n    shiftKey,\r\n  };\r\n}\r\n","import { os } from \"platform\";\r\n\r\nconst OS_MAC = /(Mac|iOS|OS\\ X)/;\r\n\r\nexport const keyboardIsMac = OS_MAC.test((os || \"undefined\").toString());\r\n\r\nexport const keyboardCommandModifier = keyboardIsMac ? \"command\" : \"ctrl\";\r\n\r\nconst rootUrlBuilder = new URL(window.location.host);\r\nrootUrlBuilder.pathname = __webpack_public_path__;\r\nexport const rootUrl = rootUrlBuilder.toString();\r\n","import union from \"lodash/union\";\r\nimport difference from \"lodash/difference\";\r\n\r\nimport { ModifierKeys } from \"./modifier-keys\";\r\n\r\nexport type SelectionMode =\r\n  | \"set\"\r\n  | \"append\"\r\n  | \"remove\"\r\n  | \"toggle\"\r\n  | \"set-if-unselected\";\r\n\r\nexport function getSelectMode(\r\n  modifiers: ModifierKeys,\r\n  defaultMode: SelectionMode = \"set\"\r\n): SelectionMode {\r\n  if (modifiers.shiftKey && modifiers.ctrlMetaKey) {\r\n    return \"remove\";\r\n  }\r\n  if (modifiers.shiftKey) {\r\n    return \"append\";\r\n  }\r\n  if (modifiers.ctrlMetaKey) {\r\n    return \"toggle\";\r\n  }\r\n  return defaultMode;\r\n}\r\n\r\nexport function combineSelection(\r\n  selectedIds: string[],\r\n  chosenIds: string[],\r\n  mode: SelectionMode\r\n) {\r\n  switch (mode) {\r\n    case \"set\":\r\n      return chosenIds;\r\n    case \"set-if-unselected\": {\r\n      if (chosenIds.every((chosen) => selectedIds.indexOf(chosen) !== -1)) {\r\n        // All were selected.\r\n        return selectedIds;\r\n      }\r\n\r\n      // One wasn't selected, set it\r\n      return chosenIds;\r\n    }\r\n    case \"append\":\r\n      return union(selectedIds, chosenIds);\r\n    case \"remove\":\r\n      return difference(selectedIds, chosenIds);\r\n    case \"toggle\": {\r\n      return difference(selectedIds, chosenIds).concat(\r\n        difference(chosenIds, selectedIds)\r\n      );\r\n    }\r\n  }\r\n\r\n  return chosenIds;\r\n}\r\n","import { createSelector } from \"reselect\";\r\n\r\nimport {\r\n  magnitude,\r\n  normalizeRectangle,\r\n  pointSubtract,\r\n  ZeroPoint,\r\n} from \"@/geometry\";\r\nimport { MODIFIER_KEYS_NONE } from \"@/modifier-keys\";\r\n\r\nimport { nodePinPositionsByPinIdByNodeIdSelector } from \"@/services/node-layout/selectors/node-pin-positions\";\r\nimport { selectedNodeIdsSelector } from \"@/services/selection/selectors/selection\";\r\nimport { nodeIdsForEditingCircuitSelector } from \"@/services/circuit-editor-view/selectors/nodes\";\r\n\r\nimport { createCircuitEditorUiSelector } from \"../utils\";\r\n\r\nimport { gridJointSnapSelector, gridNodeSnapSelector } from \"./snap\";\r\n\r\nexport const dragModeSelector = createCircuitEditorUiSelector(\r\n  (s) => s.dragMode\r\n);\r\nexport const dragStartSelector = createCircuitEditorUiSelector(\r\n  (s) => s.dragStart\r\n);\r\nexport const dragEndSelector = createCircuitEditorUiSelector((s) => s.dragEnd);\r\n\r\nexport const dragModifierKeysSelector = createCircuitEditorUiSelector(\r\n  (s) => s.dragModifierKeys ?? MODIFIER_KEYS_NONE\r\n);\r\n\r\nexport const selectionRectSelector = createCircuitEditorUiSelector(\r\n  createSelector(\r\n    dragModeSelector.local,\r\n    dragStartSelector.local,\r\n    dragEndSelector.local,\r\n    (dragMode, dragStart, dragEnd) =>\r\n      dragMode === \"select\" && dragStart && dragEnd\r\n        ? normalizeRectangle(dragStart, dragEnd)\r\n        : null\r\n  )\r\n);\r\n\r\nexport const dragMoveOffsetSelector = createSelector(\r\n  dragModeSelector,\r\n  selectedNodeIdsSelector,\r\n  dragModifierKeysSelector,\r\n  dragStartSelector,\r\n  dragEndSelector,\r\n  gridNodeSnapSelector,\r\n  gridJointSnapSelector,\r\n  (\r\n    dragMode,\r\n    selectedNodeIds,\r\n    modifierKeys,\r\n    dragStart,\r\n    dragEnd,\r\n    nodeSnap,\r\n    jointSnap\r\n  ) => {\r\n    if (dragMode !== \"move\" || !dragStart || !dragEnd) {\r\n      return null;\r\n    }\r\n\r\n    let gridSnap = jointSnap;\r\n    if (selectedNodeIds.length > 0) {\r\n      // If we are dragging nodes, restrict everything to the node snap size.\r\n      gridSnap = nodeSnap;\r\n    }\r\n\r\n    const offset = pointSubtract(dragEnd, dragStart);\r\n    if (!modifierKeys.ctrlMetaKey) {\r\n      offset.x = Math.round(offset.x / gridSnap) * gridSnap;\r\n      offset.y = Math.round(offset.y / gridSnap) * gridSnap;\r\n    }\r\n\r\n    return offset;\r\n  }\r\n);\r\n\r\nexport const dragNewJointPositionSelector = createCircuitEditorUiSelector(\r\n  (state) => {\r\n    const gridSnap = gridJointSnapSelector.local(state);\r\n\r\n    const { dragMode, dragEnd, dragModifierKeys } = state;\r\n    if (dragMode !== \"new-joint\" || !dragEnd || !dragModifierKeys) {\r\n      return null;\r\n    }\r\n\r\n    const position = { ...dragEnd };\r\n    if (!dragModifierKeys.ctrlMetaKey) {\r\n      position.x = Math.round(position.x / gridSnap) * gridSnap;\r\n      position.y = Math.round(position.y / gridSnap) * gridSnap;\r\n    }\r\n\r\n    return position;\r\n  }\r\n);\r\n\r\nexport const isDraggingNewNodeSelector = createCircuitEditorUiSelector(\r\n  (s) => s.dragMode === \"new-node\"\r\n);\r\n\r\nexport const dragNewNodeTypeSelector = createCircuitEditorUiSelector((s) =>\r\n  s.dragMode === \"new-node\" ? s.dragNewNodeType : null\r\n);\r\n\r\nexport const dragWireTargetPinSelector = createSelector(\r\n  dragModeSelector,\r\n  dragEndSelector,\r\n  nodeIdsForEditingCircuitSelector,\r\n  nodePinPositionsByPinIdByNodeIdSelector,\r\n  (\r\n    dragMode,\r\n    dragEnd,\r\n    nodeIdsForEditingCircuit,\r\n    pinPositionsByPinIdByNodeId\r\n  ) => {\r\n    if (dragMode !== \"wire\" || !dragEnd) {\r\n      return null;\r\n    }\r\n\r\n    for (const nodeId of nodeIdsForEditingCircuit) {\r\n      const pinPositionsByPinId =\r\n        pinPositionsByPinIdByNodeId[nodeId] ?? ZeroPoint;\r\n      const pinIds = Object.keys(pinPositionsByPinId);\r\n      for (const pinId of pinIds) {\r\n        const pinPosition = pinPositionsByPinId[pinId];\r\n        const offset = pointSubtract(dragEnd, pinPosition);\r\n        const length = magnitude(offset);\r\n        if (length <= 6) {\r\n          return { nodeId, pinId };\r\n        }\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n);\r\n","import { Point } from \"@/geometry\";\r\nimport { AppState } from \"@/store\";\r\nimport { createCircuitEditorUiSelector } from \"../utils\";\r\n\r\nexport const gridNodeSnapSelector = createCircuitEditorUiSelector(() => 50);\r\n\r\nexport const gridJointSnapSelector = createCircuitEditorUiSelector(() => 5);\r\n\r\nexport const applyGridNodeSnapSelector = (s: AppState, p: Point) => {\r\n  const snap = gridNodeSnapSelector(s);\r\n  return {\r\n    x: Math.round(p.x / snap) * snap,\r\n    y: Math.round(p.y / snap) * snap,\r\n  };\r\n};\r\n\r\nexport const applyGridJointSnapSelector = (s: AppState, p: Point) => {\r\n  const snap = gridJointSnapSelector(s);\r\n  return {\r\n    x: Math.round(p.x / snap) * snap,\r\n    y: Math.round(p.y / snap) * snap,\r\n  };\r\n};\r\n","import {\r\n  createServiceReducerCreator,\r\n  createServiceSelectorCreator,\r\n} from \"../service-state-utils\";\r\n\r\nexport const createCircuitEditorUiReducer = createServiceReducerCreator(\r\n  \"circuitEditorUi\"\r\n);\r\nexport const createCircuitEditorUiSelector = createServiceSelectorCreator(\r\n  \"circuitEditorUi\"\r\n);\r\n","import { AppState } from \"@/store\";\r\n\r\nimport { circuitNameFromIdSelector } from \"@/services/circuits/selectors/circuits\";\r\n\r\nimport { createCircuitEditorViewSelector } from \"../utils\";\r\n\r\nexport const editingCircuitIdSelector = createCircuitEditorViewSelector(\r\n  (state) => state.editingCircuitId\r\n);\r\n\r\nexport const editingCircuitNodeIdPathSelector = createCircuitEditorViewSelector(\r\n  (state) => state.editingCircuitNodeIdPath ?? []\r\n);\r\n\r\nexport const editingCircuitNameSelector = (state: AppState) =>\r\n  circuitNameFromIdSelector(state, editingCircuitIdSelector(state));\r\n","import { createSelector } from \"reselect\";\r\nimport { includes } from \"lodash\";\r\n\r\nimport { AppState } from \"@/store\";\r\n\r\nimport { Connection } from \"@/services/node-graph/types\";\r\n\r\nimport { nodeIdsFromCircuitIdSelector } from \"./nodes\";\r\n\r\n/**\r\n * Get all connection ids for the given circuit id.\r\n *\r\n * A connection is in the circuit if both its input and output are for nodes in this circuit.\r\n *\r\n * WARN: Single-memoized, cache will bust if new circuit id passed.\r\n */\r\nexport const connectionIdsByCircuitIdSelector = createSelector(\r\n  (state: AppState, circuitId: string) =>\r\n    nodeIdsFromCircuitIdSelector(state, circuitId),\r\n  (state: AppState) => state.services.nodeGraph.connectionsById,\r\n  (nodeIds: string[], connectionsById: Record<string, Connection>) => {\r\n    return Object.keys(connectionsById).filter((connectionId) => {\r\n      const { inputPin, outputPin } = connectionsById[connectionId];\r\n\r\n      if (!includes(nodeIds, inputPin.nodeId)) {\r\n        return false;\r\n      }\r\n\r\n      if (!includes(nodeIds, outputPin.nodeId)) {\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    });\r\n  }\r\n);\r\n","import { AppState } from \"@/store\";\r\n\r\nimport { nodeIdsFromCircuitIdSelector } from \"@/services/circuits/selectors/nodes\";\r\nimport { connectionIdsByCircuitIdSelector } from \"@/services/circuits/selectors/connections\";\r\n\r\nimport { editingCircuitIdSelector } from \"./circuit\";\r\n\r\nexport const nodeIdsForEditingCircuitSelector = (state: AppState) => {\r\n  const editingCircuitId = editingCircuitIdSelector(state);\r\n  const nodeIds = nodeIdsFromCircuitIdSelector(state, editingCircuitId);\r\n  return nodeIds;\r\n};\r\n\r\nexport const connectionIdsForEditingCircuitSelector = (state: AppState) => {\r\n  const editingCircuitId = editingCircuitIdSelector(state);\r\n  const connectionids = connectionIdsByCircuitIdSelector(\r\n    state,\r\n    editingCircuitId\r\n  );\r\n  return connectionids;\r\n};\r\n","import {\r\n  createServiceReducerCreator,\r\n  createServiceSelectorCreator,\r\n} from \"../service-state-utils\";\r\n\r\nexport const createCircuitEditorViewReducer = createServiceReducerCreator(\r\n  \"circuitEditorView\"\r\n);\r\nexport const createCircuitEditorViewSelector = createServiceSelectorCreator(\r\n  \"circuitEditorView\"\r\n);\r\n","export const ROOT_CIRCUIT_ID = \"root\";\r\n","import { CircuitsServiceState } from \"../state\";\r\nimport { createCircuitsSelector } from \"../utils\";\r\n\r\nexport const circuitIdsSelector = createCircuitsSelector((state) =>\r\n  Object.keys(state.circuitNamesByCircuitId)\r\n);\r\n\r\nexport const circuitNamesByIdSelector = createCircuitsSelector(\r\n  (state) => state.circuitNamesByCircuitId\r\n);\r\n\r\nexport const circuitNameFromIdSelector = createCircuitsSelector(\r\n  (state: CircuitsServiceState, circuitId: string) =>\r\n    state.circuitNamesByCircuitId[circuitId]\r\n);\r\n","import { createCircuitsSelector } from \"../utils\";\r\n\r\nexport const nodeIdsByCircuitIdSelector = createCircuitsSelector(\r\n  (state) => state.nodeIdsByCircuitId\r\n);\r\n\r\nexport const nodeIdsFromCircuitIdSelector = createCircuitsSelector<\r\n  string,\r\n  string[]\r\n>((state, circuitId: string) => state.nodeIdsByCircuitId[circuitId]);\r\n\r\nexport const circuitIdFromNodeIdSelector = createCircuitsSelector<\r\n  string,\r\n  string | null\r\n>((state, nodeId) => {\r\n  for (const circuitId of Object.keys(state.nodeIdsByCircuitId)) {\r\n    const nodeIds = state.nodeIdsByCircuitId[circuitId];\r\n    if (nodeIds.indexOf(nodeId) !== -1) {\r\n      return circuitId;\r\n    }\r\n  }\r\n  return null;\r\n});\r\n","import {\r\n  createServiceReducerCreator,\r\n  createServiceSelectorCreator,\r\n} from \"../service-state-utils\";\r\n\r\nexport const createCircuitsReducer = createServiceReducerCreator(\"circuits\");\r\nexport const createCircuitsSelector = createServiceSelectorCreator(\"circuits\");\r\n","import {\r\n  createServiceReducerCreator,\r\n  createServiceSelectorCreator,\r\n} from \"../service-state-utils\";\r\n\r\nexport const createDialogReducer = createServiceReducerCreator(\"dialog\");\r\nexport const createDialogSelector = createServiceSelectorCreator(\"dialog\");\r\n","import values from \"lodash/values\";\r\nimport { createSelector } from \"reselect\";\r\n\r\nimport { NodeGraphServiceState } from \"../state\";\r\nimport { createNodeGraphSelector } from \"../utils\";\r\n\r\nexport const connectionsByIdSelector = createNodeGraphSelector(\r\n  (s) => s.connectionsById\r\n);\r\n\r\nexport const connectionIdsSelector = createNodeGraphSelector(\r\n  createSelector(\r\n    (s) => s.connectionsById,\r\n    (connectionsById) => Object.keys(connectionsById)\r\n  )\r\n);\r\n\r\nexport const connectionFromConnectionIdSelector = createNodeGraphSelector(\r\n  (s: NodeGraphServiceState, connectionId: string) =>\r\n    s.connectionsById[connectionId]\r\n);\r\n\r\nexport const connectionsSelector = createNodeGraphSelector(\r\n  createSelector(\r\n    (state: NodeGraphServiceState) => state.connectionsById,\r\n    (connectionsById) => values(connectionsById)\r\n  )\r\n);\r\n\r\n/**\r\n * Gets all wire ids supplying input to the specified node.\r\n * WARN: Not react safe.  For reducer use only.\r\n */\r\nexport const nodeInputConnectionIdsFromNodeIdSelector = createNodeGraphSelector(\r\n  (state: NodeGraphServiceState, nodeId: string) =>\r\n    Object.keys(state.connectionsById).filter(\r\n      (connectionId) =>\r\n        state.connectionsById[connectionId].inputPin.nodeId === nodeId\r\n    )\r\n);\r\n\r\n/**\r\n * Gets an array of wire ids leaving the given node.\r\n * WARN: Not react safe.  For reducer use only.\r\n */\r\nexport const nodeOutputConnectionIdsFromNodeIdSelector = createNodeGraphSelector(\r\n  (state: NodeGraphServiceState, nodeId: string) =>\r\n    Object.keys(state.connectionsById).filter(\r\n      (connectionId) =>\r\n        state.connectionsById[connectionId].outputPin.nodeId === nodeId\r\n    )\r\n);\r\n","import { AppState } from \"@/store\";\r\n\r\nimport { nodeDefinitionFromTypeSelector } from \"@/services/node-types/selectors/node-types\";\r\n\r\nimport { nodeTypeFromNodeIdSelector } from \"./nodes\";\r\n\r\nexport const nodeDefFromNodeIdSelector = (state: AppState, nodeId: string) => {\r\n  const nodeType = nodeTypeFromNodeIdSelector(state, nodeId);\r\n  if (!nodeType) {\r\n    return null;\r\n  }\r\n\r\n  const def = nodeDefinitionFromTypeSelector(state, nodeType);\r\n\r\n  return def;\r\n};\r\n","import { createSelector } from \"reselect\";\r\nimport mapValues from \"lodash/mapValues\";\r\n\r\nimport { createNodeGraphSelector } from \"../utils\";\r\nimport { NodeGraphServiceState } from \"../state\";\r\nimport { Node } from \"../types\";\r\n\r\nexport const nodesByNodeIdSelector = createNodeGraphSelector(\r\n  (s) => s.nodesById\r\n);\r\n\r\nexport const nodeIdsSelector = createNodeGraphSelector(\r\n  createSelector(\r\n    nodesByNodeIdSelector.local,\r\n    (nodesById: Record<string, Node>) => Object.keys(nodesById)\r\n  )\r\n);\r\n\r\nexport const nodeTypesByNodeIdSelector = createNodeGraphSelector(\r\n  createSelector(\r\n    nodesByNodeIdSelector.local,\r\n    (nodesById: Record<string, Node>) => mapValues(nodesById, (x) => x.nodeType)\r\n  )\r\n);\r\n\r\nexport const nodeFromNodeIdSelector = createNodeGraphSelector(\r\n  (s: NodeGraphServiceState, nodeId: string) => s.nodesById[nodeId] || null\r\n);\r\n\r\nexport const nodeIdsFromTypeSelector = createNodeGraphSelector(\r\n  (s: NodeGraphServiceState, desiredType: string) => {\r\n    const nodeIds: string[] = [];\r\n    for (const nodeId of Object.keys(s.nodesById)) {\r\n      const { nodeType } = s.nodesById[nodeId];\r\n      if (nodeType === desiredType) {\r\n        nodeIds.push(nodeId);\r\n      }\r\n    }\r\n    return nodeIds;\r\n  }\r\n);\r\n\r\nexport const nodeTypeFromNodeIdSelector = createNodeGraphSelector(\r\n  (s: NodeGraphServiceState, nodeId: string) => {\r\n    const node = nodeFromNodeIdSelector.local(s, nodeId);\r\n    if (!node) {\r\n      return null;\r\n    }\r\n    return node.nodeType;\r\n  }\r\n);\r\n\r\nexport const nodeNameFromNodeIdSelector = createNodeGraphSelector(\r\n  (s: NodeGraphServiceState, nodeId: string) => {\r\n    const node = nodeFromNodeIdSelector.local(s, nodeId);\r\n    if (!node) {\r\n      return null;\r\n    }\r\n\r\n    return node.nodeName ?? nodeId.substr(0, 4);\r\n  }\r\n);\r\n","import { circuitIdFromNodeIdSelector } from \"@/services/circuits/selectors/nodes\";\r\nimport { circuitIdToNodeType } from \"@/services/node-types/definition-sources/integrated-circuits/utils\";\r\nimport { AppState } from \"@/store\";\r\n\r\nimport { NodePin } from \"../types\";\r\n\r\nimport { connectionsSelector } from \"./connections\";\r\nimport { nodeDefFromNodeIdSelector } from \"./node-def\";\r\nimport { nodeIdsFromTypeSelector, nodeTypeFromNodeIdSelector } from \"./nodes\";\r\n\r\nexport const pinDirectionFromNodePinSelector = (\r\n  state: AppState,\r\n  nodeId: string,\r\n  pinId: string\r\n) => {\r\n  const def = nodeDefFromNodeIdSelector(state, nodeId);\r\n  if (!def) {\r\n    return null;\r\n  }\r\n\r\n  const pinDef = def.pins[pinId];\r\n  if (!pinDef) {\r\n    return null;\r\n  }\r\n  return pinDef.direction;\r\n};\r\n\r\n/**\r\n * Gets a map of node input pins to their output sources given a node id.\r\n *\r\n * WARN: Not react safe.  For reducer use only\r\n */\r\nexport const nodeOutputSourcesByPinIdFromNodeIdSelector = (\r\n  state: AppState,\r\n  nodeId: string\r\n) => {\r\n  const connections = connectionsSelector(state);\r\n  const nodeDef = nodeDefFromNodeIdSelector(state, nodeId);\r\n\r\n  if (!nodeDef) {\r\n    return {};\r\n  }\r\n\r\n  let outputPins: string[] = [];\r\n  outputPins = Object.keys(nodeDef.pins).filter(\r\n    (x) => nodeDef.pins[x].direction === \"output\"\r\n  );\r\n\r\n  const outputConnections = connections.filter(\r\n    (x) => x.outputPin.nodeId === nodeId\r\n  );\r\n\r\n  const result: Record<string, NodePin[]> = {};\r\n  for (const pin of outputPins) {\r\n    result[pin] = [];\r\n  }\r\n\r\n  for (const connection of outputConnections) {\r\n    const { outputPin, inputPin } = connection;\r\n    result[outputPin.pinId].push(inputPin);\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nexport const nodePinsFromPinNodeSelector = (\r\n  state: AppState,\r\n  nodeId: string\r\n): NodePin[] => {\r\n  const nodeType = nodeTypeFromNodeIdSelector(state, nodeId);\r\n  if (nodeType !== \"pin-input\" && nodeType !== \"pin-output\") {\r\n    return [];\r\n  }\r\n\r\n  const circuitId = circuitIdFromNodeIdSelector(state, nodeId);\r\n  if (!circuitId) {\r\n    return [];\r\n  }\r\n\r\n  const icNodeType = circuitIdToNodeType(circuitId);\r\n  const icNodeIds = nodeIdsFromTypeSelector(state, icNodeType);\r\n\r\n  return icNodeIds.map((icNodeId) => ({ nodeId: icNodeId, pinId: nodeId }));\r\n};\r\n","import {\r\n  createServiceReducerCreator,\r\n  createServiceSelectorCreator,\r\n} from \"../service-state-utils\";\r\n\r\nexport const createNodeGraphReducer = createServiceReducerCreator(\"nodeGraph\");\r\nexport const createNodeGraphSelector = createServiceSelectorCreator(\r\n  \"nodeGraph\"\r\n);\r\n","import { createSelector } from \"reselect\";\r\nimport getBounds from \"svg-path-bounds\";\r\n\r\nimport mapValues from \"lodash/mapValues\";\r\n\r\nimport { normalizeRectangle } from \"@/geometry\";\r\n\r\nimport { nodeTypesByNodeIdSelector } from \"@/services/node-graph/selectors/nodes\";\r\nimport { nodeDefinitionsByTypeSelector } from \"@/services/node-types/selectors/node-types\";\r\n\r\nimport { nodePositionsByNodeIdSelector } from \"./node-positions\";\r\n\r\nexport const nodeBoundsByIdSelector = createSelector(\r\n  nodeDefinitionsByTypeSelector,\r\n  nodeTypesByNodeIdSelector,\r\n  (nodeDefsByType, elementTypesByNodeId) =>\r\n    mapValues(elementTypesByNodeId, (elementType) => {\r\n      const def = nodeDefsByType[elementType];\r\n      if (!def) {\r\n        return [0, 0, 0, 0];\r\n      }\r\n\r\n      return getBounds(def.visual.hitPath);\r\n    })\r\n);\r\n\r\nexport const nodeRectsByIdSelector = createSelector(\r\n  nodePositionsByNodeIdSelector,\r\n  nodeBoundsByIdSelector,\r\n  (positionsById, boundsById) =>\r\n    mapValues(positionsById, (p1, id) => {\r\n      const bounds = boundsById[id] || [0, 0, 0, 0];\r\n      return normalizeRectangle(\r\n        {\r\n          x: p1.x + bounds[0],\r\n          y: p1.y + bounds[1],\r\n        },\r\n        {\r\n          x: p1.x + bounds[2],\r\n          y: p1.y + bounds[3],\r\n        }\r\n      );\r\n    })\r\n);\r\n","import { createSelector } from \"reselect\";\r\n\r\nimport { AppState } from \"@/store\";\r\n\r\nimport { Point, pointAdd, ZeroPoint } from \"@/geometry\";\r\n\r\nimport { nodeTypesByNodeIdSelector } from \"@/services/node-graph/selectors/nodes\";\r\nimport { nodeDefinitionsByTypeSelector } from \"@/services/node-types/selectors/node-types\";\r\n\r\nimport { nodePositionsByNodeIdSelector } from \"./node-positions\";\r\n\r\nexport const nodePinPositionsByPinIdByNodeIdSelector = createSelector(\r\n  nodeDefinitionsByTypeSelector,\r\n  nodePositionsByNodeIdSelector,\r\n  nodeTypesByNodeIdSelector,\r\n  (nodeDefsByType, nodePositionsByNodeId, nodeTypesByNodeId) => {\r\n    const nodePinPositionsByPinIdByNodeId: Record<\r\n      string,\r\n      Record<string, Point>\r\n    > = {};\r\n\r\n    const nodeIds = Object.keys(nodeTypesByNodeId);\r\n    for (const nodeId of nodeIds) {\r\n      const nodePinPositionsByPinId: Record<string, Point> = {};\r\n      nodePinPositionsByPinIdByNodeId[nodeId] = nodePinPositionsByPinId;\r\n\r\n      const nodePosition = nodePositionsByNodeId[nodeId] ?? ZeroPoint;\r\n\r\n      const elementType = nodeTypesByNodeId[nodeId];\r\n      if (!elementType) {\r\n        continue;\r\n      }\r\n      const def = nodeDefsByType[elementType];\r\n      if (!def) {\r\n        continue;\r\n      }\r\n\r\n      const pinIds = Object.keys(def.pins);\r\n      for (const pinId of pinIds) {\r\n        const relPinPosition = def.pins[pinId];\r\n        const pinPosition = pointAdd(nodePosition, relPinPosition);\r\n        nodePinPositionsByPinId[pinId] = pinPosition;\r\n      }\r\n    }\r\n\r\n    return nodePinPositionsByPinIdByNodeId;\r\n  }\r\n);\r\n\r\nexport const nodePinPositionFromNodePinSelector = (\r\n  state: AppState,\r\n  nodeId: string,\r\n  pinId: string\r\n) => {\r\n  const positonsByPinIdByNodeId = nodePinPositionsByPinIdByNodeIdSelector(\r\n    state\r\n  );\r\n  const nodePinPositions = positonsByPinIdByNodeId[nodeId];\r\n  if (!nodePinPositions) {\r\n    return ZeroPoint;\r\n  }\r\n  return nodePinPositions[pinId] ?? ZeroPoint;\r\n};\r\n","import { ZeroPoint } from \"@/geometry\";\r\n\r\nimport { createNodeLayoutSelector } from \"../utils\";\r\nimport { NodeLayoutServiceState } from \"../state\";\r\n\r\nexport const nodePositionsByNodeIdSelector = createNodeLayoutSelector(\r\n  (state) => state.nodePositionsById\r\n);\r\n\r\nexport const nodePositionFromNodeIdSelector = createNodeLayoutSelector(\r\n  (state: NodeLayoutServiceState, nodeId: string) =>\r\n    state.nodePositionsById[nodeId] ?? ZeroPoint\r\n);\r\n","import { AppState } from \"@/store\";\r\nimport { Point, pointAdd, ZeroPoint } from \"@/geometry\";\r\n\r\nimport { NodeDefinition } from \"@/services/node-types/types\";\r\nimport { nodeDefFromNodeIdSelector } from \"@/services/node-graph/selectors/node-def\";\r\n\r\nimport { createNodeLayoutSelector } from \"../utils\";\r\nimport { NodeLayoutServiceState } from \"../state\";\r\n\r\nimport { nodePositionFromNodeIdSelector } from \"./node-positions\";\r\n\r\ninterface PositionCache {\r\n  inputNodeDef: NodeDefinition;\r\n  inputNodePosition: Point;\r\n  outputPosition: Point;\r\n}\r\n\r\n// TODO: These build up forever, need to wipe it on occasion.\r\n// Probably should use LRU cache.\r\n// Not fixing it right now as we previously used re-reselect, which\r\n//  also builds up forever.\r\nconst startPositionCacheByConnectionId: Record<string, PositionCache> = {};\r\nconst endPositionCacheByConnectionId: Record<string, PositionCache> = {};\r\n\r\nexport const wireStartPositionFromConnectionIdSelector = (\r\n  state: AppState,\r\n  connectionId: string\r\n) => {\r\n  const {\r\n    outputPin: { nodeId, pinId },\r\n  } = state.services.nodeGraph.connectionsById[connectionId];\r\n\r\n  const nodeDef = nodeDefFromNodeIdSelector(state, nodeId);\r\n  if (!nodeDef) {\r\n    return ZeroPoint;\r\n  }\r\n\r\n  const nodePosition = nodePositionFromNodeIdSelector(state, nodeId);\r\n\r\n  // Caching is to get a consistent reference to avoid component rerenders.\r\n  //  We are not concerned about performance here.\r\n  const cacheData = startPositionCacheByConnectionId[connectionId];\r\n  if (\r\n    cacheData &&\r\n    cacheData.inputNodeDef === nodeDef &&\r\n    cacheData.inputNodePosition.x === nodePosition.x &&\r\n    cacheData.inputNodePosition.y === nodePosition.y\r\n  ) {\r\n    return cacheData.outputPosition;\r\n  }\r\n\r\n  let offset = ZeroPoint;\r\n  if (nodeDef && nodeDef.pins[pinId]) {\r\n    offset = nodeDef.pins[pinId];\r\n  }\r\n  const position = pointAdd(nodePosition, offset);\r\n  startPositionCacheByConnectionId[connectionId] = {\r\n    inputNodeDef: nodeDef,\r\n    inputNodePosition: nodePosition,\r\n    outputPosition: position,\r\n  };\r\n\r\n  return position;\r\n};\r\n\r\nexport const wireEndPositionFromConnectionIdSelector = (\r\n  state: AppState,\r\n  connectionId: string\r\n) => {\r\n  const {\r\n    inputPin: { nodeId, pinId },\r\n  } = state.services.nodeGraph.connectionsById[connectionId];\r\n  const nodeDef = nodeDefFromNodeIdSelector(state, nodeId);\r\n  if (!nodeDef) {\r\n    return ZeroPoint;\r\n  }\r\n\r\n  const nodePosition = nodePositionFromNodeIdSelector(state, nodeId);\r\n\r\n  // Caching is to get a consistent reference to avoid component rerenders.\r\n  //  We are not concerned about performance here.\r\n  const cacheData = endPositionCacheByConnectionId[connectionId];\r\n  if (\r\n    cacheData &&\r\n    cacheData.inputNodeDef === nodeDef &&\r\n    cacheData.inputNodePosition.x === nodePosition.x &&\r\n    cacheData.inputNodePosition.y === nodePosition.y\r\n  ) {\r\n    return cacheData.outputPosition;\r\n  }\r\n\r\n  let offset = ZeroPoint;\r\n  if (nodeDef && nodeDef.pins[pinId]) {\r\n    offset = nodeDef.pins[pinId];\r\n  }\r\n  const position = pointAdd(nodePosition, offset);\r\n  endPositionCacheByConnectionId[connectionId] = {\r\n    inputNodeDef: nodeDef,\r\n    inputNodePosition: nodePosition,\r\n    outputPosition: position,\r\n  };\r\n\r\n  return position;\r\n};\r\n\r\n// WARN: Returns new object with each invocation.  Not safe for react use.\r\n//  Currently used to get all joint ids in reducers.\r\nexport const jointIdsSelector = createNodeLayoutSelector(\r\n  (state: NodeLayoutServiceState) =>\r\n    Object.keys(state.wireJointPositionsByJointId)\r\n);\r\n\r\nexport const wireJointIdsByConnectionIdSelector = createNodeLayoutSelector(\r\n  (state) => state.wireJointIdsByConnectionId\r\n);\r\n\r\nexport const wireJointIdsFromConnectionIdSelector = createNodeLayoutSelector(\r\n  (state: NodeLayoutServiceState, connectionId: string) =>\r\n    state.wireJointIdsByConnectionId[connectionId]\r\n);\r\n\r\nexport const wireJointPositionFromJointIdSelector = createNodeLayoutSelector(\r\n  (state: NodeLayoutServiceState, jointId: string) =>\r\n    state.wireJointPositionsByJointId[jointId]\r\n);\r\n\r\n// WARN: Returns new object with each invocation.  Not safe for react use.\r\n//  Currently used to get all joint ids in reducers.\r\nexport const wireJointPositionsByJointIdSelector = createNodeLayoutSelector(\r\n  (state: NodeLayoutServiceState) => {\r\n    return state.wireJointPositionsByJointId;\r\n  }\r\n);\r\n","import {\r\n  createServiceReducerCreator,\r\n  createServiceSelectorCreator,\r\n} from \"../service-state-utils\";\r\n\r\nexport const createNodeLayoutReducer = createServiceReducerCreator(\r\n  \"nodeLayout\"\r\n);\r\nexport const createNodeLayoutSelector = createServiceSelectorCreator(\r\n  \"nodeLayout\"\r\n);\r\n","import * as React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport useSelector from \"@/hooks/useSelector\";\r\n\r\nimport { interactNode } from \"@/actions/node-interact\";\r\n\r\nimport { editingCircuitNodeIdPathSelector } from \"@/services/circuit-editor-view/selectors/circuit\";\r\n\r\nimport {\r\n  NodeComponentProps,\r\n  NodeComponentType,\r\n  NodeVisualDefinition,\r\n} from \"../types\";\r\n\r\nexport interface NodeVisualPathDefinition {\r\n  /**\r\n   * The svg path of this visual element.\r\n   */\r\n  path: string;\r\n  /**\r\n   * The fill or fill-producing function for this visual element.\r\n   */\r\n  fill?: string | ((state: any) => string);\r\n  stroke?: string | ((state: any) => string);\r\n  strokeWidth?: number | ((state: any) => number);\r\n}\r\n\r\nexport type NodeVisualPath = string | NodeVisualPathDefinition;\r\n\r\nexport interface ShapePathNodeProps extends NodeComponentProps {\r\n  /**\r\n   * The path or paths that make up the visual component of this node.\r\n   */\r\n  shapePath: NodeVisualPath | NodeVisualPath[];\r\n  hitPath: string;\r\n}\r\n\r\nconst ShapePathNode: React.FC<ShapePathNodeProps> = ({\r\n  circuitNodeId,\r\n  shapePath,\r\n  hitPath,\r\n  isSelected,\r\n  elementState,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const editCircuitIdPath = useSelector(editingCircuitNodeIdPathSelector);\r\n\r\n  const onClick = React.useCallback(\r\n    (e: React.MouseEvent) => {\r\n      if (!circuitNodeId) {\r\n        return;\r\n      }\r\n\r\n      if (e.defaultPrevented) {\r\n        return;\r\n      }\r\n\r\n      e.preventDefault();\r\n\r\n      dispatch(interactNode([...editCircuitIdPath, circuitNodeId]));\r\n    },\r\n    [circuitNodeId, dispatch, editCircuitIdPath]\r\n  );\r\n\r\n  const visuals = normalizeVisuals(shapePath, elementState);\r\n  const body = visuals.map((v, i) => (\r\n    <path\r\n      key={i}\r\n      d={v.path}\r\n      // FIXME: If selected, this should use variable --color-element-selected\r\n      fill={isSelected ? \"goldenrod\" : v.fill}\r\n      stroke={isSelected ? \"goldenrod\" : v.stroke}\r\n      strokeWidth={v.strokeWidth}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <g onClick={onClick}>\r\n      <path d={hitPath} fill=\"transparent\" stroke=\"none\" />\r\n      {body}\r\n    </g>\r\n  );\r\n};\r\n\r\nexport function createShapePathVisual(\r\n  hitPath: string,\r\n  shapePath: NodeVisualPath | NodeVisualPath[]\r\n): NodeVisualDefinition {\r\n  return {\r\n    component: (props: NodeComponentProps) => (\r\n      <ShapePathNode shapePath={shapePath} hitPath={hitPath} {...props} />\r\n    ),\r\n    hitPath,\r\n  };\r\n}\r\n\r\nexport function normalizeVisuals(\r\n  v: NodeVisualPath | NodeVisualPath[],\r\n  state: any\r\n): { path: string; fill?: string; stroke?: string; strokeWidth?: number }[] {\r\n  const asArray = Array.isArray(v) ? v : [v];\r\n\r\n  return asArray.map((x) => {\r\n    if (typeof x === \"string\") {\r\n      return {\r\n        path: x,\r\n        fill: \"black\",\r\n        stroke: \"black\",\r\n        strokeWidth: 2,\r\n      };\r\n    }\r\n    const fill = typeof x.fill === \"function\" ? x.fill(state || {}) : x.fill;\r\n    const stroke =\r\n      typeof x.stroke === \"function\" ? x.stroke(state || {}) : x.stroke;\r\n    const strokeWidth =\r\n      typeof x.strokeWidth === \"function\"\r\n        ? x.strokeWidth(state || {})\r\n        : x.strokeWidth;\r\n    return {\r\n      path: x.path,\r\n      fill,\r\n      stroke,\r\n      strokeWidth,\r\n    };\r\n  });\r\n}\r\n","export function circuitIdToNodeType(circuitId: string) {\r\n  return `ic-${circuitId}`;\r\n}\r\n\r\nexport function nodeTypeToCircuitId(nodeType: string): string | null {\r\n  if (!nodeType.startsWith(\"ic-\")) {\r\n    return null;\r\n  }\r\n  return nodeType.substr(3);\r\n}\r\n","import { ToggleElementState } from \"@/elements\";\r\n\r\nimport { createShapePathVisual } from \"../../components/ShapePathNode\";\r\nimport { NodeDefinition } from \"../../types\";\r\n\r\nconst toggleElementDefinition: NodeDefinition = {\r\n  type: \"interaction-toggle\",\r\n  displayName: \"Toggle Switch\",\r\n  elementProduction: \"toggle\",\r\n  visual: createShapePathVisual(`M5,5 L45,5 L45,45 L5,45 z`, [\r\n    {\r\n      path: \"M5,5 L45,5 L45,45 L5,45 z\",\r\n      fill: \"#AFAFAF\",\r\n      stroke: \"black\",\r\n    },\r\n    {\r\n      path: \"M10,10 L40,10 L40,40 L10,40 z\",\r\n      fill: (state: ToggleElementState) =>\r\n        state.toggleState ? \"lightgreen\" : \"darkgreen\",\r\n      stroke: \"black\",\r\n    },\r\n  ]),\r\n  pins: {\r\n    OUT: {\r\n      direction: \"output\",\r\n      x: 45,\r\n      y: 25,\r\n    },\r\n  },\r\n};\r\nexport default toggleElementDefinition;\r\n","import * as React from \"react\";\r\n\r\nimport { NodeDefinition } from \"../../types\";\r\n\r\n// Shape path from https://commons.wikimedia.org/wiki/File:AND_ANSI.svg\r\n\r\nconst hitPath = `M30 5V45H50.47619c11.267908 0 20-9.000045 20-20s-8.732091-20-20-20H30z`;\r\n\r\nconst andNodeDefinition: NodeDefinition = {\r\n  type: \"logic-and\",\r\n  displayName: \"AND\",\r\n  elementProduction: \"and\",\r\n  visual: {\r\n    hitPath,\r\n    component: () => (\r\n      <g>\r\n        <path d={hitPath} fill=\"transparent\" stroke=\"none\" />\r\n        <path\r\n          className=\"node-select-highlight--stroke\"\r\n          fill=\"none\"\r\n          stroke=\"#000\"\r\n          strokeWidth=\"2\"\r\n          d=\"M70 25h25M31 15H5M32 35H5\"\r\n        />\r\n        <path\r\n          className=\"node-select-highlight--fill\"\r\n          d=\"M30 5V45H50.47619c11.267908 0 20-9.000045 20-20s-8.732091-20-20-20H30zm2.857143 2.857143H50.47619c9.760663 0 16.666667 7.639955 16.666667 17.142857 0 9.502902-7.382195 17.142857-17.142857 17.142857H32.857143V7.857143z\"\r\n        />\r\n      </g>\r\n    ),\r\n  },\r\n  pins: {\r\n    A: { direction: \"input\", x: 0, y: 14.5 },\r\n    B: { direction: \"input\", x: 0, y: 35 },\r\n    OUT: { direction: \"output\", x: 100, y: 25 },\r\n  },\r\n};\r\nexport default andNodeDefinition;\r\n","import * as React from \"react\";\r\n\r\nimport { NodeDefinition } from \"../../types\";\r\n\r\n// Shape path from https://commons.wikimedia.org/wiki/File:Buffer_ANSI.svg\r\n\r\nconst hitPath = `M 28.96875,2.59375 L 28.96875,5 L 28.96875,45 L 28.96875,47.40625 L 31.125,46.34375 L 72.15625,26.34375 L 75,25 L 72.15625,23.65625 L 31.125,3.65625 L 28.96875,2.59375 z`;\r\n\r\nconst bufferNodeDefinition: NodeDefinition = {\r\n  type: \"logic-buffer\",\r\n  displayName: \"Buffer\",\r\n  elementProduction: \"buffer\",\r\n  visual: {\r\n    hitPath,\r\n    component: () => (\r\n      <g>\r\n        <path d={hitPath} fill=\"transparent\" stroke=\"none\" />\r\n        <path\r\n          className=\"node-select-highlight--stroke\"\r\n          fill=\"none\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"2\"\r\n          d=\"M 72,25 L 95.085706,25\"\r\n        />\r\n        <path\r\n          className=\"node-select-highlight--stroke\"\r\n          fill=\"none\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"2\"\r\n          d=\"M 29.043478,25 L 5.0434781,25\"\r\n        />\r\n        <path\r\n          className=\"node-select-highlight--fill\"\r\n          stroke=\"none\"\r\n          fill=\"black\"\r\n          d=\"M 28.96875,2.59375 L 28.96875,5 L 28.96875,45 L 28.96875,47.40625 L 31.125,46.34375 L 72.15625,26.34375 L 75,25 L 72.15625,23.65625 L 31.125,3.65625 L 28.96875,2.59375 z M 31.96875,7.40625 L 68.09375,25 L 31.96875,42.59375 L 31.96875,7.40625 z\"\r\n        />\r\n      </g>\r\n    ),\r\n  },\r\n  pins: {\r\n    IN: {\r\n      direction: \"input\",\r\n      x: 0,\r\n      y: 25,\r\n    },\r\n    OUT: {\r\n      direction: \"output\",\r\n      x: 100,\r\n      y: 25,\r\n    },\r\n  },\r\n};\r\nexport default bufferNodeDefinition;\r\n","import * as React from \"react\";\r\n\r\nimport { NodeDefinition } from \"../../types\";\r\n\r\n// Shape path from https://commons.wikimedia.org/wiki/File:NOR_ANSI.svg\r\n\r\nconst hitPath = `M24.09375 5l2 2.4375S31.75 14.437549 31.75 25s-5.65625 17.5625-5.65625 17.5625l-2 2.4375H41.25c2.408076.000001 7.689699.024514 13.625-2.40625s12.536536-7.343266 17.6875-16.875L71.25 25l1.3125-.71875C62.259387 5.21559 46.006574 5 41.25 5H24.09375z`;\r\nconst norNodeDefinition: NodeDefinition = {\r\n  type: \"logic-nor\",\r\n  displayName: \"NOR\",\r\n  elementProduction: \"nor\",\r\n  visual: {\r\n    hitPath,\r\n    component: () => (\r\n      <g>\r\n        <path d={hitPath} fill=\"transparent\" stroke=\"none\" />\r\n        <path\r\n          className=\"node-select-highlight--stroke\"\r\n          fill=\"none\"\r\n          stroke=\"#000\"\r\n          strokeWidth=\"2\"\r\n          d=\"M79 25h16M31 15H5M32 35H5\"\r\n        />\r\n        <path\r\n          className=\"node-select-highlight--fill\"\r\n          fillRule=\"evenodd\"\r\n          d=\"M24.09375 5l2 2.4375S31.75 14.437549 31.75 25s-5.65625 17.5625-5.65625 17.5625l-2 2.4375H41.25c2.408076.000001 7.689699.024514 13.625-2.40625s12.536536-7.343266 17.6875-16.875L71.25 25l1.3125-.71875C62.259387 5.21559 46.006574 5 41.25 5H24.09375zm5.875 3H41.25c4.684173 0 18.28685-.130207 27.96875 17C64.451964 33.429075 58.697469 37.68391 53.5 39.8125 48.139339 42.007924 43.658075 42.000001 41.25 42H30c1.873588-3.108434 4.75-9.04935 4.75-17 0-7.973354-2.908531-13.900185-4.78125-17z\"\r\n        />\r\n        <path\r\n          className=\"node-select-highlight--stroke\"\r\n          fill=\"none\"\r\n          stroke=\"#000\"\r\n          strokeWidth=\"3\"\r\n          d=\"M79 25a4 4 0 1 1-8 0 4 4 0 1 1 8 0z\"\r\n        />\r\n      </g>\r\n    ),\r\n  },\r\n  pins: {\r\n    A: {\r\n      direction: \"input\",\r\n      x: 0,\r\n      y: 14.5,\r\n    },\r\n    B: {\r\n      direction: \"input\",\r\n      x: 0,\r\n      y: 35,\r\n    },\r\n    OUT: {\r\n      direction: \"output\",\r\n      x: 100,\r\n      y: 25,\r\n    },\r\n  },\r\n};\r\nexport default norNodeDefinition;\r\n","import * as React from \"react\";\r\n\r\nimport { NodeDefinition } from \"../../types\";\r\n\r\n// Shape path from https://commons.wikimedia.org/wiki/File:NOT_ANSI.svg\r\n\r\nconst hitPath = `M28.96875 2.59375v44.8125l2.15625-1.0625 41.03125-20v-2.6875l-41.03125-20-2.15625-1.0625z`;\r\n\r\nconst notNodeDefinition: NodeDefinition = {\r\n  type: \"logic-not\",\r\n  displayName: \"NOT\",\r\n  elementProduction: \"not\",\r\n  visual: {\r\n    hitPath,\r\n    component: () => (\r\n      <g>\r\n        <path d={hitPath} fill=\"transparent\" stroke=\"none\" />\r\n        <path\r\n          className=\"node-select-highlight--stroke\"\r\n          fill=\"none\"\r\n          stroke=\"#000\"\r\n          strokeWidth=\"2\"\r\n          d=\"M79.15691 25H95M29.043478 25h-24\"\r\n        />\r\n        <path\r\n          className=\"node-select-highlight--fill\"\r\n          d=\"M28.96875 2.59375v44.8125l2.15625-1.0625 41.03125-20v-2.6875l-41.03125-20-2.15625-1.0625zm3 4.8125L68.09375 25l-36.125 17.59375V7.40625z\"\r\n        />\r\n        <path\r\n          className=\"node-select-highlight--stroke\"\r\n          fill=\"none\"\r\n          stroke=\"#000\"\r\n          strokeWidth=\"3\"\r\n          d=\"M79 25a4 4 0 1 1-8 0 4 4 0 1 1 8 0z\"\r\n        />\r\n      </g>\r\n    ),\r\n  },\r\n  pins: {\r\n    IN: {\r\n      direction: \"input\",\r\n      x: 0,\r\n      y: 25,\r\n    },\r\n    OUT: {\r\n      direction: \"output\",\r\n      x: 100,\r\n      y: 25,\r\n    },\r\n  },\r\n};\r\nexport default notNodeDefinition;\r\n","import * as React from \"react\";\r\n\r\nimport { NodeDefinition } from \"../../types\";\r\n\r\n// Shape path from https://commons.wikimedia.org/wiki/File:OR_ANSI.svg\r\n\r\nconst hitPath = `M24.09375 5l2 2.4375S31.75 14.437549 31.75 25s-5.65625 17.5625-5.65625 17.5625l-2 2.4375H41.25c2.408076.000001 7.689699.024514 13.625-2.40625s12.536536-7.343266 17.6875-16.875L71.25 25l1.3125-.71875C62.259387 5.21559 46.006574 5 41.25 5H24.09375z`;\r\n\r\nconst orNodeDefinition: NodeDefinition = {\r\n  type: \"logic-or\",\r\n  displayName: \"OR\",\r\n  elementProduction: \"or\",\r\n  visual: {\r\n    hitPath,\r\n    component: () => (\r\n      <g>\r\n        <path d={hitPath} fill=\"transparent\" stroke=\"none\" />\r\n        <path\r\n          className=\"node-select-highlight--stroke\"\r\n          fill=\"none\"\r\n          stroke=\"#000\"\r\n          strokeWidth=\"2\"\r\n          d=\"M70 25h25M31 15H5M32 35H5\"\r\n        />\r\n        <path\r\n          className=\"node-select-highlight--fill\"\r\n          fillRule=\"evenodd\"\r\n          d=\"M24.09375 5l2 2.4375S31.75 14.437549 31.75 25s-5.65625 17.5625-5.65625 17.5625l-2 2.4375H41.25c2.408076.000001 7.689699.024514 13.625-2.40625s12.536536-7.343266 17.6875-16.875L71.25 25l1.3125-.71875C62.259387 5.21559 46.006574 5 41.25 5H24.09375zm5.875 3H41.25c4.684173 0 18.28685-.130207 27.96875 17C64.451964 33.429075 58.697469 37.68391 53.5 39.8125 48.139339 42.007924 43.658075 42.000001 41.25 42H30c1.873588-3.108434 4.75-9.04935 4.75-17 0-7.973354-2.908531-13.900185-4.78125-17z\"\r\n        />\r\n      </g>\r\n    ),\r\n  },\r\n  pins: {\r\n    A: {\r\n      direction: \"input\",\r\n      x: 0,\r\n      y: 14.5,\r\n    },\r\n    B: {\r\n      direction: \"input\",\r\n      x: 0,\r\n      y: 35,\r\n    },\r\n    OUT: {\r\n      direction: \"output\",\r\n      x: 100,\r\n      y: 25,\r\n    },\r\n  },\r\n};\r\nexport default orNodeDefinition;\r\n","import * as React from \"react\";\r\n\r\nimport { NodeDefinition } from \"../../types\";\r\n\r\n// Shape path from https://commons.wikimedia.org/wiki/File:XOR_ANSI.svg\r\n\r\nconst hitPath = `M24.09375 5l2 2.4375S31.75 14.43755 31.75 25s-5.65625 17.5625-5.65625 17.5625l-2 2.4375H41.25c2.40808 0 7.6897.02451 13.625-2.40625s12.53654-7.34327 17.6875-16.875L71.25 25l1.3125-.71875C62.25939 5.21559 46.00657 5 41.25 5H24.09375z`;\r\n\r\nconst xorNodeDefinition: NodeDefinition = {\r\n  type: \"logic-xor\",\r\n  displayName: \"XOR\",\r\n  elementProduction: \"xor\",\r\n  visual: {\r\n    hitPath,\r\n    component: () => (\r\n      <g>\r\n        <path d={hitPath} fill=\"transparent\" stroke=\"none\" />\r\n        <path\r\n          className=\"node-select-highlight--stroke\"\r\n          fill=\"none\"\r\n          stroke=\"#000\"\r\n          strokeWidth=\"2\"\r\n          d=\"M70 25h25M30.38572 15H5M31.3621 35H5\"\r\n        />\r\n        <g fillRule=\"evenodd\" className=\"node-select-highlight--fill\">\r\n          <path d=\"M24.25 42C22.65263 44.6444 22 45 22 45h-3.65625l2-2.4375S26 35.56245 26 25 20.34375 7.4375 20.34375 7.4375l-2-2.4375H22c.78125.9375 1.42188 1.65625 2.21875 3C26.09147 11.09981 29 17.02665 29 25c0 7.95065-2.8967 13.87942-4.75 17z\" />\r\n          <path d=\"M24.09375 5l2 2.4375S31.75 14.43755 31.75 25s-5.65625 17.5625-5.65625 17.5625l-2 2.4375H41.25c2.40808 0 7.6897.02451 13.625-2.40625s12.53654-7.34327 17.6875-16.875L71.25 25l1.3125-.71875C62.25939 5.21559 46.00657 5 41.25 5H24.09375zm5.875 3H41.25c4.68417 0 18.28685-.1302 27.96875 17C64.45196 33.42907 58.69747 37.68391 53.5 39.8125 48.13934 42.00792 43.65808 42 41.25 42H30c1.87359-3.10843 4.75-9.04935 4.75-17 0-7.97335-2.90853-13.90019-4.78125-17z\" />\r\n        </g>\r\n      </g>\r\n    ),\r\n  },\r\n  pins: {\r\n    A: {\r\n      direction: \"input\",\r\n      x: 0,\r\n      y: 14.5,\r\n    },\r\n    B: {\r\n      direction: \"input\",\r\n      x: 0,\r\n      y: 35,\r\n    },\r\n    OUT: {\r\n      direction: \"output\",\r\n      x: 100,\r\n      y: 25,\r\n    },\r\n  },\r\n};\r\nexport default xorNodeDefinition;\r\n","import { LedElementState } from \"@/elements\";\r\n\r\nimport { createShapePathVisual } from \"../../components/ShapePathNode\";\r\nimport { NodeDefinition } from \"../../types\";\r\n\r\nfunction genCirclePath(cx: number, cy: number, r: number): string {\r\n  return `M ${cx - r}, ${cy}\r\n    a ${r},${r} 0 1,0 ${r * 2},0\r\n    a ${r},${r} 0 1,0 ${-(r * 2)},0`;\r\n}\r\n\r\nconst path = genCirclePath(25, 25, 20);\r\n\r\nconst ledNodeDefinition: NodeDefinition = {\r\n  type: \"output-led\",\r\n  displayName: \"Indicator Light\",\r\n  elementProduction: \"led\",\r\n  visual: createShapePathVisual(path, {\r\n    path,\r\n    stroke: \"black\",\r\n    strokeWidth: 3,\r\n    fill: (state: LedElementState) =>\r\n      state.value ? \"lightgreen\" : \"darkgreen\",\r\n  }),\r\n  pins: {\r\n    IN: {\r\n      direction: \"input\",\r\n      x: 0,\r\n      y: 25,\r\n    },\r\n  },\r\n};\r\nexport default ledNodeDefinition;\r\n","import {\r\n  createShapePathVisual,\r\n  NodeVisualPathDefinition,\r\n} from \"../../components/ShapePathNode\";\r\nimport { NodeDefinition } from \"../../types\";\r\n\r\n// Shape path from https://commons.wikimedia.org/wiki/File:7-segment_abcdefg.svg\r\n\r\nconst SCALE = 3;\r\nconst OFFSET = [15, 0];\r\n\r\n/**\r\n * Produce a visual path definition of a segment given a series of polygon points.\r\n * The path definition will color itself based on the state key specified by 'name'\r\n * @param name The state key to select color based on.  The key should represent a boolean value.\r\n * @param points An array of [x,y] pairs that make up the polygon.\r\n */\r\nfunction createSeg(\r\n  name: string,\r\n  points: [number, number][]\r\n): NodeVisualPathDefinition {\r\n  const start = points[0];\r\n  let path = `M${start[0] * SCALE + OFFSET[0]},${start[1] * SCALE + OFFSET[1]}`;\r\n  for (const p of points.slice(1)) {\r\n    const [x, y] = p;\r\n    path += `L${x * SCALE + OFFSET[0]},${y * SCALE + OFFSET[1]}`;\r\n  }\r\n  path += \"z\";\r\n  return {\r\n    path,\r\n    fill: (state) => (state[name] ? \"red\" : \"gray\"),\r\n  };\r\n}\r\n\r\nconst seg7ElementDefinition: NodeDefinition = {\r\n  type: \"output-seg7\",\r\n  displayName: \"7-Segment Display\",\r\n  elementProduction: \"seg7\",\r\n  visual: createShapePathVisual(`M15,0 V63 H45 V0 z`, [\r\n    createSeg(\"A\", [\r\n      [1, 1],\r\n      [2, 0],\r\n      [8, 0],\r\n      [9, 1],\r\n      [8, 2],\r\n      [2, 2],\r\n    ]),\r\n    createSeg(\"B\", [\r\n      [9, 1],\r\n      [10, 2],\r\n      [10, 8],\r\n      [9, 9],\r\n      [8, 8],\r\n      [8, 2],\r\n    ]),\r\n    createSeg(\"C\", [\r\n      [9, 9],\r\n      [10, 10],\r\n      [10, 16],\r\n      [9, 17],\r\n      [8, 16],\r\n      [8, 10],\r\n    ]),\r\n    createSeg(\"D\", [\r\n      [9, 17],\r\n      [8, 18],\r\n      [2, 18],\r\n      [1, 17],\r\n      [2, 16],\r\n      [8, 16],\r\n    ]),\r\n    createSeg(\"E\", [\r\n      [1, 17],\r\n      [0, 16],\r\n      [0, 10],\r\n      [1, 9],\r\n      [2, 10],\r\n      [2, 16],\r\n    ]),\r\n    createSeg(\"F\", [\r\n      [1, 9],\r\n      [0, 8],\r\n      [0, 2],\r\n      [1, 1],\r\n      [2, 2],\r\n      [2, 8],\r\n    ]),\r\n    createSeg(\"G\", [\r\n      [1, 9],\r\n      [2, 8],\r\n      [8, 8],\r\n      [9, 9],\r\n      [8, 10],\r\n      [2, 10],\r\n    ]),\r\n  ]),\r\n  pins: {\r\n    A: {\r\n      direction: \"input\",\r\n      x: 0,\r\n      y: 5,\r\n    },\r\n    B: {\r\n      direction: \"input\",\r\n      x: 0,\r\n      y: 15,\r\n    },\r\n    C: {\r\n      direction: \"input\",\r\n      x: 0,\r\n      y: 25,\r\n    },\r\n    D: {\r\n      direction: \"input\",\r\n      x: 0,\r\n      y: 35,\r\n    },\r\n    E: {\r\n      direction: \"input\",\r\n      x: 0,\r\n      y: 45,\r\n    },\r\n    F: {\r\n      direction: \"input\",\r\n      x: 0,\r\n      y: 55,\r\n    },\r\n    G: {\r\n      direction: \"input\",\r\n      x: 0,\r\n      y: 65,\r\n    },\r\n  },\r\n};\r\nexport default seg7ElementDefinition;\r\n","import * as React from \"react\";\r\n\r\nimport { NodeDefinition } from \"../../types\";\r\n\r\nconst hitPath = `M15,25 a 10,10 0 1,0 20 0 a 10,10 0 1,0 -20,0`;\r\n\r\nconst pinInputElementDefinition: NodeDefinition = {\r\n  type: \"pin-input\",\r\n  displayName: \"Input Pin\",\r\n  visual: {\r\n    hitPath,\r\n    component: () => (\r\n      <g>\r\n        <path d={hitPath} fill=\"transparent\" stroke=\"none\" />\r\n        <path\r\n          className=\"node-select-highlight--stroke\"\r\n          d=\"M15,25 a 10,10 0 1,0 20 0 a 10,10 0 1,0 -20,0 M35,25 h5\"\r\n          stroke=\"black\"\r\n          fill=\"none\"\r\n        />\r\n      </g>\r\n    ),\r\n  },\r\n  pins: {\r\n    OUT: {\r\n      direction: \"output\",\r\n      x: 40,\r\n      y: 25,\r\n    },\r\n  },\r\n};\r\nexport default pinInputElementDefinition;\r\n","import * as React from \"react\";\r\n\r\nimport { NodeDefinition } from \"../../types\";\r\n\r\nconst hitPath = `M15,25 a 10,10 0 1,0 20 0 a 10,10 0 1,0 -20,0`;\r\n\r\nconst pinOutputElementDefinition: NodeDefinition = {\r\n  type: \"pin-output\",\r\n  displayName: \"Output Pin\",\r\n  visual: {\r\n    hitPath,\r\n    component: () => (\r\n      <g>\r\n        <path d={hitPath} fill=\"transparent\" stroke=\"none\" />\r\n        <path\r\n          className=\"node-select-highlight--stroke\"\r\n          d=\"M15,25 a 10,10 0 1,0 20 0 a 10,10 0 1,0 -20,0 M15,25 h-5\"\r\n          stroke=\"black\"\r\n          fill=\"none\"\r\n        />\r\n      </g>\r\n    ),\r\n  },\r\n  pins: {\r\n    IN: {\r\n      direction: \"input\",\r\n      x: 10,\r\n      y: 25,\r\n    },\r\n  },\r\n};\r\nexport default pinOutputElementDefinition;\r\n","import * as React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { Point } from \"@/geometry\";\r\nimport { PinDirection } from \"@/logic\";\r\n\r\nimport interaction from \"@/styles/interaction.module.css\";\r\n\r\nimport useSelector from \"@/hooks/useSelector\";\r\n\r\nimport { viewCircuit } from \"@/actions/circuit-view\";\r\n\r\nimport { circuitNameFromIdSelector } from \"@/services/circuits/selectors/circuits\";\r\nimport { editingCircuitNodeIdPathSelector } from \"@/services/circuit-editor-view/selectors/circuit\";\r\n\r\nimport { NodeComponentProps, NodeVisualDefinition } from \"../../types\";\r\n\r\nexport interface IntegratedCircuitVisualProps {\r\n  circuitId: string;\r\n  inputPinCount: number;\r\n  outputPinCount: number;\r\n}\r\n\r\nfunction getBorderPath(inputPinCount: number, outputPinCount: number) {\r\n  const height = Math.max(inputPinCount, outputPinCount, 1) * 50 - 20;\r\n  return `M10,10 h80 v${height} h-80 z`;\r\n}\r\n\r\nconst IntegratedCircuitVisual: React.FC<\r\n  IntegratedCircuitVisualProps & NodeComponentProps\r\n> = ({ circuitNodeId, circuitId, inputPinCount, outputPinCount }) => {\r\n  const dispatch = useDispatch();\r\n  const circuitName = useSelector((state) =>\r\n    circuitNameFromIdSelector(state, circuitId)\r\n  );\r\n  const borderPath = getBorderPath(inputPinCount, outputPinCount);\r\n\r\n  const editCircuitIdPath = useSelector(editingCircuitNodeIdPathSelector);\r\n\r\n  const onViewCircuit = React.useCallback(\r\n    (e: React.MouseEvent) => {\r\n      if (!circuitNodeId) {\r\n        return;\r\n      }\r\n\r\n      if (e.defaultPrevented) {\r\n        return;\r\n      }\r\n      e.preventDefault();\r\n\r\n      dispatch(viewCircuit(circuitId, [...editCircuitIdPath, circuitNodeId]));\r\n    },\r\n    [circuitId, circuitNodeId, dispatch, editCircuitIdPath]\r\n  );\r\n\r\n  const inputPins: JSX.Element[] = [];\r\n  for (let i = 0; i < inputPinCount; i++) {\r\n    const y = i * 50 + 25;\r\n    inputPins.push(\r\n      <line\r\n        key={i}\r\n        className=\"node-select-highlight--stroke\"\r\n        stroke=\"black\"\r\n        strokeWidth={2}\r\n        x1={0}\r\n        y1={y}\r\n        x2={10}\r\n        y2={y}\r\n      />\r\n    );\r\n  }\r\n\r\n  const outputPins: JSX.Element[] = [];\r\n  for (let i = 0; i < outputPinCount; i++) {\r\n    const y = i * 50 + 25;\r\n    outputPins.push(\r\n      <line\r\n        key={i}\r\n        className=\"node-select-highlight--stroke\"\r\n        stroke=\"black\"\r\n        strokeWidth={2}\r\n        x1={90}\r\n        y1={y}\r\n        x2={100}\r\n        y2={y}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <g>\r\n      <path\r\n        className=\"node-select-highlight--stroke\"\r\n        stroke=\"black\"\r\n        fill=\"transparent\"\r\n        d={borderPath}\r\n        onDoubleClick={onViewCircuit}\r\n      />\r\n      <text\r\n        className={interaction[\"text-unselectable\"]}\r\n        textAnchor=\"middle\"\r\n        x={50}\r\n        y={30}\r\n      >\r\n        {circuitName}\r\n      </text>\r\n      {inputPins}\r\n      {outputPins}\r\n    </g>\r\n  );\r\n};\r\n\r\nconst IntegratedCircuitTrayVisual: React.FC<IntegratedCircuitVisualProps> = () => {\r\n  return (\r\n    <g stroke=\"black\" strokeWidth={1}>\r\n      <rect x={10} y={10} width={30} height={30} fill=\"none\" />\r\n\r\n      <line x1={10} y1={15} x2={5} y2={15} />\r\n      <line x1={40} y1={15} x2={45} y2={15} />\r\n\r\n      <line x1={10} y1={35} x2={5} y2={35} />\r\n      <line x1={40} y1={35} x2={45} y2={35} />\r\n    </g>\r\n  );\r\n};\r\n\r\nexport function circuitToNodeVisual(\r\n  circuitId: string,\r\n  inputPinCount: number,\r\n  outputPinCount: number\r\n): NodeVisualDefinition {\r\n  const icProps: IntegratedCircuitVisualProps = {\r\n    circuitId,\r\n    inputPinCount,\r\n    outputPinCount,\r\n  };\r\n\r\n  return {\r\n    hitPath: getBorderPath(inputPinCount, outputPinCount),\r\n    trayComponent: (props) => (\r\n      <IntegratedCircuitTrayVisual {...icProps} {...props} />\r\n    ),\r\n    component: (props) => <IntegratedCircuitVisual {...icProps} {...props} />,\r\n  };\r\n}\r\n\r\nexport function circuitPinPosition(\r\n  pinIndex: number,\r\n  direction: PinDirection\r\n): Point {\r\n  return {\r\n    x: direction === \"input\" ? 0 : 100,\r\n    y: pinIndex * 50 + 25,\r\n  };\r\n}\r\n","import { createSelector } from \"reselect\";\r\nimport sortBy from \"lodash/sortBy\";\r\n\r\nimport { nodeIdsByCircuitIdSelector } from \"@/services/circuits/selectors/nodes\";\r\nimport { ROOT_CIRCUIT_ID } from \"@/services/circuits/constants\";\r\nimport { nodeTypesByNodeIdSelector } from \"@/services/node-graph/selectors/nodes\";\r\nimport { nodePositionsByNodeIdSelector } from \"@/services/node-layout/selectors/node-positions\";\r\n\r\nimport {\r\n  NodeDefinition,\r\n  NodeDefinitionSource,\r\n  NodePinDefinition,\r\n} from \"../../types\";\r\n\r\nimport {\r\n  circuitPinPosition,\r\n  circuitToNodeVisual,\r\n} from \"./IntegratedCircuitVisual\";\r\n\r\nimport { circuitIdToNodeType } from \"./utils\";\r\nimport { circuitNamesByIdSelector } from \"@/services/circuits/selectors/circuits\";\r\n\r\nconst IntegratedCircuitDefinitionSource: NodeDefinitionSource = createSelector(\r\n  nodeIdsByCircuitIdSelector,\r\n  nodeTypesByNodeIdSelector,\r\n  nodePositionsByNodeIdSelector,\r\n  circuitNamesByIdSelector,\r\n  (\r\n    nodeIdsByCircuitId,\r\n    nodeTypesByNodeId,\r\n    nodePositionsByNodeId,\r\n    circuitNamesById\r\n  ) => {\r\n    return Object.keys(nodeIdsByCircuitId)\r\n      .filter((x) => x !== ROOT_CIRCUIT_ID)\r\n      .map((circuitId) => {\r\n        const circuitNodeIds = nodeIdsByCircuitId[circuitId] ?? [];\r\n        const circuitName =\r\n          circuitNamesById[circuitId] ?? circuitId.substr(0, 5);\r\n\r\n        // Sort by y axis position to get consistent pin locations.\r\n        let pinNodeIds = circuitNodeIds.filter((circuitNodeId) =>\r\n          nodeTypesByNodeId[circuitNodeId].startsWith(\"pin-\")\r\n        );\r\n        pinNodeIds = sortBy(\r\n          pinNodeIds,\r\n          (nodeId) => nodePositionsByNodeId[nodeId].y,\r\n          (nodeId) => nodePositionsByNodeId[nodeId].x\r\n        );\r\n\r\n        const pins: Record<string, NodePinDefinition> = {};\r\n        let inputPinCount = 0;\r\n        let outputPinCount = 0;\r\n        for (const pinNodeId of pinNodeIds) {\r\n          const type = nodeTypesByNodeId[pinNodeId];\r\n          if (type === \"pin-input\") {\r\n            pins[pinNodeId] = {\r\n              direction: \"input\",\r\n              ...circuitPinPosition(inputPinCount, \"input\"),\r\n            };\r\n            inputPinCount++;\r\n          } else if (type === \"pin-output\") {\r\n            pins[pinNodeId] = {\r\n              direction: \"output\",\r\n              ...circuitPinPosition(outputPinCount, \"output\"),\r\n            };\r\n            outputPinCount++;\r\n          }\r\n        }\r\n\r\n        const def: NodeDefinition = {\r\n          type: circuitIdToNodeType(circuitId),\r\n          displayName: circuitName,\r\n          elementProduction: {\r\n            type: \"circuit\",\r\n            circuitId,\r\n          },\r\n          visual: circuitToNodeVisual(circuitId, inputPinCount, outputPinCount),\r\n          pins,\r\n        };\r\n        return def;\r\n      });\r\n  }\r\n);\r\n\r\nexport default [IntegratedCircuitDefinitionSource];\r\n","import { NodeDefinitionSource } from \"../types\";\r\n\r\nimport IntegratedCircuitDefinitionSources from \"./integrated-circuits\";\r\nimport InteractionNodeDefinitionSources from \"./interaction\";\r\nimport LogicNodeDefinitionSources from \"./logic\";\r\nimport OutputNodeDefinitionSources from \"./output\";\r\nimport PinNodeDefinitionSources from \"./pins\";\r\n\r\nconst nodeDefinitionSources: NodeDefinitionSource[] = [\r\n  ...IntegratedCircuitDefinitionSources,\r\n  ...InteractionNodeDefinitionSources,\r\n  ...LogicNodeDefinitionSources,\r\n  ...OutputNodeDefinitionSources,\r\n  ...PinNodeDefinitionSources,\r\n];\r\n\r\nexport default nodeDefinitionSources;\r\n","import { NodeDefinitionSource } from \"../../types\";\r\n\r\nconst InteractionNodeDefinitionSources: NodeDefinitionSource[] = [\r\n  require(\"./toggle\").default,\r\n];\r\n\r\nexport default InteractionNodeDefinitionSources;\r\n","import { NodeDefinitionSource } from \"../../types\";\r\n\r\nconst LogicNodeDefinitionSources: NodeDefinitionSource[] = [\r\n  require(\"./and\").default,\r\n  require(\"./buffer\").default,\r\n  require(\"./nor\").default,\r\n  require(\"./not\").default,\r\n  require(\"./or\").default,\r\n  require(\"./xor\").default,\r\n];\r\n\r\nexport default LogicNodeDefinitionSources;\r\n","import { NodeDefinitionSource } from \"../../types\";\r\n\r\nconst OutputNodeDefinitionSources: NodeDefinitionSource[] = [\r\n  require(\"./led\").default,\r\n  require(\"./seg7\").default,\r\n];\r\n\r\nexport default OutputNodeDefinitionSources;\r\n","import { NodeDefinitionSource } from \"../../types\";\r\n\r\nconst PinNodeDefinitionSources: NodeDefinitionSource[] = [\r\n  require(\"./input\").default,\r\n  require(\"./output\").default,\r\n];\r\n\r\nexport default PinNodeDefinitionSources;\r\n","import flatMap from \"lodash/flatMap\";\r\nimport find from \"lodash/find\";\r\n\r\nimport { asArray, MaybeArray } from \"@/arrays\";\r\nimport { AppState } from \"@/store\";\r\n\r\nimport nodeDefinitionSources from \"../definition-sources\";\r\nimport { NodeDefinition, NodeDefinitionSource } from \"../types\";\r\nimport { createSelector } from \"reselect\";\r\n\r\n/**\r\n * Gets an array of node definitions from the current state.\r\n * WARN: Returns an unstable reference, not react safe.\r\n */\r\nlet cachedNodeDefinitionsSelector: NodeDefinition[] = [];\r\nexport const nodeDefinitionsSelector = (state: AppState) => {\r\n  const nodeDefinitions = flatMap(nodeDefinitionSources, (source) =>\r\n    resolveSources(source, state)\r\n  );\r\n\r\n  if (\r\n    nodeDefinitions.every(\r\n      (def, index) => def === cachedNodeDefinitionsSelector[index]\r\n    )\r\n  ) {\r\n    return cachedNodeDefinitionsSelector;\r\n  }\r\n\r\n  cachedNodeDefinitionsSelector = nodeDefinitions;\r\n  return nodeDefinitions;\r\n};\r\n\r\nexport const nodeDefinitionsByTypeSelector = createSelector(\r\n  nodeDefinitionsSelector,\r\n  (defs) => {\r\n    const defsByType: Record<string, NodeDefinition> = {};\r\n    for (const def of defs) {\r\n      defsByType[def.type] = def;\r\n    }\r\n    return defsByType;\r\n  }\r\n);\r\n\r\nexport const nodeDefinitionFromTypeSelector = (\r\n  state: AppState,\r\n  nodeType: string\r\n) => {\r\n  const definitions = nodeDefinitionsSelector(state);\r\n  return find(definitions, (x) => x.type === nodeType) ?? null;\r\n};\r\n\r\nfunction resolveSources(\r\n  source: NodeDefinitionSource,\r\n  state: AppState\r\n): NodeDefinition[] {\r\n  let resolved: MaybeArray<NodeDefinition>;\r\n  if (typeof source === \"function\") {\r\n    resolved = source(state);\r\n  } else {\r\n    resolved = source;\r\n  }\r\n\r\n  return asArray(resolved);\r\n}\r\n","import { createSelector } from \"reselect\";\r\n\r\nimport pick from \"lodash/pick\";\r\n\r\nimport { nodesByNodeIdSelector } from \"@/services/node-graph/selectors/nodes\";\r\n\r\nimport { createSelectionSelector } from \"../utils\";\r\nimport { SelectionServiceState } from \"../state\";\r\n\r\nexport const selectedNodeIdsSelector = createSelectionSelector(\r\n  (state) => state.selectedNodeIds\r\n);\r\n\r\nexport const isNodeSelectedFromNodeIdSelector = createSelectionSelector(\r\n  (s: SelectionServiceState, nodeId: string) =>\r\n    s.selectedNodeIds.indexOf(nodeId) !== -1\r\n);\r\n\r\nexport const selectedNodesByIdSelector = createSelector(\r\n  nodesByNodeIdSelector,\r\n  selectedNodeIdsSelector,\r\n  (nodesById, selectedNodeIds) => pick(nodesById, selectedNodeIds)\r\n);\r\n\r\nexport const selectedConnectionIdsSelector = createSelectionSelector(\r\n  (state) => state.selectedConnectionIds\r\n);\r\n\r\nexport const isWireSelectedFromConnectionIdSelector = createSelectionSelector(\r\n  (s: SelectionServiceState, connectionId: string) =>\r\n    s.selectedConnectionIds.indexOf(connectionId) !== -1\r\n);\r\n\r\nexport const selectedJointIdsSelector = createSelectionSelector(\r\n  (state) => state.selectedJointIds\r\n);\r\n\r\nexport const isJointSelectedFromJointIdSelector = createSelectionSelector(\r\n  (s: SelectionServiceState, jointId: string) =>\r\n    s.selectedJointIds.indexOf(jointId) !== -1\r\n);\r\n","import {\r\n  createServiceReducerCreator,\r\n  createServiceSelectorCreator,\r\n} from \"../service-state-utils\";\r\n\r\nexport const createSelectionReducer = createServiceReducerCreator(\"selection\");\r\nexport const createSelectionSelector = createServiceSelectorCreator(\r\n  \"selection\"\r\n);\r\n","import { AnyAction, Reducer } from \"redux\";\r\n\r\nimport { AppState, defaultAppState } from \"@/store\";\r\nimport { fpSet } from \"@/utils\";\r\n\r\nexport type ServiceKey = keyof AppState[\"services\"];\r\nexport type ServiceState<\r\n  TServiceKey extends ServiceKey\r\n> = AppState[\"services\"][TServiceKey];\r\n\r\nexport interface ServiceReducer<TServiceState> {\r\n  (\r\n    state: Readonly<TServiceState>,\r\n    action: AnyAction,\r\n    appState: AppState\r\n  ): TServiceState;\r\n}\r\n\r\nexport function createServiceReducerCreator<TServiceKey extends ServiceKey>(\r\n  service: TServiceKey\r\n): (\r\n  reducer: ServiceReducer<AppState[\"services\"][TServiceKey]>\r\n) => Reducer<AppState, AnyAction> {\r\n  return (reducer: ServiceReducer<AppState[\"services\"][TServiceKey]>) => {\r\n    return (state: AppState = defaultAppState, action: AnyAction) => {\r\n      const newState = reducer(state.services[service], action, state);\r\n      if (state.services[service] != newState) {\r\n        return fpSet(state, \"services\", service, newState);\r\n      }\r\n      return state;\r\n    };\r\n  };\r\n}\r\n\r\nexport interface ServiceSelectorA0<TServiceKey extends ServiceKey, TReturn> {\r\n  (s: AppState): TReturn;\r\n  local(s: ServiceState<TServiceKey>): TReturn;\r\n}\r\n\r\nexport interface ServiceSelectorA1<\r\n  TServiceKey extends ServiceKey,\r\n  TA1,\r\n  TReturn\r\n> {\r\n  (s: AppState, a1: TA1): TReturn;\r\n  local(s: ServiceState<TServiceKey>, a1: TA1): TReturn;\r\n}\r\n\r\nexport interface ServiceSelectorA2<\r\n  TServiceKey extends ServiceKey,\r\n  TA1,\r\n  TA2,\r\n  TReturn\r\n> {\r\n  (s: AppState, a1: TA1, a2: TA2): TReturn;\r\n  local(s: ServiceState<TServiceKey>, a1: TA1, a2: TA2): TReturn;\r\n}\r\n\r\nexport interface ServiceSelectorCreator<TServiceKey extends ServiceKey> {\r\n  <TReturn>(\r\n    selector: (s: ServiceState<TServiceKey>) => TReturn\r\n  ): ServiceSelectorA0<TServiceKey, TReturn>;\r\n  <TA1, TReturn>(\r\n    selector: (s: ServiceState<TServiceKey>, a1: TA1) => TReturn\r\n  ): ServiceSelectorA1<TServiceKey, TA1, TReturn>;\r\n  <TA1, TA2, TReturn>(\r\n    selector: (s: ServiceState<TServiceKey>, a1: TA1, a2: TA2) => TReturn\r\n  ): ServiceSelectorA2<TServiceKey, TA1, TA2, TReturn>;\r\n}\r\n\r\nexport function createServiceSelectorCreator<TServiceKey extends ServiceKey>(\r\n  service: TServiceKey\r\n): ServiceSelectorCreator<TServiceKey> {\r\n  return <TArgs, TReturn>(\r\n    selector: (s: ServiceState<TServiceKey>, ...args: TArgs[]) => TReturn\r\n  ) => {\r\n    const appSelector: any = (s: AppState, ...args: TArgs[]) =>\r\n      selector(s.services[service], ...args);\r\n    appSelector.local = selector;\r\n    return appSelector;\r\n  };\r\n}\r\n","import { createSimulatorControlSelector } from \"../utils\";\r\n\r\nexport const isSimActiveSelector = createSimulatorControlSelector(\r\n  (state) => state.mode !== \"edit\"\r\n);\r\n\r\nexport const isSimRunningSelector = createSimulatorControlSelector(\r\n  (state) => state.mode === \"run\"\r\n);\r\n\r\nexport const isSimPausedSelector = createSimulatorControlSelector(\r\n  (state) => state.mode === \"pause\"\r\n);\r\n\r\nexport const ticksPerSecondSelector = createSimulatorControlSelector(\r\n  (state) => state.ticksPerSecond\r\n);\r\n","import {\r\n  createServiceReducerCreator,\r\n  createServiceSelectorCreator,\r\n} from \"../service-state-utils\";\r\n\r\nexport const createSimulatorControlReducer = createServiceReducerCreator(\r\n  \"simulatorControl\"\r\n);\r\nexport const createSimulatorControlSelector = createServiceSelectorCreator(\r\n  \"simulatorControl\"\r\n);\r\n","import flatMap from \"lodash/flatMap\";\r\nimport get from \"lodash/get\";\r\n\r\nimport {\r\n  createServiceReducerCreator,\r\n  createServiceSelectorCreator,\r\n} from \"../service-state-utils\";\r\nimport {\r\n  SimulatorNodeIdMappingTreeItem,\r\n  SimulatorNodeIdToCircuitNodeIdMap,\r\n} from \"./state\";\r\n\r\nexport const createSimulatorGraphReducer = createServiceReducerCreator(\r\n  \"simulatorGraph\"\r\n);\r\nexport const createSimulatorGraphSelector = createServiceSelectorCreator(\r\n  \"simulatorGraph\"\r\n);\r\n\r\nexport function walkSimulatorNodeIdToCircuitNodeIdMap(\r\n  map: SimulatorNodeIdToCircuitNodeIdMap,\r\n  visit: (circuitNodeIdPath: string[], simulatorNodeId: string) => void,\r\n  circuitNodeIdPath: string[] = []\r\n) {\r\n  const circuitNodeIds = Object.keys(map);\r\n  for (const circuitNodeId of circuitNodeIds) {\r\n    const { simulatorNodeId, subCircuitIds } = map[circuitNodeId];\r\n    const currentPath = [...circuitNodeIdPath, circuitNodeId];\r\n    if (simulatorNodeId) {\r\n      visit(currentPath, simulatorNodeId);\r\n    }\r\n    walkSimulatorNodeIdToCircuitNodeIdMap(subCircuitIds, visit, currentPath);\r\n  }\r\n}\r\n\r\nexport function getSimulatorNodeIdFromCircuitNodeIdPath(\r\n  map: SimulatorNodeIdToCircuitNodeIdMap,\r\n  circuitNodeIdPath: string[]\r\n): string | null {\r\n  // Look up the path through the ic nodes to reach this node.\r\n  const simulatorNodeIdPath = flatMap(circuitNodeIdPath, (icNodeId) => [\r\n    icNodeId,\r\n    \"subCircuitIds\",\r\n  ]);\r\n\r\n  // Remove the last subCircuitIds\r\n  simulatorNodeIdPath.pop();\r\n\r\n  const simulatorNodeIdItem: SimulatorNodeIdMappingTreeItem = get(\r\n    map,\r\n    simulatorNodeIdPath\r\n  );\r\n\r\n  if (!simulatorNodeIdItem) {\r\n    return null;\r\n  }\r\n\r\n  const { simulatorNodeId } = simulatorNodeIdItem;\r\n  return simulatorNodeId ?? null;\r\n}\r\n","import {\r\n  createServiceReducerCreator,\r\n  createServiceSelectorCreator,\r\n} from \"../service-state-utils\";\r\n\r\nexport const createSimulatorReducer = createServiceReducerCreator(\"simulator\");\r\nexport const createSimulatorSelector = createServiceSelectorCreator(\r\n  \"simulator\"\r\n);\r\n","import { Point } from \"@/geometry\";\r\nimport { ModifierKeys } from \"@/modifier-keys\";\r\n\r\nimport { NodePin } from \"../node-graph/types\";\r\n\r\nexport interface CircuitEditorUiServiceState {\r\n  /**\r\n   * The current drag operation being performed by the ui.\r\n   */\r\n  dragMode: \"move\" | \"select\" | \"new-node\" | \"new-joint\" | \"wire\" | null;\r\n\r\n  /**\r\n   * The modifier keys in play for the drag operation.\r\n   */\r\n  dragModifierKeys: ModifierKeys | null;\r\n\r\n  /**\r\n   * The start of the drag operation, if applicable for the current operation.\r\n   */\r\n  dragStart: Point | null;\r\n\r\n  /**\r\n   * The current end point for the drag operation.  This does not indicate the final\r\n   * drag position, but the cumulative position.\r\n   */\r\n  dragEnd: Point | null;\r\n\r\n  /**\r\n   * If dragMode is \"new-node\", this holds the node type being created.\r\n   */\r\n  dragNewNodeType: string | null;\r\n\r\n  /**\r\n   * if dragMode is \"new-joint\", the connection id to create the joint on.\r\n   */\r\n  dragNewJointConnectionId: string | null;\r\n\r\n  /**\r\n   * If dragMode is \"new-joint\", the joint id to add the new joint after.\r\n   */\r\n  dragNewJointAfterJointId: string | null;\r\n\r\n  /**\r\n   * If drag mode is \"wire\", this is the source pin being wired by the drag.\r\n   */\r\n  dragWireSource: NodePin | null;\r\n}\r\n\r\nconst _defaultState: CircuitEditorUiServiceState = {\r\n  dragMode: null,\r\n  dragModifierKeys: null,\r\n  dragStart: null,\r\n  dragEnd: null,\r\n  dragNewNodeType: null,\r\n  dragNewJointConnectionId: null,\r\n  dragNewJointAfterJointId: null,\r\n  dragWireSource: null,\r\n};\r\n\r\nexport const defaultCircuitEditorUiServiceState = Object.freeze(_defaultState);\r\n","import { ROOT_CIRCUIT_ID } from \"../circuits/constants\";\r\n\r\nexport interface CircuitEditorViewServiceState {\r\n  /**\r\n   * The id of the circuit currently being edited.\r\n   */\r\n  editingCircuitId: string;\r\n\r\n  /**\r\n   * The path through specific nodes we took to view this circuit.\r\n   * This enables rendering state for the circuit view.\r\n   */\r\n  editingCircuitNodeIdPath: string[] | null;\r\n\r\n  /**\r\n   * The scaling for rendering the circuit in the UI.\r\n   */\r\n  viewScale: number;\r\n}\r\n\r\nconst _defaultState: CircuitEditorViewServiceState = {\r\n  editingCircuitId: ROOT_CIRCUIT_ID,\r\n  editingCircuitNodeIdPath: null,\r\n  viewScale: 1,\r\n};\r\n\r\nexport const defaultCircuitEditorViewServiceState = Object.freeze(\r\n  _defaultState\r\n);\r\n","import { ROOT_CIRCUIT_ID } from \"./constants\";\r\n\r\nexport interface CircuitsServiceState {\r\n  /**\r\n   * The user-provided names for circuits by circuit id.\r\n   */\r\n  circuitNamesByCircuitId: Record<string, string>;\r\n\r\n  /**\r\n   * Arrays of node ids contained in a circuit by the containing circuit id.\r\n   */\r\n  nodeIdsByCircuitId: Record<string, string[]>;\r\n}\r\n\r\nconst _defaultState: CircuitsServiceState = {\r\n  circuitNamesByCircuitId: {\r\n    [ROOT_CIRCUIT_ID]: \"Root\",\r\n  },\r\n  nodeIdsByCircuitId: {\r\n    [ROOT_CIRCUIT_ID]: [],\r\n  },\r\n};\r\n\r\nexport const defaultCircuitsServiceState = Object.freeze(_defaultState);\r\n","import { Point, ZeroPoint } from \"@/geometry\";\r\n\r\nimport { ClipboardNode } from \"./types\";\r\n\r\nexport interface ClipboardServiceState {\r\n  clipboardNodes: ClipboardNode[];\r\n  clipboardPasteOrigin: Point;\r\n}\r\n\r\nexport const defaultClipboardServiceState: Readonly<ClipboardServiceState> = Object.freeze(\r\n  {\r\n    clipboardNodes: [],\r\n    clipboardPasteOrigin: ZeroPoint,\r\n  }\r\n);\r\n","export interface DialogServiceBaseState {\r\n  dialogType: string | null;\r\n  data: any;\r\n}\r\n\r\nexport interface EmptyDialogServiceState extends DialogServiceBaseState {\r\n  dialogType: null;\r\n  data: null;\r\n}\r\n\r\nexport interface ExportProjectLinkDialogData {\r\n  projectLink: string;\r\n}\r\nexport interface ExportProjectLinkDialogServiceState\r\n  extends DialogServiceBaseState {\r\n  dialogType: \"export-project-link\";\r\n  data: ExportProjectLinkDialogData;\r\n}\r\n\r\nexport type DialogServiceState =\r\n  | EmptyDialogServiceState\r\n  | ExportProjectLinkDialogServiceState;\r\nexport type DialogType = DialogServiceState[\"dialogType\"];\r\n\r\nconst _defaultState: EmptyDialogServiceState = {\r\n  dialogType: null,\r\n  data: null,\r\n};\r\n\r\nexport const defaultDialogServiceState: Readonly<EmptyDialogServiceState> = Object.freeze(\r\n  _defaultState\r\n);\r\n","import { Node, Connection } from \"./types\";\r\n\r\nexport interface NodeGraphServiceState {\r\n  /**\r\n   * A map of nodes by node id.\r\n   */\r\n  nodesById: Record<string, Node>;\r\n\r\n  /**\r\n   * A map of connections between nodes, by connection id.\r\n   */\r\n  connectionsById: Record<string, Connection>;\r\n}\r\n\r\nconst _defaultState: NodeGraphServiceState = {\r\n  nodesById: {},\r\n  connectionsById: {},\r\n};\r\n\r\nexport const defaultNodeGraphServiceState = Object.freeze(_defaultState);\r\n","import { Point } from \"@/geometry\";\r\n\r\nexport interface NodeLayoutServiceState {\r\n  nodePositionsById: Record<string, Point>;\r\n  wireJointIdsByConnectionId: Record<string, string[]>;\r\n  wireJointPositionsByJointId: Record<string, Point>;\r\n}\r\n\r\nconst _defaultState: NodeLayoutServiceState = {\r\n  nodePositionsById: {},\r\n  wireJointIdsByConnectionId: {},\r\n  wireJointPositionsByJointId: {},\r\n};\r\n\r\nexport const defaultNodeLayoutServiceState: Readonly<NodeLayoutServiceState> = Object.freeze(\r\n  _defaultState\r\n);\r\n","export interface SelectionServiceState {\r\n  selectedNodeIds: string[];\r\n  selectedConnectionIds: string[];\r\n  selectedJointIds: string[];\r\n}\r\n\r\nconst _defaultState: SelectionServiceState = {\r\n  selectedNodeIds: [],\r\n  selectedConnectionIds: [],\r\n  selectedJointIds: [],\r\n};\r\n\r\nexport const defaultSelectionServiceState = Object.freeze(_defaultState);\r\n","import { SimNodePinTransition, SimTransitionWindow } from \"./types\";\r\n\r\nexport interface SimulatorServiceState {\r\n  /**\r\n   * The current tick the simulator is on.\r\n   */\r\n  tick: number;\r\n\r\n  /**\r\n   * The time it took in milliseconds to process the last tick.\r\n   */\r\n  lastTickProcessingTimeMs: number;\r\n\r\n  /**\r\n   * A map of node states by node id.\r\n   */\r\n  nodeStatesByNodeId: Record<string, any>;\r\n\r\n  /**\r\n   * A map of output-to-value maps by node id.\r\n   */\r\n  nodeOutputValuesByNodeId: Record<string, Record<string, boolean>>;\r\n\r\n  /**\r\n   * A map of pending transitions by id.\r\n   */\r\n  transitionsById: Record<string, SimNodePinTransition>;\r\n\r\n  /**\r\n   * Transition windows in ascending order of tick.\r\n   */\r\n  transitionWindows: SimTransitionWindow[];\r\n}\r\n\r\nconst _defaultState: SimulatorServiceState = {\r\n  tick: 0,\r\n  lastTickProcessingTimeMs: 0,\r\n  nodeStatesByNodeId: {},\r\n  nodeOutputValuesByNodeId: {},\r\n  transitionsById: {},\r\n  transitionWindows: [],\r\n};\r\n\r\nexport const defaultSimulatorServiceState = Object.freeze(_defaultState);\r\n","export interface SimulatorControlServiceState {\r\n  /**\r\n   * The overall application mode.\r\n   * Might not belong in simulator state?\r\n   *\r\n   * - edit: User is editing, no simulator is running\r\n   * - step: Sim is paused and only ticks on user command\r\n   * - run: Sim is actively running and ticking forwards on its own.\r\n   */\r\n  mode: \"edit\" | \"pause\" | \"run\";\r\n\r\n  /**\r\n   * Tick speed in ticks per second when running.\r\n   */\r\n  ticksPerSecond: number;\r\n}\r\n\r\nconst _defaultState: SimulatorControlServiceState = {\r\n  mode: \"edit\",\r\n  ticksPerSecond: 1000,\r\n};\r\n\r\nexport const defaultSimulatorControlServiceState = Object.freeze(_defaultState);\r\n","import { SimulatorNode } from \"./types\";\r\n\r\nexport interface SimulatorNodeIdMappingTreeItem {\r\n  simulatorNodeId: string | null;\r\n  subCircuitIds: SimulatorNodeIdToCircuitNodeIdMap;\r\n}\r\n\r\nexport type SimulatorNodeIdToCircuitNodeIdMap = Record<\r\n  string,\r\n  SimulatorNodeIdMappingTreeItem\r\n>;\r\n\r\nexport interface SimulatorGraphServiceState {\r\n  /**\r\n   * A map of all simulator nodes by simulator node id.\r\n   */\r\n  simulatorNodesById: Record<string, SimulatorNode>;\r\n\r\n  /**\r\n   * A map of simulator node ids by the circuit node id that generated them.\r\n   */\r\n  simulatorNodeIdsByCircuitNodeId: SimulatorNodeIdToCircuitNodeIdMap;\r\n}\r\n\r\nconst _defaultState: SimulatorGraphServiceState = {\r\n  simulatorNodesById: {},\r\n  simulatorNodeIdsByCircuitNodeId: {},\r\n};\r\n\r\nexport const defaultSimulatorGraphServiceState = Object.freeze(_defaultState);\r\n","import {\r\n  CircuitEditorUiServiceState,\r\n  defaultCircuitEditorUiServiceState,\r\n} from \"./circuit-editor-ui/state\";\r\nimport {\r\n  CircuitEditorViewServiceState,\r\n  defaultCircuitEditorViewServiceState,\r\n} from \"./circuit-editor-view/state\";\r\nimport {\r\n  CircuitsServiceState,\r\n  defaultCircuitsServiceState,\r\n} from \"./circuits/state\";\r\nimport {\r\n  ClipboardServiceState,\r\n  defaultClipboardServiceState,\r\n} from \"./clipboard/state\";\r\nimport { DialogServiceState, defaultDialogServiceState } from \"./dialog/state\";\r\nimport {\r\n  NodeGraphServiceState,\r\n  defaultNodeGraphServiceState,\r\n} from \"./node-graph/state\";\r\nimport {\r\n  NodeLayoutServiceState,\r\n  defaultNodeLayoutServiceState,\r\n} from \"./node-layout/state\";\r\nimport {\r\n  SelectionServiceState,\r\n  defaultSelectionServiceState,\r\n} from \"./selection/state\";\r\nimport {\r\n  SimulatorServiceState,\r\n  defaultSimulatorServiceState,\r\n} from \"./simulator/state\";\r\nimport {\r\n  SimulatorControlServiceState,\r\n  defaultSimulatorControlServiceState,\r\n} from \"./simulator-control/state\";\r\nimport {\r\n  SimulatorGraphServiceState,\r\n  defaultSimulatorGraphServiceState,\r\n} from \"./simulator-graph/state\";\r\n\r\nexport interface AppServicesState {\r\n  circuitEditorUi: CircuitEditorUiServiceState;\r\n  circuitEditorView: CircuitEditorViewServiceState;\r\n  circuits: CircuitsServiceState;\r\n  clipboard: ClipboardServiceState;\r\n  dialog: DialogServiceState;\r\n  nodeGraph: NodeGraphServiceState;\r\n  nodeLayout: NodeLayoutServiceState;\r\n  selection: SelectionServiceState;\r\n  simulator: SimulatorServiceState;\r\n  simulatorControl: SimulatorControlServiceState;\r\n  simulatorGraph: SimulatorGraphServiceState;\r\n}\r\n\r\nconst _defaultServiceState: AppServicesState = {\r\n  circuitEditorUi: defaultCircuitEditorUiServiceState,\r\n  circuitEditorView: defaultCircuitEditorViewServiceState,\r\n  nodeGraph: defaultNodeGraphServiceState,\r\n  nodeLayout: defaultNodeLayoutServiceState,\r\n  circuits: defaultCircuitsServiceState,\r\n  clipboard: defaultClipboardServiceState,\r\n  dialog: defaultDialogServiceState,\r\n  selection: defaultSelectionServiceState,\r\n  simulator: defaultSimulatorServiceState,\r\n  simulatorControl: defaultSimulatorControlServiceState,\r\n  simulatorGraph: defaultSimulatorGraphServiceState,\r\n};\r\n\r\nexport const defaultServicesState = Object.freeze(_defaultServiceState);\r\n","import { AppServicesState } from \"@/services/state\";\r\n\r\nexport const UndoServicesStateKeys = [\r\n  // Include view to jump us back to the circuit the operation took place on.\r\n  \"circuitEditorView\",\r\n  \"circuits\",\r\n  \"nodeGraph\",\r\n  \"nodeLayout\",\r\n] as const;\r\nexport type UndoServicesStates = Pick<\r\n  AppServicesState,\r\n  \"circuitEditorView\" | \"circuits\" | \"nodeGraph\" | \"nodeLayout\"\r\n>;\r\n\r\nexport interface UndoState {\r\n  undoStack: UndoServicesStates[];\r\n  redoStack: UndoServicesStates[];\r\n}\r\n\r\nconst _defaultState: UndoState = {\r\n  undoStack: [],\r\n  redoStack: [],\r\n};\r\n\r\nexport const defaultUndoState = Object.freeze(_defaultState);\r\n","import { AppServicesState, defaultServicesState } from \"@/services/state\";\r\nimport { defaultUndoState, UndoState } from \"@/undo/state\";\r\n\r\nexport interface AppState {\r\n  services: AppServicesState;\r\n  undo: UndoState;\r\n}\r\n\r\nconst _defaultAppState: AppState = {\r\n  services: defaultServicesState,\r\n  undo: defaultUndoState,\r\n};\r\n\r\nexport const defaultAppState = Object.freeze(_defaultAppState);\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_INIT = \"@init\";\r\nexport const doInit = () => ({ type: ACTION_INIT });\r\nexport type InitAction = ReturnType<typeof doInit>;\r\nexport function isInitAction(action: AnyAction): action is InitAction {\r\n  return action.type === ACTION_INIT;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { asArray, MaybeArray } from \"@/arrays\";\r\n\r\nexport const ACTION_NODE_DELETE = \"@node/delete\" as const;\r\nexport const deleteNode = (nodeId: MaybeArray<string>) => ({\r\n  type: ACTION_NODE_DELETE,\r\n  payload: { nodeIds: asArray(nodeId) },\r\n});\r\nexport type DeleteNodeAction = ReturnType<typeof deleteNode>;\r\nexport function isDeleteNodeAction(\r\n  action: AnyAction\r\n): action is DeleteNodeAction {\r\n  return action.type === ACTION_NODE_DELETE;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport interface MoveSelectionOpts {\r\n  snapMode?: \"none\" | \"node\" | \"by-type\";\r\n}\r\nexport const ACTION_SELECTION_MOVE = \"@selection/move\" as const;\r\nexport const moveSelection = (\r\n  offsetX: number,\r\n  offsetY: number,\r\n  opts: MoveSelectionOpts = {}\r\n) => ({\r\n  type: ACTION_SELECTION_MOVE,\r\n  payload: { offsetX, offsetY, snapMode: opts.snapMode ?? \"none\" },\r\n});\r\nexport type MoveSelectionAction = ReturnType<typeof moveSelection>;\r\nexport function isMoveSelectionAction(\r\n  action: AnyAction\r\n): action is MoveSelectionAction {\r\n  return action.type === ACTION_SELECTION_MOVE;\r\n}\r\n","import { AnyAction } from \"redux\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\n\r\nimport { Point } from \"@/geometry\";\r\n\r\nimport { NodePin } from \"@/services/node-graph/types\";\r\n\r\nexport interface AttachWireOptions {\r\n  joints?: Point[];\r\n}\r\nexport const ACTION_WIRE_ATTACH = \"@wire/attach\" as const;\r\nexport const attachWire = (\r\n  p1: NodePin,\r\n  p2: NodePin,\r\n  opts?: AttachWireOptions\r\n) => ({\r\n  type: ACTION_WIRE_ATTACH,\r\n  payload: {\r\n    connectionId: uuidV4(),\r\n    p1,\r\n    p2,\r\n    joints: opts?.joints || [],\r\n  },\r\n});\r\nexport type AttachWireAction = ReturnType<typeof attachWire>;\r\nexport function isAttachWireAction(\r\n  action: AnyAction\r\n): action is AttachWireAction {\r\n  return action.type === ACTION_WIRE_ATTACH;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_WIRE_DETATCH = \"@wire/detatch\" as const;\r\nexport const detatchWire = (connectionId: string) => ({\r\n  type: ACTION_WIRE_DETATCH,\r\n  payload: {\r\n    connectionId,\r\n  },\r\n});\r\nexport type DetatchWireNodeAction = ReturnType<typeof detatchWire>;\r\nexport function isDetatchWireAction(\r\n  action: AnyAction\r\n): action is DetatchWireNodeAction {\r\n  return action.type === ACTION_WIRE_DETATCH;\r\n}\r\n","import { AnyAction } from \"redux\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\n\r\nimport { Point } from \"@/geometry\";\r\n\r\nexport const ACTION_WIRE_JOINT_ADD = \"@wire/joint/add\" as const;\r\nexport const addWireJoint = (\r\n  connectionId: string,\r\n  addAfterJointId: string | null,\r\n  position: Point,\r\n  jointId?: string\r\n) => ({\r\n  type: ACTION_WIRE_JOINT_ADD,\r\n  payload: {\r\n    connectionId,\r\n    jointId: jointId || uuidV4(),\r\n    addAfterJointId,\r\n    position,\r\n  },\r\n});\r\nexport type AddWireJointAction = ReturnType<typeof addWireJoint>;\r\nexport function isAddWireJointAction(\r\n  action: AnyAction\r\n): action is AddWireJointAction {\r\n  return action.type === ACTION_WIRE_JOINT_ADD;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { Point } from \"@/geometry\";\r\nimport { asArray, MaybeArray } from \"@/arrays\";\r\n\r\nexport interface MoveWireJointOpts {\r\n  relative?: boolean;\r\n  snapMode?: \"none\" | \"node\" | \"joint\";\r\n}\r\nexport const ACTION_WIRE_JOINT_MOVE = \"@wire/joint/move\" as const;\r\nexport const moveWireJoint = (\r\n  jointId: MaybeArray<string>,\r\n  position: Point,\r\n  opts: MoveWireJointOpts = {}\r\n) => ({\r\n  type: ACTION_WIRE_JOINT_MOVE,\r\n  payload: {\r\n    jointIds: asArray(jointId),\r\n    position,\r\n    relative: opts.relative ?? false,\r\n    snapMode: opts.snapMode ?? \"none\",\r\n  },\r\n});\r\nexport type MoveWireJointAction = ReturnType<typeof moveWireJoint>;\r\nexport function isMoveWireJointAction(\r\n  action: AnyAction\r\n): action is MoveWireJointAction {\r\n  return action.type === ACTION_WIRE_JOINT_MOVE;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_WIRE_JOINT_DELETE = \"@wire/joint/delete\" as const;\r\nexport const deleteWireJoint = (jointId: string) => ({\r\n  type: ACTION_WIRE_JOINT_DELETE,\r\n  payload: { jointId },\r\n});\r\nexport type DeleteWireJointAction = ReturnType<typeof deleteWireJoint>;\r\nexport function isDeleteWireJointAction(\r\n  action: AnyAction\r\n): action is DeleteWireJointAction {\r\n  return action.type === ACTION_WIRE_JOINT_DELETE;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { SaveData } from \"@/services/savedata/types\";\r\n\r\nexport const ACTION_PROJECT_RECEIVE = \"@project/receive\" as const;\r\nexport const receiveProject = (saveData: SaveData) => ({\r\n  type: ACTION_PROJECT_RECEIVE,\r\n  payload: { saveData },\r\n});\r\nexport type ReceiveProjectAction = ReturnType<typeof receiveProject>;\r\nexport function isReceiveProjectAction(\r\n  action: AnyAction\r\n): action is ReceiveProjectAction {\r\n  return action.type === ACTION_PROJECT_RECEIVE;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { ACTION_CIRCUIT_ADD } from \"@/actions/circuit-add\";\r\nimport { ACTION_CIRCUIT_DELETE } from \"@/actions/circuit-delete\";\r\nimport { ACTION_CIRCUIT_RENAME } from \"@/actions/circuit-rename\";\r\nimport { ACTION_NODE_ADD } from \"@/actions/node-add\";\r\nimport { ACTION_NODE_DELETE } from \"@/actions/node-delete\";\r\nimport { ACTION_NODE_RENAME } from \"@/actions/node-rename\";\r\nimport { ACTION_SELECTION_ALIGN_TO_GRID } from \"@/actions/selection-align-to-grid\";\r\nimport { ACTION_SELECTION_DELETE } from \"@/actions/selection-delete\";\r\nimport { ACTION_SELECTION_MOVE } from \"@/actions/selection-move\";\r\nimport { ACTION_WIRE_ATTACH } from \"@/actions/wire-attach\";\r\nimport { ACTION_WIRE_DETATCH } from \"@/actions/wire-detatch\";\r\nimport { ACTION_WIRE_JOINT_ADD } from \"@/actions/wire-joint-add\";\r\nimport { ACTION_WIRE_JOINT_MOVE } from \"@/actions/wire-joint-move\";\r\nimport { ACTION_WIRE_JOINT_DELETE } from \"@/actions/wire-joint-delete\";\r\n\r\nimport { ACTION_PASTE } from \"@/actions/clipboard-paste\";\r\nimport { ACTION_FIELD_DRAG_END } from \"@/actions/field-drag-end\";\r\n\r\nimport { ACTION_UNDO } from \"@/actions/undo\";\r\nimport { ACTION_REDO } from \"@/actions/redo\";\r\n\r\nimport { ACTION_PROJECT_NEW } from \"@/actions/project-new\";\r\nimport { ACTION_PROJECT_RECEIVE } from \"@/actions/project-receive\";\r\n\r\nexport const PROJECT_MUTATION_ACTIONS = [\r\n  ACTION_CIRCUIT_ADD,\r\n  ACTION_CIRCUIT_DELETE,\r\n  ACTION_CIRCUIT_RENAME,\r\n  ACTION_NODE_ADD,\r\n  ACTION_NODE_DELETE,\r\n  ACTION_NODE_RENAME,\r\n  ACTION_SELECTION_ALIGN_TO_GRID,\r\n  ACTION_SELECTION_DELETE,\r\n  ACTION_SELECTION_MOVE,\r\n  ACTION_WIRE_ATTACH,\r\n  ACTION_WIRE_DETATCH,\r\n  ACTION_WIRE_JOINT_ADD,\r\n  ACTION_WIRE_JOINT_DELETE,\r\n  ACTION_WIRE_JOINT_MOVE,\r\n\r\n  ACTION_UNDO,\r\n  ACTION_REDO,\r\n\r\n  // These actions typically fire off other actions in this list,\r\n  // and are redundant for services that take part in the core reducer.\r\n  // However, undo/redo is outside of the core reducer and does not see the\r\n  // reentrant actions in order to produce a single undo stack entry for\r\n  // the entire paste operation.\r\n  ACTION_PASTE,\r\n  ACTION_FIELD_DRAG_END,\r\n];\r\n\r\nexport function isProjectMutationAction(action: AnyAction) {\r\n  return PROJECT_MUTATION_ACTIONS.indexOf(action.type) !== -1;\r\n}\r\n\r\nexport const PROJECT_RESET_ACTIONS = [\r\n  ACTION_PROJECT_NEW,\r\n  ACTION_PROJECT_RECEIVE,\r\n];\r\n\r\nexport function isProjectResetAction(action: AnyAction) {\r\n  return PROJECT_RESET_ACTIONS.indexOf(action.type) !== -1;\r\n}\r\n","import pick from \"lodash/pick\";\r\n\r\nimport { AppState } from \"@/store\";\r\n\r\nimport { UndoServicesStateKeys, UndoServicesStates } from \"./state\";\r\n\r\nexport function captureUndoState(state: AppState): UndoServicesStates {\r\n  return pick(state.services, UndoServicesStateKeys);\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { AppState } from \"@/store\";\r\n\r\nimport { ACTION_FIELD_DRAG_CONTINUE } from \"@/actions/field-drag-continue\";\r\nimport { ACTION_FIELD_MOUSE_LEAVE } from \"@/actions/field-mouse-leave\";\r\nimport { ACTION_SIM_TICK } from \"@/actions/sim-tick\";\r\nimport { ACTION_VIEW_ZOOM } from \"@/actions/view-zoom\";\r\nimport { ACTION_WIRE_JOINT_MOVE } from \"@/actions/wire-joint-move\";\r\n\r\nexport const actionsBlacklist: string[] = [\r\n  ACTION_FIELD_DRAG_CONTINUE,\r\n  ACTION_FIELD_MOUSE_LEAVE,\r\n  ACTION_WIRE_JOINT_MOVE,\r\n  ACTION_SIM_TICK,\r\n  ACTION_VIEW_ZOOM,\r\n];\r\n\r\nexport function actionSanitizer(action: AnyAction): AnyAction {\r\n  return action;\r\n}\r\n\r\nexport function stateSanitizer(state: AppState): any {\r\n  return state;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { DialogType } from \"@/services/dialog/state\";\r\n\r\nexport const ACTION_DIALOG_SHOW = \"@dialog/show\" as const;\r\nexport const showDialog = (dialogType: DialogType, data: any) => ({\r\n  type: ACTION_DIALOG_SHOW,\r\n  payload: { dialogType, data },\r\n});\r\nexport type ShowDialogAction = ReturnType<typeof showDialog>;\r\nexport function isShowDialogAction(\r\n  action: AnyAction\r\n): action is ShowDialogAction {\r\n  return action.type === ACTION_DIALOG_SHOW;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_DIALOG_RESPONSE_CANCEL = \"@dialog/response/cancel\" as const;\r\nexport const cancelDialog = () => ({\r\n  type: ACTION_DIALOG_RESPONSE_CANCEL,\r\n});\r\nexport type CancelDialogAction = ReturnType<typeof cancelDialog>;\r\nexport function isCancelDialogAction(\r\n  action: AnyAction\r\n): action is CancelDialogAction {\r\n  return action.type === ACTION_DIALOG_RESPONSE_CANCEL;\r\n}\r\n","import { SagaIterator } from \"redux-saga\";\r\nimport { put, take } from \"redux-saga/effects\";\r\n\r\nimport { showDialog } from \"@/actions/dialog-show\";\r\n\r\nimport { DialogType } from \"./state\";\r\nimport {\r\n  AcceptDialogAction,\r\n  ACTION_DIALOG_RESPONSE_ACCEPT,\r\n} from \"@/actions/dialog-response-accept\";\r\nimport {\r\n  CancelDialogAction,\r\n  ACTION_DIALOG_RESPONSE_CANCEL,\r\n} from \"@/actions/dialog-response-cancel\";\r\n\r\nexport function* displayDialogSaga(\r\n  dialogType: DialogType,\r\n  data?: any\r\n): SagaIterator<any> {\r\n  yield put(showDialog(dialogType, data));\r\n  const response: AcceptDialogAction | CancelDialogAction = yield take([\r\n    ACTION_DIALOG_RESPONSE_ACCEPT,\r\n    ACTION_DIALOG_RESPONSE_CANCEL,\r\n  ]);\r\n\r\n  if (response.type === ACTION_DIALOG_RESPONSE_ACCEPT) {\r\n    return response.payload.result;\r\n  }\r\n\r\n  return null;\r\n}\r\n","import * as yup from \"yup\";\r\n\r\nexport interface Node {\r\n  /**\r\n   * The type of this node.\r\n   */\r\n  nodeType: string;\r\n\r\n  /**\r\n   * The user provided name of this node.\r\n   */\r\n  nodeName: string | null;\r\n}\r\n\r\n/**\r\n * Identifies a pin on a specific node.\r\n */\r\nexport interface NodePin {\r\n  nodeId: string;\r\n  pinId: string;\r\n}\r\nexport const nodePinSchema = yup.object().shape({\r\n  nodeId: yup.string().required().min(1),\r\n  pinId: yup.string().required().min(1),\r\n});\r\nexport function nodePinEquals(a: NodePin, b: NodePin) {\r\n  return a.nodeId === b.nodeId && a.pinId === b.pinId;\r\n}\r\n\r\n/**\r\n * A connection from a node output to a node input.\r\n */\r\nexport interface Connection {\r\n  /**\r\n   * The output pin on a node, sending a value outwards.\r\n   */\r\n  outputPin: NodePin;\r\n\r\n  /**\r\n   * The input pin on a node to receive the value.\r\n   */\r\n  inputPin: NodePin;\r\n}\r\n","import * as yup from \"yup\";\r\n\r\nimport { Point, pointSchema } from \"@/geometry\";\r\n\r\nimport { NodePin, nodePinSchema } from \"../node-graph/types\";\r\n\r\nexport interface SaveCircuit {\r\n  circuitId: string;\r\n  circuitName: string;\r\n}\r\nexport const saveCircuitSchema = yup.object().shape({\r\n  circuitId: yup.string().required().min(1),\r\n  circuitName: yup.string().required().min(1),\r\n});\r\n\r\nexport interface SaveNode {\r\n  nodeId: string;\r\n  nodeType: string;\r\n  nodeName: string | null;\r\n  circuitId: string;\r\n  x: number;\r\n  y: number;\r\n}\r\nexport const saveNodeSchema = yup.object().shape({\r\n  nodeId: yup.string().required().min(1),\r\n  nodeType: yup.string().required().min(1),\r\n  nodeName: yup.string().nullable().min(1),\r\n  circuitId: yup.string().required().min(1),\r\n  x: yup.number().required(),\r\n  y: yup.number().required(),\r\n});\r\n\r\nexport interface SaveWire {\r\n  output: NodePin;\r\n  input: NodePin;\r\n  joints: Point[];\r\n}\r\nexport const saveWireSchema = yup.object().shape({\r\n  output: nodePinSchema.required(),\r\n  input: nodePinSchema.required(),\r\n  // Cannot make this required, as yup says required on an array is min length 1...\r\n  joints: yup.array().of(pointSchema),\r\n});\r\n\r\nexport interface SaveData {\r\n  circuits: SaveCircuit[];\r\n  nodes: SaveNode[];\r\n  wires: SaveWire[];\r\n}\r\nexport const saveDataSchema = yup.object().shape({\r\n  circuits: yup.array().of(saveCircuitSchema).min(0),\r\n  nodes: yup.array().of(saveNodeSchema).min(0),\r\n  wires: yup.array().of(saveWireSchema).min(0),\r\n});\r\n","import { AnyAction } from \"redux\";\r\nimport sortBy from \"lodash/sortBy\";\r\n\r\nimport { MaybeArray } from \"@/arrays\";\r\n\r\nimport { AppState, defaultAppState } from \"./state\";\r\nimport { AppReducer } from \"./types\";\r\n\r\nexport function concatReducers(\r\n  ...reducers: MaybeArray<AppReducer>[]\r\n): AppReducer[] {\r\n  // Previously, this was reduceReducers and generated a reducer\r\n  //  that invokes each child reducer.\r\n  // However, we need to be able to order reducers across services,\r\n  //  so we must now aggregate a list of reducers and do a final ordering\r\n  //  step after all are collected.\r\n  return ([] as AppReducer[]).concat(...reducers);\r\n}\r\n\r\nexport function finalizeReducerList(reducers: AppReducer[]): AppReducer {\r\n  // Order the list by weight ascending.\r\n  const finalizedList = sortBy(reducers, (x: AppReducer) => x.weight || 0);\r\n\r\n  return (state: AppState = defaultAppState, action: AnyAction) => {\r\n    return finalizedList.reduce(\r\n      (state, reducer) => reducer(state, action),\r\n      state\r\n    );\r\n  };\r\n}\r\n","import { isFieldDragContinueAction } from \"@/actions/field-drag-continue\";\r\n\r\nimport { createCircuitEditorUiReducer } from \"../utils\";\r\n\r\nexport default createCircuitEditorUiReducer((state, action) => {\r\n  if (!isFieldDragContinueAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { dragPos, modifierKeys } = action.payload;\r\n\r\n  return {\r\n    ...state,\r\n    dragEnd: dragPos,\r\n    dragModifierKeys: modifierKeys,\r\n  };\r\n});\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { Rectangle } from \"@/geometry\";\r\nimport { SelectionMode } from \"@/selection-mode\";\r\n\r\nexport const ACTION_SELECT_REGION = \"@select/region\" as const;\r\nexport const selectRegion = (\r\n  region: Rectangle,\r\n  mode: SelectionMode = \"set\"\r\n) => ({\r\n  type: ACTION_SELECT_REGION,\r\n  payload: {\r\n    region,\r\n    mode,\r\n  },\r\n});\r\nexport type SelectRegionAction = ReturnType<typeof selectRegion>;\r\nexport function isSelectRegionAction(\r\n  action: AnyAction\r\n): action is SelectRegionAction {\r\n  return action.type === ACTION_SELECT_REGION;\r\n}\r\n","import { isFieldDragStartNewJointAction } from \"@/actions/field-drag-start-newjoint\";\r\n\r\nimport { createCircuitEditorUiReducer } from \"../utils\";\r\n\r\nexport default createCircuitEditorUiReducer((state, action) => {\r\n  if (!isFieldDragStartNewJointAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { connectionId, addAfterJointId, modifierKeys, x, y } = action.payload;\r\n\r\n  return {\r\n    ...state,\r\n    dragMode: \"new-joint\" as const,\r\n    dragStart: {\r\n      x,\r\n      y,\r\n    },\r\n    dragNewJointConnectionId: connectionId,\r\n    dragNewJointAfterJointId: addAfterJointId,\r\n    dragModifierKeys: modifierKeys,\r\n  };\r\n});\r\n","import { isFieldDragStartNewNodeAction } from \"@/actions/field-drag-start-newnode\";\r\n\r\nimport { createCircuitEditorUiReducer } from \"../utils\";\r\n\r\nexport default createCircuitEditorUiReducer((state, action) => {\r\n  if (!isFieldDragStartNewNodeAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { nodeType } = action.payload;\r\n\r\n  return {\r\n    ...state,\r\n    dragMode: \"new-node\" as const,\r\n    dragNewNodeType: nodeType,\r\n  };\r\n});\r\n","import { isFieldDragStartSelectAction } from \"@/actions/field-drag-start-select\";\r\n\r\nimport { createCircuitEditorUiReducer } from \"../utils\";\r\n\r\nexport default createCircuitEditorUiReducer((state, action) => {\r\n  if (!isFieldDragStartSelectAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { x, y } = action.payload;\r\n\r\n  return {\r\n    ...state,\r\n    dragMode: \"select\",\r\n    dragStart: {\r\n      x,\r\n      y,\r\n    },\r\n  };\r\n});\r\n","import { isFieldDragStartWireAction } from \"@/actions/field-drag-start-wire\";\r\n\r\nimport { createCircuitEditorUiReducer } from \"../utils\";\r\n\r\nexport default createCircuitEditorUiReducer((state, action) => {\r\n  if (!isFieldDragStartWireAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { dragStart, pin } = action.payload;\r\n\r\n  return {\r\n    ...state,\r\n    dragMode: \"wire\",\r\n    dragStart,\r\n    dragWireSource: pin,\r\n  };\r\n});\r\n","import { concatReducers } from \"@/store/utils\";\r\n\r\nimport dragContinueReducer from \"./drag-continue\";\r\nimport dragEndReducer from \"./drag-end\";\r\nimport dragStartJointReducer from \"./drag-start-joint\";\r\nimport dragStartNewJointReducer from \"./drag-start-newjoint\";\r\nimport dragStartNewNodeReducer from \"./drag-start-newnode\";\r\nimport dragStartNodeReducer from \"./drag-start-node\";\r\nimport dragStartSelectReducer from \"./drag-start-select\";\r\nimport dragStartWireReducer from \"./drag-start-wire\";\r\nimport mouseLeaveReducer from \"./mouse-leave\";\r\n\r\nexport default concatReducers(\r\n  dragContinueReducer,\r\n  dragEndReducer,\r\n  dragStartJointReducer,\r\n  dragStartNewJointReducer,\r\n  dragStartNewNodeReducer,\r\n  dragStartNodeReducer,\r\n  dragStartSelectReducer,\r\n  dragStartWireReducer,\r\n  mouseLeaveReducer\r\n);\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { normalizeRectangle, pointSubtract } from \"@/geometry\";\r\nimport { fpSet } from \"@/utils\";\r\nimport { getSelectMode } from \"@/selection-mode\";\r\n\r\nimport { AppState, defaultAppState } from \"@/store\";\r\nimport rootReducer from \"@/store/reducer\";\r\n\r\nimport { isFieldDragEndAction } from \"@/actions/field-drag-end\";\r\nimport { selectRegion } from \"@/actions/select-region\";\r\nimport { moveSelection } from \"@/actions/selection-move\";\r\nimport { addNode } from \"@/actions/node-add\";\r\nimport { addWireJoint } from \"@/actions/wire-joint-add\";\r\nimport { attachWire } from \"@/actions/wire-attach\";\r\n\r\nimport {\r\n  applyGridJointSnapSelector,\r\n  applyGridNodeSnapSelector,\r\n} from \"../selectors/snap\";\r\nimport { dragWireTargetPinSelector } from \"../selectors/drag\";\r\n\r\nexport default function dragEndReducer(\r\n  state: AppState = defaultAppState,\r\n  action: AnyAction\r\n) {\r\n  if (!isFieldDragEndAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { x, y, modifierKeys } = action.payload;\r\n\r\n  const {\r\n    dragMode,\r\n    dragStart,\r\n    dragEnd,\r\n    dragNewNodeType,\r\n    dragNewJointAfterJointId,\r\n    dragNewJointConnectionId,\r\n    dragWireSource,\r\n  } = state.services.circuitEditorUi;\r\n\r\n  switch (dragMode) {\r\n    case \"select\": {\r\n      if (dragStart) {\r\n        const selectionMode = getSelectMode(modifierKeys);\r\n        const rect = normalizeRectangle(dragStart, { x, y });\r\n        state = rootReducer(state, selectRegion(rect, selectionMode));\r\n      }\r\n      break;\r\n    }\r\n    case \"move\": {\r\n      if (dragStart) {\r\n        let moveBy = pointSubtract({ x, y }, dragStart);\r\n        const hasNodes = state.services.selection.selectedNodeIds.length > 0;\r\n        if (!modifierKeys.ctrlMetaKey) {\r\n          // We apply the snap here because we want to snap the offset, not the resulting positions.\r\n          // Applying the snap in moveSelection can result in different objects moving different distances\r\n          // depending on their snap.\r\n          if (hasNodes) {\r\n            moveBy = applyGridNodeSnapSelector(state, moveBy);\r\n          } else {\r\n            moveBy = applyGridJointSnapSelector(state, moveBy);\r\n          }\r\n        }\r\n        state = rootReducer(state, moveSelection(moveBy.x, moveBy.y));\r\n      }\r\n      break;\r\n    }\r\n    case \"new-node\": {\r\n      if (dragEnd) {\r\n        const position = applyGridNodeSnapSelector(state, dragEnd);\r\n        state = rootReducer(state, addNode(dragNewNodeType!, { position }));\r\n      }\r\n      break;\r\n    }\r\n    case \"new-joint\": {\r\n      if (dragEnd) {\r\n        const position = applyGridJointSnapSelector(state, dragEnd);\r\n        state = rootReducer(\r\n          state,\r\n          addWireJoint(\r\n            dragNewJointConnectionId!,\r\n            dragNewJointAfterJointId,\r\n            position\r\n          )\r\n        );\r\n      }\r\n      break;\r\n    }\r\n    case \"wire\": {\r\n      const endPin = dragWireTargetPinSelector(state);\r\n      if (dragWireSource && dragEnd && endPin) {\r\n        state = rootReducer(state, attachWire(dragWireSource, endPin));\r\n      }\r\n      break;\r\n    }\r\n  }\r\n\r\n  state = fpSet(state, \"services\", \"circuitEditorUi\", (value) => ({\r\n    ...value,\r\n    dragMode: null,\r\n    dragModifierKeys: null,\r\n    dragStart: null,\r\n    dragEnd: null,\r\n    dragNewNodeType: null,\r\n    dragWireSource: null,\r\n  }));\r\n\r\n  return state;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { fpSet } from \"@/utils\";\r\nimport { getSelectMode } from \"@/selection-mode\";\r\n\r\nimport { AppState, defaultAppState } from \"@/store\";\r\nimport rootReducer from \"@/store/reducer\";\r\n\r\nimport { isFieldDragStartJointAction } from \"@/actions/field-drag-start-joint\";\r\nimport { selectWireJoints } from \"@/actions/select-wire-joints\";\r\n\r\nimport { isJointSelectedFromJointIdSelector } from \"@/services/selection/selectors/selection\";\r\n\r\nexport default function dragStartJointReducer(\r\n  state: AppState = defaultAppState,\r\n  action: AnyAction\r\n) {\r\n  if (!isFieldDragStartJointAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { jointId, x, y, modifierKeys } = action.payload;\r\n\r\n  state = fpSet(state, \"services\", \"circuitEditorUi\", (value) => ({\r\n    ...value,\r\n    dragMode: \"move\" as const,\r\n    dragStart: {\r\n      x,\r\n      y,\r\n    },\r\n  }));\r\n\r\n  if (!isJointSelectedFromJointIdSelector(state, jointId)) {\r\n    const selectionMode = getSelectMode(modifierKeys);\r\n    // Dragging a node that was not previously selected.  Perform a selection on the node.\r\n    state = rootReducer(state, selectWireJoints(jointId, selectionMode));\r\n  }\r\n\r\n  return state;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { fpSet } from \"@/utils\";\r\nimport { getSelectMode } from \"@/selection-mode\";\r\n\r\nimport { AppState, defaultAppState } from \"@/store\";\r\nimport rootReducer from \"@/store/reducer\";\r\n\r\nimport { isFieldDragStartNodeAction } from \"@/actions/field-drag-start-node\";\r\nimport { selectNodes } from \"@/actions/select-nodes\";\r\n\r\nimport { isNodeSelectedFromNodeIdSelector } from \"@/services/selection/selectors/selection\";\r\n\r\nexport default function dragStartNodeReducer(\r\n  state: AppState = defaultAppState,\r\n  action: AnyAction\r\n) {\r\n  if (!isFieldDragStartNodeAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { nodeId, x, y, modifierKeys } = action.payload;\r\n\r\n  state = fpSet(state, \"services\", \"circuitEditorUi\", (value) => ({\r\n    ...value,\r\n    dragMode: \"move\" as const,\r\n    dragStart: {\r\n      x,\r\n      y,\r\n    },\r\n  }));\r\n\r\n  if (!isNodeSelectedFromNodeIdSelector(state, nodeId)) {\r\n    const selectionMode = getSelectMode(modifierKeys);\r\n    // Dragging a node that was not previously selected.  Perform a selection on the node.\r\n    state = rootReducer(state, selectNodes(nodeId, selectionMode));\r\n  }\r\n\r\n  return state;\r\n}\r\n","import { isFieldMouseLeaveAction } from \"@/actions/field-mouse-leave\";\r\n\r\nimport { createCircuitEditorUiReducer } from \"../utils\";\r\n\r\nexport default createCircuitEditorUiReducer((state, action) => {\r\n  if (!isFieldMouseLeaveAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  if (state.dragMode == null) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    dragEnd: null,\r\n  };\r\n});\r\n","import { isDeleteCircuitAction } from \"@/actions/circuit-delete\";\r\n\r\nimport { ROOT_CIRCUIT_ID } from \"@/services/circuits/constants\";\r\n\r\nimport { createCircuitEditorViewReducer } from \"../utils\";\r\n\r\nexport default createCircuitEditorViewReducer((state, action) => {\r\n  if (!isDeleteCircuitAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { circuitId } = action.payload;\r\n\r\n  if (state.editingCircuitId !== circuitId) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    editingCircuitId: ROOT_CIRCUIT_ID,\r\n  };\r\n});\r\n","import { isAddCircuitAction } from \"@/actions/circuit-add\";\r\n\r\nimport { createCircuitEditorViewReducer } from \"../utils\";\r\n\r\nexport default createCircuitEditorViewReducer((state, action) => {\r\n  if (!isAddCircuitAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { circuitId, edit } = action.payload;\r\n\r\n  if (!edit) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    editingCircuitId: circuitId,\r\n  };\r\n});\r\n","import { isViewCircuitAction } from \"@/actions/circuit-view\";\r\nimport { circuitIdsSelector } from \"@/services/circuits/selectors/circuits\";\r\n\r\nimport { createCircuitEditorViewReducer } from \"../utils\";\r\n\r\nexport default createCircuitEditorViewReducer((state, action, appState) => {\r\n  if (!isViewCircuitAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { circuitId, circuitNodeIdPath } = action.payload;\r\n\r\n  if (circuitIdsSelector(appState).indexOf(circuitId) === -1) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    editingCircuitId: circuitId,\r\n    editingCircuitNodeIdPath: circuitNodeIdPath,\r\n  };\r\n});\r\n","import { concatReducers } from \"@/store/utils\";\r\n\r\nimport circuitDeleteReducer from \"./circuit-delete\";\r\nimport circuitNewReducer from \"./circuit-new\";\r\nimport circuitViewReducer from \"./circuit-view\";\r\nimport viewZoomReducer from \"./view-zoom\";\r\n\r\nexport default concatReducers(\r\n  circuitDeleteReducer,\r\n  circuitNewReducer,\r\n  circuitViewReducer,\r\n  viewZoomReducer\r\n);\r\n","import { isViewZoomAction } from \"@/actions/view-zoom\";\r\n\r\nimport { createCircuitEditorViewReducer } from \"../utils\";\r\n\r\nconst SCALE_FACTOR = 1.03;\r\n\r\nexport default createCircuitEditorViewReducer((state, action) => {\r\n  if (!isViewZoomAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { viewScale: scale } = state;\r\n  const { delta } = action.payload;\r\n\r\n  return {\r\n    ...state,\r\n    viewScale:\r\n      delta > 0\r\n        ? scale * delta * SCALE_FACTOR\r\n        : scale / (-delta * SCALE_FACTOR),\r\n  };\r\n});\r\n","import { isAddCircuitAction } from \"@/actions/circuit-add\";\r\nimport { createCircuitsReducer } from \"../utils\";\r\n\r\nexport default createCircuitsReducer((state, action) => {\r\n  if (!isAddCircuitAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const circuitId = action.payload.circuitId;\r\n  let circuitName = action.payload.circuitName;\r\n\r\n  if (!circuitName) {\r\n    circuitName = `Circuit ${\r\n      Object.keys(state.circuitNamesByCircuitId).length + 1\r\n    }`;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    circuitNamesByCircuitId: {\r\n      ...state.circuitNamesByCircuitId,\r\n      [circuitId]: circuitName,\r\n    },\r\n    nodeIdsByCircuitId: {\r\n      ...state.nodeIdsByCircuitId,\r\n      [circuitId]: [],\r\n    },\r\n  };\r\n});\r\n","import pick from \"lodash/pick\";\r\nimport mapValues from \"lodash/mapValues\";\r\nimport difference from \"lodash/difference\";\r\n\r\nimport { isDeleteCircuitAction } from \"@/actions/circuit-delete\";\r\nimport { nodeIdsFromTypeSelector } from \"@/services/node-graph/selectors/nodes\";\r\nimport { circuitIdToNodeType } from \"@/services/node-types/definition-sources/integrated-circuits/utils\";\r\n\r\nimport { createCircuitsReducer } from \"../utils\";\r\n\r\nexport default createCircuitsReducer((state, action, rootState) => {\r\n  if (!isDeleteCircuitAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { circuitId } = action.payload;\r\n\r\n  const remainingCircuitIds = Object.keys(state.circuitNamesByCircuitId).filter(\r\n    (x) => x !== circuitId\r\n  );\r\n\r\n  const circuitTypeNodeIds = nodeIdsFromTypeSelector(\r\n    rootState,\r\n    circuitIdToNodeType(circuitId)\r\n  );\r\n\r\n  let nodeIdsByCircuitId = pick(state.nodeIdsByCircuitId, remainingCircuitIds);\r\n\r\n  nodeIdsByCircuitId = mapValues(nodeIdsByCircuitId, (nodeIds) =>\r\n    difference(nodeIds, circuitTypeNodeIds)\r\n  );\r\n\r\n  return {\r\n    ...state,\r\n    nodeIdsByCircuitId: nodeIdsByCircuitId,\r\n    circuitNamesByCircuitId: pick(\r\n      state.circuitNamesByCircuitId,\r\n      remainingCircuitIds\r\n    ),\r\n  };\r\n});\r\n","import { isRenameCircuitAction } from \"@/actions/circuit-rename\";\r\nimport { createCircuitsReducer } from \"../utils\";\r\n\r\nexport default createCircuitsReducer((state, action) => {\r\n  if (!isRenameCircuitAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { circuitId, circuitName } = action.payload;\r\n\r\n  const trimmedName = circuitName.trim();\r\n\r\n  if (trimmedName === \"\") {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    circuitNamesByCircuitId: {\r\n      ...state.circuitNamesByCircuitId,\r\n      [circuitId]: trimmedName,\r\n    },\r\n  };\r\n});\r\n","import { isAddNodeAction } from \"@/actions/node-add\";\r\n\r\nimport { editingCircuitIdSelector } from \"@/services/circuit-editor-view/selectors/circuit\";\r\n\r\nimport { createCircuitsReducer } from \"../utils\";\r\n\r\nexport default createCircuitsReducer((state, action, rootState) => {\r\n  if (!isAddNodeAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { nodeId, circuitId } = action.payload;\r\n\r\n  const targetCircuitId = circuitId ?? editingCircuitIdSelector(rootState);\r\n\r\n  return {\r\n    ...state,\r\n    nodeIdsByCircuitId: {\r\n      ...state.nodeIdsByCircuitId,\r\n      [targetCircuitId]: [...state.nodeIdsByCircuitId[targetCircuitId], nodeId],\r\n    },\r\n  };\r\n});\r\n","import { isDeleteNodeAction } from \"@/actions/node-delete\";\r\nimport mapValues from \"lodash/mapValues\";\r\n\r\nimport { createCircuitsReducer } from \"../utils\";\r\n\r\nexport default createCircuitsReducer((state, action) => {\r\n  if (!isDeleteNodeAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { nodeIds } = action.payload;\r\n\r\n  return {\r\n    ...state,\r\n    nodeIdsByCircuitId: mapValues(state.nodeIdsByCircuitId, (circuitNodeIds) =>\r\n      circuitNodeIds.filter(\r\n        (circuitNodeId) => nodeIds.indexOf(circuitNodeId) === -1\r\n      )\r\n    ),\r\n  };\r\n});\r\n","import { concatReducers } from \"@/store/utils\";\r\n\r\nimport circuitAddReducer from \"./circuit-add\";\r\nimport circuitDeleteReducer from \"./circuit-delete\";\r\nimport circuitRenameReducer from \"./circuit-rename\";\r\nimport nodeAddReducer from \"./node-add\";\r\nimport nodeDeleteReducer from \"./node-delete\";\r\nimport projectNewReducer from \"./project-new\";\r\n\r\nexport default concatReducers(\r\n  circuitAddReducer,\r\n  circuitDeleteReducer,\r\n  circuitRenameReducer,\r\n  nodeAddReducer,\r\n  nodeDeleteReducer,\r\n  projectNewReducer\r\n);\r\n","import { isNewProjectAction } from \"@/actions/project-new\";\r\n\r\nimport { ROOT_CIRCUIT_ID } from \"../constants\";\r\nimport { createCircuitsReducer } from \"../utils\";\r\n\r\nexport default createCircuitsReducer((state, action) => {\r\n  if (!isNewProjectAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    circuitNamesByCircuitId: {\r\n      [ROOT_CIRCUIT_ID]: \"Root\",\r\n    },\r\n    nodeIdsByCircuitId: {\r\n      [ROOT_CIRCUIT_ID]: [],\r\n    },\r\n  };\r\n});\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_COPY_NODES = \"@clipboard/copy\" as const;\r\nexport const copyNodes = (nodeId: string | string[]) => ({\r\n  type: ACTION_COPY_NODES,\r\n  payload: {\r\n    nodeIds: Array.isArray(nodeId) ? nodeId : [nodeId],\r\n  },\r\n});\r\nexport type CopyNodesAction = ReturnType<typeof copyNodes>;\r\nexport function isCopyNodesAction(\r\n  action: AnyAction\r\n): action is CopyNodesAction {\r\n  return action.type === ACTION_COPY_NODES;\r\n}\r\n","import {\r\n  createServiceReducerCreator,\r\n  createServiceSelectorCreator,\r\n} from \"../service-state-utils\";\r\n\r\nexport const createClipboardReducer = createServiceReducerCreator(\"clipboard\");\r\nexport const createClipboardSelector = createServiceSelectorCreator(\r\n  \"clipboard\"\r\n);\r\n","import { v4 as uuidV4 } from \"uuid\";\r\nimport map from \"lodash/map\";\r\nimport mapValues from \"lodash/mapValues\";\r\nimport findIndex from \"lodash/findIndex\";\r\nimport zipObject from \"lodash/zipObject\";\r\n\r\nimport { pointSubtract } from \"@/geometry\";\r\n\r\nimport { isCopyNodesAction } from \"@/actions/clipboard-copy\";\r\n\r\nimport { nodeFromNodeIdSelector } from \"@/services/node-graph/selectors/nodes\";\r\nimport { nodeOutputSourcesByPinIdFromNodeIdSelector } from \"@/services/node-graph/selectors/pins\";\r\nimport { nodePositionsByNodeIdSelector } from \"@/services/node-layout/selectors/node-positions\";\r\n\r\nimport { ClipboardNode } from \"../types\";\r\nimport { createClipboardReducer } from \"../utils\";\r\n\r\nexport default createClipboardReducer((state, action, appState) => {\r\n  if (!isCopyNodesAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { nodeIds } = action.payload;\r\n  if (nodeIds.length === 0) {\r\n    return state;\r\n  }\r\n\r\n  const nodePositionsById = nodePositionsByNodeIdSelector(appState);\r\n\r\n  const copyIds = zipObject(\r\n    nodeIds,\r\n    map(nodeIds, () => uuidV4())\r\n  );\r\n\r\n  function nodeIsSelected(id: string): boolean {\r\n    return findIndex(nodeIds, (x) => x === id) !== -1;\r\n  }\r\n\r\n  const rootPosition = nodePositionsById[nodeIds[0]];\r\n\r\n  const copyNodes: ClipboardNode[] = nodeIds.map((nodeId) => {\r\n    const node = nodeFromNodeIdSelector(appState, nodeId);\r\n    const outputs = nodeOutputSourcesByPinIdFromNodeIdSelector(\r\n      appState,\r\n      nodeId\r\n    );\r\n    const copyNode: ClipboardNode = {\r\n      id: copyIds[nodeId],\r\n      nodeType: node.nodeType,\r\n      offset: pointSubtract(nodePositionsById[nodeId], rootPosition),\r\n      outputs: mapValues(outputs, (conns) =>\r\n        conns\r\n          .filter((x) => nodeIsSelected(x.nodeId))\r\n          .map((c) => ({ nodeId: copyIds[c.nodeId], pinId: c.pinId }))\r\n      ),\r\n    };\r\n    return copyNode;\r\n  });\r\n\r\n  return {\r\n    ...state,\r\n    clipboardNodes: copyNodes,\r\n    clipboardPasteOrigin: rootPosition,\r\n  };\r\n});\r\n","import { concatReducers } from \"@/store/utils\";\r\n\r\nimport clipboardCopyReducer from \"./clipboard-copy\";\r\nimport clipboardPasteReducer from \"./clipboard-paste\";\r\n\r\nconst clipboardReducer = concatReducers(\r\n  clipboardCopyReducer,\r\n  clipboardPasteReducer\r\n);\r\n\r\nexport default clipboardReducer;\r\n","import { AnyAction } from \"redux\";\r\nimport zipObject from \"lodash/zipObject\";\r\nimport map from \"lodash/map\";\r\nimport values from \"lodash/values\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\n\r\nimport { pointAdd } from \"@/geometry\";\r\nimport { AppState, defaultAppState } from \"@/store\";\r\nimport { fpSet } from \"@/utils\";\r\n\r\nimport rootReducer from \"@/store/reducer\";\r\n\r\nimport { addNode } from \"@/actions/node-add\";\r\nimport { attachWire } from \"@/actions/wire-attach\";\r\nimport { isPasteAction } from \"@/actions/clipboard-paste\";\r\nimport { selectNodes } from \"@/actions/select-nodes\";\r\n\r\nimport { gridNodeSnapSelector } from \"@/services/circuit-editor-ui/selectors/snap\";\r\n\r\nexport default function clipboardPasteReducer(\r\n  state: AppState = defaultAppState,\r\n  action: AnyAction\r\n): AppState {\r\n  if (!isPasteAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { clipboardNodes, clipboardPasteOrigin } = state.services.clipboard;\r\n  const gridSnap = gridNodeSnapSelector(state);\r\n  const pastePosition = pointAdd(clipboardPasteOrigin, {\r\n    x: gridSnap,\r\n    y: gridSnap,\r\n  });\r\n\r\n  const pasteIds = zipObject(\r\n    clipboardNodes.map((x) => x.id),\r\n    map(clipboardNodes, () => uuidV4())\r\n  );\r\n\r\n  // Two passes: Create and Wire.\r\n\r\n  // Create the nodes.\r\n  for (const node of clipboardNodes) {\r\n    const { id, nodeType, offset } = node;\r\n    const p = pointAdd(pastePosition, offset);\r\n    state = rootReducer(\r\n      state,\r\n      addNode(nodeType, { position: p, nodeId: pasteIds[id] })\r\n    );\r\n  }\r\n\r\n  // Wire the nodes\r\n  for (const node of clipboardNodes) {\r\n    const { id, outputs } = node;\r\n    const sourceId = pasteIds[id];\r\n    for (const outputPin of Object.keys(outputs)) {\r\n      for (const output of outputs[outputPin]) {\r\n        const { nodeId: targetCopyId, pinId: targetPin } = output;\r\n        const targetId = pasteIds[targetCopyId];\r\n        state = rootReducer(\r\n          state,\r\n          attachWire(\r\n            { nodeId: sourceId, pinId: outputPin },\r\n            { nodeId: targetId, pinId: targetPin }\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  state = fpSet(\r\n    state,\r\n    \"services\",\r\n    \"clipboard\",\r\n    \"clipboardPasteOrigin\",\r\n    pastePosition\r\n  );\r\n  state = rootReducer(state, selectNodes(values(pasteIds)));\r\n\r\n  return state;\r\n}\r\n","import { isAcceptDialogAction } from \"@/actions/dialog-response-accept\";\r\n\r\nimport { defaultDialogServiceState } from \"../state\";\r\nimport { createDialogReducer } from \"../utils\";\r\n\r\nexport default createDialogReducer((state, action) => {\r\n  if (!isAcceptDialogAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  return defaultDialogServiceState;\r\n});\r\n","import { concatReducers } from \"@/store/utils\";\r\n\r\nimport dialogResponseAcceptReducer from \"./dialog-response-accept\";\r\nimport dialogResponseCancelReducer from \"./dialog-response-cancel\";\r\nimport dialogShowReducer from \"./dialog-show\";\r\n\r\nexport default concatReducers(\r\n  dialogResponseAcceptReducer,\r\n  dialogResponseCancelReducer,\r\n  dialogShowReducer\r\n);\r\n","import { isCancelDialogAction } from \"@/actions/dialog-response-cancel\";\r\n\r\nimport { defaultDialogServiceState } from \"../state\";\r\nimport { createDialogReducer } from \"../utils\";\r\n\r\nexport default createDialogReducer((state, action) => {\r\n  if (!isCancelDialogAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  return defaultDialogServiceState;\r\n});\r\n","import { isShowDialogAction } from \"@/actions/dialog-show\";\r\nimport { createDialogReducer } from \"../utils\";\r\n\r\nexport default createDialogReducer((state, action) => {\r\n  if (!isShowDialogAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { dialogType, data } = action.payload;\r\n\r\n  return {\r\n    ...state,\r\n    dialogType,\r\n    data,\r\n  };\r\n});\r\n","import { AppReducer } from \"./types\";\r\n\r\nexport const PRIORITY_PRE = -10;\r\nexport const PRIORITY_POST = 10;\r\nexport const PRIORITY_SAVE = 50;\r\n\r\nexport function reducerPriority(\r\n  priority: number,\r\n  reducer: AppReducer\r\n): AppReducer {\r\n  reducer.weight = priority;\r\n  return reducer;\r\n}\r\n\r\nexport function priorityBefore(reducer: AppReducer) {\r\n  return (reducer.weight ?? 0) - 1;\r\n}\r\n","import pick from \"lodash/pick\";\r\nimport difference from \"lodash/difference\";\r\nimport pickBy from \"lodash/pickBy\";\r\nimport flatMap from \"lodash/flatMap\";\r\n\r\nimport { AppState } from \"@/store\";\r\n\r\nimport { NodeGraphServiceState } from \"../../state\";\r\nimport { Connection, nodePinEquals } from \"../../types\";\r\nimport { nodePinsFromPinNodeSelector } from \"../../selectors/pins\";\r\n\r\nexport default function nodeDelete(\r\n  state: NodeGraphServiceState,\r\n  nodeIds: string[],\r\n  rootState: AppState\r\n): NodeGraphServiceState {\r\n  const remainingNodeIds = difference(Object.keys(state.nodesById), nodeIds);\r\n\r\n  const removedIcPins = flatMap(nodeIds, (nodeId) =>\r\n    nodePinsFromPinNodeSelector(rootState, nodeId)\r\n  );\r\n\r\n  function isRemainingConnection({ inputPin, outputPin }: Connection) {\r\n    if (\r\n      nodeIds.indexOf(inputPin.nodeId) !== -1 ||\r\n      nodeIds.indexOf(outputPin.nodeId) !== -1\r\n    ) {\r\n      // Connection went to a removed node\r\n      return false;\r\n    }\r\n\r\n    // Connection was to a removed node pin\r\n    if (\r\n      removedIcPins.some(\r\n        (pin) => nodePinEquals(pin, inputPin) || nodePinEquals(pin, outputPin)\r\n      )\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    nodesById: pick(state.nodesById, remainingNodeIds),\r\n    connectionsById: pickBy(state.connectionsById, isRemainingConnection),\r\n  };\r\n}\r\n","import { priorityBefore, reducerPriority } from \"@/store/priorities\";\r\n\r\nimport { isDeleteCircuitAction } from \"@/actions/circuit-delete\";\r\n\r\nimport { nodeIdsFromCircuitIdSelector } from \"@/services/circuits/selectors/nodes\";\r\nimport circuitsCircuitDeleteReducer from \"@/services/circuits/reducer/circuit-delete\";\r\nimport { circuitIdToNodeType } from \"@/services/node-types/definition-sources/integrated-circuits/utils\";\r\n\r\nimport { createNodeGraphReducer } from \"../utils\";\r\nimport { nodeIdsFromTypeSelector } from \"../selectors/nodes\";\r\n\r\nimport nodeDelete from \"./operations/node-delete\";\r\n\r\nexport default reducerPriority(\r\n  priorityBefore(circuitsCircuitDeleteReducer),\r\n  createNodeGraphReducer((state, action, rootState) => {\r\n    if (!isDeleteCircuitAction(action)) {\r\n      return state;\r\n    }\r\n\r\n    const { circuitId } = action.payload;\r\n\r\n    const inCircuitNodeIds = nodeIdsFromCircuitIdSelector(rootState, circuitId);\r\n\r\n    const circuitTypeNodeIds = nodeIdsFromTypeSelector(\r\n      rootState,\r\n      circuitIdToNodeType(circuitId)\r\n    );\r\n\r\n    const nodeIds = [...inCircuitNodeIds, ...circuitTypeNodeIds];\r\n\r\n    return nodeDelete(state, nodeIds, rootState);\r\n  })\r\n);\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { reducerPriority, PRIORITY_PRE } from \"@/store/priorities\";\r\n\r\nimport { isAddNodeAction } from \"@/actions/node-add\";\r\n\r\nimport { createNodeGraphReducer } from \"../utils\";\r\n\r\nexport default reducerPriority(\r\n  PRIORITY_PRE,\r\n  createNodeGraphReducer((state, action: AnyAction) => {\r\n    if (!isAddNodeAction(action)) {\r\n      return state;\r\n    }\r\n\r\n    const { nodeId: id, nodeType, nodeName } = action.payload;\r\n    return {\r\n      ...state,\r\n      nodesById: {\r\n        ...state.nodesById,\r\n        [id]: {\r\n          nodeType,\r\n          nodeName: nodeName ?? null,\r\n        },\r\n      },\r\n    };\r\n  })\r\n);\r\n","import { isDeleteNodeAction } from \"@/actions/node-delete\";\r\n\r\nimport { priorityBefore, reducerPriority } from \"@/store/priorities\";\r\n\r\nimport circuitsNodeDeleteReducer from \"@/services/circuits/reducer/node-delete\";\r\n\r\nimport { createNodeGraphReducer } from \"../utils\";\r\n\r\nimport nodeDelete from \"./operations/node-delete\";\r\n\r\n// We need to know what circuit the node was a part of\r\nexport default reducerPriority(\r\n  priorityBefore(circuitsNodeDeleteReducer),\r\n  createNodeGraphReducer((state, action, rootState) => {\r\n    if (!isDeleteNodeAction(action)) {\r\n      return state;\r\n    }\r\n\r\n    const { nodeIds } = action.payload;\r\n\r\n    return nodeDelete(state, nodeIds, rootState);\r\n  })\r\n);\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { isRenameNodeAction } from \"@/actions/node-rename\";\r\n\r\nimport { createNodeGraphReducer } from \"../utils\";\r\n\r\nexport default createNodeGraphReducer((state, action: AnyAction) => {\r\n  if (!isRenameNodeAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { nodeId } = action.payload;\r\n  if (!state.nodesById[nodeId]) {\r\n    return state;\r\n  }\r\n\r\n  let nodeName: string | null = action.payload.nodeName;\r\n  if (!nodeName && nodeName.trim() === \"\") {\r\n    nodeName = null;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    nodesById: {\r\n      ...state.nodesById,\r\n      [nodeId]: {\r\n        ...state.nodesById[nodeId],\r\n        nodeName: nodeName,\r\n      },\r\n    },\r\n  };\r\n});\r\n","import { isNewProjectAction } from \"@/actions/project-new\";\r\n\r\nimport { createNodeGraphReducer } from \"../utils\";\r\nimport { defaultNodeGraphServiceState } from \"../state\";\r\n\r\nexport default createNodeGraphReducer((state, action) => {\r\n  if (!isNewProjectAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  return defaultNodeGraphServiceState;\r\n});\r\n","import pick from \"lodash/pick\";\r\n\r\nimport { isDetatchWireAction } from \"@/actions/wire-detatch\";\r\n\r\nimport { createNodeGraphReducer } from \"../utils\";\r\n\r\nexport default createNodeGraphReducer((state, action) => {\r\n  if (!isDetatchWireAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { connectionId } = action.payload;\r\n\r\n  const remainingIds = Object.keys(state.connectionsById).filter(\r\n    (x) => x !== connectionId\r\n  );\r\n\r\n  return {\r\n    ...state,\r\n    connectionsById: pick(state.connectionsById, remainingIds),\r\n  };\r\n});\r\n","import { concatReducers } from \"@/store/utils\";\r\n\r\nimport circuitDeleteReducer from \"./circuit-delete\";\r\nimport nodeAddReducer from \"./node-add\";\r\nimport nodeDeleteReducer from \"./node-delete\";\r\nimport nodeRenameReducer from \"./node-rename\";\r\nimport projectNewReducer from \"./project-new\";\r\nimport wireAttachReducer from \"./wire-attach\";\r\nimport wireDetatchReducer from \"./wire-detatch\";\r\n\r\nconst graphReducer = concatReducers(\r\n  circuitDeleteReducer,\r\n  nodeAddReducer,\r\n  projectNewReducer,\r\n  nodeDeleteReducer,\r\n  nodeRenameReducer,\r\n  wireAttachReducer,\r\n  wireDetatchReducer\r\n);\r\n\r\nexport default graphReducer;\r\n","import find from \"lodash/find\";\r\n\r\nimport { AppState } from \"@/store\";\r\n\r\nimport { isAttachWireAction } from \"@/actions/wire-attach\";\r\n\r\nimport { nodeDefinitionFromTypeSelector } from \"@/services/node-types/selectors/node-types\";\r\n\r\nimport { createNodeGraphReducer } from \"../utils\";\r\nimport { Connection, NodePin, nodePinEquals } from \"../types\";\r\nimport { NodeGraphServiceState } from \"../state\";\r\n\r\nexport default createNodeGraphReducer((state, action, rootState) => {\r\n  if (!isAttachWireAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { connectionId, p1, p2 } = action.payload;\r\n  const conn = pinsToConnection(state, p1, p2, rootState);\r\n  if (!conn) {\r\n    return state;\r\n  }\r\n\r\n  const { inputPin } = conn;\r\n\r\n  // Only one source per input.\r\n  if (find(state.connectionsById, (c) => nodePinEquals(c.inputPin, inputPin))) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    connectionsById: {\r\n      ...state.connectionsById,\r\n      [connectionId]: {\r\n        id: connectionId,\r\n        ...conn,\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\n/**\r\n * Check two pins to see if they can form a valid connection.\r\n * Returns null if no connection can be made (both inputs or both outputs)\r\n *\r\n * Does not check to see if the pins are already connected, or other connections prevent this connection from forming.\r\n */\r\nexport function pinsToConnection(\r\n  state: NodeGraphServiceState,\r\n  p1: NodePin,\r\n  p2: NodePin,\r\n  rootState: AppState\r\n): Connection | null {\r\n  const p1Node = state.nodesById[p1.nodeId];\r\n  const p2Node = state.nodesById[p2.nodeId];\r\n\r\n  if (!p1Node || !p2Node) {\r\n    return null;\r\n  }\r\n\r\n  const p1Def = nodeDefinitionFromTypeSelector(rootState, p1Node.nodeType);\r\n  const p2Def = nodeDefinitionFromTypeSelector(rootState, p2Node.nodeType);\r\n\r\n  if (!p1Def || !p2Def) {\r\n    return null;\r\n  }\r\n\r\n  const p1Pin = p1Def.pins[p1.pinId];\r\n  const p2Pin = p2Def.pins[p2.pinId];\r\n\r\n  if (!p1Pin || !p2Pin) {\r\n    return null;\r\n  }\r\n\r\n  // Pins are in same direction and cannot be connected.\r\n  if (p1Pin.direction === p2Pin.direction) {\r\n    return null;\r\n  }\r\n\r\n  const outputPin = p1Pin.direction === \"output\" ? p1 : p2;\r\n  const inputPin = p1Pin.direction === \"input\" ? p1 : p2;\r\n\r\n  return {\r\n    outputPin,\r\n    inputPin,\r\n  };\r\n}\r\n","import difference from \"lodash/difference\";\r\nimport pick from \"lodash/pick\";\r\nimport flatMap from \"lodash/flatMap\";\r\n\r\nimport { AppState } from \"@/store\";\r\n\r\nimport {\r\n  connectionsByIdSelector,\r\n  nodeInputConnectionIdsFromNodeIdSelector,\r\n  nodeOutputConnectionIdsFromNodeIdSelector,\r\n} from \"@/services/node-graph/selectors/connections\";\r\n\r\nimport { NodeLayoutServiceState } from \"../../state\";\r\nimport { nodePinsFromPinNodeSelector } from \"@/services/node-graph/selectors/pins\";\r\nimport { nodePinEquals } from \"@/services/node-graph/types\";\r\n\r\nexport default function nodeDelete(\r\n  state: NodeLayoutServiceState,\r\n  nodeIds: string[],\r\n  rootState: AppState\r\n): NodeLayoutServiceState {\r\n  // Connection ids connected to nodes being removed.\r\n  const removingNodeConnectionIds = nodeIds.reduce((connectionIds, nodeId) => {\r\n    // Get all inputs and outputs to the node.\r\n    const inputs = nodeInputConnectionIdsFromNodeIdSelector(rootState, nodeId);\r\n    const outputs = nodeOutputConnectionIdsFromNodeIdSelector(\r\n      rootState,\r\n      nodeId\r\n    );\r\n\r\n    connectionIds.push(...inputs, ...outputs);\r\n\r\n    return connectionIds;\r\n  }, [] as string[]);\r\n\r\n  // Connections going to IC node pins whose pin nodes were removed.\r\n  const removedIcPins = flatMap(nodeIds, (nodeId) =>\r\n    // If not a pin, this will return an empty array.\r\n    nodePinsFromPinNodeSelector(rootState, nodeId)\r\n  );\r\n  const connectionsById = connectionsByIdSelector(rootState);\r\n  const removingPinConnectionIds = Object.keys(connectionsById).filter(\r\n    (connectionId) => {\r\n      const { inputPin, outputPin } = connectionsById[connectionId];\r\n      // We will need to remove this connection if it went to a pin generated by\r\n      // an input or output pin node being removed.\r\n      return removedIcPins.some(\r\n        (removedPin) =>\r\n          nodePinEquals(removedPin, inputPin) ||\r\n          nodePinEquals(removedPin, outputPin)\r\n      );\r\n    }\r\n  );\r\n\r\n  const removingConnectionIds = [\r\n    ...removingNodeConnectionIds,\r\n    ...removingPinConnectionIds,\r\n  ];\r\n\r\n  // Remove any joint that is part of a removed connection.\r\n  const removingJointIds = removingConnectionIds.reduce(\r\n    (jointIds, connectionId) => {\r\n      jointIds.push(...state.wireJointIdsByConnectionId[connectionId]);\r\n      return jointIds;\r\n    },\r\n    [] as string[]\r\n  );\r\n\r\n  const remainingConnectionIds = difference(\r\n    Object.keys(state.wireJointIdsByConnectionId),\r\n    removingNodeConnectionIds\r\n  );\r\n\r\n  const remainingJointIds = difference(\r\n    Object.keys(state.wireJointPositionsByJointId),\r\n    removingJointIds\r\n  );\r\n\r\n  const remainingNodeIds = difference(\r\n    Object.keys(state.nodePositionsById),\r\n    nodeIds\r\n  );\r\n\r\n  return {\r\n    ...state,\r\n    nodePositionsById: pick(state.nodePositionsById, remainingNodeIds),\r\n    wireJointIdsByConnectionId: pick(\r\n      state.wireJointIdsByConnectionId,\r\n      remainingConnectionIds\r\n    ),\r\n    wireJointPositionsByJointId: pick(\r\n      state.wireJointPositionsByJointId,\r\n      remainingJointIds\r\n    ),\r\n  };\r\n}\r\n","import { priorityBefore, reducerPriority } from \"@/store/priorities\";\r\n\r\nimport { isDeleteCircuitAction } from \"@/actions/circuit-delete\";\r\n\r\nimport nodeGraphCircuitDeleteReducer from \"@/services/node-graph/reducer/circuit-delete\";\r\nimport { nodeIdsFromCircuitIdSelector } from \"@/services/circuits/selectors/nodes\";\r\nimport { nodeIdsFromTypeSelector } from \"@/services/node-graph/selectors/nodes\";\r\nimport { circuitIdToNodeType } from \"@/services/node-types/definition-sources/integrated-circuits/utils\";\r\n\r\nimport { createNodeLayoutReducer } from \"../utils\";\r\n\r\nimport nodeDeleteOperation from \"./operations/node-delete\";\r\n\r\nexport default reducerPriority(\r\n  // We need to run this reducer before graph runs, as we want to check what wires are connected to the node being deleted.\r\n  priorityBefore(nodeGraphCircuitDeleteReducer),\r\n  createNodeLayoutReducer((state, action, rootState) => {\r\n    if (!isDeleteCircuitAction(action)) {\r\n      return state;\r\n    }\r\n\r\n    const { circuitId } = action.payload;\r\n    const inCircuitNodeIds = nodeIdsFromCircuitIdSelector(rootState, circuitId);\r\n\r\n    state = nodeDeleteOperation(state, inCircuitNodeIds, rootState);\r\n\r\n    const circuitTypeNodeIds = nodeIdsFromTypeSelector(\r\n      rootState,\r\n      circuitIdToNodeType(circuitId)\r\n    );\r\n\r\n    state = nodeDeleteOperation(state, circuitTypeNodeIds, rootState);\r\n\r\n    return state;\r\n  })\r\n);\r\n","import { fpSet } from \"@/utils\";\r\n\r\nimport { ZeroPoint } from \"@/geometry\";\r\nimport { isAddNodeAction } from \"@/actions/node-add\";\r\n\r\nimport { createNodeLayoutReducer } from \"../utils\";\r\n\r\nexport default createNodeLayoutReducer((state, action) => {\r\n  if (!isAddNodeAction(action)) {\r\n    return state;\r\n  }\r\n  const { nodeId, position = ZeroPoint } = action.payload;\r\n\r\n  return fpSet(state, \"nodePositionsById\", nodeId, position);\r\n});\r\n","import { priorityBefore, reducerPriority } from \"@/store/priorities\";\r\n\r\nimport { isDeleteNodeAction } from \"@/actions/node-delete\";\r\n\r\nimport nodeGraphNodeDeleteReducer from \"@/services/node-graph/reducer/node-delete\";\r\n\r\nimport { createNodeLayoutReducer } from \"../utils\";\r\n\r\nimport nodeDeleteOperation from \"./operations/node-delete\";\r\n\r\n// We need to run this reducer before graph runs, as we want to check what wires are connected to the node being deleted.\r\nexport default reducerPriority(\r\n  priorityBefore(nodeGraphNodeDeleteReducer),\r\n  createNodeLayoutReducer((state, action, rootState) => {\r\n    if (!isDeleteNodeAction(action)) {\r\n      return state;\r\n    }\r\n\r\n    const { nodeIds } = action.payload;\r\n\r\n    return nodeDeleteOperation(state, nodeIds, rootState);\r\n  })\r\n);\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { asArray, MaybeArray } from \"@/arrays\";\r\nimport { Point } from \"@/geometry\";\r\n\r\nexport interface MoveNodeOpts {\r\n  relative?: boolean;\r\n  snapMode?: \"none\" | \"node\";\r\n}\r\nexport const ACTION_NODE_MOVE = \"@node/move\" as const;\r\nexport const moveNode = (\r\n  nodeId: MaybeArray<string>,\r\n  position: Point,\r\n  opts: MoveNodeOpts = {}\r\n) => ({\r\n  type: ACTION_NODE_MOVE,\r\n  payload: {\r\n    nodeIds: asArray(nodeId),\r\n    position,\r\n    relative: opts.relative ?? false,\r\n    snapMode: opts.snapMode ?? \"none\",\r\n  },\r\n});\r\nexport type MoveNodeAction = ReturnType<typeof moveNode>;\r\nexport function isMoveNodeAction(action: AnyAction): action is MoveNodeAction {\r\n  return action.type === ACTION_NODE_MOVE;\r\n}\r\n","import mapValues from \"lodash/mapValues\";\r\nimport pick from \"lodash/pick\";\r\n\r\nimport { isMoveNodeAction } from \"@/actions/node-move\";\r\n\r\nimport { applyGridNodeSnapSelector } from \"@/services/circuit-editor-ui/selectors/snap\";\r\n\r\nimport { createNodeLayoutReducer } from \"../utils\";\r\n\r\nexport default createNodeLayoutReducer((state, action, appState) => {\r\n  if (!isMoveNodeAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { nodeIds, position, relative, snapMode } = action.payload;\r\n\r\n  const movedNodePositions = mapValues(\r\n    pick(state.nodePositionsById, nodeIds),\r\n    (p) => {\r\n      let movedP = {\r\n        x: relative ? p.x + position.x : position.x,\r\n        y: relative ? p.y + position.y : position.y,\r\n      };\r\n      if (snapMode === \"node\") {\r\n        movedP = applyGridNodeSnapSelector(appState, movedP);\r\n      }\r\n      return movedP;\r\n    }\r\n  );\r\n\r\n  return {\r\n    ...state,\r\n    nodePositionsById: {\r\n      ...state.nodePositionsById,\r\n      ...movedNodePositions,\r\n    },\r\n  };\r\n});\r\n","import { concatReducers } from \"@/store/utils\";\r\n\r\nimport circuitDeleteReducer from \"./circuit-delete\";\r\nimport nodeAddReducer from \"./node-add\";\r\nimport nodeDeleteReducer from \"./node-delete\";\r\nimport nodeMoveReducer from \"./node-move\";\r\nimport projectNewReducer from \"./project-new\";\r\nimport wireAttachReducer from \"./wire-attach\";\r\nimport wireDetatchReducer from \"./wire-detatch\";\r\nimport wireJointAddReducer from \"./wire-joint-add\";\r\nimport wireJointDeleteReducer from \"./wire-joint-delete\";\r\nimport wireJointMoveReducer from \"./wire-joint-move\";\r\n\r\nconst fieldReducer = concatReducers(\r\n  circuitDeleteReducer,\r\n  nodeAddReducer,\r\n  projectNewReducer,\r\n  nodeDeleteReducer,\r\n  nodeMoveReducer,\r\n  wireAttachReducer,\r\n  wireDetatchReducer,\r\n  wireJointAddReducer,\r\n  wireJointDeleteReducer,\r\n  wireJointMoveReducer\r\n);\r\n\r\nexport default fieldReducer;\r\n","import { isNewProjectAction } from \"@/actions/project-new\";\r\n\r\nimport { createNodeLayoutReducer } from \"../utils\";\r\nimport { defaultNodeLayoutServiceState } from \"../state\";\r\n\r\nexport default createNodeLayoutReducer((state, action) => {\r\n  if (!isNewProjectAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  return defaultNodeLayoutServiceState;\r\n});\r\n","import { v4 as uuidV4 } from \"uuid\";\r\nimport zipObject from \"lodash/zipObject\";\r\n\r\nimport { isAttachWireAction } from \"@/actions/wire-attach\";\r\nimport { fpSet } from \"@/utils\";\r\n\r\nimport { createNodeLayoutReducer } from \"../utils\";\r\n\r\nexport default createNodeLayoutReducer((state, action) => {\r\n  if (!isAttachWireAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { connectionId, joints } = action.payload;\r\n\r\n  // Might want to use addWireJoint action, but field is the only thing that cares about joints.\r\n  if (joints.length > 0) {\r\n    const jointIds = joints.map(() => uuidV4());\r\n    state = fpSet(state, \"wireJointIdsByConnectionId\", connectionId, jointIds);\r\n    state = fpSet(state, \"wireJointPositionsByJointId\", (value) => ({\r\n      ...value,\r\n      ...zipObject(jointIds, joints),\r\n    }));\r\n  } else {\r\n    state = fpSet(state, \"wireJointIdsByConnectionId\", connectionId, []);\r\n  }\r\n\r\n  return state;\r\n});\r\n","import pick from \"lodash/pick\";\r\nimport difference from \"lodash/difference\";\r\n\r\nimport { isDetatchWireAction } from \"@/actions/wire-detatch\";\r\n\r\nimport { createNodeLayoutReducer } from \"../utils\";\r\n\r\nexport default createNodeLayoutReducer((state, action) => {\r\n  if (!isDetatchWireAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { connectionId } = action.payload;\r\n\r\n  const remainingConnectionIds = Object.keys(\r\n    state.wireJointIdsByConnectionId\r\n  ).filter((x) => x != connectionId);\r\n\r\n  const remainingJointIds = difference(\r\n    Object.keys(state.wireJointPositionsByJointId),\r\n    state.wireJointIdsByConnectionId[connectionId]\r\n  );\r\n\r\n  return {\r\n    ...state,\r\n    wireJointIdsByConnectionId: pick(\r\n      state.wireJointIdsByConnectionId,\r\n      remainingConnectionIds\r\n    ),\r\n    wireJointPositionsByJointId: pick(\r\n      state.wireJointPositionsByJointId,\r\n      remainingJointIds\r\n    ),\r\n  };\r\n});\r\n","import { isAddWireJointAction } from \"@/actions/wire-joint-add\";\r\n\r\nimport { createNodeLayoutReducer } from \"../utils\";\r\n\r\nexport default createNodeLayoutReducer((state, action) => {\r\n  if (!isAddWireJointAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { connectionId, addAfterJointId, position, jointId } = action.payload;\r\n  let wireJoints = state.wireJointIdsByConnectionId[connectionId];\r\n  const insertionIndex = addAfterJointId\r\n    ? wireJoints.indexOf(addAfterJointId) + 1\r\n    : 0;\r\n\r\n  wireJoints = [\r\n    ...wireJoints.slice(0, insertionIndex),\r\n    jointId,\r\n    ...wireJoints.slice(insertionIndex),\r\n  ];\r\n\r\n  return {\r\n    ...state,\r\n    wireJointIdsByConnectionId: {\r\n      ...state.wireJointIdsByConnectionId,\r\n      [connectionId]: wireJoints,\r\n    },\r\n    wireJointPositionsByJointId: {\r\n      ...state.wireJointPositionsByJointId,\r\n      [jointId]: position,\r\n    },\r\n  };\r\n});\r\n","import pick from \"lodash/pick\";\r\nimport mapValues from \"lodash/mapValues\";\r\n\r\nimport { isDeleteWireJointAction } from \"@/actions/wire-joint-delete\";\r\n\r\nimport { createNodeLayoutReducer } from \"../utils\";\r\n\r\nexport default createNodeLayoutReducer((state, action) => {\r\n  if (!isDeleteWireJointAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { jointId } = action.payload;\r\n\r\n  const remainingJointIds = Object.keys(\r\n    state.wireJointPositionsByJointId\r\n  ).filter((x) => x !== jointId);\r\n\r\n  return {\r\n    ...state,\r\n    wireJointIdsByConnectionId: mapValues(\r\n      state.wireJointIdsByConnectionId,\r\n      (connectionIds) => connectionIds.filter((x) => x !== jointId)\r\n    ),\r\n    wireJointPositionsByJointId: pick(\r\n      state.wireJointPositionsByJointId,\r\n      remainingJointIds\r\n    ),\r\n  };\r\n});\r\n","import mapValues from \"lodash/mapValues\";\r\nimport pick from \"lodash/pick\";\r\n\r\nimport { isMoveWireJointAction } from \"@/actions/wire-joint-move\";\r\n\r\nimport { createNodeLayoutReducer } from \"../utils\";\r\nimport {\r\n  applyGridJointSnapSelector,\r\n  applyGridNodeSnapSelector,\r\n} from \"@/services/circuit-editor-ui/selectors/snap\";\r\n\r\nexport default createNodeLayoutReducer((state, action, appState) => {\r\n  if (!isMoveWireJointAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { jointIds, position, relative, snapMode } = action.payload;\r\n\r\n  const movedJoints = mapValues(\r\n    pick(state.wireJointPositionsByJointId, jointIds),\r\n    (p) => {\r\n      let movedP = {\r\n        x: relative ? p.x + position.x : position.x,\r\n        y: relative ? p.y + position.y : position.y,\r\n      };\r\n\r\n      if (snapMode === \"node\") {\r\n        movedP = applyGridNodeSnapSelector(appState, movedP);\r\n      } else if (snapMode === \"joint\") {\r\n        movedP = applyGridJointSnapSelector(appState, movedP);\r\n      }\r\n\r\n      return movedP;\r\n    }\r\n  );\r\n\r\n  return {\r\n    ...state,\r\n    wireJointPositionsByJointId: {\r\n      ...state.wireJointPositionsByJointId,\r\n      ...movedJoints,\r\n    },\r\n  };\r\n});\r\n","import { concatReducers } from \"@/store/utils\";\r\n\r\nimport autosaveReducer from \"./autosave\";\r\nimport initReducer from \"./init\";\r\nimport projectNewReducer from \"./project-new\";\r\nimport projectReceiveReducer from \"./project-receive\";\r\n\r\nexport default concatReducers(\r\n  autosaveReducer,\r\n  projectNewReducer,\r\n  initReducer,\r\n  projectReceiveReducer\r\n);\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { AppState, defaultAppState } from \"@/store\";\r\nimport { reducerPriority, PRIORITY_SAVE } from \"@/store/priorities\";\r\nimport { isProjectMutationAction } from \"@/project-mutation-actions\";\r\n\r\nimport { createSave, storeAutosave } from \"../utils\";\r\n\r\nexport default reducerPriority(\r\n  PRIORITY_SAVE,\r\n  (state: AppState = defaultAppState, action: AnyAction): AppState => {\r\n    if (!isProjectMutationAction(action)) {\r\n      return state;\r\n    }\r\n\r\n    const save = createSave(state);\r\n    storeAutosave(save);\r\n\r\n    return state;\r\n  }\r\n);\r\n","import {\r\n  SaveCircuit,\r\n  SaveData,\r\n  saveDataSchema,\r\n  SaveNode,\r\n  SaveWire,\r\n} from \"./types\";\r\n\r\nimport { AppState, defaultAppState } from \"@/store\";\r\nimport rootReducer from \"@/store/reducer\";\r\n\r\nimport { addNode } from \"@/actions/node-add\";\r\nimport { attachWire } from \"@/actions/wire-attach\";\r\n\r\nimport {\r\n  nodeIdsSelector,\r\n  nodeFromNodeIdSelector,\r\n} from \"../node-graph/selectors/nodes\";\r\nimport {\r\n  connectionIdsSelector,\r\n  connectionFromConnectionIdSelector,\r\n} from \"../node-graph/selectors/connections\";\r\nimport { nodePositionFromNodeIdSelector } from \"../node-layout/selectors/node-positions\";\r\nimport {\r\n  circuitIdsSelector,\r\n  circuitNameFromIdSelector,\r\n} from \"../circuits/selectors/circuits\";\r\nimport { ROOT_CIRCUIT_ID } from \"../circuits/constants\";\r\n\r\nimport { circuitIdFromNodeIdSelector } from \"../circuits/selectors/nodes\";\r\nimport {\r\n  wireJointPositionsByJointIdSelector,\r\n  wireJointIdsFromConnectionIdSelector,\r\n} from \"../node-layout/selectors/wires\";\r\n\r\nimport { SaveFormatError } from \"./errors\";\r\nimport { addCircuit } from \"@/actions/circuit-add\";\r\n\r\nexport function createSave(state: AppState): SaveData {\r\n  const jointPositions = wireJointPositionsByJointIdSelector(state);\r\n  return {\r\n    circuits: circuitIdsSelector(state).map((circuitId) => {\r\n      const circuitName = circuitNameFromIdSelector(state, circuitId);\r\n      const saveCircuit: SaveCircuit = {\r\n        circuitId,\r\n        circuitName,\r\n      };\r\n      return saveCircuit;\r\n    }),\r\n    nodes: nodeIdsSelector(state).map((nodeId) => {\r\n      const node = nodeFromNodeIdSelector(state, nodeId);\r\n      const position = nodePositionFromNodeIdSelector(state, nodeId);\r\n      const circuitId = circuitIdFromNodeIdSelector(state, nodeId);\r\n      const saveNode: SaveNode = {\r\n        nodeId: nodeId,\r\n        nodeType: node.nodeType,\r\n        nodeName: node.nodeName,\r\n        circuitId: circuitId ?? ROOT_CIRCUIT_ID,\r\n        x: position.x,\r\n        y: position.y,\r\n      };\r\n      return saveNode;\r\n    }),\r\n    wires: connectionIdsSelector(state).map((connectionId) => {\r\n      const wire = connectionFromConnectionIdSelector(state, connectionId);\r\n      const jointIds = wireJointIdsFromConnectionIdSelector(\r\n        state,\r\n        connectionId\r\n      );\r\n      const saveWire: SaveWire = {\r\n        input: wire.inputPin,\r\n        output: wire.outputPin,\r\n        joints: jointIds.map((jointId) => jointPositions[jointId]),\r\n      };\r\n      return saveWire;\r\n    }),\r\n  };\r\n}\r\n\r\nexport function loadSave(state: AppState, save: SaveData): AppState {\r\n  try {\r\n    saveDataSchema.validateSync(save);\r\n  } catch (e) {\r\n    throw new SaveFormatError(e.message);\r\n  }\r\n\r\n  // TODO: There may be some services that want to persist data across projects.\r\n  state = defaultAppState;\r\n\r\n  try {\r\n    state = (save.circuits ?? []).reduce(\r\n      (state, { circuitId, circuitName }) =>\r\n        rootReducer(state, addCircuit({ circuitId, circuitName })),\r\n      state\r\n    );\r\n\r\n    state = (save.nodes ?? []).reduce(\r\n      (state, node) =>\r\n        rootReducer(\r\n          state,\r\n          addNode(node.nodeType, {\r\n            nodeId: node.nodeId,\r\n            circuitId: node.circuitId,\r\n            position: { x: node.x, y: node.y },\r\n            nodeName: node.nodeName ?? undefined,\r\n          })\r\n        ),\r\n      state\r\n    );\r\n\r\n    state = (save.wires ?? []).reduce(\r\n      (state, wire) =>\r\n        rootReducer(\r\n          state,\r\n          attachWire(wire.output, wire.input, { joints: wire.joints })\r\n        ),\r\n      state\r\n    );\r\n  } catch (e) {\r\n    console.error(\"Failed to rehydrate SaveData:\", e);\r\n    throw new SaveFormatError(\"Failed to load project.\");\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nexport function storeAutosave(save: SaveData): void {\r\n  localStorage.setItem(\"autosave\", JSON.stringify(save));\r\n}\r\n\r\nexport function loadAutosave(): SaveData | null {\r\n  const str = localStorage.getItem(\"autosave\");\r\n  if (!str) {\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    return JSON.parse(str);\r\n  } catch {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function deleteAutosave() {\r\n  localStorage.removeItem(\"autosave\");\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { AppState, defaultAppState } from \"@/store\";\r\n\r\nimport { isNewProjectAction } from \"@/actions/project-new\";\r\n\r\nimport { deleteAutosave } from \"../utils\";\r\n\r\nexport default function fileNewReducer(\r\n  state: AppState = defaultAppState,\r\n  action: AnyAction\r\n): AppState {\r\n  if (!isNewProjectAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  deleteAutosave();\r\n  return state;\r\n}\r\n","import { AnyAction } from \"redux\";\r\nimport { AppState, defaultAppState } from \"@/store\";\r\n\r\nimport { isInitAction } from \"@/actions/init\";\r\n\r\nimport { loadAutosave, loadSave } from \"../utils\";\r\n\r\nexport default function initReducer(\r\n  state: AppState = defaultAppState,\r\n  action: AnyAction\r\n): AppState {\r\n  if (!isInitAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const save = loadAutosave();\r\n  if (!save) {\r\n    return state;\r\n  }\r\n\r\n  try {\r\n    return loadSave(state, save);\r\n  } catch {\r\n    return state;\r\n  }\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { AppState, defaultAppState } from \"@/store\";\r\n\r\nimport { isReceiveProjectAction } from \"@/actions/project-receive\";\r\n\r\nimport { loadSave } from \"../utils\";\r\n\r\nexport default function projectReceiveReducer(\r\n  state: AppState = defaultAppState,\r\n  action: AnyAction\r\n): AppState {\r\n  if (!isReceiveProjectAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  try {\r\n    return loadSave(state, action.payload.saveData);\r\n  } catch (e) {\r\n    // TODO: display error\r\n    console.error(\"Failed to load save\", e);\r\n    return state;\r\n  }\r\n}\r\n","import difference from \"lodash/difference\";\r\n\r\nimport { isDeleteNodeAction } from \"@/actions/node-delete\";\r\n\r\nimport { createSelectionReducer } from \"../utils\";\r\n\r\nexport default createSelectionReducer((state, action) => {\r\n  if (!isDeleteNodeAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { nodeIds } = action.payload;\r\n\r\n  return {\r\n    ...state,\r\n    selectedNodeIds: difference(state.selectedNodeIds, nodeIds),\r\n    selectedConnectionIds: [], // Might be removing a node attached to a selected wire\r\n  };\r\n});\r\n","import { isNewProjectAction } from \"@/actions/project-new\";\r\n\r\nimport { createSelectionReducer } from \"../utils\";\r\nimport { defaultSelectionServiceState } from \"../state\";\r\n\r\nexport default createSelectionReducer((state, action) => {\r\n  if (!isNewProjectAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  return defaultSelectionServiceState;\r\n});\r\n","import flatten from \"lodash/flatten\";\r\n\r\nimport { isSelectAllAction } from \"@/actions/select-all\";\r\n\r\nimport { nodeIdsForEditingCircuitSelector } from \"@/services/circuit-editor-view/selectors/nodes\";\r\nimport {\r\n  connectionIdsSelector,\r\n  connectionsByIdSelector,\r\n} from \"@/services/node-graph/selectors/connections\";\r\nimport { wireJointIdsByConnectionIdSelector } from \"@/services/node-layout/selectors/wires\";\r\n\r\nimport { createSelectionReducer } from \"../utils\";\r\n\r\nexport default createSelectionReducer((state, action, appState) => {\r\n  if (!isSelectAllAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const nodeIds = nodeIdsForEditingCircuitSelector(appState);\r\n\r\n  let connectionIds = connectionIdsSelector(appState);\r\n  const connectionsById = connectionsByIdSelector(appState);\r\n  connectionIds = connectionIds.filter((connectionId) => {\r\n    const { inputPin, outputPin } = connectionsById[connectionId];\r\n    if (\r\n      nodeIds.indexOf(inputPin.nodeId) === -1 ||\r\n      nodeIds.indexOf(outputPin.nodeId) === -1\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  });\r\n\r\n  const wireJointIdsFromConnectionId = wireJointIdsByConnectionIdSelector(\r\n    appState\r\n  );\r\n  const jointIds = flatten(\r\n    connectionIds.map((connId) => wireJointIdsFromConnectionId[connId])\r\n  );\r\n\r\n  return {\r\n    ...state,\r\n    selectedNodeIds: nodeIds,\r\n    selectedConnectionIds: connectionIds,\r\n    selectedJointIds: jointIds,\r\n  };\r\n});\r\n","import { isClearSelectionAction } from \"@/actions/select-clear\";\r\n\r\nimport { createSelectionReducer } from \"../utils\";\r\n\r\nexport default createSelectionReducer((state, action) => {\r\n  if (!isClearSelectionAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    selectedNodeIds: [],\r\n    selectedConnectionIds: [],\r\n    selectedJointIds: [],\r\n  };\r\n});\r\n","import { combineSelection } from \"@/selection-mode\";\r\n\r\nimport { isSelectWireJointsAction } from \"@/actions/select-wire-joints\";\r\n\r\nimport { createSelectionReducer } from \"../utils\";\r\n\r\nexport default createSelectionReducer((state, action) => {\r\n  if (!isSelectWireJointsAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { jointIds, mode } = action.payload;\r\n\r\n  return {\r\n    ...state,\r\n    selectedNodeIds: mode === \"set\" ? [] : state.selectedNodeIds,\r\n    selectedConnectionIds: mode === \"set\" ? [] : state.selectedConnectionIds,\r\n    selectedJointIds: combineSelection(state.selectedJointIds, jointIds, mode),\r\n  };\r\n});\r\n","import { combineSelection } from \"@/selection-mode\";\r\n\r\nimport { isSelectNodesAction } from \"@/actions/select-nodes\";\r\n\r\nimport { createSelectionReducer } from \"../utils\";\r\n\r\nexport default createSelectionReducer((state, action) => {\r\n  if (!isSelectNodesAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { nodeIds, mode } = action.payload;\r\n\r\n  return {\r\n    ...state,\r\n    selectedNodeIds: combineSelection(state.selectedNodeIds, nodeIds, mode),\r\n    selectedConnectionIds: mode === \"set\" ? [] : state.selectedConnectionIds,\r\n    selectedJointIds: mode === \"set\" ? [] : state.selectedJointIds,\r\n  };\r\n});\r\n","import forOwn from \"lodash/forOwn\";\r\nimport pick from \"lodash/pick\";\r\n\r\nimport { intersects, pointIntersects } from \"@/geometry\";\r\nimport { combineSelection } from \"@/selection-mode\";\r\n\r\nimport { isSelectRegionAction } from \"@/actions/select-region\";\r\n\r\nimport { nodeIdsForEditingCircuitSelector } from \"@/services/circuit-editor-view/selectors/nodes\";\r\nimport { nodeRectsByIdSelector } from \"@/services/node-layout/selectors/node-bounds\";\r\nimport { wireJointPositionsByJointIdSelector } from \"@/services/node-layout/selectors/wires\";\r\n\r\nimport { createSelectionReducer } from \"../utils\";\r\n\r\nexport default createSelectionReducer((state, action, appState) => {\r\n  if (!isSelectRegionAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { region, mode } = action.payload;\r\n\r\n  const nodeIds = nodeIdsForEditingCircuitSelector(appState);\r\n  const rects = pick(nodeRectsByIdSelector(appState), nodeIds);\r\n\r\n  const chosenNodeIds: string[] = [];\r\n  forOwn(rects, (rect, id) => {\r\n    if (intersects(rect, region)) {\r\n      chosenNodeIds.push(id);\r\n    }\r\n  });\r\n\r\n  const chosenJointIds: string[] = [];\r\n  const jointPositions = wireJointPositionsByJointIdSelector(appState);\r\n  forOwn(jointPositions, (p, jointId) => {\r\n    if (pointIntersects(p, region)) {\r\n      chosenJointIds.push(jointId);\r\n    }\r\n  });\r\n\r\n  return {\r\n    ...state,\r\n    selectedNodeIds: combineSelection(\r\n      state.selectedNodeIds,\r\n      chosenNodeIds,\r\n      mode\r\n    ),\r\n    selectedConnectionIds: mode === \"set\" ? [] : state.selectedConnectionIds,\r\n    selectedJointIds: combineSelection(\r\n      state.selectedJointIds,\r\n      chosenJointIds,\r\n      mode\r\n    ),\r\n  };\r\n});\r\n","import { combineSelection } from \"@/selection-mode\";\r\n\r\nimport { isSelectWiresAction } from \"@/actions/select-wires\";\r\n\r\nimport { createSelectionReducer } from \"../utils\";\r\n\r\nexport default createSelectionReducer((state, action) => {\r\n  if (!isSelectWiresAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { connectionIds, mode } = action.payload;\r\n\r\n  return {\r\n    ...state,\r\n    selectedNodeIds: mode === \"set\" ? [] : state.selectedNodeIds,\r\n    selectedConnectionIds: combineSelection(\r\n      state.selectedConnectionIds,\r\n      connectionIds,\r\n      mode\r\n    ),\r\n    selectedJointIds: mode === \"set\" ? [] : state.selectedJointIds,\r\n  };\r\n});\r\n","import { isDetatchWireAction } from \"@/actions/wire-detatch\";\r\n\r\nimport { createSelectionReducer } from \"../utils\";\r\n\r\nexport default createSelectionReducer((state, action) => {\r\n  if (!isDetatchWireAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { connectionId } = action.payload;\r\n\r\n  return {\r\n    ...state,\r\n    selectedConnectionIds: state.selectedConnectionIds.filter(\r\n      (x) => x !== connectionId\r\n    ),\r\n  };\r\n});\r\n","import { concatReducers } from \"@/store/utils\";\r\n\r\nimport nodeDeleteReducer from \"./node-delete\";\r\nimport projectNewReducer from \"./project-new\";\r\nimport selectAllReducer from \"./select-all\";\r\nimport selectClearReducer from \"./select-clear\";\r\nimport selectJointsReducer from \"./select-joints\";\r\nimport selectNodesReducer from \"./select-nodes\";\r\nimport selectRegionReducer from \"./select-region\";\r\nimport selectWiresReducer from \"./select-wires\";\r\nimport selectionAlignToGrid from \"./selection-align-to-grid\";\r\nimport selectionCopyReducer from \"./selection-copy\";\r\nimport selectionDeleteReducer from \"./selection-delete\";\r\nimport selectionMoveReducer from \"./selection-move\";\r\nimport wireDetatchReducer from \"./wire-detatch\";\r\n\r\nconst selectionReducer = concatReducers(\r\n  projectNewReducer,\r\n  nodeDeleteReducer,\r\n  selectAllReducer,\r\n  selectClearReducer,\r\n  selectJointsReducer,\r\n  selectNodesReducer,\r\n  selectRegionReducer,\r\n  selectWiresReducer,\r\n  selectionAlignToGrid,\r\n  selectionCopyReducer,\r\n  selectionDeleteReducer,\r\n  selectionMoveReducer,\r\n  wireDetatchReducer\r\n);\r\n\r\nexport default selectionReducer;\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { AppState, defaultAppState } from \"@/store\";\r\nimport rootReducer from \"@/store/reducer\";\r\nimport { pointEquals } from \"@/geometry\";\r\n\r\nimport { isSelectionAlignToGridAction } from \"@/actions/selection-align-to-grid\";\r\nimport { moveNode } from \"@/actions/node-move\";\r\nimport { moveWireJoint } from \"@/actions/wire-joint-move\";\r\n\r\nimport { nodePositionsByNodeIdSelector } from \"@/services/node-layout/selectors/node-positions\";\r\nimport {\r\n  applyGridJointSnapSelector,\r\n  applyGridNodeSnapSelector,\r\n} from \"@/services/circuit-editor-ui/selectors/snap\";\r\nimport { wireJointPositionsByJointIdSelector } from \"@/services/node-layout/selectors/wires\";\r\n\r\nexport default function selectionAlignToGridReducer(\r\n  state: AppState = defaultAppState,\r\n  action: AnyAction\r\n): AppState {\r\n  if (!isSelectionAlignToGridAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { selectedNodeIds, selectedJointIds } = state.services.selection;\r\n\r\n  // Align nodes.\r\n  const nodePositions = nodePositionsByNodeIdSelector(state);\r\n  for (const nodeId of selectedNodeIds) {\r\n    const nodePos = nodePositions[nodeId];\r\n    if (!nodePos) {\r\n      continue;\r\n    }\r\n\r\n    const snappedPos = applyGridNodeSnapSelector(state, nodePos);\r\n    if (!pointEquals(nodePos, snappedPos)) {\r\n      state = rootReducer(state, moveNode(nodeId, snappedPos));\r\n    }\r\n  }\r\n\r\n  // Align joints.\r\n  const jointPositions = wireJointPositionsByJointIdSelector(state);\r\n  for (const jointId of selectedJointIds) {\r\n    const jointPos = jointPositions[jointId];\r\n    if (!jointPos) {\r\n      continue;\r\n    }\r\n\r\n    const snappedPos = applyGridJointSnapSelector(state, jointPos);\r\n    if (!pointEquals(jointPos, snappedPos)) {\r\n      state = rootReducer(state, moveWireJoint(jointId, snappedPos));\r\n    }\r\n  }\r\n\r\n  return state;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { AppState, defaultAppState } from \"@/store\";\r\nimport rootReducer from \"@/store/reducer\";\r\n\r\nimport { isCopySelectionAction } from \"@/actions/selection-copy\";\r\nimport { copyNodes } from \"@/actions/clipboard-copy\";\r\n\r\nimport { selectedNodeIdsSelector } from \"@/services/selection/selectors/selection\";\r\n\r\nexport default function selectionCopyReducer(\r\n  state: AppState = defaultAppState,\r\n  action: AnyAction\r\n): AppState {\r\n  if (!isCopySelectionAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const selectedNodes = selectedNodeIdsSelector(state);\r\n  if (selectedNodes.length === 0) {\r\n    return state;\r\n  }\r\n\r\n  return rootReducer(state, copyNodes(selectedNodes));\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { AppState, defaultAppState } from \"@/store\";\r\nimport rootReducer from \"@/store/reducer\";\r\n\r\nimport { isDeleteSelectionAction } from \"@/actions/selection-delete\";\r\nimport { deleteNode } from \"@/actions/node-delete\";\r\nimport { detatchWire } from \"@/actions/wire-detatch\";\r\nimport { deleteWireJoint } from \"@/actions/wire-joint-delete\";\r\n\r\nexport default function selectionDeleteReducer(\r\n  state: AppState = defaultAppState,\r\n  action: AnyAction\r\n): AppState {\r\n  if (!isDeleteSelectionAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const {\r\n    selectedNodeIds,\r\n    selectedConnectionIds,\r\n    selectedJointIds,\r\n  } = state.services.selection;\r\n\r\n  if (selectedNodeIds.length > 0) {\r\n    state = rootReducer(state, deleteNode(selectedNodeIds));\r\n  }\r\n  state = selectedConnectionIds.reduce(\r\n    (state, connectionId) => rootReducer(state, detatchWire(connectionId)),\r\n    state\r\n  );\r\n  state = selectedJointIds.reduce(\r\n    (state, jointId) => rootReducer(state, deleteWireJoint(jointId)),\r\n    state\r\n  );\r\n\r\n  return state;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { Point } from \"@/geometry\";\r\nimport { AppState, defaultAppState } from \"@/store\";\r\nimport rootReducer from \"@/store/reducer\";\r\n\r\nimport { isMoveSelectionAction } from \"@/actions/selection-move\";\r\nimport { moveNode, MoveNodeOpts } from \"@/actions/node-move\";\r\nimport { moveWireJoint, MoveWireJointOpts } from \"@/actions/wire-joint-move\";\r\n\r\nimport {\r\n  selectedNodeIdsSelector,\r\n  selectedJointIdsSelector,\r\n} from \"@/services/selection/selectors/selection\";\r\n\r\nexport default function selectionMoveReducer(\r\n  state: AppState = defaultAppState,\r\n  action: AnyAction\r\n) {\r\n  if (!isMoveSelectionAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { offsetX, offsetY, snapMode } = action.payload;\r\n\r\n  const nodeIds = selectedNodeIdsSelector(state);\r\n  const jointIds = selectedJointIdsSelector(state);\r\n\r\n  const offset: Point = {\r\n    x: offsetX,\r\n    y: offsetY,\r\n  };\r\n\r\n  let nodeSnapMode: MoveNodeOpts[\"snapMode\"] = \"none\";\r\n  if (snapMode === \"node\" || snapMode === \"by-type\") {\r\n    nodeSnapMode = \"node\";\r\n  }\r\n\r\n  let jointSnapMode: MoveWireJointOpts[\"snapMode\"] = \"none\";\r\n  if (snapMode === \"by-type\") {\r\n    jointSnapMode = \"joint\";\r\n  } else {\r\n    jointSnapMode = snapMode;\r\n  }\r\n\r\n  state = rootReducer(\r\n    state,\r\n    moveNode(nodeIds, offset, { relative: true, snapMode: nodeSnapMode })\r\n  );\r\n  state = rootReducer(\r\n    state,\r\n    moveWireJoint(jointIds, offset, { relative: true, snapMode: jointSnapMode })\r\n  );\r\n\r\n  return state;\r\n}\r\n","import { isProjectMutationAction } from \"@/project-mutation-actions\";\r\n\r\nimport { defaultSimulatorServiceState } from \"../state\";\r\nimport { createSimulatorReducer } from \"../utils\";\r\n\r\nexport default createSimulatorReducer((state, action) => {\r\n  if (!isProjectMutationAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  return defaultSimulatorServiceState;\r\n});\r\n","import { ElementDefinition } from \"../types\";\r\n\r\nexport * from \"./element-led\";\r\nexport * from \"./element-toggle\";\r\n\r\nexport const ElementDefinitionsByType = {\r\n  and: require(\"./element-and\").default as ElementDefinition,\r\n  or: require(\"./element-or\").default as ElementDefinition,\r\n  nor: require(\"./element-nor\").default as ElementDefinition,\r\n  not: require(\"./element-not\").default as ElementDefinition,\r\n  buffer: require(\"./element-buffer\").default as ElementDefinition,\r\n  led: require(\"./element-led\").default as ElementDefinition,\r\n  toggle: require(\"./element-toggle\").default as ElementDefinition,\r\n  seg7: require(\"./element-seg7\").default as ElementDefinition,\r\n  xor: require(\"./element-xor\").default as ElementDefinition,\r\n};\r\nexport type ElementType = keyof typeof ElementDefinitionsByType;\r\n","import {\r\n  createSimulatorGraphSelector,\r\n  getSimulatorNodeIdFromCircuitNodeIdPath,\r\n} from \"../utils\";\r\nimport { SimulatorGraphServiceState } from \"../state\";\r\n\r\nexport const simulatorNodeIdFromCircuitNodeIdSelector = createSimulatorGraphSelector(\r\n  (state: SimulatorGraphServiceState, circuitNodeIdPath: string[]) => {\r\n    return getSimulatorNodeIdFromCircuitNodeIdPath(\r\n      state.simulatorNodeIdsByCircuitNodeId,\r\n      circuitNodeIdPath\r\n    );\r\n  }\r\n);\r\n\r\n/**\r\n * Get all simulator node ids.\r\n *\r\n * WARN: Not react safe.\r\n */\r\nexport const simulatorNodeIdsSelector = createSimulatorGraphSelector((state) =>\r\n  Object.keys(state.simulatorNodesById)\r\n);\r\n\r\nexport const elementTypeFromSimulatorNodeId = createSimulatorGraphSelector(\r\n  (state: SimulatorGraphServiceState, simulatorNodeId: string) => {\r\n    const simulatorNode = state.simulatorNodesById[simulatorNodeId];\r\n    if (!simulatorNode) {\r\n      return null;\r\n    }\r\n\r\n    return simulatorNode.elementType;\r\n  }\r\n);\r\n","import values from \"lodash/values\";\r\nimport flatMap from \"lodash/flatMap\";\r\n\r\nimport { createSimulatorGraphSelector } from \"../utils\";\r\nimport { SimulatorGraphServiceState } from \"../state\";\r\n\r\n/**\r\n * Gets an array of simulator node ids connected to the outputs of the given node id.\r\n * WARN: Not react safe.  For reducer use only.\r\n */\r\nexport const outputSimulatorNodeIdsFromSimulatorNodeIdSelector = createSimulatorGraphSelector(\r\n  (state: SimulatorGraphServiceState, simulatorNodeId: string) => {\r\n    const simulatorNode = state.simulatorNodesById[simulatorNodeId];\r\n    if (!simulatorNode) {\r\n      return [];\r\n    }\r\n\r\n    return flatMap(values(simulatorNode.outputsByPin), (pins) =>\r\n      pins.map((x) => x.simulatorNodeId)\r\n    );\r\n  }\r\n);\r\n\r\n/**\r\n * Gets a map of node input pins to their output sources given a node id.\r\n */\r\nexport const inputPinsByPinIdFromSimulatorNodeIdSelector = createSimulatorGraphSelector(\r\n  (state: SimulatorGraphServiceState, simulatorNodeId: string) => {\r\n    const simulatorNode = state.simulatorNodesById[simulatorNodeId];\r\n    if (!simulatorNode) {\r\n      return {};\r\n    }\r\n\r\n    return simulatorNode.inputsByPin;\r\n  }\r\n);\r\n","import binarySearch from \"binary-search\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport findIndex from \"lodash/findIndex\";\r\nimport pick from \"lodash/pick\";\r\nimport difference from \"lodash/difference\";\r\n\r\nimport { fpSet } from \"@/utils\";\r\nimport { asArray } from \"@/arrays\";\r\nimport { AppState } from \"@/store\";\r\n\r\nimport {\r\n  inputPinsByPinIdFromSimulatorNodeIdSelector,\r\n  outputSimulatorNodeIdsFromSimulatorNodeIdSelector,\r\n} from \"@/services/simulator-graph/selectors/connections\";\r\nimport {\r\n  simulatorNodeIdsSelector,\r\n  elementTypeFromSimulatorNodeId,\r\n} from \"@/services/simulator-graph/selectors/nodes\";\r\n\r\nimport { SimulatorServiceState, defaultSimulatorServiceState } from \"../state\";\r\nimport {\r\n  SimTransitionWindow,\r\n  SimNodePinTransition as SimNodeTransition,\r\n} from \"../types\";\r\nimport { ElementDefinitionsByType } from \"@/elements\";\r\n\r\nexport function simInit(\r\n  state: SimulatorServiceState,\r\n  appState: AppState\r\n): SimulatorServiceState {\r\n  const nodeIds = simulatorNodeIdsSelector(appState);\r\n\r\n  state = defaultSimulatorServiceState;\r\n\r\n  state = nodeIds.reduce(\r\n    (state, nodeId) => initNode(state, nodeId, appState),\r\n    state\r\n  );\r\n\r\n  state = nodeIds.reduce(\r\n    (state, nodeId) => collectNodeTransitions(state, nodeId, appState),\r\n    state\r\n  );\r\n\r\n  return state;\r\n}\r\n\r\nfunction initNode(\r\n  state: SimulatorServiceState,\r\n  nodeId: string,\r\n  appState: AppState\r\n): SimulatorServiceState {\r\n  const elementType = elementTypeFromSimulatorNodeId(appState, nodeId);\r\n  if (!elementType) {\r\n    return state;\r\n  }\r\n\r\n  const def = ElementDefinitionsByType[elementType];\r\n  if (!def) {\r\n    return state;\r\n  }\r\n\r\n  const outputValues: Record<string, boolean> = {};\r\n  for (const output of def.outputPins) {\r\n    outputValues[output] = false;\r\n  }\r\n\r\n  return fpSet(state, \"nodeOutputValuesByNodeId\", nodeId, outputValues);\r\n}\r\n\r\nexport function simTick(\r\n  state: SimulatorServiceState,\r\n  tickCount: number,\r\n  appState: AppState\r\n): SimulatorServiceState {\r\n  const endTick = state.tick + tickCount;\r\n\r\n  // We cannot grab the windows ahead of time, as some windows might generate more windows\r\n  //  for future ticks.\r\n\r\n  // Pre-clone windows as we wil be repeatedly modifying it.\r\n  state = {\r\n    ...state,\r\n    transitionWindows: [...state.transitionWindows],\r\n  };\r\n\r\n  let saftyCount = tickCount + 1;\r\n  while (\r\n    state.transitionWindows.length > 0 &&\r\n    state.transitionWindows[0].tick <= endTick\r\n  ) {\r\n    if (--saftyCount === 0) {\r\n      // If we have seen more windows than ticks, something is creating windows for past ticks.\r\n      throw new Error(\r\n        `Maximum ticks per sim evolution exceeded.  This is an indication that windows are being generated for past ticks.`\r\n      );\r\n    }\r\n\r\n    // We can safely mutate here, as even if the array is regenerated\r\n    //  from a tick it will still be a fresh copy that has not yet been\r\n    //  consumed by redux.\r\n    const window = state.transitionWindows.shift()!;\r\n    state = tickWindow(state, window, appState);\r\n  }\r\n\r\n  // If we did not encounter a window on our last tick, jump ahead to that tick.\r\n  if (state.tick != endTick) {\r\n    state = {\r\n      ...state,\r\n      tick: endTick,\r\n    };\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nfunction tickWindow(\r\n  state: SimulatorServiceState,\r\n  window: SimTransitionWindow,\r\n  appState: AppState\r\n): SimulatorServiceState {\r\n  // Update the current tick, as it is referenced\r\n  //  during transition collection.\r\n  state = {\r\n    ...state,\r\n    tick: window.tick,\r\n    // pre-clone outputs for mutation below\r\n    nodeOutputValuesByNodeId: {\r\n      ...state.nodeOutputValuesByNodeId,\r\n    },\r\n  };\r\n\r\n  // Could benefit from being changed to a Set, although nodes usually arent hooked up to too many\r\n  //  outputs at a time.\r\n  const updatedNodes = [];\r\n  for (const tid of window.transitionIds) {\r\n    const { nodeId, valuesByOutputPin } = state.transitionsById[tid];\r\n\r\n    // nodeOutputValuesByNodeId is pre-cloned\r\n    state.nodeOutputValuesByNodeId[nodeId] = {\r\n      ...state.nodeOutputValuesByNodeId[nodeId],\r\n      ...valuesByOutputPin,\r\n    };\r\n\r\n    // Add each node we output to, to the output list.\r\n    const outputNodeIds = outputSimulatorNodeIdsFromSimulatorNodeIdSelector(\r\n      appState,\r\n      nodeId\r\n    );\r\n    for (const nodeId of outputNodeIds) {\r\n      if (updatedNodes.indexOf(nodeId) === -1) {\r\n        updatedNodes.push(nodeId);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Remove all window transitions as they have been consumed.\r\n  // State is cloned above\r\n  state.transitionsById = pick(\r\n    state.transitionsById,\r\n    difference(Object.keys(state.transitionsById), window.transitionIds)\r\n  );\r\n\r\n  for (const nodeId of updatedNodes) {\r\n    state = collectNodeTransitions(state, nodeId, appState);\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nexport function collectNodeTransitions(\r\n  state: SimulatorServiceState,\r\n  nodeId: string,\r\n  appState: AppState\r\n): SimulatorServiceState {\r\n  const elementType = elementTypeFromSimulatorNodeId(appState, nodeId);\r\n  if (!elementType) {\r\n    return state;\r\n  }\r\n\r\n  const def = ElementDefinitionsByType[elementType];\r\n  if (!def || !def.evolve) {\r\n    return state;\r\n  }\r\n\r\n  // Build the current input state from the connected pins.\r\n  const inputs: Record<string, boolean> = {};\r\n  const inputSourcesByPin = inputPinsByPinIdFromSimulatorNodeIdSelector(\r\n    appState,\r\n    nodeId\r\n  );\r\n\r\n  for (const inputPin of Object.keys(inputSourcesByPin)) {\r\n    const inputConn = inputSourcesByPin[inputPin];\r\n    if (!inputConn) {\r\n      inputs[inputPin] = false;\r\n      continue;\r\n    }\r\n    const { simulatorNodeId: sourceNodeId, pinId: sourcePinId } = inputConn;\r\n\r\n    inputs[inputPin] =\r\n      state.nodeOutputValuesByNodeId[sourceNodeId]?.[sourcePinId] || false;\r\n  }\r\n\r\n  const result = def.evolve(\r\n    state.nodeStatesByNodeId[nodeId],\r\n    inputs,\r\n    state.tick\r\n  );\r\n\r\n  if (result.state) {\r\n    state = fpSet(state, \"nodeStatesByNodeId\", nodeId, result.state);\r\n  }\r\n\r\n  if (result.transitions) {\r\n    const transitions = asArray(result.transitions);\r\n    for (const transition of transitions) {\r\n      const {\r\n        tickOffset,\r\n        valuesByPin,\r\n        transitionMerger = \"replace\",\r\n      } = transition;\r\n\r\n      // Sanity check that we are not producing transitions for the past or current tick.\r\n      const transitionTick = state.tick + (tickOffset > 0 ? tickOffset : 1);\r\n\r\n      // We originally removed old transitions when scheduling new transitions.\r\n      //  Experimenting without this.\r\n      if (transitionMerger === \"replace\") {\r\n        state = removeTransitionsByNodeId(state, nodeId);\r\n      }\r\n\r\n      state = addTransition(state, nodeId, transitionTick, valuesByPin);\r\n    }\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nfunction addTransition(\r\n  state: Readonly<SimulatorServiceState>,\r\n  nodeId: string,\r\n  tick: number,\r\n  valuesByOutputPin: Record<string, boolean>\r\n): SimulatorServiceState {\r\n  const transitionId = uuidV4();\r\n\r\n  const newTransition: SimNodeTransition = {\r\n    nodeId,\r\n    tick,\r\n    valuesByOutputPin,\r\n  };\r\n\r\n  // Prepare the new transition window.\r\n  const newTransitionWindows = [...state.transitionWindows];\r\n\r\n  let index = binarySearch(newTransitionWindows, tick, (a, b) => a.tick - b);\r\n  if (index < 0) {\r\n    // Need to create a new window\r\n    index = -index - 1;\r\n    const newWindow: SimTransitionWindow = {\r\n      tick,\r\n      transitionIds: [],\r\n    };\r\n    newTransitionWindows.splice(index, 0, newWindow);\r\n  }\r\n\r\n  newTransitionWindows[index] = {\r\n    ...newTransitionWindows[index],\r\n    transitionIds: [...newTransitionWindows[index].transitionIds, transitionId],\r\n  };\r\n\r\n  return {\r\n    ...state,\r\n    // Add the new transition window to the id mapping.\r\n    transitionsById: {\r\n      ...state.transitionsById,\r\n      [transitionId]: newTransition,\r\n    },\r\n    transitionWindows: newTransitionWindows,\r\n  };\r\n}\r\n\r\nfunction removeTransitionsByNodeId(\r\n  state: Readonly<SimulatorServiceState>,\r\n  nodeId: string\r\n): SimulatorServiceState {\r\n  function isNodeTransition(transition: SimNodeTransition) {\r\n    return transition.nodeId === nodeId;\r\n  }\r\n\r\n  const transitionIds = Object.keys(state.transitionsById).filter((id) =>\r\n    isNodeTransition(state.transitionsById[id])\r\n  );\r\n\r\n  return transitionIds.reduce(\r\n    (state, transitionId) => removeTransitionById(state, transitionId),\r\n    state\r\n  );\r\n}\r\n\r\nexport function removeTransitionById(\r\n  state: Readonly<SimulatorServiceState>,\r\n  transitionId: string\r\n): SimulatorServiceState {\r\n  const transition = state.transitionsById[transitionId];\r\n  if (!transition) {\r\n    return state;\r\n  }\r\n\r\n  const transitionsById = pick(\r\n    state.transitionsById,\r\n    Object.keys(state.transitionsById).filter((x) => x !== transitionId)\r\n  );\r\n  let transitionWindows = state.transitionWindows;\r\n\r\n  const transitionWindowIndex = findIndex(\r\n    transitionWindows,\r\n    (x) => x.tick === transition.tick\r\n  );\r\n  if (transitionWindowIndex !== -1) {\r\n    const transitionWindow = transitionWindows[transitionWindowIndex];\r\n\r\n    const tickWindowTransitionIndex = transitionWindow.transitionIds.indexOf(\r\n      transitionId\r\n    );\r\n    if (tickWindowTransitionIndex !== -1) {\r\n      if (transitionWindow.transitionIds.length === 1) {\r\n        // Only one element left, remove the window.\r\n        transitionWindows = [\r\n          ...transitionWindows.slice(0, transitionWindowIndex),\r\n          ...transitionWindows.slice(transitionWindowIndex + 1),\r\n        ];\r\n      } else {\r\n        // Remove the transition from the tick window.\r\n        transitionWindows = [...transitionWindows];\r\n        const transitionIds =\r\n          transitionWindows[transitionWindowIndex].transitionIds;\r\n        transitionWindows[transitionWindowIndex] = {\r\n          ...transitionWindows[transitionWindowIndex],\r\n          transitionIds: [\r\n            ...transitionIds.slice(0, tickWindowTransitionIndex),\r\n            ...transitionIds.slice(tickWindowTransitionIndex + 1),\r\n          ],\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    transitionsById,\r\n    transitionWindows,\r\n  };\r\n}\r\n","import { fpSet } from \"@/utils\";\r\n\r\nimport { ElementDefinitionsByType } from \"@/elements\";\r\n\r\nimport { isInteractNodeAction } from \"@/actions/node-interact\";\r\nimport {\r\n  simulatorNodeIdFromCircuitNodeIdSelector,\r\n  elementTypeFromSimulatorNodeId,\r\n} from \"@/services/simulator-graph/selectors/nodes\";\r\n\r\nimport { createSimulatorReducer } from \"../utils\";\r\n\r\nimport { collectNodeTransitions } from \"./utils\";\r\n\r\nexport default createSimulatorReducer((state, action, appState) => {\r\n  if (!isInteractNodeAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { circuitNodeIdPath } = action.payload;\r\n  const simulatorNodeId = simulatorNodeIdFromCircuitNodeIdSelector(\r\n    appState,\r\n    circuitNodeIdPath\r\n  );\r\n\r\n  if (!simulatorNodeId) {\r\n    return state;\r\n  }\r\n\r\n  const elementType = elementTypeFromSimulatorNodeId(appState, simulatorNodeId);\r\n  if (!elementType) {\r\n    return state;\r\n  }\r\n\r\n  const def = ElementDefinitionsByType[elementType];\r\n  if (!def || !def.interact) {\r\n    return state;\r\n  }\r\n\r\n  const nodeState = state.nodeStatesByNodeId[simulatorNodeId];\r\n  const newState = def.interact(nodeState);\r\n  state = fpSet(state, \"nodeStatesByNodeId\", simulatorNodeId, newState);\r\n\r\n  return collectNodeTransitions(state, simulatorNodeId, appState);\r\n});\r\n","import { isFastForwardSimAction } from \"@/actions/sim-fastforward\";\r\n\r\nimport { createSimulatorReducer } from \"../utils\";\r\n\r\nimport { simTick } from \"./utils\";\r\n\r\nexport default createSimulatorReducer((state, action, appState) => {\r\n  if (!isFastForwardSimAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { tick, transitionWindows } = state;\r\n\r\n  if (transitionWindows.length === 0) {\r\n    return state;\r\n  }\r\n\r\n  const nextWindowTick = transitionWindows[0].tick - tick;\r\n  return simTick(state, nextWindowTick, appState);\r\n});\r\n","import { isStartSimAction } from \"@/actions/sim-start\";\r\n\r\nimport { createSimulatorReducer } from \"../utils\";\r\n\r\nimport { simInit } from \"./utils\";\r\n\r\nexport default createSimulatorReducer((state, action, appState) => {\r\n  if (!isStartSimAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  return simInit(state, appState);\r\n});\r\n","import { concatReducers } from \"@/store/utils\";\r\n\r\nimport elementGraphInvalidatedReducer from \"./element-graph-invalidated\";\r\nimport nodeInteractReducer from \"./node-interact\";\r\nimport simFastforwardReducer from \"./sim-fastforward\";\r\nimport simStartReducer from \"./sim-start\";\r\nimport simTickReducer from \"./sim-tick\";\r\n\r\nconst simulatorReducer = concatReducers(\r\n  elementGraphInvalidatedReducer,\r\n  nodeInteractReducer,\r\n  simFastforwardReducer,\r\n  simStartReducer,\r\n  simTickReducer\r\n);\r\n\r\nexport default simulatorReducer;\r\n","import { isTickSimAction } from \"@/actions/sim-tick\";\r\n\r\nimport { createSimulatorReducer } from \"../utils\";\r\n\r\nimport { simTick } from \"./utils\";\r\n\r\nexport default createSimulatorReducer((state, action, appState) => {\r\n  if (!isTickSimAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { tickCount } = action.payload;\r\n\r\n  const start = performance.now();\r\n\r\n  state = simTick(state, tickCount, appState);\r\n\r\n  const end = performance.now();\r\n\r\n  const updateTime = end - start;\r\n  state = {\r\n    ...state,\r\n    lastTickProcessingTimeMs: updateTime,\r\n  };\r\n\r\n  return state;\r\n});\r\n","import { isProjectMutationAction } from \"@/project-mutation-actions\";\r\n\r\nimport { createSimulatorControlReducer } from \"../utils\";\r\n\r\nexport default createSimulatorControlReducer((state, action) => {\r\n  if (!isProjectMutationAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    mode: \"edit\",\r\n  };\r\n});\r\n","import { isPauseSimAction } from \"@/actions/sim-pause\";\r\n\r\nimport { createSimulatorControlReducer } from \"../utils\";\r\nimport { isSimActiveSelector } from \"../selectors/run\";\r\n\r\nexport default createSimulatorControlReducer((state, action) => {\r\n  if (!isPauseSimAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { mode } = action.payload;\r\n\r\n  if (!isSimActiveSelector.local(state)) {\r\n    return state;\r\n  }\r\n\r\n  let runMode = state.mode;\r\n\r\n  switch (mode) {\r\n    case true:\r\n      runMode = \"pause\";\r\n      break;\r\n    case false:\r\n      runMode = \"run\";\r\n      break;\r\n    case \"toggle\":\r\n      runMode = runMode == \"run\" ? \"pause\" : \"run\";\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    mode: runMode,\r\n  };\r\n});\r\n","import { isStartSimAction } from \"@/actions/sim-start\";\r\n\r\nimport { createSimulatorControlReducer } from \"../utils\";\r\n\r\nexport default createSimulatorControlReducer((state, action) => {\r\n  if (!isStartSimAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    mode: \"run\",\r\n  };\r\n});\r\n","import { isStopSimAction } from \"@/actions/sim-stop\";\r\n\r\nimport { createSimulatorControlReducer } from \"../utils\";\r\n\r\nimport { defaultSimulatorControlServiceState } from \"../state\";\r\n\r\nexport default createSimulatorControlReducer((state, action) => {\r\n  if (!isStopSimAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  // Reset the simulator but keep the ticks per second choice.\r\n  return {\r\n    ...defaultSimulatorControlServiceState,\r\n    ticksPerSecond: state.ticksPerSecond,\r\n  };\r\n});\r\n","import { concatReducers } from \"@/store/utils\";\r\n\r\nimport elementGraphInvalidatedReducer from \"./element-graph-invalidated\";\r\nimport simPauseReducer from \"./sim-pause\";\r\nimport simStartReducer from \"./sim-start\";\r\nimport simStopReducer from \"./sim-stop\";\r\n\r\nconst simulatorReducer = concatReducers(\r\n  elementGraphInvalidatedReducer,\r\n  simPauseReducer,\r\n  simStartReducer,\r\n  simStopReducer\r\n);\r\n\r\nexport default simulatorReducer;\r\n","import { v4 as uuidV4 } from \"uuid\";\r\nimport merge from \"lodash/merge\";\r\nimport get from \"lodash/get\";\r\n\r\nimport { AppState } from \"@/store\";\r\nimport { PRIORITY_PRE, reducerPriority } from \"@/store/priorities\";\r\n\r\nimport { isStartSimAction } from \"@/actions/sim-start\";\r\n\r\nimport { nodeIdsFromCircuitIdSelector } from \"@/services/circuits/selectors/nodes\";\r\nimport { ROOT_CIRCUIT_ID } from \"@/services/circuits/constants\";\r\nimport { nodeTypeFromNodeIdSelector } from \"@/services/node-graph/selectors/nodes\";\r\nimport { connectionsByIdSelector } from \"@/services/node-graph/selectors/connections\";\r\nimport {\r\n  CircuitNodeElementProduction,\r\n  ElementNodeElementProduction,\r\n  NodeElementProduction,\r\n  NodeElementProductionObject,\r\n} from \"@/services/node-types/types/element-production\";\r\nimport { nodeDefinitionFromTypeSelector } from \"@/services/node-types/selectors/node-types\";\r\nimport { nodeDefFromNodeIdSelector } from \"@/services/node-graph/selectors/node-def\";\r\n\r\nimport { createSimulatorGraphReducer } from \"../utils\";\r\nimport {\r\n  SimulatorGraphServiceState,\r\n  SimulatorNodeIdMappingTreeItem,\r\n} from \"../state\";\r\nimport { SimulatorNode, SimulatorNodePin } from \"../types\";\r\n\r\n// This must run before simulator/reducer/sim-start, as we need to build up the graph before it can\r\n// run the first tick.\r\n// TODO: This makes more sense as a selector, since it transforms existing state.\r\nexport default reducerPriority(\r\n  PRIORITY_PRE,\r\n  createSimulatorGraphReducer((state, action, rootState) => {\r\n    if (!isStartSimAction(action)) {\r\n      return state;\r\n    }\r\n\r\n    const {\r\n      simulatorNodesById,\r\n      simulatorNodeIdsByCircuitNodeId,\r\n    } = produceCircuit(ROOT_CIRCUIT_ID, rootState);\r\n\r\n    return {\r\n      ...state,\r\n      simulatorNodesById,\r\n      simulatorNodeIdsByCircuitNodeId,\r\n    };\r\n  })\r\n);\r\n\r\ntype CircuitProductionResult = Pick<\r\n  SimulatorGraphServiceState,\r\n  \"simulatorNodeIdsByCircuitNodeId\" | \"simulatorNodesById\"\r\n> & {\r\n  inputElementPinsByCircuitPinId: Record<string, SimulatorNodePin[]>;\r\n  outputElementPinsByCircuitPinId: Record<string, SimulatorNodePin>;\r\n};\r\n\r\nconst EMPTY_PRODUCTION = Object.freeze<CircuitProductionResult>({\r\n  simulatorNodesById: {},\r\n  simulatorNodeIdsByCircuitNodeId: {},\r\n  inputElementPinsByCircuitPinId: {},\r\n  outputElementPinsByCircuitPinId: {},\r\n});\r\n\r\nfunction produceCircuit(\r\n  circuitId: string,\r\n  rootState: AppState\r\n): CircuitProductionResult {\r\n  const simulatorNodesById: Record<string, SimulatorNode> = {};\r\n  const simulatorNodeIdsByCircuitNodeId: Record<\r\n    string,\r\n    SimulatorNodeIdMappingTreeItem\r\n  > = {};\r\n  const inputElementPinsByCircuitPinId: Record<string, SimulatorNodePin[]> = {};\r\n  const outputElementPinsByCircuitPinId: Record<string, SimulatorNodePin> = {};\r\n\r\n  const inputCircuitNodeIds: string[] = [];\r\n  const outputCircuitNodeIds: string[] = [];\r\n\r\n  // 1. Create new elements\r\n  // 2. Wire elements amongs themselves.\r\n  // 3. Pass input and output mapping to parent.\r\n\r\n  const circuitNodeInputPinsByPinIdByNodeId: Record<\r\n    string,\r\n    Record<string, SimulatorNodePin[]>\r\n  > = {};\r\n  const circuitNodeOutputPinsByPinIdByNodeId: Record<\r\n    string,\r\n    Record<string, SimulatorNodePin>\r\n  > = {};\r\n\r\n  const circuitNodeIds = nodeIdsFromCircuitIdSelector(rootState, circuitId);\r\n  for (const circuitNodeId of circuitNodeIds) {\r\n    const nodeType = nodeTypeFromNodeIdSelector(rootState, circuitNodeId);\r\n    if (!nodeType) {\r\n      continue;\r\n    }\r\n\r\n    // If this node is a pin, remember it to calculate circuit inputs and outputs.\r\n    if (nodeType === \"pin-input\") {\r\n      inputCircuitNodeIds.push(circuitNodeId);\r\n      inputElementPinsByCircuitPinId[circuitNodeId] = [];\r\n      continue;\r\n    } else if (nodeType === \"pin-output\") {\r\n      outputCircuitNodeIds.push(circuitNodeId);\r\n      continue;\r\n    }\r\n\r\n    const productionResult = produceNode(circuitNodeId, rootState);\r\n\r\n    // Merge the produced simulator nodes.\r\n    merge(simulatorNodesById, productionResult.simulatorNodesById);\r\n\r\n    // Merge the mapping from circuit node to simulator node.\r\n    merge(\r\n      simulatorNodeIdsByCircuitNodeId,\r\n      productionResult.simulatorNodeIdsByCircuitNodeId\r\n    );\r\n\r\n    // Remember what these circuit node pins translate to.\r\n    circuitNodeInputPinsByPinIdByNodeId[circuitNodeId] =\r\n      productionResult.inputElementPinsByCircuitPinId;\r\n    circuitNodeOutputPinsByPinIdByNodeId[circuitNodeId] =\r\n      productionResult.outputElementPinsByCircuitPinId;\r\n  }\r\n\r\n  const circuitConnectionsById = connectionsByIdSelector(rootState);\r\n  for (const connectionId of Object.keys(circuitConnectionsById)) {\r\n    const { inputPin, outputPin } = circuitConnectionsById[connectionId];\r\n    // We are only interested in connections within this circuit.\r\n    // There should not be any cross-circuit connections.\r\n    // It might be ok to skip this step, and rely on not finding the node mapping.\r\n\r\n    if (\r\n      circuitNodeIds.indexOf(inputPin.nodeId) === -1 ||\r\n      circuitNodeIds.indexOf(outputPin.nodeId) === -1\r\n    ) {\r\n      continue;\r\n    }\r\n\r\n    // We need to find the one output, and connect it to all inputs that match.\r\n    // There might be more than one input if the input was on an IC / circuit production.\r\n    const outputSimPin = get(circuitNodeOutputPinsByPinIdByNodeId, [\r\n      outputPin.nodeId,\r\n      outputPin.pinId,\r\n    ]);\r\n    const inputSimPins = get(circuitNodeInputPinsByPinIdByNodeId, [\r\n      inputPin.nodeId,\r\n      inputPin.pinId,\r\n    ]);\r\n\r\n    // If the output is one of our input nodes, then the inputs\r\n    //  need to be saved for our circuit inputs\r\n    if (inputCircuitNodeIds.indexOf(outputPin.nodeId) !== -1 && inputSimPins) {\r\n      // pin id is the pin-input nodeId\r\n      inputElementPinsByCircuitPinId[outputPin.nodeId].push(...inputSimPins);\r\n      continue;\r\n    } else if (\r\n      outputCircuitNodeIds.indexOf(inputPin.nodeId) !== -1 &&\r\n      outputSimPin\r\n    ) {\r\n      outputElementPinsByCircuitPinId[inputPin.nodeId] = outputSimPin;\r\n      continue;\r\n    }\r\n\r\n    if (!outputSimPin || !inputSimPins) {\r\n      continue;\r\n    }\r\n\r\n    const outputSimNode = simulatorNodesById[outputSimPin.simulatorNodeId];\r\n    let outputsByOutputPin = outputSimNode.outputsByPin[outputSimPin.pinId];\r\n    if (outputsByOutputPin == null) {\r\n      outputSimNode.outputsByPin[outputSimPin.pinId] = outputsByOutputPin = [];\r\n    }\r\n\r\n    // Wire up the output to all of the inputs\r\n    for (const inputSimPin of inputSimPins) {\r\n      outputsByOutputPin.push({\r\n        simulatorNodeId: inputSimPin.simulatorNodeId,\r\n        pinId: inputSimPin.pinId,\r\n      });\r\n\r\n      const inputNode = simulatorNodesById[inputSimPin.simulatorNodeId];\r\n      inputNode.inputsByPin[inputSimPin.pinId] = {\r\n        simulatorNodeId: outputSimPin.simulatorNodeId,\r\n        pinId: outputSimPin.pinId,\r\n      };\r\n    }\r\n  }\r\n\r\n  return {\r\n    simulatorNodesById,\r\n    simulatorNodeIdsByCircuitNodeId,\r\n    inputElementPinsByCircuitPinId,\r\n    outputElementPinsByCircuitPinId,\r\n  };\r\n}\r\n\r\nfunction produceNode(\r\n  circuitNodeId: string,\r\n  rootState: AppState\r\n): CircuitProductionResult {\r\n  const nodeType = nodeTypeFromNodeIdSelector(rootState, circuitNodeId);\r\n  if (!nodeType) {\r\n    return EMPTY_PRODUCTION;\r\n  }\r\n\r\n  const nodeDef = nodeDefinitionFromTypeSelector(rootState, nodeType);\r\n  if (!nodeDef || !nodeDef.elementProduction) {\r\n    return EMPTY_PRODUCTION;\r\n  }\r\n\r\n  const production = normalizeElementProduction(nodeDef.elementProduction);\r\n  switch (production.type) {\r\n    case \"element\":\r\n      return produceElementNode(circuitNodeId, production, rootState);\r\n    case \"circuit\":\r\n      return produceCircuitNode(circuitNodeId, production, rootState);\r\n    default:\r\n      throw new Error(\r\n        \"Unsupported production type \" + (production as any).type\r\n      );\r\n  }\r\n}\r\n\r\nfunction produceElementNode(\r\n  circuitNodeId: string,\r\n  production: ElementNodeElementProduction,\r\n  rootState: AppState\r\n): CircuitProductionResult {\r\n  const nodeDef = nodeDefFromNodeIdSelector(rootState, circuitNodeId);\r\n  if (!nodeDef) {\r\n    return EMPTY_PRODUCTION;\r\n  }\r\n\r\n  const simulatorNodesById: Record<string, SimulatorNode> = {};\r\n  const simulatorNodeIdsByCircuitNodeId: Record<\r\n    string,\r\n    SimulatorNodeIdMappingTreeItem\r\n  > = {};\r\n\r\n  const simulatorNodeId = uuidV4();\r\n  simulatorNodesById[simulatorNodeId] = {\r\n    elementType: production.elementType,\r\n    // We do not have any internal pins.\r\n    // These will be wired by produceCircuit as\r\n    // it completes is cross-circuit connections.\r\n    inputsByPin: {},\r\n    outputsByPin: {},\r\n  };\r\n\r\n  simulatorNodeIdsByCircuitNodeId[circuitNodeId] = {\r\n    simulatorNodeId,\r\n    subCircuitIds: {},\r\n  };\r\n\r\n  const inputElementPinsByCircuitPinId: Record<string, SimulatorNodePin[]> = {};\r\n  const outputElementPinsByCircuitPinId: Record<string, SimulatorNodePin> = {};\r\n\r\n  // We have a one to one pin mapping between node and element\r\n  for (const pinId of Object.keys(nodeDef.pins)) {\r\n    const { direction } = nodeDef.pins[pinId];\r\n    if (direction === \"input\") {\r\n      inputElementPinsByCircuitPinId[pinId] = [\r\n        {\r\n          pinId,\r\n          simulatorNodeId,\r\n        },\r\n      ];\r\n    } else if (direction === \"output\") {\r\n      outputElementPinsByCircuitPinId[pinId] = {\r\n        pinId,\r\n        simulatorNodeId,\r\n      };\r\n    }\r\n  }\r\n\r\n  return {\r\n    simulatorNodesById,\r\n    simulatorNodeIdsByCircuitNodeId,\r\n    inputElementPinsByCircuitPinId,\r\n    outputElementPinsByCircuitPinId,\r\n  };\r\n}\r\n\r\nfunction produceCircuitNode(\r\n  circuitNodeId: string,\r\n  production: CircuitNodeElementProduction,\r\n  rootState: AppState\r\n): CircuitProductionResult {\r\n  const circuitProuction = produceCircuit(production.circuitId, rootState);\r\n\r\n  return {\r\n    ...circuitProuction,\r\n    simulatorNodeIdsByCircuitNodeId: {\r\n      [circuitNodeId]: {\r\n        simulatorNodeId: null,\r\n        subCircuitIds: circuitProuction.simulatorNodeIdsByCircuitNodeId,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nfunction normalizeElementProduction(\r\n  elementProduction: NodeElementProduction\r\n): NodeElementProductionObject {\r\n  if (typeof elementProduction === \"string\") {\r\n    return {\r\n      type: \"element\",\r\n      elementType: elementProduction,\r\n    };\r\n  }\r\n\r\n  return elementProduction;\r\n}\r\n","import { isStopSimAction } from \"@/actions/sim-stop\";\r\n\r\nimport { createSimulatorGraphReducer } from \"../utils\";\r\n\r\nimport { defaultSimulatorGraphServiceState } from \"../state\";\r\n\r\nexport default createSimulatorGraphReducer((state, action) => {\r\n  if (!isStopSimAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  // Reset the simulator but keep the ticks per second choice.\r\n  return {\r\n    ...defaultSimulatorGraphServiceState,\r\n  };\r\n});\r\n","import { concatReducers } from \"@/store/utils\";\r\n\r\nimport simStartReducer from \"./sim-start\";\r\nimport simStopReducer from \"./sim-stop\";\r\n\r\nexport default concatReducers(simStartReducer, simStopReducer);\r\n","import servicesReducer from \"@/services/reducer\";\r\n\r\nimport { finalizeReducerList } from \"./utils\";\r\n\r\nconst reducer = finalizeReducerList(servicesReducer);\r\n\r\nexport default reducer;\r\n","import { concatReducers } from \"@/store/utils\";\r\n\r\nimport circuitEditorUiReducer from \"./circuit-editor-ui/reducer\";\r\nimport circuitEditorViewReducer from \"./circuit-editor-view/reducer\";\r\nimport circuitsReducer from \"./circuits/reducer\";\r\nimport clipboardReducer from \"./clipboard/reducer\";\r\nimport dialogReducer from \"./dialog/reducer\";\r\nimport nodeGraphReducer from \"./node-graph/reducer\";\r\nimport nodeLayoutReducer from \"./node-layout/reducer\";\r\nimport savedataReducer from \"./savedata/reducer\";\r\nimport selectionReducer from \"./selection/reducer\";\r\nimport simulatorReducer from \"./simulator/reducer\";\r\nimport simulatorControlReducer from \"./simulator-control/reducers\";\r\nimport simulatorGraphReducer from \"./simulator-graph/reducer\";\r\n\r\nconst reducer = concatReducers(\r\n  circuitEditorUiReducer,\r\n  circuitEditorViewReducer,\r\n  circuitsReducer,\r\n  clipboardReducer,\r\n  dialogReducer,\r\n  nodeGraphReducer,\r\n  nodeLayoutReducer,\r\n  savedataReducer,\r\n  selectionReducer,\r\n  simulatorReducer,\r\n  simulatorControlReducer,\r\n  simulatorGraphReducer\r\n);\r\n\r\nexport default reducer;\r\n","export class SaveFormatError extends Error {\r\n  code: string;\r\n\r\n  constructor(message: string) {\r\n    super(message);\r\n    this.message = message;\r\n    this.code = \"SAVE_FORMAT_ERROR\";\r\n  }\r\n}\r\n","import { call, select, takeEvery } from \"redux-saga/effects\";\r\nimport { Buffer } from \"buffer\";\r\nimport { deflate } from \"pako\";\r\n\r\nimport { rootUrl } from \"@/runtime-env\";\r\nimport history from \"@/history\";\r\n\r\nimport { AppState } from \"@/store\";\r\n\r\nimport { displayDialogSaga } from \"@/services/dialog/api\";\r\n\r\nimport { ACTION_PROJECT_EXPORT_LINK } from \"@/actions/project-export-link\";\r\n\r\nimport { createSave } from \"../utils\";\r\n\r\nexport default function* projectExportLinkSaga() {\r\n  yield takeEvery(ACTION_PROJECT_EXPORT_LINK, onExportLink);\r\n}\r\n\r\nfunction* onExportLink() {\r\n  const state: AppState = yield select();\r\n\r\n  try {\r\n    const save = createSave(state);\r\n    const saveText = JSON.stringify(save);\r\n    const encoded = deflate(saveText);\r\n\r\n    const encodedText = Buffer.from(encoded).toString(\"base64\");\r\n\r\n    const urlData = encodeURIComponent(encodedText);\r\n\r\n    const projectLink =\r\n      rootUrl +\r\n      history.createHref({\r\n        pathname: \"/import\",\r\n        search: `data=${urlData}`,\r\n      });\r\n\r\n    yield call(displayDialogSaga, \"export-project-link\", { projectLink });\r\n  } catch (e) {\r\n    // TODO: Warn user of failure\r\n    console.error(\"Failed to export project as link\", e);\r\n  }\r\n}\r\n","import { put, takeEvery } from \"redux-saga/effects\";\r\nimport { Buffer } from \"buffer\";\r\n\r\nimport { inflate } from \"pako\";\r\n\r\nimport {\r\n  ACTION_PROJECT_IMPORT_LINK,\r\n  ImportProjectLinkAction,\r\n} from \"@/actions/project-import-link\";\r\n\r\nimport { receiveProject } from \"@/actions/project-receive\";\r\nimport history from \"@/history\";\r\n\r\nexport default function* projectImportLinkSaga() {\r\n  yield takeEvery(ACTION_PROJECT_IMPORT_LINK, onImportLink);\r\n}\r\n\r\nfunction* onImportLink(action: ImportProjectLinkAction) {\r\n  const { data } = action.payload;\r\n  try {\r\n    const dewrapped = decodeURIComponent(data);\r\n    const deflated = Buffer.from(dewrapped, \"base64\");\r\n    const saveText = inflate(deflated, { to: \"string\" });\r\n    const save = JSON.parse(saveText);\r\n\r\n    yield put(receiveProject(save));\r\n\r\n    history.push(\"/\");\r\n  } catch (e) {\r\n    console.error(\"Failed to import save from link\", e);\r\n  }\r\n}\r\n","import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport fileDialog from \"file-dialog\";\r\n\r\nimport { ACTION_PROJECT_LOAD } from \"@/actions/project-load\";\r\nimport { receiveProject } from \"@/actions/project-receive\";\r\n\r\nimport { SaveData } from \"../types\";\r\n\r\nexport default function* projectLoadSaga() {\r\n  yield takeEvery(ACTION_PROJECT_LOAD, loadProject);\r\n}\r\n\r\nfunction* loadProject() {\r\n  try {\r\n    const [file]: File[] = yield call(fileDialog, {\r\n      accept: \"application/json\",\r\n    });\r\n    const contents = yield call(file.text.bind(file));\r\n    const saveData: SaveData = JSON.parse(contents);\r\n    yield put(receiveProject(saveData));\r\n  } catch (e) {\r\n    // TODO: Handle error\r\n    console.warn(\"Failed to load project:\", e);\r\n  }\r\n}\r\n","import { call, select, takeEvery } from \"redux-saga/effects\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\nimport { AppState } from \"@/store\";\r\n\r\nimport { ACTION_PROJECT_SAVE } from \"@/actions/project-save\";\r\n\r\nimport { createSave } from \"../utils\";\r\n\r\nexport default function* projectSaveSaga() {\r\n  yield takeEvery(ACTION_PROJECT_SAVE, saveProject);\r\n}\r\n\r\nfunction* saveProject() {\r\n  const state: AppState = yield select();\r\n\r\n  try {\r\n    if (window.showSaveFilePicker) {\r\n      yield call(saveNativeFileApi, state);\r\n    } else {\r\n      yield call(saveLegacy, state);\r\n    }\r\n  } catch (e) {\r\n    // TODO: Report error\r\n    console.warn(\"Failed to save project\", e);\r\n  }\r\n}\r\n\r\nfunction* saveNativeFileApi(state: AppState) {\r\n  const fileHandle: FileHandle | null = yield call(window.showSaveFilePicker!, {\r\n    types: [\r\n      {\r\n        description: \"Discrelog Project Files\",\r\n        accept: {\r\n          \"application/json\": [\".json\"],\r\n        },\r\n      },\r\n    ],\r\n  });\r\n\r\n  if (!fileHandle) {\r\n    return;\r\n  }\r\n\r\n  const save = createSave(state);\r\n\r\n  const writable: FileSystemWritableStream = yield call(\r\n    fileHandle.createWritable.bind(fileHandle)\r\n  );\r\n  yield call(writable.write.bind(writable), JSON.stringify(save, null, 2));\r\n  yield call(writable.close.bind(writable));\r\n}\r\n\r\nfunction* saveLegacy(state: AppState) {\r\n  const save = createSave(state);\r\n  const blob = new Blob([JSON.stringify(save, null, 2)], {\r\n    type: \"application/json;charset=utf-8\",\r\n  });\r\n\r\n  // TODO: Show dialog to get desired name.\r\n  saveAs(blob, \"discrelog-project.json\");\r\n}\r\n","import { fork } from \"redux-saga/effects\";\r\n\r\nimport projectExportLink from \"./project-export-link\";\r\nimport projectImportLink from \"./project-import-link\";\r\nimport projectLoadSaga from \"./project-load\";\r\nimport projectSaveSaga from \"./project-save\";\r\n\r\nexport default function* saveDataSaga() {\r\n  yield fork(projectExportLink);\r\n  yield fork(projectImportLink);\r\n  yield fork(projectLoadSaga);\r\n  yield fork(projectSaveSaga);\r\n}\r\n","import { takeLeading, select, put, delay } from \"redux-saga/effects\";\r\n\r\nimport { ACTION_SIM_START } from \"@/actions/sim-start\";\r\nimport { ACTION_SIM_PAUSE } from \"@/actions/sim-pause\";\r\n\r\nimport { tickSim } from \"@/actions/sim-tick\";\r\n\r\nimport { isSimRunningSelector, ticksPerSecondSelector } from \"../selectors/run\";\r\n\r\nexport default function* runModeSaga() {\r\n  yield takeLeading([ACTION_SIM_START, ACTION_SIM_PAUSE], handleRunSim);\r\n}\r\n\r\nfunction* handleRunSim() {\r\n  while (true) {\r\n    const isRunning = yield select(isSimRunningSelector);\r\n    if (!isRunning) {\r\n      break;\r\n    }\r\n\r\n    yield put(tickSim(1));\r\n\r\n    const tps = yield select(ticksPerSecondSelector);\r\n    const timeToWait = Math.max(Math.ceil(1000 / tps), 1);\r\n    yield delay(timeToWait);\r\n  }\r\n}\r\n","import { fork } from \"redux-saga/effects\";\r\n\r\nimport runModeSaga from \"./mode-run\";\r\n\r\nexport default function* simulatorSaga() {\r\n  yield fork(runModeSaga);\r\n}\r\n","import servicesSaga from \"@/services/saga\";\r\n\r\nexport default servicesSaga;\r\n","import { createStore, compose, applyMiddleware, AnyAction } from \"redux\";\r\nimport freeze from \"redux-freeze\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport { doInit } from \"@/actions/init\";\r\n\r\nimport undoReducer from \"@/undo/reducer\";\r\n\r\nimport {\r\n  actionSanitizer,\r\n  stateSanitizer,\r\n  actionsBlacklist,\r\n} from \"./devtool-sanitizer\";\r\n\r\nimport { AppState, defaultAppState } from \"./state\";\r\nimport saga from \"./saga\";\r\nimport rootReducer from \"./reducer\";\r\n\r\nfunction finalReducer(\r\n  state: AppState = defaultAppState,\r\n  action: AnyAction\r\n): AppState {\r\n  state = undoReducer(state, action);\r\n  state = rootReducer(state, action);\r\n  return state;\r\n}\r\n\r\nconst composeEnhancers =\r\n  (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      actionSanitizer,\r\n      stateSanitizer,\r\n      actionsBlacklist,\r\n    })) ||\r\n  compose;\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport const store = createStore(\r\n  finalReducer,\r\n  composeEnhancers(applyMiddleware(freeze, sagaMiddleware))\r\n);\r\n\r\nsagaMiddleware.run(saga);\r\nstore.dispatch(doInit());\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { AppState, defaultAppState } from \"@/store\";\r\n\r\nimport captureUndoStateReducer from \"./capture-undo-state\";\r\nimport redoReducer from \"./redo\";\r\nimport undoReducer from \"./undo\";\r\n\r\n// The undo reducer is special and returns a single reducer that is always ran outside of the primary reducer stack.\r\n// This is less for reducer priority and more to capture the effects of reentrant reducers like clipboard-paste.\r\n// FIXME: Moving this outside the services system means autosave cannot save undo/redo.  Either move autosave out\r\n//  as well or move undo into services.\r\nexport default function undoServiceReducer(\r\n  state: AppState = defaultAppState,\r\n  action: AnyAction\r\n): AppState {\r\n  state = captureUndoStateReducer(state, action);\r\n  state = redoReducer(state, action);\r\n  state = undoReducer(state, action);\r\n  return state;\r\n}\r\n","import { AnyAction } from \"redux\";\r\nimport last from \"lodash/last\";\r\n\r\nimport { captureUndoState } from \"../utils\";\r\n\r\nimport { AppState, defaultAppState } from \"@/store\";\r\n\r\nimport { isUndoAction } from \"@/actions/undo\";\r\n\r\nexport default function undoReducer(\r\n  state: AppState = defaultAppState,\r\n  action: AnyAction\r\n): AppState {\r\n  if (!isUndoAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { undoStack, redoStack } = state.undo;\r\n\r\n  const snapshot = last(undoStack);\r\n  if (!snapshot) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    services: {\r\n      ...state.services,\r\n      ...snapshot,\r\n    },\r\n    undo: {\r\n      ...state.undo,\r\n      undoStack: undoStack.slice(0, undoStack.length - 1),\r\n      redoStack: [...redoStack, captureUndoState(state)],\r\n    },\r\n  };\r\n}\r\n","import { AnyAction } from \"redux\";\r\nimport last from \"lodash/last\";\r\n\r\nimport { AppState, defaultAppState } from \"@/store\";\r\n\r\nimport { isRedoAction } from \"@/actions/redo\";\r\n\r\nimport { captureUndoState } from \"../utils\";\r\n\r\nexport default function redoReducer(\r\n  state: AppState = defaultAppState,\r\n  action: AnyAction\r\n): AppState {\r\n  if (!isRedoAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { undoStack, redoStack } = state.undo;\r\n\r\n  const snapshot = last(redoStack);\r\n  if (!snapshot) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    services: {\r\n      ...state.services,\r\n      ...snapshot,\r\n    },\r\n    undo: {\r\n      ...state.undo,\r\n      undoStack: [...undoStack, captureUndoState(state)],\r\n      redoStack: redoStack.slice(0, redoStack.length - 1),\r\n    },\r\n  };\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { isProjectMutationAction } from \"@/project-mutation-actions\";\r\nimport { AppState, defaultAppState } from \"@/store\";\r\nimport { fpSet } from \"@/utils\";\r\n\r\nimport { isUndoAction } from \"@/actions/undo\";\r\nimport { isRedoAction } from \"@/actions/redo\";\r\n\r\nimport { captureUndoState } from \"../utils\";\r\n\r\n// If this was part of the normal reducer stack, we would want to give it a very low priority\r\n// so it occurs after all other reducers.\r\n// However, in order to capture reentrant reducers, our master undo reducer wraps\r\n// the root reducer especially and always occurs last.\r\nexport default function captureUndoStateReducer(\r\n  state: AppState = defaultAppState,\r\n  action: AnyAction\r\n): AppState {\r\n  if (\r\n    !isProjectMutationAction(action) ||\r\n    isUndoAction(action) ||\r\n    isRedoAction(action)\r\n  ) {\r\n    return state;\r\n  }\r\n\r\n  return fpSet(state, \"undo\", (undoState) => ({\r\n    ...undoState,\r\n    // Limiting undo to 25 entries, since we store the entire project every slice.\r\n    // TODO: Consider using a difference engine to store the minimal difference between the states.\r\n    //  This should let us store far more undo operations as the project gets larger.\r\n    // Could use https://www.npmjs.com/package/deep-diff\r\n    // Problem with this is it takes up time capturing the undo, which slows down all operations.\r\n    undoStack: [...undoState.undoStack.slice(0, 25), captureUndoState(state)],\r\n    redoStack: [],\r\n  }));\r\n}\r\n","import { fork } from \"redux-saga/effects\";\r\n\r\nimport saveDataSaga from \"./savedata/saga\";\r\nimport simulatorControlSaga from \"./simulator-control/saga\";\r\n\r\nexport default function* appSaga() {\r\n  yield fork(saveDataSaga);\r\n  yield fork(simulatorControlSaga);\r\n}\r\n","export function cls(...values: (string | false | undefined)[]): string {\r\n  return values.filter((x) => Boolean(x) && x != \"\").join(\" \");\r\n}\r\n\r\nexport function typedKeys<T extends Record<string, unknown>>(\r\n  obj: T\r\n): (keyof T)[] {\r\n  return Object.keys(obj) as (keyof T)[];\r\n}\r\n\r\nexport type ValueSetter<T> = T | ((old: T) => T);\r\n\r\nexport function fpSet<\r\n  Target extends Record<string, any> | any[],\r\n  P1 extends keyof Target,\r\n  T extends Target[P1]\r\n>(target: Target, p1: P1, value: ValueSetter<T>): Target;\r\nexport function fpSet<\r\n  Target extends Record<string, any> | any[],\r\n  P1 extends keyof Target,\r\n  P2 extends keyof Target[P1],\r\n  T extends Target[P1][P2]\r\n>(target: Target, p1: P1, p2: P2, value: ValueSetter<T>): Target;\r\nexport function fpSet<\r\n  Target extends Record<string, any> | any[],\r\n  P1 extends keyof Target,\r\n  P2 extends keyof Target[P1],\r\n  P3 extends keyof Target[P1][P2],\r\n  T extends Target[P1][P2][P3]\r\n>(target: Target, p1: P1, p2: P2, p3: P3, value: ValueSetter<T>): Target;\r\nexport function fpSet(...args: any[]): any {\r\n  let target = args[0];\r\n  const firstPaths = args.slice(1, args.length - 2).map(String);\r\n  const lastPath = args[args.length - 2];\r\n  const value = args[args.length - 1];\r\n\r\n  const newData = clone(target);\r\n  target = newData;\r\n\r\n  for (const seg of firstPaths) {\r\n    target[seg] = clone(target[seg]);\r\n    target = target[seg];\r\n  }\r\n\r\n  if (typeof value === \"function\") {\r\n    target[lastPath] = value(target[lastPath]);\r\n  } else {\r\n    target[lastPath] = value;\r\n  }\r\n\r\n  return newData;\r\n}\r\n\r\nfunction clone<T extends Record<string, unknown> | any[]>(obj: T): T {\r\n  if (Array.isArray(obj)) {\r\n    return [...obj] as T;\r\n  }\r\n  return { ...obj };\r\n}\r\n"],"sourceRoot":""}